{"Procedure":{"Name":"ASSESS","ProductGroup":"CAS","ProcedureHelp":{"#cdata":"Syntax: PROC ASSESS < options > ;\n    INPUT variable ;\n    TARGET variables < /options > ;\n    FITSTAT PVAR=variables / PEVENT=\u201cevent-list\u201d <DLM=\u201ccharacter\u201d > ;\n    FREQ variable ;\n    BY variable ;\n\nThe ASSESS procedure assesses and compares supervised learning models. For a supervised learning\nmodel that has a nominal target, the ASSESS procedure produces lift information and receiver operating\ncharacteristic (ROC) information. For a regression model, the ASSESS procedure performs a quantile\nbinning of the predictions and then returns the summary statistics of the response variable for each bin.\nPROC ASSESS also calculates fit statistics such as average square error, mean square logarithmic error, \nmean absolute error, mean consequential error, and multiclass log loss.\n\nThe expected input to the ASSESS procedure is score data from supervised learning models."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table\n      \nNames the input data table for PROC ASSESS to use. The default is the most recently created data\ntable. CAS-libref.data-table is a two-level name, where\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to the data, and a session identifier, which\n    defaults to the active session but which can be explicitly defined in the LIBNAME\n    statement.\n    \n  data-table specifies the name of the input data table."},"ProcedureOptionType":"DV|RV"},{"ProcedureOptionName":"MAXITER=","ProcedureOptionHelp":{"#cdata":"Syntax: MAXITER=integer   \n      \nSpecifies the maximum number of iterations for the percentile algorithm where integer must be an\ninteger greater than or equal to 1. By default, MAXITER=5 times the value of the NBINS= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NBINS=","ProcedureOptionHelp":{"#cdata":"Syntax: NBINS=integer \n      \nSpecifies the number of bins to be used in the lift calculation, where integer must be an integer greater\nthan or equal to 2. \n\nBy default, NBINS=20."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NCUTS=","ProcedureOptionHelp":{"#cdata":"Syntax: NCUTS=integer\n      \nSpecifies the number of cuts to be used in the ROC calculation, where integer must be an integer\ngreater than or equal to 2. The inverse of integer represents the step size of the quantile. For example,\nNCUTS=10 generates 10 intervals for ROC analysis, with each step size 0.1. You cannot specify this\noption when the response variable that is specified in the TARGET statement is interval. \n\nBy default, NCUTS=100."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NTHREADS=","ProcedureOptionHelp":{"#cdata":"Syntax: NTHREADS=number   \n      \nSpecifies the number of threads that are used in the computation, where number must be an integer\nbetween 1 and 64, inclusive. The default value is the number of CPUs available in the machine."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variable ;\n      \nThe BY statement specifies one partition variable to be used in the predictive model. If you specify the BY\nstatement, PROC ASSESS performs the analysis separately for each value of the BY variable. If you do not\nspecify the BY statement, PROC ASSESS treats the entire input data as one group for analysis. Currently,\nthe only valid value of variable is _PartInd_."},"StatementOptions":null},{"StatementName":"FITSTAT","StatementHelp":{"#cdata":"Syntax: FITSTAT PVAR=variables / PEVENT=\u201cevent-list\u201d <DLM=\u201ccharacter\u201d > ;\n      \nThe FITSTAT statement reports the following error metrics for a nominal target: average square error, divisor\nof average square error, root average square error, mean consequential error, and multiclass log loss. (For an\ninterval target, the following metrics are created without specifying the FITSTAT statement: average square\nerror, divisor of average square error, root average square error, mean absolute error, root mean absolute error,\nmean square logarithmic error, and root mean square logarithmic error.)"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"PVAR=","StatementOptionHelp":{"#cdata":"Syntax: PVAR = variables  \n          \nSpecifies the posterior probability for each level in model prediction except the variable specified in the\nINPUT statement. The PVAR= option is required in the FITSTAT statement."},"StatementOptionType":"RV"},{"StatementOptionName":"PEVENT=","StatementOptionHelp":{"#cdata":"Syntax: PEVENT=\u201cevent-list\u201d\n          \nSpecifies the events that correspond to each variable in the PVAR= option. The PEVENT= and PVAR=\noptions must be mapped one-to-one in order. The PEVENT= option is required in the FITSTAT\nstatement.."},"StatementOptionType":"V"},{"StatementOptionName":"DELIMITER=|DLM=","StatementOptionHelp":{"#cdata":"Syntax: DELIMITER|DLM = \u201ccharacter\u201d  \n          \nSpecifies the delimiter that is used to separate events that are specified in the PEVENT= option. A\ndelimiter is used when event names contain embedded spaces (for example, \u201cFuel Oil\u201d) or special\ncharacters (for example, \u201c;\u201d or \u201c*\u201d). You must specify the quotation marks around character. You\ncan specify only one delimiter; combinations of delimiters are not supported. The valid values of the\nDELIMITER= option are \u201c \u201d (space), \u201c;\u201d (semicolon), \u201c*\u201d (asterisk), \u201c.\u201d (period), and \u201c,\u201d (comma).\n\nBy default, DELIMITER=\u201c \u201d (space).\n\nIf a delimiter other than \u201c \u201d is specified, PROC ASSESS treats any spaces (including empty spaces) to\nbe valid characters. You are responsible for mapping events correctly in order to obtain correct results."},"StatementOptionType":"V"}]}},{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable ; \n      \nThe variable in the FREQ statement identifies a numeric variable in the data set that contains the frequency\nof occurrence of each observation. PROC ASSESS treats each observation as if it appears f times, where f is\nthe value of the FREQ variable for the observation. If f is not an integer, it is truncated to an integer. \nIf f is less than 1 or missing, the observation is not used"},"StatementOptions":null},{"StatementName":"INPUT|VAR","StatementHelp":{"#cdata":"Syntax: INPUT|VAR variable; \n      \nThe INPUT statement specifies the names of one variable to be analyzed in model assessment. When the\nvariable specified in the TARGET statement is nominal, variable is the posterior probability of the event to\nbe analyzed; when the variable specified in the TARGET statement is interval, variable is the predicted value.\n\nThe INPUT statement is required."},"StatementOptions":null},{"StatementName":"TARGET","StatementHelp":{"#cdata":"Syntax:TARGET variable < /options > ;\n      \nThe TARGET statement specifies the response variable in supervised learning.\n\nThe TARGET statement is required."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"LEVEL=","StatementOptionHelp":{"#cdata":"Syntax: LEVEL=  INTERVAL | NOMINAL\n          \nSpecifies the variable type."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"INTERVAL","@Value2":"NOMINAL"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the response variable is interval, which must be numeric.","@ToolTip2":"Specifies that the response variable is nominal, also known as a classification variable, which can be numeric or character."}},{"StatementOptionName":"EVENT=","StatementOptionHelp":{"#cdata":"Syntax: EVENT=\u201cstring\u201d\n          \nspecifies the formatted value of response variable that represents the event. For an interval target\n(LEVEL=INTERVAL), the EVENT= option is ignored. For a nominal target (LEVEL=NOMINAL), the EVENT= option \nis required."},"StatementOptionType":"V"}]}}]}}}