{"Procedure":{"Name":"ASTORE","ProductGroup":"CAS|VIYA|DATA MINING AND MACHINE LEARNING","ProcedureHelp":{"#cdata":"Syntax: PROC ASTORE ; \n    SCORE score-options; \n    DESCRIBE describe-options; \n    DOWNLOAD download-options; \n    UPLOAD upload-options; \n    \nThe ASTORE procedure is an interactive procedure in which each statement runs immediately. \nThe ASTORE procedure describes, manages, and scores with an analytic store. The analytic \nstore is the result of a SAVESTATE statement from another analytic procedure; it is a binary \nfile that contains that procedure\u2019s state after it completes the training phase of data analysis. \nSome procedures that support a SAVESTATE statement are the FACTMAC, FOREST, and SVMACHINE \nprocedures. You can use the analytic store at a later time for scoring."},"ProcedureOptions":null,"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"DESCRIBE","StatementHelp":{"#cdata":"Syntax: DESCRIBE STORE=local-file-name |RSTORE=CAS-libref.data-table <describe-options> ;\n\nThe DESCRIBE statement specifies the name or identifier of an analytic store either in the local file \nsystem or in a data table stored in CAS. It can also produce DS2 basic scoring code. You can edit the \nbasic scoring code to add transformations to the input variables, flag or override the decision made \nfor the record, work with ensembles, and so on."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"STORE=","StatementOptionHelp":{"#cdata":"Syntax: STORE=local-file-name \n          \nSpecifies either the file reference or the full path of a valid store file that was created earlier \nby another procedure that processed a SAVESTATE statement."},"StatementOptionType":"RV"},{"StatementOptionName":"RSTORE=","StatementOptionHelp":{"#cdata":"Syntax: RSTORE=CAS-libref.data-table \n          \nSpecifies the CAS table that contains the analytic store. CAS-libref.data-table is a two-level name, \nwhere CAS-libref refers to the caslib and session identifier, and data-table specifies the name of \nthe input data table."},"StatementOptionType":"RV"},{"StatementOptionName":"EPCODE","StatementOptionHelp":{"#cdata":"Syntax: EPCODE<=code-file-name> \n          \nSends DS2 language statement either to the SAS log (if you do not specify a code-file-name) or to an \nexternal code file that can run in CAS and that is identified by code-file-name, which is either the \nfile reference or the full path and member name of the external code file. \n\nNote: The DS2 code allows you to score concurrently with multiple analytic stores as long as they share \nthe same input and output variables. The store key identifier plays an important role in managing multiple \nanalytic stores in a single run."},"StatementOptionType":"S|V"}]}},{"StatementName":"DOWNLOAD","StatementHelp":{"#cdata":"Syntax: DOWNLOAD RSTORE=CAS-libref.data-table STORE=store-file-name;\n\nThe DOWNLOAD statement retrieves an external binary analytic store that was produced by another \nprocedure from the CAS session and stores it in the local file system."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"RSTORE=","StatementOptionHelp":{"#cdata":"Syntax: RSTORE=CAS-libref.data-table \n          \nSpecifies a data table that contains the state to be downloaded. CAS-libref.data-table is a two-level \nname, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name \nof the input data table."},"StatementOptionType":"RV"},{"StatementOptionName":"STORE=","StatementOptionHelp":{"#cdata":"Syntax: STORE=local-file-name \n          \nSpecifies either the file reference or the full path of the local analytic store file to which the \ncontents of the data table is downloaded."},"StatementOptionType":"RV"}]}},{"StatementName":"SCORE","StatementHelp":{"#cdata":"Syntax: SCORE DATA=CAS-libref.data-table OUT=CAS-libref.data-table RSTORE=CAS-libref.data-table <EPCODE<=>code-file-name> ;\n\nThe SCORE statement enables you to score both simple and complex models."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DATA=","StatementOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table \n          \nNames the input data table for PROC ASTORE to use. CAS-libref.data-table is a two-level name, where \n\nCAS-libref\n  refers to a collection of information that is defined in the LIBNAME statement and includes the \n  caslib, which includes a path to the data, and a session identifier, which defaults to the active \n  session but which can be explicitly defined in the LIBNAME statement. \n  \ndata-table\n  specifies the name of the input data table."},"StatementOptionType":"RV"},{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table \n          \nNames the output data table for PROC ASTORE to use. You must specify this option before any other \noptions. CAS-libref.data-table is a two-level name, where \n\nCAS-libref\n  refers to a collection of information that is defined in the LIBNAME statement and includes the \n  caslib, which includes a path to where the data table is to be stored, and a session identifier, \n  which defaults to the active session but which can be explicitly defined in the LIBNAME statement. \n  \ndata-table\n  specifies the name of the output data table."},"StatementOptionType":"RV"},{"StatementOptionName":"RSTORE=","StatementOptionHelp":{"#cdata":"Syntax: RSTORE=CAS-libref.data-table \n          \nSpecifies the data table in CAS to contain the analytic store. CAS-libref.data-table is a two-level \nname, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name \nof the input data table."},"StatementOptionType":"RV"},{"StatementOptionName":"COPYVAR=|COPYVARS=","StatementOptionHelp":{"#cdata":"Syntax: COPYVAR=variable | COPYVARS=(variables) \n          \nTransfers one or more variables from the input data table that you specify in the DATA= option to \nthe output data table that you specify in the OUT= option. "},"StatementOptionType":"V"},{"StatementOptionName":"EPCODE=","StatementOptionHelp":{"#cdata":"Syntax: EPCODE=code-file-name\n          \nNames the location of the optional scoring code file (which was created by the DESCRIBE statement) \nand loads that file into the CAS session for scoring. You can use this option when you have changed \nthe contents of the scoring code."},"StatementOptionType":"V"}]}},{"StatementName":"SETOPTION","StatementHelp":{"#cdata":"Syntax: SETOPTION name value;\n      \nThe SETOPTION statement associates a numeric value to a specified option name. During scoring \nwith an analytic store, the value of the named option is checked. \n\nname \n  specifies an identifier as the option name, where name must begin with an alphabetic character \n  or underscore, contain only alphanumerics and underscores, and is limited to 200 characters. \nvalue \n  specifies a numeric value for the named option. "},"StatementOptions":null},{"StatementName":"UPLOAD","StatementHelp":{"#cdata":"Syntax: UPLOAD upload-options;\n\nThe UPLOAD statement moves an analytic store from the local file system into a data table in CAS."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"RSTORE=","StatementOptionHelp":{"#cdata":"Syntax: RSTORE=CAS-libref.data-table \n          \nSpecifies the CAS table to which the store is sent. CAS-libref.data-table is a two-level name, \nwhere CAS-libref refers to the caslib and session identifier, and data-table specifies the name \nof the output data table."},"StatementOptionType":"RV"},{"StatementOptionName":"STORE=","StatementOptionHelp":{"#cdata":"Syntax: STORE=local-file-name \n          \nSpecifies either the file reference or the full path of the valid store file that was created \nearlier by some analytic engine and exists in the local file system."},"StatementOptionType":"RV"}]}}]}}}