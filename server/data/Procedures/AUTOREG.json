{"Procedure":{"Name":"AUTOREG","#comment":{},"ProductGroup":"SAS/ETS","ProcedureHelp":{"#cdata":"Syntax: PROC AUTOREG options ; \n    BY variables ; \n    CLASS variables ; \n    MODEL dependent = regressors / options ; \n    HETERO variables / options ; \n    NLOPTIONS options ; \n    RESTRICT equation , ..., equation ; \n    TEST equation , ..., equation / option ; \n    OUTPUT OUT = SAS data set options ; \n\nThe AUTOREG procedure estimates and forecasts linear regression models for time series \ndata when the errors are autocorrelated or heteroscedastic. The autoregressive error model \nis used to correct for autocorrelation, and the generalized autoregressive conditional \nheteroscedasticity (GARCH) model and its variants are used to model and correct for \nheteroscedasticity. \n\nWhen time series data are used in regression analysis, often the error term is not \nindependent through time. Instead, the errors are serially correlated or autocorrelated. \nIf the error term is autocorrelated, the efficiency of ordinary least squares (OLS) \nparameter estimates is adversely affected and standard error estimates are biased. \n\nThe autoregressive error model corrects for serial correlation. The AUTOREG procedure \ncan fit autoregressive error models of any order and can fit subset autoregressive models. \nYou can also specify stepwise autoregression to select the autoregressive error model \nautomatically. \n\nThe AUTOREG procedure supports the following variations of the GARCH models: \n\n  o generalized ARCH (GARCH) \n  o integrated GARCH (IGARCH) \n  o exponential GARCH (EGARCH) \n  o quadratic GARCH (QGARCH) \n  o threshold GARCH (TGARCH) \n  o power GARCH (PGARCH) \n  o GARCH-in-mean (GARCH-M)"},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA= SAS-data-set] \n      \nSpecifies the input SAS data set. If the DATA= option is not specified, PROC AUTOREG \nuses the most recently created SAS data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTEST=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTEST= SAS-data-set] \n      \nWrites the parameter estimates to an output data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"COVOUT","ProcedureOptionHelp":{"#cdata":"Writes the covariance matrix for the parameter estimates to the OUTEST= data set. \nThis option is valid only if the OUTEST= option is specified."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PLOTS=","ProcedureOptionHelp":{"#cdata":"[Syntax: PLOTS<(global-plot-options)> < = (specific plot options)>]  \n      \nRequests that the AUTOREG procedure produce statistical graphics via the Output \nDelivery System, provided that the ODS GRAPHICS statement has been specified. The \nglobal-plot-options apply to all relevant plots generated by the AUTOREG procedure. \nThe global-plot-options supported by the AUTOREG procedure follow. \n\n  ONLY \n  suppresses the default plots. Only the plots specifically requested are produced. \n\n  UNPACK | UNPACKPANEL \n  breaks a graphic that is otherwise paneled into individual component plots"},"ProcedureOptionType":"S|V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"ACF","@Value3":"IACF","@Value4":"PACF","@Value5":"FITPLOT","@Value6":"COOKSD","@Value7":"QQ","@Value8":"RESIDUAL","@Value9":"STUDENTRESIDUAL","@Value10":"STANDARDRESIDUAL","@Value11":"WHITENOISE","@Value12":"RESIDUALHISTOGRAM","@Value13":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Requests that all plots appropriate for the particular analysis be produced.","@ToolTip2":"Produces the autocorrelation function plot.","@ToolTip3":"Produces the inverse autocorrelation function plot of residuals.","@ToolTip4":"Produces the partial autocorrelation function plot of residuals.","@ToolTip5":"Plots the predicted and actual values.","@ToolTip6":"Produces the Cook\u2019s D plot.","@ToolTip7":"Q-Q plot of residuals.","@ToolTip8":"Plots the residuals.","@ToolTip9":"Plots the studentized residuals.","@ToolTip10":"Plots the standardized residuals.","@ToolTip11":"Plots the white noise probabilities.","@ToolTip12":"Plots the histogram of residuals.","@ToolTip13":"Suppresses all plots."},"SubOptionsKeywords":"ONLY|UNPACK|UNPACKPANEL"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables ; \n\nA BY statement can be used with PROC AUTOREG to obtain separate analyses on observations \nin groups defined by the BY variables."},"StatementOptions":null},{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variables ; \n      \nThe CLASS statement names the classification variables to be used in the analysis. \nClassification variables can be either character or numeric. \n\nIn PROC AUTOREG, the CLASS statement enables you to output class variables to a data \nset that contains a copy of the original data. \n\nClass levels are determined from the formatted values of the CLASS variables. Thus, \nyou can use formats to group values into levels."},"StatementOptions":null},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL dependent = regressors / options ; \n    | label: MODEL dependent = regressors / options ; \n\nThe MODEL statement specifies the dependent variable and independent regressor \nvariables for the regression model. If no independent variables are specified in \nthe MODEL statement, only the mean is fitted. (This is a way to obtain autocorrelations \nof a series. Models can be given labels of up to eight characters. Model labels are \nused in the printed output to identify the results for different models.)"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CENTER","StatementOptionHelp":{"#cdata":"Centers the dependent variable by subtracting its mean and suppresses the intercept \nparameter from the model. This option is valid only when the model does not have \nregressors (explanatory variables)."},"StatementOptionType":"S"},{"StatementOptionName":"NOINT","StatementOptionHelp":{"#cdata":"Suppresses the intercept parameter."},"StatementOptionType":"S"},{"StatementOptionName":"NLAG=","StatementOptionHelp":{"#cdata":"[Syntax: NLAG= number | NLAG= (number-list)] \n          \nSpecifies the order of the autoregressive error process or the subset of autoregressive \nerror lags to be fitted. Note that NLAG=3 is the same as NLAG=(1 2 3). If the NLAG= option \nis not specified, PROC AUTOREG does not fit an autoregressive model."},"StatementOptionType":"V"},{"StatementOptionName":"DIST=","StatementOptionHelp":{"#cdata":"Specifies the distribution assumed for the error term in GARCH-type estimation. \nIf no GARCH= option is specified, the option is ignored. If EGARCH is specified, \nthe distribution is always normal distribution."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"T","@Value2":"NORMAL"},"StatementOptionToolTips":{"@ToolTip1":"Specifies Student\u2019s t distribution.","@ToolTip2":"Specifies the standard normal distribution. This is the default."}},{"StatementOptionName":"GARCH=","StatementOptionHelp":{"#cdata":"[Syntax: GARCH=( option-list )] \n          \nSpecifies a GARCH-type conditional heteroscedasticity model. The GARCH= option in the MODEL \nstatement specifies the family of ARCH models to be estimated. The GARCH regression model is \nspecified in the following statement:   model y = x1 x2 / garch=(q=1,p=1);\n\nWhen you want to estimate the subset of ARCH terms, such as ARCH, you can write the SAS statement \nas follows: model y = x1 x2 / garch=(q=(1 3)); \n\nThe following options can be used in the GARCH=( ) option. The options are listed within \nparentheses and separated by commas. \n\n  Q= number | Q= (number-list) \n  specifies the order of the process or the subset of ARCH terms to be fitted. \n\n  P= number | P= (number-list)\n  specifies the order of the process or the subset of GARCH terms to be fitted.\n\n  TYPE= value \n  specifies the type of GARCH model. The values of the TYPE= option are as follows: \n\n      EXP -- specifies the exponential GARCH or EGARCH model.\n      INTEGRATED -- specifies the integrated GARCH or IGARCH model. \n      NELSON | NELSONCAO --specifies the Nelson-Cao inequality constraints. This is the default.\n      NONNEG -- specifies the GARCH model with nonnegativity constraints.\n      STATIONARY -- constrains the sum of GARCH coefficients to be less than 1. \n      POWER | PGARCH -- specifies the power GARCH or PGARCH model. \n      QUADR | QUADRATIC | QGARCH -- specifies the quadratic GARCH or QGARCH model.\n      STATIONARY -- constrains the sum of GARCH coefficients to be less than 1. \n      THRES | THRESHOLD | TGARCH -- specifies the threshold GARCH or TGARCH model.\n      \n  MEAN= -- Specifies the functional form of the GARCH-M model. \n\n  NOINT -- Suppresses the intercept parameter in the conditional variance model. This option is valid \n  only with the TYPE=INTEG option. \n\n  STARTUP=MSE | ESTIMATE --  Requests whether the positive constant c for the start-up values of the \n  GARCH conditional error variance process is estimated, or the value of the mean squared error is used \n  as the default constant. \n\n  TR -- Uses the trust region method for GARCH estimation. This algorithm is numerically stable, \n  though computation is expensive. The double quasi-Newton method is the default."},"StatementOptionType":"V","SubOptionsKeywords":"TR|STARTUP=|NOINT|MEAN=|TYPE=|P=|Q="},{"StatementOptionName":"ALL","StatementOptionHelp":{"#cdata":"Requests all printing options."},"StatementOptionType":"S"},{"StatementOptionName":"ARCHTEST=","StatementOptionHelp":{"#cdata":"[Syntax: ARCHTEST=(option-list)] \n\nSpecifies tests for the absence of ARCH effects. The following options can be used in the \nARCHTEST=( ) option. The options are listed within parentheses and separated by commas. \n\n  QLM | QLMARCH \n  requests the Q and Engle\u2019s LM tests. \n\n  LK | LKARCH \n  requests Lee and King\u2019s ARCH tests. \n\n  WL | WLARCH \n  requests Wong and Li\u2019s ARCH tests. \n\n  ALL \n  requests all ARCH tests, namely Q and Engle\u2019s LM tests, Lee and King\u2019s tests, and \n  Wong and Li\u2019s tests."},"StatementOptionType":"S|V","SubOptionsKeywords":"ALL|WL|WLARCH|LK|LKARCH|QLM|QLMARCH"},{"StatementOptionName":"BDS=","StatementOptionHelp":{"#cdata":"[Syntax: BDS=(option-list)] \n          \nSpecifies Brock-Dechert-Scheinkman (BDS) tests for independence. The following options can be \nused in the BDS=( ) option. The options are listed within parentheses and separated by commas. \n\n  M=number \n  specifies the maximum number of the embedding dimension. The BDS tests with embedding \n  dimension from 2 to M are calculated. M must be an integer between 2 and 20. The default \n  value of the M= suboption is 20. \n\n  D=number \n  specifies the parameter to determine the radius for BDS test. The BDS test sets up the radius \n  as r=D*\u03c3, where \u03c3 is the standard deviation of the time series to be tested. By default, D=1.5. \n\n  PVALUE=DIST | SIM \n  specifies the way to calculate the p-values. By default or if PVALUE=DIST is specified, the \n  p-values are calculated according to the asymptotic distribution of BDS statistics (that is, \n  the standard normal distribution). Otherwise, for samples of size less than 500, the p-values \n  are obtained though Monte Carlo simulation. \n\n    Z=value \n    specifies the type of the time series (residuals) to be tested. The values of the Z= suboption \n    are as follows: \n\n      Y -- specifies the regressand. The default is Z=Y. \n\n      RO -- specifies the OLS residuals. \n\n      R -- specifies the residuals of the final model. \n\n      RM -- specifies the structural residuals of the final model. \n\n      SR -- specifies the standardized residuals of the final model, defined by residuals over \n      the square root of the conditional variance."},"StatementOptionType":"S|V"},{"StatementOptionName":"CHOW=","StatementOptionHelp":{"#cdata":"[Syntax: CHOW= ( obs-1 ...obs-n )] \n          \nComputes Chow tests to evaluate the stability of the regression coefficient. The Chow test\nis also called the analysis-of-variance test. \n\nEach value obs-i listed on the CHOW= option specifies a break point of the sample. The sample is \ndivided into parts at the specified break point, with observations before obs-i in the first part \nand obs-i and later observations in the second part, and the fits of the model in the two parts are \ncompared to whether both parts of the sample are consistent with the same model. \n\nThe break points obs-i refer to observations within the time range of the dependent variable, \nignoring missing values before the start of the dependent series. Thus, CHOW=20 specifies the \n20th observation after the first nonmissing observation for the dependent variable. For example, \nif the dependent variable Y contains 10 missing values before the first observation with a \nnonmissing Y value, then CHOW=20 actually refers to the 30th observation in the data set. \n\nWhen you specify the break point, you should note the number of presample missing values."},"StatementOptionType":"V"},{"StatementOptionName":"COEF","StatementOptionHelp":{"#cdata":"Prints the transformation coefficients for the first p observations. These coefficients \nare formed from a scalar multiplied by the inverse of the Cholesky root of the Toeplitz \nmatrix of autocovariances."},"StatementOptionType":"S"},{"StatementOptionName":"CORRB","StatementOptionHelp":{"#cdata":"Prints the estimated correlations of the parameter estimates."},"StatementOptionType":"S"},{"StatementOptionName":"COVB","StatementOptionHelp":{"#cdata":"Prints the estimated covariances of the parameter estimates."},"StatementOptionType":"S"},{"StatementOptionName":"COVEST=","StatementOptionHelp":{"#cdata":"Specifies the type of covariance matrix for the GARCH or heteroscedasticity model."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"OP","@Value2":"HESSIAN","@Value3":"QML"},"StatementOptionToolTips":{"@ToolTip1":"The outer product matrix is used to compute the covariance matrix of the parameter estimates.  This is the default.","@ToolTip2":"Produces the covariance matrix by using the Hessian matrix.","@ToolTip3":"Computes the quasi-maximum likelihood estimates."}},{"StatementOptionName":"DW=","StatementOptionHelp":{"#cdata":"[Syntax: DW= n] \n          \nPrints Durbin-Watson statistics up to the order n. The default is DW=1. When the LAGDEP \noption is specified, the Durbin-Watson statistic is not printed unless the DW= option is \nexplicitly specified."},"StatementOptionType":"V"},{"StatementOptionName":"DWPROB","StatementOptionHelp":{"#cdata":"Now produces p-values for the generalized Durbin-Watson test statistics for large sample sizes. \nPreviously, the Durbin-Watson probabilities were calculated only for small sample sizes. The \nnew method of calculating Durbin-Watson probabilities is based on the algorithm of Ansley, \nKohn, and Shively (1992). "},"StatementOptionType":"S"},{"StatementOptionName":"GINV","StatementOptionHelp":{"#cdata":"Prints the inverse of the Toeplitz matrix of autocovariances for the Yule-Walker solution."},"StatementOptionType":"S"},{"StatementOptionName":"GODFREY=","StatementOptionHelp":{"#cdata":"[Syntax: GODFREY=r] \n          \nProduces Godfrey\u2019s general Lagrange multiplier test against ARMA errors."},"StatementOptionType":"S|V"},{"StatementOptionName":"ITPRINT","StatementOptionHelp":{"#cdata":"Prints the objective function and parameter estimates at each iteration. The objective function \nis the full log likelihood function for the maximum likelihood method, while the error sum of \nsquares is produced as the objective function of unconditional least squares. For the ML method, \nthe ITPRINT option prints the value of the full log likelihood function, not the concentrated \nlikelihood."},"StatementOptionType":"S"},{"StatementOptionName":"LAGDEP|LAGDV","StatementOptionHelp":{"#cdata":"Prints the Durbin t statistic, which is used to detect residual autocorrelation in the presence \nof lagged dependent variables."},"StatementOptionType":"S"},{"StatementOptionName":"LAGDEP=|LAGDV=","StatementOptionHelp":{"#cdata":"[Syntax: LAGDEP= name] \n          \nPrints the Durbin h statistic for testing the presence of first-order autocorrelation when \nregressors contain the lagged dependent variable whose name is specified as LAGDEP=name."},"StatementOptionType":"V"},{"StatementOptionName":"LOGLIKL","StatementOptionHelp":{"#cdata":"Prints the log likelihood value of the regression model, assuming normally distributed errors."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Suppresses all printed output."},"StatementOptionType":"S"},{"StatementOptionName":"NORMAL","StatementOptionHelp":{"#cdata":"Specifies the Jarque-Bera\u2019s normality test statistic for regression residuals."},"StatementOptionType":"S"},{"StatementOptionName":"PARTIAL","StatementOptionHelp":{"#cdata":"Prints partial autocorrelations."},"StatementOptionType":"S"},{"StatementOptionName":"PCHOW=","StatementOptionHelp":{"#cdata":"[Syntax: PCHOW= (obs-1 ...obs-n)] \n          \nComputes the predictive Chow test. The form of the PCHOW= option is the same as the CHOW= option."},"StatementOptionType":"V"},{"StatementOptionName":"RESET","StatementOptionHelp":{"#cdata":"Produces Ramsey\u2019s RESET test statistics."},"StatementOptionType":"S"},{"StatementOptionName":"RUNS=","StatementOptionHelp":{"#cdata":"[Syntax: RUNS=(Z=value)] \n          \nSpecifies the runs test for independence. The Z= suboption specifies the type of the \ntime series or residuals to be tested. The values of the Z= suboption are as follows: \n\n  Y \n  specifies the regressand. The default is Z=Y. \n\n  RO \n  specifies the OLS residuals. \n\n  R \n  specifies the residuals of the final model. \n\n  RM \n  specifies the structural residuals of the final model. \n\n  SR \n  specifies the standardized residuals of the final model, defined by residuals over the \n  square root of the conditional variance."},"StatementOptionType":"S|V"},{"StatementOptionName":"STATIONARITY=","StatementOptionHelp":{"#cdata":"Specifies tests of stationarity or unit roots. The STATIONARITY= option provides Phillips-Perron, Phillips-Ouliaris, and KPSS tests."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"(PHILLIPS)","@Value2":"(PHILLIPS=(value ...value))","@Value3":"(KPSS)","@Value4":"(KPSS=(KERNEL=TYPE))","@Value5":"(KPSS=(KERNEL=TYPE TRUNCPOINTMETHOD))","@Value6":"(PHILLIPS<=(...)>, KPSS<=(...)>)","@Value7":"(ERS)","@Value8":"(ERS=(value))","@Value9":"(NP)","@Value10":"=(NP=(value))","@Value11":"(ADF<=(...)>,ERS<=(...)>, KPSS<=(...)>, NP<=(...)>, PHILLIPS<=(...)> )"},"StatementOptionToolTips":{"@ToolTip1":"Produces the Phillips-Perron unit root test when there are no regressors in the MODEL statement.  When the model includes regressors, the PHILLIPS option produces the Phillips-Ouliaris cointegration test.","@ToolTip2":"Produces the Phillips-Perron unit root test when there are no regressors in the MODEL statement.  When the model includes regressors, the PHILLIPS option produces the Phillips-Ouliaris cointegration test.","@ToolTip3":"Produces the Kwiatkowski, Phillips, Schmidt, and Shin (1992) (KPSS) unit root test. The Newey-West kernel is used, in which the default truncation point method is the Schwert with c=4 (SCHW=4).","@ToolTip4":"Produces the Kwiatkowski, Phillips, Schmidt, and Shin (1992) (KPSS) unit root test. You can specify two types of the kernel:     KERNEL=NW|BART    Newey-West (or Bartlett) kernel     KERNEL=QS    Quadratic spectral kernel","@ToolTip5":"Produces the Kwiatkowski, Phillips, Schmidt, and Shin (1992) (KPSS) unit root test. You can specify two types of the kernel:     KERNEL=NW|BART    Newey-West (or Bartlett) kernel     KERNEL=QS    Quadratic spectral kernel  You can set the truncation point s by using three different methods:     SCHW=c    Schwert maximum lag formula    LAG=    LAG= manually defined number of lags    AUTO    Automatic bandwidth selection","@ToolTip6":"Specifies both the Phillips-Perron and KPSS unit root tests.","@ToolTip7":"Provides a class of efficient unit root tests, in the sense that it reduces the size  distortion and improve the power compared with traditional unit root tests such as  augmented Dickey-Fuller and Phillips-Perron tests.","@ToolTip8":"Two test statistics are provided  by the ERS test: the point optimal test and the DF-GLS test, which are originally  proposed in Elliott, Rothenberg, and Stock (1996).","@ToolTip9":"Provides a class of efficient unit root tests, in the sense that it reduces the size  distortion and improve the power compared with traditional unit root tests such as  augmented Dickey-Fuller and Phillips-Perron tests.","@ToolTip10":"Four different tests, discussed in Ng and Perron (2001), are reported by NP test. These  four tests include the two in the ERS test and two other tests, the modified PP test and  the modified point optimal test.","@ToolTip11":"The ADF or ADF= suboption produces the augmented Dickey-Fuller unit root  test (Dickey and Fuller; 1979)."}},{"StatementOptionName":"URSQ","StatementOptionHelp":{"#cdata":"Prints the uncentered regression R\u00b2. The uncentered regression R\u00b2 is useful to compute Lagrange \nmultiplier test statistics, since most LM test statistics are computed as T *URSQ, where T is \nthe number of observations used in estimation."},"StatementOptionType":"S"},{"StatementOptionName":"BACKSTEP","StatementOptionHelp":{"#cdata":"Removes insignificant autoregressive parameters. The parameters are removed in order of least \nsignificance. This backward elimination is done only once on the Yule-Walker estimates computed \nafter the initial ordinary least squares estimation. The BACKSTEP option can be used with all \nestimation methods since the initial parameter values for other estimation methods are estimated \nusing the Yule-Walker method."},"StatementOptionType":"S"},{"StatementOptionName":"SLSTAY=","StatementOptionHelp":{"#cdata":"[Syntax: SLSTAY= value] \n          \nSpecifies the significance level criterion to be used by the BACKSTEP option. The default \nis SLSTAY=.05."},"StatementOptionType":"V"},{"StatementOptionName":"CONVERGE=","StatementOptionHelp":{"#cdata":"[Syntax: CONVERGE= value] \n          \nSpecifies the convergence criterion. If the maximum absolute value of the change in  \nthe autoregressive parameter estimates between iterations is less than this amount, \nthen convergence is assumed. The default is CONVERGE=.001. \n\nIf the GARCH= option and/or the HETERO statement is specified, convergence is assumed \nwhen the absolute maximum gradient is smaller than the value specified by the CONVERGE= \noption or when the relative gradient is smaller than 1E\u20138. By default, CONVERGE=1E\u20135."},"StatementOptionType":"V"},{"StatementOptionName":"INITIAL=|START=","StatementOptionHelp":{"#cdata":"[Syntax: INITIAL=(initial-values)] \n          \nSpecifies initial values for some or all of the parameter estimates. The values specified \nare assigned to model parameters in the same order as the parameter estimates are printed \nin the AUTOREG procedure output. The order of values in the INITIAL= or START= option is \nas follows: the intercept, the regressor coefficients, the autoregressive parameters, the \nARCH parameters, the GARCH parameters, the inverted degrees of freedom for Student\u2019s t \ndistribution, the start-up value for conditional variance, and the heteroscedasticity model \nparameters \u03b7 specified by the HETERO statement."},"StatementOptionType":"V"},{"StatementOptionName":"LDW","StatementOptionHelp":{"#cdata":"Specifies that p-values for the Durbin-Watson test be computed using a linearized approximation \nof the design matrix when the model is nonlinear due to the presence of an autoregressive error \nprocess. (The Durbin-Watson tests of the OLS linear regression model residuals are not affected \nby the LDW option.)"},"StatementOptionType":"S"},{"StatementOptionName":"MAXITER=","StatementOptionHelp":{"#cdata":"[Syntax: MAXITER= number] \n          \nSets the maximum number of iterations allowed. The default is MAXITER=50."},"StatementOptionType":"V"},{"StatementOptionName":"METHOD=","StatementOptionHelp":{"#cdata":"Requests the type of estimates to be computed."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ML","@Value2":"ULS","@Value3":"YW","@Value4":"ITYW"},"StatementOptionToolTips":{"@ToolTip1":"Specifies maximum likelihood estimates.","@ToolTip2":"Specifies unconditional least squares estimates.","@ToolTip3":"Specifies Yule-Walker estimates.","@ToolTip4":"Specifies iterative Yule-Walker estimates."}},{"StatementOptionName":"NOMISS","StatementOptionHelp":{"#cdata":"Requests the estimation to the first contiguous sequence of data with no missing values. \nOtherwise, all complete observations are used."},"StatementOptionType":"S"},{"StatementOptionName":"OPTMETHOD=","StatementOptionHelp":{"#cdata":"Specifies the optimization technique when the GARCH or heteroscedasticity model is estimated."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"QN","@Value2":"TR"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the quasi-Newton method. This is the default.","@ToolTip2":"Specifies the trust region method."}}]}},{"StatementName":"HETERO","StatementHelp":{"#cdata":"Syntax: HETERO variables / options ; \n      \nThe HETERO statement specifies variables that are related to the heteroscedasticity of the \nresiduals and the way these variables are used to model the error variance of the regression."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"LINK=","StatementOptionHelp":{"#cdata":"Specifies the functional form of the heteroscedasticity model. By default, LINK=EXP. \n          \nIf you specify a GARCH model with the HETERO statement, the model is estimated using \nLINK= LINEAR only."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EXP","@Value2":"SQUARE","@Value3":"LINEAR"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the exponential link function.","@ToolTip2":"Specifies the square link function.","@ToolTip3":"Specifies the linear function; that is, the HETERO statement variables predict  the error variance linearly."}},{"StatementOptionName":"COEF=","StatementOptionHelp":{"#cdata":"Imposes constraints on the estimated parameters \u03b7 of the heteroscedasticity model."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONNEG","@Value2":"UNIT","@Value3":"ZERO","@Value4":"UNREST"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the estimated heteroscedasticity parameters \u03b7 must be nonnegative.","@ToolTip2":"Constrains all heteroscedasticity parameters \u03b7 to equal 1","@ToolTip3":"Constrains all heteroscedasticity parameters \u03b7 to equal 0.","@ToolTip4":"Specifies unrestricted estimation of \u03b7."}},{"StatementOptionName":"STD=","StatementOptionHelp":{"#cdata":"Imposes constraints on the estimated standard deviation \u03c3 of the heteroscedasticity model."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONNEG","@Value2":"UNIT","@Value3":"UNREST"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the estimated standard deviation parameter \u03c3 must be nonnegative.","@ToolTip2":"Constrains the standard deviation parameter \u03c3 to equal 1.","@ToolTip3":"Specifies unrestricted estimation of \u03c3."}},{"StatementOptionName":"TEST=","StatementOptionHelp":{"#cdata":"Produces a Lagrange multiplier test for heteroscedasticity. The null hypothesis is \nhomoscedasticity; the alternative hypothesis is heteroscedasticity of the form \nspecified by the HETERO statement. The power of the test depends on the variables \nspecified in the HETERO statement."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"LM"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a Lagrange multiplier test for heteroscedasticity."}},{"StatementOptionName":"NOCONST","StatementOptionHelp":{"#cdata":"Specifies that the heteroscedasticity model does not include the unit term for the LINK=SQUARE \nand LINK=LINEAR options."},"StatementOptionType":"S"}]}},{"StatementName":"NLOPTIONS","StatementHelp":{"#cdata":"Syntax: NLOPTIONS options ; \n      \nSeveral SAS/ETS procedures (COUNTREG, ENTROPY, MDC, QLIM, UCM, and VARMAX) use the \nnonlinear optimization (NLO) subsystem to perform nonlinear optimization."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ABSCONV=|ABSTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSCONV= | ABSTOL=r] \n          \nSpecifies an absolute function convergence criterion. The default value of r is the negative \nsquare root of the largest double-precision value, which serves only as a protection against \noverflows. "},"StatementOptionType":"V"},{"StatementOptionName":"ABSFCONV=|ABSFTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSFCONV=r[n] | ABSFTOL=r[n]] \n          \nSpecifies an absolute function convergence criterion. The default value is r=0. The optional \ninteger value n specifies the number of successive iterations for which the criterion must be \nsatisfied before the process can be terminated."},"StatementOptionType":"V"},{"StatementOptionName":"ABSGCONV=|ABSGTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSGCONV=r[n] | ABSGTOL=r[n]] \n          \nSpecifies an absolute gradient convergence criterion. The default value is r=1E-5. \nThe optional integer value n specifies the number of successive iterations for which \nthe criterion must be satisfied before the process can be terminated."},"StatementOptionType":"V"},{"StatementOptionName":"ABSXCONV=|ABSXTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSXCONV= | ABSXTOL=r[n]] \n          \nSpecifies the absolute parameter convergence criterion. The default is r=1E-8 for the \nNMSIMP technique and r=0 otherwise. The optional integer value n specifies the number of \nsuccessive iterations for which the criterion must be satisfied before the process can \nterminate."},"StatementOptionType":"V"},{"StatementOptionName":"DAMPSTEP=","StatementOptionHelp":{"#cdata":"[Syntax: DAMPSTEP<=r>] \n          \nSpecifies that the initial step length value a\u2070 for each line search (used by the QUANEW, \nHYQUAN, CONGRA, or NEWRAP technique) cannot be larger than r times the step length value used \nin the former iteration. If the DAMPSTEP option is specified but r is not specified, the default \nis r=2. The DAMPSTEP=r option can prevent the line-search algorithm from repeatedly stepping into\nregions where some objective functions are difficult to compute or where they could lead to floating \npoint overflows during the computation of objective functions and their derivatives. The DAMPSTEP=r \noption can save time-costly function calls during the line searches of objective functions that \nresult in very small steps."},"StatementOptionType":"S|V"},{"StatementOptionName":"FCONV=|FTOL=","StatementOptionHelp":{"#cdata":"[Syntax: FCONV= | FTOL=r[n]] \n          \nSpecifies a relative function convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"FCONV2=|FTOL2=","StatementOptionHelp":{"#cdata":"[Syntax: FCONV2= | FTOL2=r[n]] \n          \nSpecifies another function convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"FSIZE=","StatementOptionHelp":{"#cdata":"[Syntax:FSIZE=r] \n          \nSpecifies the FSIZE parameter of the relative function and relative gradient termination \ncriteria. The default value is r=0."},"StatementOptionType":"V"},{"StatementOptionName":"GCONV=|GTOL=","StatementOptionHelp":{"#cdata":"[Syntax: GCONV=r | GTOL=r] \n          \nSpecifies a relative gradient convergence criterion. The default value is r=1E-8. \nThe optional integer value n specifies the number of successive iterations for which \nthe criterion must be satisfied before the process can terminate."},"StatementOptionType":"V"},{"StatementOptionName":"HESCAL=|HS=","StatementOptionHelp":{"#cdata":"Specifies the scaling version of the Hessian matrix used in NRRIDG, TRUREG, NEWRAP, or \nDBLDOG optimization."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"0","@Value2":"1","@Value3":"2","@Value4":"3"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that no scaling is done.","@ToolTip2":"Specifies the Mor\u00e9 (1978) scaling update","@ToolTip3":"Specifies the Dennis, Gay, and Welsch (1981) scaling update","@ToolTip4":"Specifies that di is reset in each iteration"}},{"StatementOptionName":"INHESSIAN=|INHESS=","StatementOptionHelp":{"#cdata":"[Syntax: INHESSIAN[=r]] \n          \nSpecifies how the initial estimate of the approximate Hessian is defined for the \nquasi-Newton techniques QUANEW and DBLDOG."},"StatementOptionType":"S|V"},{"StatementOptionName":"INSTEP=","StatementOptionHelp":{"#cdata":"[Syntax: INSTEP=r] \n          \nReduces the length of the first trial step during the line search of the first iterations."},"StatementOptionType":"V"},{"StatementOptionName":"LINESEARCH=|LIS=","StatementOptionHelp":{"#cdata":"[Syntax: LINESEARCH= | LIS=i] \n          \n Specifies the line-search method for the CONGRA, QUANEW, and NEWRAP optimization techniques."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"1","@Value2":"2","@Value3":"3","@Value4":"4","@Value5":"5","@Value6":"6","@Value7":"7","@Value8":"8"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a line-search method that needs the same number of function and gradient calls  for cubic interpolation and cubic extrapolation; this method is similar to one used by  the Harwell subroutine library.","@ToolTip2":"Specifies a line-search method that needs more function calls than gradient calls for quadratic  and cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher  (1987) and can be modified to an exact line search by using the LSPRECISION= option.","@ToolTip3":"Specifies a line-search method that needs the same number of function and gradient calls for  cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher  (1987) and can be modified to an exact line search by using the LSPRECISION= option.","@ToolTip4":"Specifies a line-search method that needs the same number of function and gradient calls for  stepwise extrapolation and cubic interpolation","@ToolTip5":"Specifies a line-search method that is a modified version of LIS=4.","@ToolTip6":"Specifies golden section line search (Polak 1971), which uses only function values for linear  approximation.","@ToolTip7":"Specifies bisection line search (Polak 1971), which uses only function values for linear  approximation.","@ToolTip8":"Specifies Armijo line-search technique (Polak 1971), which uses only function values for  linear approximation."}},{"StatementOptionName":"LSPRECISION=|LSP=","StatementOptionHelp":{"#cdata":"[Syntax: LSPRECISION= | LSP=r] \n          \nSpecifies the degree of accuracy that should be obtained by the line-search algorithms \nLIS=2 and LIS=3. The default LSPRECISION= values are: \n\n  o For TECH=QUANEW UPDATE=DBFGS, BFGS: r = 0.4\n  o For TECH=QUANEW UPDATE=DDFP, DFP: r = 0.06 \n  o For TECH=CONGRA UPDATE=all r = 0.1\n  o For TECH=NEWRAP NO UPDATE: r = 0.9"},"StatementOptionType":"V"},{"StatementOptionName":"MAXFUNC=|MAXFU=","StatementOptionHelp":{"#cdata":"[Syntax: MAXFUNC= | MAXFU=i] \n          \nRequires the number of function calls to be no larger than i. The default values are: \n\n  o For TECH= TRUREG, NRRIDG, NEWRAP: i=125 \n  o For TECH= DBLDOG, QUANEW: i=500 \n  o For TECH= CONGRA: i=1000\n  o For TECH= NMSIMP: i=3000 \n  \nNote that the optimization can terminate only after completing a full iteration. \nTherefore, the number of function calls that is actually performed can exceed the \nnumber that is specified by the MAXFUNC= option."},"StatementOptionType":"V"},{"StatementOptionName":"MAXITER=|MAXIT=","StatementOptionHelp":{"#cdata":"[Syntax: MAXITER= | MAXIT=i[n]] \n          \n Requires the number of iterations to be no larger than i. The default values are: \n \n  o For TECH= TRUREG, NRRIDG, NEWRAP: i=50 \n  o For TECH= QUANEW, DBLDOG: i=200 \n  o For TECH= CONGRA: i=400\n  o For TECH= NMSIMP: i=1000 \n  \nThese default values are also valid when i is specified as a missing value."},"StatementOptionType":"V"},{"StatementOptionName":"MAXSTEP=","StatementOptionHelp":{"#cdata":"[Syntax: MAXSTEP=r[n]] \n          \nSpecifies an upper bound for the step length of the line-search algorithms during \nthe first n iterations."},"StatementOptionType":"V"},{"StatementOptionName":"MAXTIME=","StatementOptionHelp":{"#cdata":"[Syntax: MAXTIME=r] \n          \nRequires the CPU time to be no larger than r. The default value of the MAXTIME= option \nis the largest double floating-point number on your computer. Note that the time specified \nby the MAXTIME= option is checked only once at the end of each iteration. Therefore, the \nactual running time can be much longer than that specified by the MAXTIME= option. The \nactual running time includes the rest of the time needed to finish the iteration and the \ntime needed to generate the output of the results."},"StatementOptionType":"V"},{"StatementOptionName":"MINITER=|MINIT=","StatementOptionHelp":{"#cdata":"[Syntax: MINITER= | MINIT=i] \n          \nSpecifies the minimum number of iterations. The default value is 0. If you request more \niterations than are actually needed for convergence to a stationary point, the optimization \nalgorithms can behave strangely. For example, the effect of rounding errors can prevent the \nalgorithm from continuing for the required number of iterations."},"StatementOptionType":"V"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Suppresses the output."},"StatementOptionType":"S"},{"StatementOptionName":"PALL","StatementOptionHelp":{"#cdata":"[Displays all optional output for optimization."},"StatementOptionType":"S"},{"StatementOptionName":"PHISTORY","StatementOptionHelp":{"#cdata":"Displays the optimization history."},"StatementOptionType":"S"},{"StatementOptionName":"PHISTPARMS","StatementOptionHelp":{"#cdata":"Display parameter estimates in each iteration."},"StatementOptionType":"S"},{"StatementOptionName":"PINIT","StatementOptionHelp":{"#cdata":"Displays the initial values and derivatives (if available)."},"StatementOptionType":"S"},{"StatementOptionName":"PSHORT","StatementOptionHelp":{"#cdata":"Restricts the amount of default output."},"StatementOptionType":"S"},{"StatementOptionName":"PSUMMARY","StatementOptionHelp":{"#cdata":"Restricts the amount of default displayed output to a short form of iteration history and \nnotes, warnings, and errors."},"StatementOptionType":"S"},{"StatementOptionName":"RESTART=|REST=","StatementOptionHelp":{"#cdata":"[Syntax: RESTART= | REST=i > 0] \n          \nSpecifies that the QUANEW or CONGRA algorithm is restarted with a steepest descent/ascent \nsearch direction after, at most, i iterations, i > 0."},"StatementOptionType":"V"},{"StatementOptionName":"SOCKET=","StatementOptionHelp":{"#cdata":"Specifies the fileref that contains the information needed for remote monitoring."},"StatementOptionType":"V"},{"StatementOptionName":"TECHNIQUE=|TECH=","StatementOptionHelp":{"#cdata":"[Syntax: TECHNIQUE= | TECH=name] \n          \nSpecifies the optimization technique."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CONGRA","@Value2":"DBLDOG","@Value3":"NMSIMP","@Value4":"NEWRAP","@Value5":"NRRIDG","@Value6":"QUANEW","@Value7":"TRUREG","@Value8":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"Chooses one of four different conjugate-gradient optimization algorithms, which can be more  precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip2":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation  of the Cholesky factor of the Hessian.","@ToolTip3":"Performs a Nelder-Mead simplex optimization.","@ToolTip4":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson  optimization technique. The algorithm combines a line-search algorithm with ridging, and it  can be modified with the LINESEARCH= option.","@ToolTip5":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson  optimization technique. This algorithm does not perform a line search.","@ToolTip6":"Chooses one of four different quasi-Newton optimization algorithms that can be more precisely  defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip7":"Performs a usually very stable but, for large problems, memory- and time-consuming trust-region  optimization technique. The algorithm is implemented similar to Gay (1983) and Mor\u00e9 and Sorensen  (1983).","@ToolTip8":"Does not perform any optimization. This option is similar to METHOD=NONE, but TECH=NONE also  computes and displays residuals and goodness of fit statistics."}},{"StatementOptionName":"UPDATE=|UPD=","StatementOptionHelp":{"#cdata":"Specifies the update method for the quasi-Newton, double-dogleg, or conjugate-gradient \noptimization technique."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BFGS","@Value2":"DBFGS","@Value3":"DDFP","@Value4":"DFP","@Value5":"PB","@Value6":"FR","@Value7":"PR","@Value8":"CD"},"StatementOptionToolTips":{"@ToolTip1":"Performs the original Broyden, Fletcher, Goldfarb, and Shanno (BFGS) update of the inverse  Hessian matrix.","@ToolTip2":"Performs the dual BFGS update of the Cholesky factor of the Hessian matrix. This is the  default update method.","@ToolTip3":"Performs the dual Davidon, Fletcher, and Powell (DFP) update of the Cholesky factor of  the Hessian matrix.","@ToolTip4":"Performs the original DFP update of the inverse Hessian matrix.","@ToolTip5":"Performs the automatic restart update method of Powell (1977) and Beale (1972).","@ToolTip6":"Performs the Fletcher-Reeves update (Fletcher 1987).","@ToolTip7":"Performs the Polak-Ribiere update (Fletcher 1987).","@ToolTip8":"Performs a conjugate-descent update of Fletcher (1987)."}},{"StatementOptionName":"XCONV=|XTOL=","StatementOptionHelp":{"#cdata":"[Syntax: XCONV= | XTOL=r[n]] \n          \nSpecifies the relative parameter convergence criterion. For all techniques except NMSIMP, \ntermination requires a small relative parameter change in subsequent iterations. The default \nvalue is r=1E-8 for the NMSIMP technique and r=0 otherwise. The optional integer value n \nspecifies the number of successive iterations for which the criterion must be satisfied \nbefore the process can be terminated."},"StatementOptionType":"V"},{"StatementOptionName":"XSIZE=","StatementOptionHelp":{"#cdata":"[Syntax: XSIZE=r > 0] \n          \nSpecifies the XSIZE parameter of the relative parameter termination criterion. The default \nvalue is r=0."},"StatementOptionType":"V"}]}},{"StatementName":"RESTRICT","StatementHelp":{"#cdata":"Syntax: RESTRICT equation , ..., equation ; \n      \nThe RESTRICT statement provides constrained estimation. \n\nThe RESTRICT statement places restrictions on the parameter estimates for covariates \nin the preceding MODEL statement. The AR, GARCH, and HETERO parameters are also supported \nin the RESTRICT statement. Any number of RESTRICT statements can follow a MODEL statement. \nSeveral restrictions can be specified in a single RESTRICT statement by separating the \nindividual restrictions with commas. \n\nEach restriction is written as a linear equation composed of constants and parameter names. \nRefer to model parameters by the name of the corresponding regressor variable. Each name \nused in the equation must be a regressor in the preceding MODEL statement. Use the keyword \nINTERCEPT to refer to the intercept parameter in the model.  \n\nThe following is an example of a RESTRICT statement: \n\n   model y = a b c d;\n   restrict a+b=0, 2*d-c=0;"},"StatementOptions":null},{"StatementName":"TEST","StatementHelp":{"#cdata":"Syntax: TEST equation , ..., equation / option ; \n\nThe TEST statement tests hypotheses about the covariates in the model estimated by the \npreceding MODEL statement. The AR, GARCH, and HETERO parameters are also supported in \nthe TEST statement. Each equation specifies a linear hypothesis to be tested. If more \nthan one equation is specified, the equations are separated by commas. \n\nEach test is written as a linear equation composed of constants and parameter names. \nRefer to parameters by the name of the corresponding regressor variable. Each name \nused in the equation must be a regressor in the preceding MODEL statement. Use the \nkeyword INTERCEPT to refer to the intercept parameter in the model."},"StatementOptions":{"StatementOption":{"StatementOptionName":"TYPE=","StatementOptionHelp":{"#cdata":"Specifies the test statistics to use."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"F","@Value2":"WALD","@Value3":"LM","@Value4":"LR","@Value5":"ALL"},"StatementOptionToolTips":{"@ToolTip1":"Produces an F test. This option is supported for all models specified in MODEL statement.","@ToolTip2":"Produces a Wald test. This option is supported for all models specified in MODEL statement.","@ToolTip3":"Produces a Lagrange multiplier test. This option is supported only when the GARCH= option  is specified (for example, when there is a statement like MODEL Y = C D I / GARCH=(Q=2)).","@ToolTip4":"Produces a likelihood ratio test. This option is supported only when the GARCH= option is  specified (for example, when there is a statement like MODEL Y = C D I / GARCH=(Q=2)).","@ToolTip5":"Produces all tests applicable for a particular model. For non-GARCH-type models, only F and  Wald tests are output. For all other models, all four tests (LR, LM, F, and Wald) are  computed."}}}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT OUT=SAS-data-set keyword = options ...; \n\nThe OUTPUT statement creates an output SAS data set."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"[Syntax: OUT= SAS-data-set] \n          \nNames the output SAS data set containing the predicted and transformed values. If the OUT= \noption is not specified, the new data set is named according to the DATAn convention."},"StatementOptionType":"DV"},{"StatementOptionName":"ALPHACLI=","StatementOptionHelp":{"#cdata":"[Syntax: ALPHACLI= number] \n          \nSets the confidence limit size for the estimates of future values of the response time \nseries. The ALPHACLI= value must be between 0 and 1. The resulting confidence interval \nhas 1-number confidence. The default is ALPHACLI=.05, corresponding to a 95% confidence \ninterval."},"StatementOptionType":"V"},{"StatementOptionName":"ALPHACLM=","StatementOptionHelp":{"#cdata":"[Syntax: ALPHACLM= number] \n          \nSets the confidence limit size for the estimates of the structural or regression part of \nthe model. The ALPHACLI= value must be between 0 and 1. The resulting confidence interval \nhas 1-number confidence. The default is ALPHACLM=.05, corresponding to a 95% confidence \ninterval."},"StatementOptionType":"V"},{"StatementOptionName":"ALPHACSM=","StatementOptionHelp":{"#cdata":"Specifies the significance level for the upper and lower bounds of the CUSUM and CUSUMSQ \nstatistics output by the CUSUMLB=, CUSUMUB=, CUSUMSQLB=, and CUSUMSQUB= options."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":".01","@Value2":".05","@Value3":".10"},"StatementOptionToolTips":{"@ToolTip1":"ALPHACSM=.01","@ToolTip2":"ALPHACSM=.05","@ToolTip3":"ALPHACSM=.10"}},{"StatementOptionName":"BLUS=","StatementOptionHelp":{"#cdata":"[Syntax: BLUS= variable] \n          \nSpecifies the name of a variable to contain the values of the Theil\u2019s BLUS residuals."},"StatementOptionType":"V"},{"StatementOptionName":"CEV=|HT=","StatementOptionHelp":{"#cdata":"[Syntax: CEV= variable] \n          \nWrites to the output data set the value of the error variance \u03c3\u00b2t from the heteroscedasticity \nmodel specified by the HETERO statement or the value of the conditional error variance ht by \nthe GARCH= option in the MODEL statement."},"StatementOptionType":"V"},{"StatementOptionName":"CPEV=","StatementOptionHelp":{"#cdata":"[Syntax: CPEV= variable] \n          \nWrites the conditional prediction error variance to the output data set. The value \nof conditional prediction error variance is equal to that of the conditional error \nvariance when there are no autoregressive parameters. For the exponential GARCH model, \nconditional prediction error variance cannot be calculated."},"StatementOptionType":"V"},{"StatementOptionName":"CONSTANT=","StatementOptionHelp":{"#cdata":"[Syntax: CONSTANT= variable] \n          \nWrites the transformed intercept to the output data set."},"StatementOptionType":"V"},{"StatementOptionName":"CUSUM=","StatementOptionHelp":{"#cdata":"[Syntax: CUSUM= variable] \n          \nSpecifies the name of a variable to contain the CUSUM statistics."},"StatementOptionType":"V"},{"StatementOptionName":"CUSUMSQ=","StatementOptionHelp":{"#cdata":"[Syntax: CUSUMSQ= variable] \n          \nSpecifies the name of a variable to contain the CUSUMSQ statistics."},"StatementOptionType":"V"},{"StatementOptionName":"CUSUMUB=","StatementOptionHelp":{"#cdata":"[Syntax: CUSUMUB= variable] \n          \nSpecifies the name of a variable to contain the upper confidence bound for the \nCUSUM statistic."},"StatementOptionType":"V"},{"StatementOptionName":"CUSUMLB=","StatementOptionHelp":{"#cdata":"[Syntax: CUSUMLB= variable] \n          \nSpecifies the name of a variable to contain the lower confidence bound for the \nCUSUM statistic."},"StatementOptionType":"V"},{"StatementOptionName":"CUSUMSQUB=","StatementOptionHelp":{"#cdata":"[Syntax: CUSUMSQUB= variable] \n          \nSpecifies the name of a variable to contain the upper confidence bound for the CUSUMSQ \nstatistic."},"StatementOptionType":"V"},{"StatementOptionName":"CUSUMSQLB=","StatementOptionHelp":{"#cdata":"[Syntax: CUSUMSQLB= variable] \n          \nSpecifies the name of a variable to contain the lower confidence bound for the CUSUMSQ \nstatistic."},"StatementOptionType":"V"},{"StatementOptionName":"LCL=","StatementOptionHelp":{"#cdata":"[Syntax: LCL= name] \n          \nWrites the lower confidence limit for the predicted value (specified in the PREDICTED= option) \nto the output data set. The size of the confidence interval is set by the ALPHACLI= option. \nWhen a GARCH model is estimated, the lower confidence limit is calculated assuming that the \ndisturbances have homoscedastic conditional variance."},"StatementOptionType":"V"},{"StatementOptionName":"LCLM=","StatementOptionHelp":{"#cdata":"[Syntax: LCLM= name] \n          \nWrites the lower confidence limit for the structural predicted value (specified in the \nPREDICTEDM= option) to the output data set under the name given. The size of the confidence \ninterval is set by the ALPHACLM= option."},"StatementOptionType":"V"},{"StatementOptionName":"PREDICTED=|P=","StatementOptionHelp":{"#cdata":"[Syntax: PREDICTED= name] \n          \nWrites the predicted values to the output data set. These values are formed from both \nthe structural and autoregressive parts of the model."},"StatementOptionType":"V"},{"StatementOptionName":"PREDICTEDM=|PM=","StatementOptionHelp":{"#cdata":"[Syntax: PREDICTEDM= name] \n          \nWrites the structural predicted values to the output data set. These values are formed \nfrom only the structural part of the model."},"StatementOptionType":"V"},{"StatementOptionName":"RECPEV=","StatementOptionHelp":{"#cdata":"[Syntax: RECPEV= variable] \n          \nSpecifies the name of a variable to contain the part of the predictive error variance (vt) \nthat is used to compute the recursive residuals."},"StatementOptionType":"V"},{"StatementOptionName":"RECRES=","StatementOptionHelp":{"#cdata":"[Syntax: RECRES= variable] \n          \nSpecifies the name of a variable to contain recursive residuals. The recursive residuals \nare used to compute the CUSUM and CUSUMSQ statistics."},"StatementOptionType":"V"},{"StatementOptionName":"RESIDUAL=|R=","StatementOptionHelp":{"#cdata":"[Syntax: RESIDUAL= name] \n          \nWrites the residuals from the predicted values based on both the structural and time \nseries parts of the model to the output data set."},"StatementOptionType":"V"},{"StatementOptionName":"RESIDUALM=|RM=","StatementOptionHelp":{"#cdata":"[Syntax: RESIDUALM= name] \n          \nWrites the residuals from the structural prediction to the output data set."},"StatementOptionType":"V"},{"StatementOptionName":"TRANSFORM=","StatementOptionHelp":{"#cdata":"[Syntax: TRANSFORM= variables] \n          \nTransforms the specified variables from the input data set by the autoregressive model \nand writes the transformed variables to the output data set. If you need to reproduce \nthe data suitable for reestimation, you must also transform an intercept variable. To \ndo this, transform a variable that is all 1s or use the CONSTANT= option."},"StatementOptionType":"V"},{"StatementOptionName":"UCL=","StatementOptionHelp":{"#cdata":"[Syntax: UCL= name] \n          \nWrites the upper confidence limit for the predicted value (specified in the PREDICTED= option) \nto the output data set."},"StatementOptionType":"V"},{"StatementOptionName":"UCLM=","StatementOptionHelp":{"#cdata":"[Syntax: UCLM= name] \n          \nWrites the upper confidence limit for the structural predicted value (specified in the \nPREDICTEDM= option) to the output data set. The size of the confidence interval is set \nby the ALPHACLM= option."},"StatementOptionType":"V"}]}},{"StatementName":"LAGLIST","StatementHelp":{"#cdata":"This is no longer supported under SAS/ETS 9.22."},"StatementOptions":null}]}}}