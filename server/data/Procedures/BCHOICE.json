{"Procedure":{"Name":"BCHOICE","#comment":{},"ProductGroup":"SAS/STAT","ProcedureHelp":{"#cdata":"Syntax: PROC BCHOICE <options>;\n    BY variables;\n    CLASS variable <(options)> <\u2026variable <(options)> > </ options>;\n    MODEL response <(response-options)> = <fixed-effects> </ model-options>;\n    RANDOM random-effects </ options>;\n    PREDDIST OUTPRED=SAS-data-set <options>;    \n    RESTRICT <'label'> fixed-effect operand operator <value> ; \n    RESTRICT <'label'> fixed-effect constraint-list; \n\nThe BCHOICE (Bayesian choice) procedure performs Bayesian analysis for discrete choice models. Discrete \nchoice models are used in marketing research to model decision makers' choices among alternative products \nand services. The decision maker might be people, households, companies and so on, and the alternatives might \nbe products, services, actions, or any other options or items about which choices must be made (Train 2009). \nThe collection of alternatives that are available to the decision makers is called a choice set. \n\nDiscrete choice models are derived under the assumption of utility-maximizing behavior by decision makers. \nWhen individuals are asked to make one choice among a set of alternatives, they usually determine the level \nof utility that each alternative offers."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ACCEPTTOL=","ProcedureOptionHelp":{"#cdata":"Syntax: ACCEPTTOL=n \n      \nSpecifies a tolerance for acceptance probabilities for the random walk sampler. By default, ACCEPTTOL=0.075. \nYou can specify this option for logit models."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ALGORITHM=|ALG=","ProcedureOptionHelp":{"#cdata":"Syntax: ALGORITHM=GAMERMAN | RWM | LATENT \nSyntax: ALG=GAMERMAN | RWM | LATENT\n\nSpecifies the algorithm to use to sample the posterior distribution for the regression coefficients."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"GAMERMAN","@Value2":"RWM","@Value3":"LATENT"},"ProcedureOptionToolTips":{"@ToolTip1":"Uses the Metropolis-Hastings approach of Gamerman (1997). This is the default for logit models.","@ToolTip2":"Uses the random walk Metropolis algorithm along with the normal proposal, as suggested in Rossi,  Allenby, and McCulloch (2005).","@ToolTip3":"Uses the latent variables via the data augmentation method. This is the default for probit models.  This option is ignored for logit models."}},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=SAS-data-set \n      \nSpecifies the input data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DIAGNOSTICS=|DIAG=","ProcedureOptionHelp":{"#cdata":"Syntax: DIAGNOSTICS=NONE | (keyword-list) \n      \nSpecifies options for convergence diagnostics. By default, PROC BCHOICE computes the effective sample sizes. \nThe sample autocorrelations, Monte Carlo errors, Geweke test, Raftery-Lewis test, and Heidelberger-Welch test \nare also available."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"NONE","@Value2":"<(keyword-list)>"},"ProcedureOptionToolTips":{"@ToolTip1":"Suppress all the tests.","@ToolTip2":"The following keywords are available:  ALL -- computes all diagnostic tests and statistics. You can combine the option ALL with any other    specific tests to modify test options. AUTOCORR <(autocorr-options)> -- computes default autocorrelations at lags 1, 5, 10, and 50 for each variable.   You can choose other lags by using the following autocorrelation-option: LAGS=(numeric-list) ESS -- computes the effective sample sizes (Kass et al. (1998)) of the posterior samples of each parameter. GEWEKE <(FRAC1=value FRAC2=value)>    computes the Geweke spectral density diagnostics, where FRAC1 and FRAC2 specify the beginning FRAC1    and end FRAC2 proportion of the Markov chain, respectively. HEIDELBERGER <(SALPHA=value value EPS=value)>    computes the Heidelberger and Welch diagnostic (which consists of a stationarity test and a halfwidth    test) for each variable.   SALPHA= -- specifies the \u03b1 level (0 < a < 1) for the stationarity test. By default, SALPHA=0.05   HALPHA= -- specifies the \u03b1 level (0 < a < 1) for the halfwidth test. By default, HALPHA=0.05.   EPS= -- specifies a small positive number \u03b5 such that if the halfwidth is less than \u03b5 times    the sample mean of the retaining iterates, the halfwidth test is passed.  MAXLAG=n -- specifies the maximum number of autocorrelation lags to use to compute the effective sample size.  MCSE -- computes the Monte Carlo standard error for the posterior samples of each parameter. NONE -- suppresses all of the diagnostic tests and statistics. This is not recommended. RAFTERY <(QUANTILE=value ACCURACY=value PROB=value EPS=value QUANTILE=value)> -- computes the Raftery and Lewis diagnostics."},"SubOptionsKeywords":"RAFTERY|RL|QUANTILE=|Q=|ACCURACY=|R=|PROB=|S=|EPS=|MAXLAG=|NONE|MCSE|MCERROR|SALPHA=|HEIDELBERGER|HEIDEL|HALPHA=|GEWEKE|FRAC1=|F1=|FRAC2=|F2=|ESS|AUTOCORR|AC|LAGS=|ALL"},{"ProcedureOptionName":"DIC","ProcedureOptionHelp":{"#cdata":"Computes the deviance information criterion (DIC). DIC is calculated by using the posterior mean estimates of the parameters."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"HITPROBABILITY|HITPROB","ProcedureOptionHelp":{"#cdata":"Calculates the average of estimated probabilities of all chosen alternatives in the input data set. \nYou can use this average as a measure of goodness of fit."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"INF=","ProcedureOptionHelp":{"#cdata":"Syntax:  INF=value\n      \nSpecifies the numerical definition of infinity in PROC BCHOICE. By default, INF=1E15. For example, PROC BCHOICE \nconsiders 1E16 to be outside the support of the normal distribution and assigns a missing value to the log density \nevaluation. The minimum value that is allowed is 1E10, and the maximum value that is allowed is 1E27."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LOGPOST","ProcedureOptionHelp":{"#cdata":"Calculates the logarithm of the posterior density of the parameters and the likelihood at each iteration. \nAs a result, the OUTPOST= data set will contain the LOGLIKE and LOGPOST variables. You can specify this \noption for logit models and nested logit models, but not probit models."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MAXTUNE=","ProcedureOptionHelp":{"#cdata":"Syntax: MAXTUNE=n \n      \nSpecifies an upper limit for the number of proposal tuning loops for the random walk sampler. You can specify \nthis option for logit models; it is ignored for other models. By default, MAXTUNE=6. "},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MCHISTORY=|MCHIST=","ProcedureOptionHelp":{"#cdata":"Syntax: MCHISTORY=BRIEF | DETAILED | NONE \nSyntax: MCHIST=BRIEF | DETAILED | NONE \n\nControls the display of the Metropolis sampling history. This option is ignored for nested logit and probit models."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"BRIEF","@Value2":"DETAILED","@Value3":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Produces a summary output for the tuning, burn-in, and sampling history tables. No tuning history table  is produced if there is no tuning stage. The tables show the following when applicable:    o Scale shows the scale, or the range of the scales, that is used in each random walk Metropolis block that      has a normal distribution.   o Acceptance Rate shows the acceptance rate, or the range of the acceptance rates, for each Metropolis block.","@ToolTip2":"","@ToolTip3":""}},{"ProcedureOptionName":"MINTUNE=","ProcedureOptionHelp":{"#cdata":"Syntax:  MINTUNE=n \n      \nSpecifies a lower limit for the number of proposal tuning loops for the random walk sampler. You can specify \nthis option for logit models; it is ignored for other models. By default, MINTUNE=2."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NBI=","ProcedureOptionHelp":{"#cdata":"Syntax:  NBI=n \n      \nSpecifies the number of burn-in iterations to perform before beginning to save parameter estimate chains. \nBy default, NBI=500."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NMC=","ProcedureOptionHelp":{"#cdata":"Syntax:  NMC=n \n      \nSpecifies the number of iterations in the main simulation loop. This is the MCMC sample size if THIN= 1. \nBy default, NMC=5000."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOCLPRINT","ProcedureOptionHelp":{"#cdata":"Syntax: NOCLPRINT<=n> \n      \nSuppresses the display of the \"Class Level Information\" table if you do not specify n. If you specify n, \nthe values of the classification variables are displayed for only those variables whose number of levels \nis less than n. Specifying n helps reduce the size of the \"Class Level Information\" table if some \nclassification variables have a large number of levels."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"NTHREADS=|NTHREAD=","ProcedureOptionHelp":{"#cdata":"Syntax:  NTHREADS=n | NTHREAD=n  \nSpecifies the number of threads for analytic computations and overrides the SAS system option THREADS | NOTHREADS.\nIf you do not specify the NTHREADS= option or if you specify NTHREADS=0, the default number of threads is 1."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NTU=","ProcedureOptionHelp":{"#cdata":"Syntax:  NTU=n \n      \nSpecifies the number of iterations to use in each proposal tuning phase for the random walk sampler. \nYou can specify this option for logit models; it is ignored for other models. By default, NTU=500."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUTPOST=|OUT=","ProcedureOptionHelp":{"#cdata":"Syntax:  OUTPOST=SAS-data-set | OUT=SAS-data-set  \n      \nSpecifies an output data set to contain the posterior samples of all parameters and the iteration numbers. \nIt contains the log of the posterior density (LOGPOST) and the log likelihood (LOGLIKE) if you specify the \nLOGPOST option. By default, no OUTPOST= data set is created."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PLOTS=","ProcedureOptionHelp":{"#cdata":"Controls display of diagnostic plots. You can request three types of plots: trace plots, autocorrelation \nfunction plots, and kernel density plots.\n      \nSyntax: \n(1) PLOTS <(global-plot-options)> = plot-request <(options)> \n(2) PLOTS <(global-plot-options)> = (plot-request <(options)> <...plot-request <(options)> > )\n\nYou can specify the following global-plot-options: \n\n FRINGE adds a fringe plot to the horizontal axis of the density plot. \n GROUPBY=PARAMETER | TYPE or  GROUP=PARAMETER | TYPE  \n    specifies how the plots are grouped when there is more than one type of plot. By default, GROUPBY=PARAMETER. \n    You can specify the following values: \n     TYPE --  groups the plots by type. \n     PARAMETER -- groups the plots by parameter. \n LAGS=n  specifies the number of autocorrelation lags that are used in plotting the ACF graph. By default, LAGS=50. \n SMOOTH smooths the trace plot by using a fitted penalized B-spline curve (Eilers and Marx 1996). \n UNPACKPANEL | UNPACK  unpacks all paneled plots, so that each plot in a panel is displayed separately. \n\nYou can specify the following plot-requests: \n ALL requests all types of plots. PLOTS=ALL is equivalent to specifying PLOTS=(TRACE AUTOCORR DENSITY). \n AUTOCORR | ACF  displays the autocorrelation function plots for the parameters. \n DENSITY | D | KERNEL | K  displays the kernel density plots for the parameters. \n NONE suppresses the display of all plots. \n TRACE | T  displays the trace plots for the parameters."},"ProcedureOptionType":"S|V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"AUTOCORR","@Value3":"DENSITY","@Value4":"NONE","@Value5":"TRACE"},"ProcedureOptionToolTips":{"@ToolTip1":"Requests all types of plots. PLOTS=ALL is equivalent to specifying PLOTS=(TRACE AUTOCORR DENSITY). ","@ToolTip2":"Displays the autocorrelation function plots for the parameters. ","@ToolTip3":"Displays the kernel density plots for the parameters. ","@ToolTip4":"Suppresses the display of all plots. ","@ToolTip5":"Displays the trace plots for the parameters."}},{"ProcedureOptionName":"SCALE=","ProcedureOptionHelp":{"#cdata":"Syntax: SCALE=value \n      \nControls the initial multiplicative scale to the covariance matrix of the proposal distribution for the \nrandom walk\u2013based Metropolis algorithm for logit models. By default, SCALE=2.93."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SEED=","ProcedureOptionHelp":{"#cdata":"Syntax:  SEED=n \n      \nSpecifies the random number seed. By default, SEED=0, and PROC BCHOICE gets a random number seed from the \nsystem clock. Negative seed values are treated as the default. The largest possible value for the seed is \n2^{31) - 1. Analyses that use the same nonzero seed are reproducible. The seed value is reported in the\n\"Model Information\" table."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STATISTICS=|STATS=","ProcedureOptionHelp":{"#cdata":"Syntax:  STATISTICS <(global-stats-options)> =  NONE | ALL | stats-request \nSyntax: STATS <(global-stats-options)> =  NONE | ALL | stats-request  \n\nSpecifies options for posterior statistics. By default, PROC BCHOICE computes the posterior mean, standard \ndeviation, quantiles, and two 95% credible intervals: equal-tail and highest posterior density (HPD). Other \navailable statistics include the posterior correlation and covariance. You can request all the posterior \nstatistics by specifying STATS=ALL. You can suppress all the calculations by specifying STATS=NONE. \n\nYou can specify the following global-stats-options: \n\n ALPHA=numeric-list \n  specifies the ALPHA level for the equal-tail and HPD intervals. The value of ALPHA must be between 0 and 0.5. By default, ALPHA=0.05. \n PERCENT=numeric-list | PERCENTAGE=numeric-list  \n  calculates the posterior percentages. The numeric-list contains values between 0 and 100. By default, PERCENTAGE=(25 50 75)."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"BRIEF","@Value3":"CORR","@Value4":"COV","@Value5":"INTERNAL","@Value6":"NONE","@Value7":"SUMMARY"},"ProcedureOptionToolTips":{"@ToolTip1":"Computes all posterior statistics. ","@ToolTip2":"Computes the posterior means, standard deviations, and 100(1-ALPHA)% HPD credible interval for each  variable. By default, ALPHA=0.05, but you can use the global ALPHA= option to request other values.  This is the default output for posterior statistics.","@ToolTip3":"Computes the posterior correlation matrix. ","@ToolTip4":"Computes the posterior covariance matrix.","@ToolTip5":"Computes the 100(1-ALPHA)% equal-tail and HPD credible intervals for each variable.","@ToolTip6":"Suppresses all the statistics. ","@ToolTip7":"Computes the posterior means, standard deviations, and percentile points for each variable. By default,  the 25th, 50th, and 75th percentile points are produced, but you can use the global PERCENT= option  to request specific percentile points. "},"SubOptionsKeywords":"ALPHA=|PERCENT=|PERCENTAGE="},{"ProcedureOptionName":"TARGACCEPT=","ProcedureOptionHelp":{"#cdata":"Syntax: TARGACCEPT=value \n      \nSpecifies the target acceptance rate for the random walk\u2013based Metropolis algorithm for logit models."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"THIN=|NTHIN=","ProcedureOptionHelp":{"#cdata":"Syntax: THIN=n | NTHIN=n \n      \nControls the thinning rate of the simulation. PROC BCHOICE keeps every nth simulation sample and discards the rest. \nAll posterior statistics and diagnostics are calculated by using the thinned samples. By default, THIN=1."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TUNEWT=","ProcedureOptionHelp":{"#cdata":"Syntax:  TUNEWT=value \n      \nSpecifies the multiplicative weight used in updating the covariance matrix of the proposal distribution for the \nrandom walk sampler for logit models. The numeric value must be between 0 and 1. By default, TUNEWT=0.75."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables; \n\nYou can specify a BY statement with PROC BCHOICE to obtain separate analyses of observations in groups that \nare defined by the BY variables. When a BY statement appears, the procedure expects the input data set to be \nsorted in order of the BY variables. If you specify more than one BY statement, only the last one specified is used. \n\nIf your input data set is not sorted in ascending order, use one of the following alternatives: \n\n  \u2022 Sort the data by using the SORT procedure with a similar BY statement. \n  \u2022 Specify the NOTSORTED or DESCENDING option in the BY statement for the BCHOICE procedure. The NOTSORTED \n    option does not mean that the data are unsorted but rather that the data are arranged in groups (according to values \n    of the BY variables) and that these groups are not necessarily in alphabetical or increasing numeric order. \n  \u2022 Create an index on the BY variables by using the DATASETS procedure (in Base SAS software)."},"StatementOptions":null},{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable <(options)>...<variable <(options)>> </ global-options>; \n      \nThe CLASS statement names the classification variables to be used as explanatory variables in the \nanalysis. The CLASS statement must precede the MODEL statement. You can list the response variable \nfor binary models in the CLASS statement, but this is not necessary."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CPREFIX=","StatementOptionHelp":{"#cdata":"Syntax: CPREFIX=n \n          \nSpecifies that, at most, the first n characters of a CLASS variable name be used in creating names for the \ncorresponding design variables. The default is 32 - min (32, max (2,f)), where f is the formatted length \nof the CLASS variable."},"StatementOptionType":"V"},{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sort order of the classification variable. If both the DESCENDING and ORDER= options \nare specified, PROC BCHOICE orders the categories according to the ORDER= option and then reverses \nthat order."},"StatementOptionType":"S"},{"StatementOptionName":"LPREFIX=","StatementOptionHelp":{"#cdata":"Syntax: LPREFIX=n \n          \nSpecifies that, at most, the first n characters of a CLASS variable label be used in creating labels \nfor the corresponding design variables. The default is 32 - min (32, max (2,f)), where f is the formatted \nlength of the CLASS variable."},"StatementOptionType":"V"},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (., ._, .A, \u2026, .Z for numeric variables and blanks for character variables) \nas valid values for the CLASS variable. "},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Specifies the sort order for the levels of classification variables. This ordering determines which \nparameters in the model correspond to each level in the data. By default, ORDER=FORMATTED. \nFor ORDER=FORMATTED and ORDER=INTERNAL, the sort order is machine-dependent. When ORDER=FORMATTED \nis in effect for numeric variables for which you have supplied no explicit format, the levels are \nordered by their internal values."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FORMATTED","@Value3":"FREQ","@Value4":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Levels sorted by the order of appearance in the input data set.","@ToolTip2":"Levels sorted by the external formatted value, except for numeric variables with no explicit  format, which are sorted by their unformatted (internal) value.","@ToolTip3":"Levels sorted by the descending frequency count; levels with the more observations come ealier  in the order.","@ToolTip4":"Levels sorted by the unformatted value."}},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"[Syntax: PARAM=keyword]\n          \nSpecifies the parameterization method for the classification variable or variables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EFFECT","@Value2":"GLM","@Value3":"REFERENCE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies effect coding.","@ToolTip2":"Specifies a less-than-full-rank reference cell coding (this keyword can be used only in a global option)  ","@ToolTip3":"Specifies a reference cell encoding. This is the default."}},{"StatementOptionName":"REF=","StatementOptionHelp":{"#cdata":"Syntax: REF='level' | keyword \n\nSpecifies the reference level for PARAM= EFFECT, PARAM= REFERENCE, and their orthogonalizations."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'<level>'","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"The level of the variable to use as the reference level. Specify the formatted value of the variable  if a format is assigned. Replace <level> with an actual value.","@ToolTip2":"Designates the first ordered level as reference.","@ToolTip3":"Designates the last ordered level as reference."}},{"StatementOptionName":"TRUNCATE","StatementOptionHelp":{"#cdata":"[Syntax: TRUNCATE<=n>] \n          \nSpecifies the length n of CLASS variable values to use in determining CLASS variable levels. The default \nis to use the full formatted length of the CLASS variable. If you specify TRUNCATE without the length n, \nthe first 16 characters of the formatted values are used. When formatted values are longer than 16 characters, \nyou can use this option to revert to the levels as determined in releases before SAS 9. The TRUNCATE option \nis available only as a global option."},"StatementOptionType":"S|V"}]}},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL response <(response-options)> = <fixed-effects> </ model-options>; \n\nThe MODEL statement is required; it defines the response (dependent) variable and the fixed effects. \nThe response variable indicates the chosen alternative in a choice set by the value 1 and the unchosen \nalternatives by the value 0. Any value of the response variable that is not 1, including a missing value, \nindicates an unchosen alternative."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALTERIDX=","StatementOptionHelp":{"#cdata":"Syntax: ALTERIDX=variable \n          \nSpecifies the order of all alternatives in a choice set for a nested logit or probit model. Specify this \noption to make sure the alternatives appear in the same order in all choice sets. When you do not specify \nthis option, PROC BCHOICE assumes that the alternatives are in the same order. The variable should take \nincreasing positive integers starting from 1 within each choice set. You need to specify this option only \nfor a nested logit or probit model; PROC BCHOICE ignores it for a logit model."},"StatementOptionType":"V"},{"StatementOptionName":"CHOICESET=","StatementOptionHelp":{"#cdata":"Syntax: CHOICESET=(variables) \n          \nSpecifies one or more variables for defining the choice sets. You must specify how the choice sets are constructed, \nand you can use more than one variable. PROC BCHOICE does not sort by the values of the choice set variable; \nrather, it considers the data to be from a new choice set whenever the value of the choice set variable changes \nfrom the previous observation."},"StatementOptionType":"V"},{"StatementOptionName":"CHOICETYPE=","StatementOptionHelp":{"#cdata":"Syntax: CHOICETYPE=choice-type\n          \nSpecifies what values the choice outcome variable takes."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BINARY","@Value2":"MAXDIFF","@Value3":"ALLOCATION"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the choice response variable has a binary integer value: 1 for a chosen alternative  and 0 for an unchosen alternative. Each choice set has at least two alternatives and only one  chosen alternative.","@ToolTip2":"Specifies that the choice response variable takes one of the possible three integer values: 1 for  the best alternative, \u20131 for the worst alternative, and 0 for the ones in the middle.","@ToolTip3":"ALLOCATION <(WEIGHT=n | variable)>                                     Specifies that the choice response variable takes a percentage of preference for each alternative  and that the sum of percentages in each choice set is 100%. You can specify the following suboption:        WEIGHT=n        specifies a positive integer to indicate how many times the allocated percentages of each        choice set in the data should be applied.    WEIGHT=variable       specifies a variable from the DATA= data set to indicate how many times the allocated percentages       of a choice set should be counted."},"SubOptionsKeywords":"WEIGHT="},{"StatementOptionName":"COEFFPRIOR=|CPRIOR=","StatementOptionHelp":{"#cdata":"Syntax: COEFFPRIOR=NORMAL < (options)> \nSyntax: CPRIOR=NORMAL <(options)>  \n  \nSpecifies the prior distribution for the regression coefficients."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NORMAL"},"StatementOptionToolTips":{"@ToolTip1":"COEFFPRIOR=NORMAL < (options)>  Syntax: CPRIOR=NORMAL <(options)>    Specifies the normal prior distribution for the regression coefficients.  You can specify the following options, enclosed in parentheses:    INPUT=SAS-data-set    specifies a SAS data set that contains the mean and covariance information of the normal prior.  VAR <=c>    specifies the normal prior N(0, cI), where I is the identity matrix and c is a scalar."},"SubOptionsKeywords":"INPUT=|VAR"},{"StatementOptionName":"COVPRIOR=","StatementOptionHelp":{"#cdata":"Syntax: COVPRIOR=IWISHART <(options)> \n          \nSpecifies an inverse Wishart prior distribution, IWISHART(a,b), for the covariance matrix for the vector \nof error differences. For models that do not have a covariance matrix for the error differences (the logit \nand nested logit models), this option is ignored."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"IWISHART"},"StatementOptionToolTips":{"@ToolTip1":"Syntax: COVPRIOR=IWISHART <(options)>             Specifies an inverse Wishart prior distribution, IWISHART(a,b), for the covariance matrix for the vector  of error differences.  You can specify the following options, enclosed in parentheses:    DF=a    specifies the degrees of freedom of the inverse Wishart distribution. The default is the number of alternatives    in the choice set plus 2, which is equivalent to the dimension of the covariance matrix of the error differences plus 3.   SCALE=b    specifies bI for the scale parameter of the inverse Wishart distribution, where I is the identity matrix. The default    is the number of alternatives in the choice set plus 2."},"SubOptionsKeywords":"DF=|SCALE="},{"StatementOptionName":"COVTYPE=","StatementOptionHelp":{"#cdata":"Syntax: COVTYPE=UN | VC \n          \nSpecifies the covariance structure of the error difference vector for a probit model. Although a variety \nof structures are available, most applications call for either COVTYPE=VC or COVTYPE=UN for the error \ndifference vector."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"UN","@Value2":"VC"},"StatementOptionToolTips":{"@ToolTip1":"The TYPE=UN (unstructured) specifies a full structured covariance matrix. The unstructured form  accommodates any pattern of correlation in addition to fitting a different variance component  for each error difference term.","@ToolTip2":"The COVTYPE=VC (variance components) models a different variance component for each error term."}},{"StatementOptionName":"INIT=|INITIAL=","StatementOptionHelp":{"#cdata":"Syntax: INIT=keyword-list | (numeric-list) \n Syntax: INITIAL=keyword-list | (numeric-list)  \n \n Specifies options for generating the initial values for the coefficients parameters that are specified \n as fixed-effects in the MODEL statement. By default, INIT=POSTMODE for logit models and INIT=PRIORMODE \n for probit models. You can specify the following keywords: \n\n    LIST=numeric-list \n      assigns the numbers to be the initial values of the fixed effects in the corresponding list order. \n      The length of the list must be the same as the number of fixed effects. \n    PINIT \n      tabulates initial values for the fixed effects. (By default, PROC BCHOICE does not display the initial values.) \n    POSTMODE \n      uses the mode of the posterior density as the initial value of the parameter, if you do not provide one. If the \n      mode does not exist or if it is on the boundary of the support of the density, the mean value is used. If you specify \n      POSTMODE for a probit model, where the posterior density is difficult to obtain, PROC BCHOICE resets it to PRIORMODE. \n    PRIORMODE \n      uses the mode of the prior density as the initial value of the parameter."},"StatementOptionType":"V","SubOptionsKeywords":"LIST=|PINIT|POSTMODE|PRIORMODE"},{"StatementOptionName":"LAMBDAPRIOR=|LPRIOR=","StatementOptionHelp":{"#cdata":"Syntax: LAMBDAPRIOR=SEMIFLAT <(options)> \n Syntax: LPRIOR=SEMIFLAT <(options)>  \n \n Specifies a semi-flat prior distribution (Lahiri and Gao 2002) for the log-sum coefficient, lambda, \n for each nest in a nested logit model. For models that are not nested logit, this option is ignored. \n\nYou can specify the following option, enclosed in parentheses: \n\n PHI=a \n  specifies the parameter, phi, of the semi-flat prior. By default, phi=0.8."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":""},"StatementOptionToolTips":{"@ToolTip1":"LAMBDAPRIOR=SEMIFLAT <(options)>  Syntax: LPRIOR=SEMIFLAT <(options)>      Specifies a semi-flat prior distribution (Lahiri and Gao 2002) for the log-sum coefficient, lambda,   for each nest in a nested logit model. For models that are not nested logit, this option is ignored.   You can specify the following option, enclosed in parentheses:    PHI=a    specifies the parameter, phi, of the semi-flat prior. By default, phi=0.8."},"SubOptionsKeywords":"PHI"},{"StatementOptionName":"NEST=","StatementOptionHelp":{"#cdata":"Syntax: NEST=(numeric-list) \n          \nDefines the nonoverlapping nests for a nested logit model. For a nested logit model, you must specify \nthe nests for all the alternatives in the choice set. Otherwise, the standard logit model is assumed.   \nThe number of values in the list should match the number of alternatives in the choice sets, and each \nof the actual values represents the nest that the particular alternative goes to. For example, \nNEST=(1 2 1 1 2) arranges the first, third, and fourth alternatives in the first nest and the second \nand fifth alternatives in the second nest. Currently, this option can accommodate only two-level nested \nlogit models."},"StatementOptionType":"V"},{"StatementOptionName":"SAMELAMBDA","StatementOptionHelp":{"#cdata":"Constrains the log-sum coefficients to be the same for all the nests in a nested logit model."},"StatementOptionType":"S"},{"StatementOptionName":"TYPE=","StatementOptionHelp":{"#cdata":"Syntax: TYPE=keyword \n          \nSpecifies the type of the model."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"LOGIT","@Value2":"NLOGIT","@Value3":"PROBIT"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a standard logit model. ","@ToolTip2":"Specifies a nested logit model. If you do not also specify the NEST= option to define the nests, this option  is ignored, and a standard logit model is fit. ","@ToolTip3":"Specifies a probit model."}}]}},{"StatementName":"PREDDIST","StatementHelp":{"#cdata":"Syntax: PREDDIST OUTPRED=SAS-data-set <COVARIATES=SAS-data-set>;      \n\nThe PREDDIST statement creates a new SAS data set that contains random samples from the posterior predictive\ndistribution of the choice probabilities. The posterior predictive distribution is the distribution of unobserved \nobservations (prediction) conditional on the observed data."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COVARIATES=","StatementOptionHelp":{"#cdata":"Syntax: COVARIATES=SAS-data-set \n          \nNames the SAS data set to contain the sets of explanatory variable values for which the predictions are established. \nThis data set must contain data that has the same variables used in the model. If you omit the COVARIATES= option, \nthe DATA = data set that is specified in the PROC BCHOICE statement is used instead."},"StatementOptionType":"V"},{"StatementOptionName":"NALTERNATIVE=|NALTER=","StatementOptionHelp":{"#cdata":"Syntax: NALTER=n \nSyntax: NALTERNATIVE=n  \n \nSpecifies the number of alternatives in a choice set in the COVARIATES= data set. All choice sets in the data \nmust have the same number of alternatives. You must specify this option if a COVARIATES= data set is given."},"StatementOptionType":"V"},{"StatementOptionName":"OUTPRED=","StatementOptionHelp":{"#cdata":"Syntax: OUTPRED=SAS-data-set \n          \nCreates an output data set to contain the samples from the posterior predictive distribution."},"StatementOptionType":"V"}]}},{"StatementName":"RANDOM","StatementHelp":{"#cdata":"Syntax: RANDOM random-effects </ options>; \n\nThe RANDOM statement defines the random effects in the choice model. You can use this statement to specify \ntraditional variance component models and to specify random coefficients, which can be classification or \ncontinuous. You can specify only one RANDOM statement. Include the TYPE= option to define the covariance \nstructure. PROC BCHOICE does not include the intercept in the RANDOM statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COVPRIOR=","StatementOptionHelp":{"#cdata":"Syntax: COVPRIOR=IWISHART <(options)> \n          \nSpecifies an inverse Wishart prior distribution, IWISHART(a,b), for the covariance matrix of random effects."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"IWISHART"},"StatementOptionToolTips":{"@ToolTip1":"Syntax: COVPRIOR=IWISHART <(options)>             Specifies an inverse Wishart prior distribution, IWISHART(a,b), for the covariance matrix for the vector  of error differences.  You can specify the following options, enclosed in parentheses:    DF=a    specifies the degrees of freedom of the inverse Wishart distribution. The default is the number of alternatives    in the choice set plus 2, which is equivalent to the dimension of the covariance matrix of the error differences plus 3.   SCALE=b    specifies bI for the scale parameter of the inverse Wishart distribution, where I is the identity matrix. The default    is the number of alternatives in the choice set plus 2."},"SubOptionsKeywords":"DF=|SCALE="},{"StatementOptionName":"MONITOR","StatementOptionHelp":{"#cdata":"Syntax: MONITOR \n Syntax: MONITOR=(numeric-list) \n Syntax: MONITOR=RANDOM (number)  \n \nOutputs results for the individual-level random-effects parameters. (By default, PROC BCHOICE does not output results \nfor individual-level random-effects parameters.) You can monitor a subset of the random-effects parameters. You can \nprovide a numeric list of the SUBJECT indexes, or PROC BCHOICE can randomly choose a subset of all subjects for you."},"StatementOptionType":"S|V"},{"StatementOptionName":"NOOUTPOST","StatementOptionHelp":{"#cdata":"Suppresses the output of the posterior samples of individual random-effects parameters to the OUTPOST= \ndata set. In models that have a large number of individual random-effects (for example, tens of thousands), \nPROC BCHOICE can run faster if it does not save the posterior samples of the individual random-effects."},"StatementOptionType":"S"},{"StatementOptionName":"OUTSUBCOEFF|OUTSUBUTL","StatementOptionHelp":{"#cdata":"Creates an output data set to contain the estimates of subject-level (individual) random-effects \ncoefficients."},"StatementOptionType":"S"},{"StatementOptionName":"PRINTCOV","StatementOptionHelp":{"#cdata":"Requests to always output the summary, diagnostics statistics and plots for the parameters in the \ncovariance matrix of the random effects."},"StatementOptionType":"S"},{"StatementOptionName":"REMEAN","StatementOptionHelp":{"#cdata":"Models the mean of the random effects, so that $\\bar\\bgamma $ is estimated. You can also model the \nprior mean of the random effects as a function of individual demographic variables."},"StatementOptionType":"S"},{"StatementOptionName":"SUBJECT=|SUB=","StatementOptionHelp":{"#cdata":"Syntax: SUBJECT=effect | SUB=effect \n          \nIdentifies the subjects in the model for the random effects. A set of random effects will be estimated \nfor each subject."},"StatementOptionType":"V"},{"StatementOptionName":"TYPE=","StatementOptionHelp":{"#cdata":"Syntax: TYPE=UN | VC \n          \nSpecifies the covariance structure. Although a variety of structures are available, most applications call \nfor either COVTYPE=VC or COVTYPE=UN for the error difference vector."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"UN","@Value2":"VC"},"StatementOptionToolTips":{"@ToolTip1":"The TYPE=UN (unstructured) specifies a full structured covariance matrix for the random effects.  The unstructured form accommodates any pattern of correlation between the random effects in  addition to fitting a different variance component for each random effect.","@ToolTip2":"The TYPE=VC (variance components) option, which is the default structure, models a different  variance component for each random effect."}}]}},{"StatementName":"RESTRICT","StatementHelp":{"#cdata":"Syntax: RESTRICT <'label'> fixed-effect operand operator <value> ; \nSyntax: RESTRICT <'label'> fixed-effect constraint-list; \n\nThe RESTRICT statement enables you to specify restrictions on a fixed-effect that is specified in a \npreceding MODEL statement for a logit model. You can specify either a boundary requirement or order \nconstraints on the fixed-effect. Specify one RESTRICT statement for each boundary requirement or order \nconstraint. You must specify all boundary requirements before any order constraints. PROC BCHOICE \nincorporates the specified restrictions in the analysis. The RESTRICT statement is not available \nfor a nested logit or probit model, nor for any random effects."},"StatementOptions":null}]}}}