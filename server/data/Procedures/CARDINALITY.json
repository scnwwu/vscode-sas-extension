{"Procedure":{"Name":"CARDINALITY","ProductGroup":"CAS","ProcedureHelp":{"#cdata":"Syntax: PROC CARDINALITY DATA=CAS-libref.data-table OUTCARD=CAS-libref.data-table < options > ;\n    VAR variables < / options > ;\n    FREQ variable ;\n\nThe term cardinality of a variable is an alias to the number of its distinct values. The term limited cardinality\nis the number of distinct values that do not exceed a certain threshold provided by the user. To make a\ndecision about the role of a variable to be included in subsequent SAS analytics (class, interval), it is sufficient\nto aim only for the limited cardinality and not the full cardinality. We tend to make the same decision whether\nwe computed the full or the limited cardinality. The limited cardinality i s computationally less expensive\nthan the full cardinality, especially for big data.\n\nThe CARDINALITY procedure creates the following:\n\n o the cardinality data set, which contains the summary information for each variable and some additional\n   statistics about numeric variables.\n o the details data set, which contains with the levels of each variable."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table\n      \nNames the input data table for PROC CARDINALITY to use. CAS-libref.data-table is a two-level\nname, where\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to the data, and a session identifier, which\n    defaults to the active session but which can be explicitly defined in the LIBNAME\n    statement.\n    \n  data-table specifies the name of the input data table."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTCARD=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTCARD=CAS-libref.data-table\n      \nSpecifies the output data table to contain the cardinality and summary information for each variable.\nCAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier,\nand data-table specifies the name of the output data table."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXLEVELS=","ProcedureOptionHelp":{"#cdata":"Syntax:MAXLEVELS=number\n      \nSpecifies the maximum number of levels of the variables in the input data to consider."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ORDER=","ProcedureOptionHelp":{"#cdata":"Syntax: ORDER=ASC|DESC|ASCFMT|DESFMT \n      \nSpecifies the order to be applied to all variables whose order is not specified in a VAR statement."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"ASC","@Value2":"DESC","@Value3":"ASCFMT","@Value4":"DESFMT"},"ProcedureOptionToolTips":{"@ToolTip1":"Orders variables in unformatted ascending order.","@ToolTip2":"Orders variables in unformatted descending order.","@ToolTip3":"Orders variables in formatted ascending order.","@ToolTip4":"Orders variables in formatted descending order."}},{"ProcedureOptionName":"OUTDETAILS=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTDETAILS=CAS-libref.data-table\n      \nSpecifies the output data table to contain the levels that are found for each variable.\n\nAll the levels that are higher than the value of the MAXLEVELS= option are grouped together into\none level that has a missing value (.) in the _INDEX_ column in the output data table. For this level,\nthe corresponding raw and formatted levels contain the last values visible in the histogram. This is\nuseful when you need the next segment of the histogram past the visible levels of a variable."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable ; \n      \nThe variable in the FREQ statement identifies a numeric variable in the data set that contains the frequency\nof occurrence for each observation. SAS high-performance analytical procedures that support the FREQ\nstatement treat each observation as if it appeared f times, where f is the value of the FREQ variable for the\nobservation. If the frequency value is not an integer, it is truncated to an integer. If the frequency value is \nless than 1 or missing, the observation is not used in the analysis. When the FREQ statement is not specified,\neach observation is assigned a frequency of 1."},"StatementOptions":null},{"StatementName":"VAR","StatementHelp":{"#cdata":"Syntax: VAR variables < / options > ;\n      \nThe variables identify a limited list of variables specified by the user. ORDER= requests a specific method\nof levelization. An explicit ORDER= is never overridden. If ORDER= not specified, the default ORDER\nspecified on the PROC statement is used. If no default ORDER= is specified by the user on the proc statement,\nascending order is taken as the order, but the choice of formatted or unformatted depends on the variable\nprior knowledge provided by the user. A user defined format of a variable is considered prior knowledge.\n\nMultiple VAR statements are allowed. A variable cannot be specified more than once in all the VAR\nstatements."},"StatementOptions":{"StatementOption":{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Requests a specific method of levelization.\n\nBy default, the value of the ORDER= option in the PROC CARDINALITY statement is used. If the\nORDER= option is not specified in the PROC CARDINALITY statement, ORDER=ASC by default if\nthe variable is unformatted or ORDER=ASCFMT by default if the variable is unformatted."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ASC","@Value2":"DESC","@Value3":"ASCFMT","@Value4":"DESFMT"},"StatementOptionToolTips":{"@ToolTip1":"Orders the specified variables in unformatted ascending order.","@ToolTip2":"Orders the specified variables in unformatted descending order.","@ToolTip3":"Orders the specified variables in formatted ascending order.","@ToolTip4":"Orders the specified variables in formatted descending order."}}}}]}}}