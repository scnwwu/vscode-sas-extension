{"Procedure":{"Name":"CCDM","ProductGroup":"SAS ECONOMETRICS PROCEDURES","ProcedureHelp":{"#cdata":"Syntax: PROC CCDM options;\n    BY variable-list;\n    SEVERITYMODEL severity-model-list </ definition-option>;\n    EXTERNALCOUNTS COUNT=frequency-variable <ID=replication-id-variable>;\n    OUTPUT OUT=SAS-data-set <variable-name-options> </ out-option>;\n    OUTSUM OUT=SAS-data-set\u2004statistic-keyword<=variable-name>\u2004<\u2026statistic-keyword<=variable-name>>\u2004<outsum-options>;\n    DISPLAY <table-list> </ options>;\n    DISPLAYOUT table-spec-list </ options>;\n    Programming statements ;\n    \n In many loss modeling applications, the loss events are analyzed by modeling the severity (magnitude) \n of loss and the frequency (count) of loss separately. The primary goal of preparing these models is to \n estimate the aggregate loss\u2014that is, the total loss that occurs over a period of time for which the \n frequency model is applicable. For example, an insurance company might want to assess the expected \n and worst-case losses for a particular business line, such as automobile insurance, over an entire \n year given the models for the number of losses in a year and the severity of each loss. A bank might \n want to assess the value-at-risk (VaR), a measure of the worst-case loss, for a portfolio of assets \n given the frequency and severity models for each asset type."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ADJUSTEDSEVERITY=|ADJSEV=","ProcedureOptionHelp":{"#cdata":"Syntax: ADJUSTEDSEVERITY=symbol-name | ADJSEV=symbol-name \nADJUSTEDSEVERITY=(symbol-name <\u2026symbol-name>) | ADJSEV=(symbol-name <\u2026symbol-name>)\n\nNames one or more symbols that represent an adjusted severity value in the SAS programming statements \nthat you specify. If you specify more than one symbol-name, then separate them with spaces and enclose \nthem in parentheses.\n\nEach symbol-name is a SAS name that conforms to the naming conventions of a SAS variable."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"COUNTSTORE=","ProcedureOptionHelp":{"#cdata":"Syntax: COUNTSTORE=SAS-item-store\n      \nNames the item store that contains all the information about the frequency (count) model. The CNTSELECT \nprocedure generates this item store when you use the STORE= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table\n      \nNames the input data table for PROC CCDM to use. The default is the most recently created data table. \nCAS-libref.data-table is a two-level name, where\n\nCAS-libref\n  refers to a collection of information that is defined in the LIBNAME statement and includes the caslib, \n  which includes a path to the data, and a session identifier, which defaults to the active session but \n  which can be explicitly defined in the LIBNAME statement.\n \ndata-table\nspecifies the name of the input data table."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"IGNOREPARMCOVARIANCE|IGNORECOV","ProcedureOptionHelp":{"#cdata":"Specifies that the covariance estimates be ignored for perturbation analysis."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MAXCOUNTDRAW=|MAXCOUNT=","ProcedureOptionHelp":{"#cdata":"Syntax: MAXCOUNTDRAW=number | MAXCOUNT=number\n      \nSpecifies an upper limit on the number of loss events (count) that is used for simulating one \naggregate loss sample point."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Turns off all displayed output. If you specify this option, then PROC CCDM ignores any value that \nyou specify for the PRINT= option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NPERTURBEDSAMPLES=|NPERTURB=","ProcedureOptionHelp":{"#cdata":"Syntax: NPERTURBEDSAMPLES=number | NPERTURB=number\n      \nRequests that parameter perturbation analysis be conducted. The model parameters are perturbed the \nspecified number of times and a separate full sample is simulated for each set of perturbed parameter \nvalues. The summary statistics and percentiles are computed for each such perturbed sample, and their \nvalues are aggregated across the samples to compute the mean and standard deviation of each summary \nstatistic and percentile."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NREPLICATES=|NREP=","ProcedureOptionHelp":{"#cdata":"Syntax: NREPLICATES=number | NREP=number\n      \nSpecifies a number that controls the size of the compound distribution sample that PROC CCDM simulates. \nThe number is interpreted differently based on whether you specify the EXTERNALCOUNTS statement."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUTDRAW=|OUTSAMPLE=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTDRAW=CAS-libref.data-table | OUTSAMPLE=CAS-libref.data-table\n      \nSpecifies the output data table to contain the individual severity random draws. CAS-libref.data-table \nis a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies \nthe name of the input data table."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PCTLDEF=","ProcedureOptionHelp":{"#cdata":"Specifies the method to compute the percentiles of the compound distribution."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"1","@Value2":"2","@Value3":"3","@Value4":"4","@Value5":"5"},"ProcedureOptionToolTips":{"@ToolTip1":"Definition 1 for computing quantile statistics","@ToolTip2":"Definition 2 for computing quantile statistics","@ToolTip3":"Definition 3 for computing quantile statistics","@ToolTip4":"Definition 4 for computing quantile statistics","@ToolTip5":"Definition 5 for computing quantile statistics"}},{"ProcedureOptionName":"PRINT=","ProcedureOptionHelp":{"#cdata":"Syntax: PRINT <(global-display-option)> =display-option \nSyntax: PRINT <(global-display-option)> =(display-option \u2026display-option)\n\nSpecifies the desired displayed output. If you specify more than one display-option, then separate \nthem with spaces and enclose them in parentheses.\n\nYou can specify the following global-display-option:\n\nONLY\n  turns off the default displayed output and displays only the requested output."},"StatementOptionValues":{"@Value1":"ALL","@Value2":"PERCENTILES","@Value3":"PERTURBSUMMARY","@Value4":"SUMMARYSTATISTICS","@Value5":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"Displays all the output.","@ToolTip2":"Displays the percentiles of the compound distribution sample.","@ToolTip3":"Displays the mean and standard deviation of the summary statistics and percentiles that are taken  across all the samples produced by perturbing the model parameters.","@ToolTip4":"Displays the summary statistics of the compound distribution sample.","@ToolTip5":"Displays none of the output."},"SubOptionsKeywords":"ONLY","ProcedureOptionType":"V"},{"ProcedureOptionName":"SEED=","ProcedureOptionHelp":{"#cdata":"Syntax: SEED=number\n      \nSpecifies the integer to use as the seed in generating the pseudo-random numbers that are used for \nsimulating severity and frequency values.\n\nIf you do not specify the seed or if number is negative or 0, then the time of day from the computer\u2019s \nclock is used as the seed."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SEVERITYEST=","ProcedureOptionHelp":{"#cdata":"Syntax: SEVERITYEST=CAS-libref.data-table\n      \nNames the input data table that contains the parameter estimates for the severity model. \nCAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session \nidentifier, and data-table specifies the name of the input data table."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SEVERITYSTORE=|SEVSTORE=","ProcedureOptionHelp":{"#cdata":"Syntax: SEVERITYSTORE=SAS-item-store | SEVSTORE=SAS-item-store\n      \nSpecifies the item store that contains the context and estimates of the severity model. A PROC SEVSELECT \nstep with the OUTSTORE= option creates this item store."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"VARDEF=","ProcedureOptionHelp":{"#cdata":"Syntax: VARDEF=divisor\n      \nSpecifies the divisor to use in the calculation of variance, standard deviation, kurtosis, and skewness \nof the compound distribution sample. "},"StatementOptionValues":{"@Value1":"DF","@Value2":"N"},"StatementOptionToolTips":{"@ToolTip1":"Sets the divisor for variance to N - 1. This is the default. This also changes the definitions of skewness and kurtosis.","@ToolTip2":"Sets the divisor to N."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variable-list;\n\nYou can use the BY statement in the CCDM procedure to process the input data table in groups of observations \ndefined by the BY variables.\n\nIf you specify the BY statement, then unlike procedures that do not use a CAS server, PROC CCDM does not need \nthe input data table to be sorted in the order of the BY variables. As a consequence, the NOTSORTED and DESCENDING \noptions have no effect and PROC CCDM ignores them."},"StatementOptions":null},{"StatementName":"DISPLAY","StatementHelp":{"#cdata":"Syntax: DISPLAY <table-list> </ options>;\n      \nThe DISPLAY statement enables you to specify a list of display tables to display or exclude. This statement \nis similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve \nperformance when a large number of tables could be generated (such as in BY-group processing). The procedure \nprocesses the DISPLAY statement on a CAS server and thus sends only a subset of ODS tables to the SAS client. \nBecause ODS statements are processed on a SAS client, all the display tables generated are first sent to the \nclient and then the client creates a subset. If both DISPLAY and ODS statements are used together, the DISPLAY \nstatement takes precedence over the ODS statements."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CASESENSITIVE","StatementOptionHelp":{"#cdata":"Performs a case-sensitive comparison of table names in the table-list to display table names when \ntables are subsetted for display. To preserve case, you must enclose table names in the table-list \nin quotation marks."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDE","StatementOptionHelp":{"#cdata":"Displays all display tables except those specified in the table-list."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDEALL","StatementOptionHelp":{"#cdata":"Suppresses display of all tables. This option takes precedence over the other options."},"StatementOptionType":"S"},{"StatementOptionName":"TRACE","StatementOptionHelp":{"#cdata":"Displays the display table names, labels, and paths."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAYOUT","StatementHelp":{"#cdata":"Syntax: DISPLAYOUT table-spec-list < / options > ;\n      \nThe DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This\nstatement is similar to the ODS OUTPUT statement.\n\nThe table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a\nkey=value format:\n\n  key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the\n    CAS output table name.\n  key specifies key as the ODS table name and also as the CAS output table name.\n  \nTable names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT\nstatement does not support regular expressions."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"INCLUDEALL","StatementOptionHelp":{"#cdata":"Creates output CAS tables for all display tables. The name of the created output CAS table is the \nsame as the corresponding display table name. If you specify this option, the table-spec-list specification \nis ignored."},"StatementOptionType":"S"},{"StatementOptionName":"NOREPLACE","StatementOptionHelp":{"#cdata":"Does not replace an existing CAS output table of the same name."},"StatementOptionType":"S"},{"StatementOptionName":"REPEATED","StatementOptionHelp":{"#cdata":"Replicates the CAS output tables on all nodes."},"StatementOptionType":"S"}]}},{"StatementName":"EXTERNALCOUNTS","StatementHelp":{"#cdata":"Syntax: EXTERNALCOUNTS COUNT=frequency-variable <ID=replication-id-variable>;\n\nThe EXTERNALCOUNTS statement enables you to specify externally simulated frequency counts. By default, \nPROC CCDM internally simulates the number of loss events by using the frequency model input (COUNTSTORE= \nitem store). However, if you specify the EXTERNALCOUNTS statement, then PROC CCDM uses the counts that \nyou specify in the DATA= data table and simulates only the severity values internally."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COUNT=","StatementOptionHelp":{"#cdata":"Syntax: COUNT=count-variable\n          \nSpecifies the variable that contains the simulated counts. This variable must be present in the \nDATA= data table."},"StatementOptionType":"V"},{"StatementOptionName":"ID=","StatementOptionHelp":{"#cdata":"Syntax: ID=replication-id-variable\n          \nSpecifies the variable that contains the replicate identifier. This variable must be present \nin the DATA= data table."},"StatementOptionType":"V"}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT OUT=SAS-data-set <variable-name-option> </ out-option>;\n\nThe OUTPUT statement enables you to specify the data table to output the generated compound distribution sample."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=|OUTSAMPLE=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table | OUTSAMPLE=CAS-libref.data-table\n          \nSpecifies the output data table to contain the simulated compound distribution sample. CAS-libref.data-table \nis a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies \nthe name of the input data table."},"StatementOptionType":"RV"},{"StatementOptionName":"ADJSAMPLEVAR=","StatementOptionHelp":{"#cdata":"Syntax: ADJSAMPLEVAR=variable-name | ADJSAMPLEVAR=(variable-name <\u2026variable-name>)\n          \nSpecifies the names of the variables to contain the adjusted compound distribution sample in the OUT= \ndata table. "},"StatementOptionType":"RV"},{"StatementOptionName":"SAMPLEVAR=","StatementOptionHelp":{"#cdata":"Syntax: SAMPLEVAR=variable-name\n          \nSpecifies the name of the variable to contain the simulated sample in the OUT= data table. If you \ndo not specify the SAMPLEVAR= option, then \"_AGGSEV_\" is used by default."},"StatementOptionType":"RV"},{"StatementOptionName":"PERTURBOUT","StatementOptionHelp":{"#cdata":"Specifies that all the perturbed samples be written to the OUT= data table. Each perturbed sample is \nidentified by the _DRAWID_ variable in the OUT= data table. A value of 0 for the _DRAWID_ variable \nindicates an unperturbed sample."},"StatementOptionType":"S"}]}},{"StatementName":"OUTSUM","StatementHelp":{"#cdata":"Syntax: OUTSUM OUT=SAS-data-set statistic-keyword<=variable-name> <\u2026statistic-keyword<=variable-name>> <outsum-options>;\n\nThe OUTSUM statement enables you to specify the data table in which PROC CCDM writes the summary \nstatistics of the compound distribution samples."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=|OUTSUM=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table | OUTSUM=CAS-libref.data-table\n          \nSpecifies the output data table that contains the summary statistics of each of the simulated compound \ndistribution samples. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib \nand session identifier, and data-table specifies the name of the input data table."},"StatementOptionType":"V"},{"StatementOptionName":"KURTOSIS|KURT","StatementOptionHelp":{"#cdata":"[Syntax: KURTOSIS|KURT < =variable-name >]\n          \nSpecifies the kurtosis of the compound distribution sample."},"StatementOptionType":"S|V"},{"StatementOptionName":"MEAN","StatementOptionHelp":{"#cdata":"[Syntax: MEAN < =variable-name >]\n          \nSpecifies the mean of the compound distribution sample."},"StatementOptionType":"S|V"},{"StatementOptionName":"MEDIAN|Q2|P50","StatementOptionHelp":{"#cdata":"[Syntax: MEDIAN|Q2|P50 < =variable-name >]\n          \nSpecifies the median (the 50th percentile) of the compound distribution sample."},"StatementOptionType":"S|V"},{"StatementOptionName":"P01","StatementOptionHelp":{"#cdata":"[Syntax: P01 < =variable-name >]\n          \nSpecifies the 1st percentile of the compound distribution sample.\n"},"StatementOptionType":"S|V"},{"StatementOptionName":"P05","StatementOptionHelp":{"#cdata":"[Syntax: P05 < =variable-name >]\n          \nSpecifies the 5th percentile of the compound distribution sample"},"StatementOptionType":"S|V"},{"StatementOptionName":"P95","StatementOptionHelp":{"#cdata":"[Syntax: P95 < =variable-name >]\n          \nSpecifies the 95th percentile of the compound distribution sample."},"StatementOptionType":"S|V"},{"StatementOptionName":"P99","StatementOptionHelp":{"#cdata":"[Syntax: P99 < =variable-name >]\n          \nSpecifies the 99th percentile of the compound distribution sample."},"StatementOptionType":"S|V"},{"StatementOptionName":"P99_5|P995","StatementOptionHelp":{"#cdata":"[Syntax: P99_5|P995 < =variable-name >]\n          \nSpecifies the 99.5th percentile of the compound distribution sample."},"StatementOptionType":"S|V"},{"StatementOptionName":"Q1|P25","StatementOptionHelp":{"#cdata":"[Syntax: Q1|P25 < =variable-name >]\n          \nSpecifies the lower or 1st quartile (the 25th percentile) of the compound distribution sample.\n"},"StatementOptionType":"S|V"},{"StatementOptionName":"Q3|P75","StatementOptionHelp":{"#cdata":"[Syntax: Q3|P75 < =variable-name >]\n          \nSpecifies the upper or 3rd quartile (the 75th percentile) of the compound distribution sample."},"StatementOptionType":"S|V"},{"StatementOptionName":"QRANGE","StatementOptionHelp":{"#cdata":"[Syntax: QRANGE < =variable-name >]\n          \nSpecifies the interquartile range (Q3\u2013Q1) of the compound distribution sample."},"StatementOptionType":"S|V"},{"StatementOptionName":"SKEWNESS|SKEW","StatementOptionHelp":{"#cdata":"[Syntax: SKEWNESS|SKEW < =variable-name >]\n          \nSpecifies the skewness of the compound distribution sample."},"StatementOptionType":"S|V"},{"StatementOptionName":"STDDEV|STD","StatementOptionHelp":{"#cdata":"[Syntax: STDDEV|STD < =variable-name >]\n          \nSpecifies the standard deviation of the compound distribution sample.\n"},"StatementOptionType":"S|V"},{"StatementOptionName":"PCTLPTS=","StatementOptionHelp":{"#cdata":"[Syntax: PCTLPTS=percentile-list]\n          \nSpecifies one or more percentiles that you want to be computed and written to the OUTSUM= data\nset. This option is useful if you need to request percentiles that are not available in the preceding\nlist of statistic-keyword values. "},"StatementOptionType":"V"},{"StatementOptionName":"PCTLNAME=","StatementOptionHelp":{"#cdata":"[Syntax: PCTLNAME=percentile-variable-name-list]\n          \nSpecifies the names of the variables that contain the estimates of the percentiles that you request by\nusing the PCTLPTS= option.\n"},"StatementOptionType":"V"},{"StatementOptionName":"PCTLNDEC=","StatementOptionHelp":{"#cdata":"[Syntax: PCTLNDEC=integer-value]\n           \nSpecifies the maximum number of decimal places to use while creating the names of the variables for\nthe percentile values in the PCTLPTS= option. The default value is 3. For example, for a percentile\nvalue of 99.9995, PROC HPCDM creates a variable named P99_999 by default, but if you specify\nPCTLNDEC=4, then the variable is named P99_9995."},"StatementOptionType":"V"}]}},{"StatementName":"SEVERITYMODEL","StatementHelp":{"#cdata":"Syntax: SEVERITYMODEL severity-model-list </ definition-option>;\n      \nThe SEVERITYMODEL statement specifies one or more severity distribution models that you want to use in\nsimulating a compound distribution sample. The severity-model-list is a space-separated list of names of\nseverity models that you would use with PROC SEVERITY\u2019s DIST statement. The SEVERITYEST= data\nset or the SEVERITYSTORE= item store must contain all the severity models in the list. If you specify the\nSEVERITYEST= data set and if you specify a name that does not appear in the _MODEL_ column of the\nSEVERITYEST= data set, then that name is ignored. Similarly, if you specify the SEVERITYSTORE= item\nstore and if a severity model by that name does not appear in the item store, then that name is ignored.\n"},"StatementOptions":{"StatementOption":{"StatementOptionName":"DEFINITIONSTABLE=|SEVDEF=","StatementOptionHelp":{"#cdata":"Syntax: DEFINITIONSTABLE=\"CAS-table-name\" <(CASLIB=\"caslib\")> | SEVDEF=\"CAS-table-name\" <(CASLIB=\"caslib\")>\n\nSpecifies a data table on the CAS server that contains the severity distribution function definitions. \nIf you do not specify the CASLIB= option, then PROC CCDM assumes that the table is in the caslib that \nis active in the current CAS session. To specify a different caslib, use the CASLIB= option."},"StatementOptionType":"V"}}},{"StatementName":"ABORT","StatementHelp":{"#cdata":"Syntax: ABORT <ABEND | CANCEL <FILE> | RETURN | > <n> <NOLIST>; \n      \nStops executing the current DATA step, SAS job, or SAS session.\n\nn is an integer value that enables you to specify a condition code: \n    \n  o when used with the CANCEL argument, the value is placed in the SYSINFO automatic macro variable \n  o when not used with the CANCEL argument, the error code that is returned by SAS is ERROR. The value \n    of ERROR depends on the operating system. The condition code n is returned to the operating system \n    as the final SAS system exit code."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ABEND","StatementOptionHelp":{"#cdata":"Causes abnormal termination of the current SAS job or session. Results depend on the method \nof operation: \n\no batch mode and noninteractive mode \n\n  o stops processing immediately\n  o sends an error message to the SAS log that states that execution was terminated by the ABEND option \n    of the ABORT macro statement\n  o does not execute any subsequent statements or check syntax\n  o returns control to the operating environment; further action is based on how your operating environment \n    and your site treat jobs that end abnormally.\n\no windowing environment and interactive line mode \n\n  o causes your windowing environment and interactive line mode to stop processing immediately \n    and return you to your operating environment."},"StatementOptionType":"S"},{"StatementOptionName":"CANCEL","StatementOptionHelp":{"#cdata":"Causes the cancellation of the current submitted statements. The results depend on the method \nof operation:\n\no batch mode and noninteractive mode\n\n  o The entire SAS program and SAS system are terminated.\n  o The error message is written to the SAS log.\n\no windowing environment and interactive line mode \n\n  o It only clears the current submitted program.\n  o Other subsequent submitted programs are not affected.\n  o The error message is written to the SAS log.\n\no workspace server and stored process server \n\n  o It only clears currently submitted program.\n  o Other subsequent submit calls are not affected.\n  o The error message is written to the SAS log.\n\no SAS IntrNet application server \n\n  o A separate execution is created for each request. The execution submits the request code. A CANCEL \n    argument in the request code clears the current submitted code but does not terminate the execution \n    of the SAS session."},"StatementOptionType":"S"},{"StatementOptionName":"CANCEL FILE","StatementOptionHelp":{"#cdata":"Causes only the contents of the autoexec file or %INCLUDE file to be cleared by the %ABORT statement. \nOther submitted source statements will be executed after the autoexec or %INCLUDE file."},"StatementOptionType":"S"},{"StatementOptionName":"RETURN","StatementOptionHelp":{"#cdata":"Causes abnormal termination of the current SAS job or session. Results depend on the method \nof operation: \n\no batch mode and noninteractive mode \n\n  o stops processing immediately\n  o sends an error message to the SAS log that states that execution was terminated by the RETURN option \n    in the ABORT macro statement\n  o does not execute any subsequent statements or check syntax\n  o returns control to the operating environment with a condition code indicating an error.\n\no windowing environment and interactive line mode \n\n  o causes your windowing environment and interactive line mode to stop processing immediately \n    and return you to your operating environment."},"StatementOptionType":"S"},{"StatementOptionName":"&lt;n&gt;","StatementOptionHelp":{"#cdata":"Replace <n> with an actual integer value.\n        \nn is an integer value that enables you to specify a condition code: \n    \n  o when used with the CANCEL argument, the value is placed in the SYSINFO automatic macro variable \n  o when not used with the CANCEL argument, the error code that is returned by SAS is ERROR. The value \n    of ERROR depends on the operating system. The condition code n is returned to the operating system \n    as the final SAS system exit code."},"StatementOptionType":"S"},{"StatementOptionName":"NOLIST","StatementOptionHelp":{"#cdata":"Suppresses the output of all variables to the SAS log. \n    \nRequirement: NOLIST must be the last option in the ABORT statement."},"StatementOptionType":"S"}]}},{"StatementName":"ARRAY","StatementHelp":{"#cdata":"Syntax: ARRAY array-name { subscript } <$><length> \n  <array-elements> <(initial-value-list)>; \n  \nDefines the elements of an array."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Specifies all variables."},"StatementOptionType":"S"},{"StatementOptionName":"_TEMPORARY_","StatementOptionHelp":{"#cdata":"Creates a list of temporary data elements."},"StatementOptionType":"S"},{"StatementOptionName":"_NUMERIC_","StatementOptionHelp":{"#cdata":"Specifies all numeric variables."},"StatementOptionType":"S"},{"StatementOptionName":"_CHARACTER_","StatementOptionHelp":{"#cdata":"Specifies all character variables."},"StatementOptionType":"S"}]}},{"StatementName":"ATTRIB","StatementHelp":{"#cdata":"Syntax: ATTRIB variable-list(s) attribute-list(s) ; \n      \nAssociates a format, informat, label, and length with one or more variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"FORMAT=","StatementOptionHelp":{"#cdata":"[Syntax: FORMAT=format] \n          \nAssociates a format with variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"INFORMAT=","StatementOptionHelp":{"#cdata":"[Syntax: INFORMAT=informat] \n          \nAssociates an informat with variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"LABEL=","StatementOptionHelp":{"#cdata":"[Syntax: LABEL='label'] \n          \nAssociates a label with variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"LENGTH=","StatementOptionHelp":{"#cdata":"[Syntax: LENGTH=<$>length] \n          \nSpecifies the length of variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"TRANSCODE=","StatementOptionHelp":{"#cdata":"Specifies whether character variables can be transcoded."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that character variables can be transcoded.","@ToolTip2":"Suppresses transcoding."}}]}},{"StatementName":"CALL","StatementHelp":{"#cdata":"Syntax: CALL routine(parameter-1<, ...parameter-n>); \n      \nInvokes a SAS CALL routine."},"StatementOptions":null},{"StatementName":"CONTINUE","StatementHelp":{"#cdata":"Syntax: CONTINUE; \n      \nStops processing the current DO-loop iteration and resumes processing the next iteration."},"StatementOptions":null},{"StatementName":"DELETE","StatementHelp":{"#cdata":"Syntax: DELETE; \n      \nStops processing the current observation."},"StatementOptions":null},{"StatementName":"DESCRIBE","StatementHelp":{"#cdata":"Syntax: DESCRIBE;\n      \nRetrieves source code from a stored compiled DATA step program or a DATA step view."},"StatementOptions":null},{"StatementName":"DO WHILE","StatementHelp":{"#cdata":"Executes statements in a DO-loop repetitively while a condition is true. \n          \nSyntax: \nDO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptions":null},{"StatementName":"DO UNTIL","StatementHelp":{"#cdata":"Executes statements in a DO loop repetitively until a condition is true.\n          \nSyntax: \nDO UNTIL (expression); \n...more SAS statements...  \nEND;"},"StatementOptions":null},{"StatementName":"DO","StatementHelp":{"#cdata":"Specifies a group of statements to be executed as a unit.\n      \nSyntax: \n(1) DO; \n...more SAS statements...  \nEND;  \n\n(2) DO index-variable=specification-1 <, ... specification-n>; \n... more SAS statements ...  \nEND;  \n\n(3) DO UNTIL (expression); \n...more SAS statements...  \nEND \n\n(4) DO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"UNTIL","StatementOptionHelp":{"#cdata":"Executes statements in a DO loop repetitively until a condition is true.\n          \nSyntax: \nDO UNTIL (expression); \n...more SAS statements...  \nEND"},"StatementOptionType":"S"},{"StatementOptionName":"WHILE","StatementOptionHelp":{"#cdata":"Executes statements in a DO-loop repetitively while a condition is true. \n          \nSyntax: \nDO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptionType":"S"},{"StatementOptionName":"OVER","StatementOptionType":"S"},{"StatementOptionName":"TO","StatementOptionHelp":{"#cdata":"Separates the start and stop integers or expressions that control the number of times the \nportion of the DATA step between the iterative DO and END statements is processed."},"StatementOptionType":"S"},{"StatementOptionName":"BY","StatementOptionHelp":{"#cdata":"Precedes an increment integer (other than 0) or an expression that generates an integer to be \nadded to the value of the index variable in each iteration of the DO loop."},"StatementOptionType":"S"}]}},{"StatementName":"DROP","StatementHelp":{"#cdata":"Syntax: DROP variable-list; \n      \nExcludes variables from output SAS data sets."},"StatementOptions":null},{"StatementName":"END","StatementHelp":{"#cdata":"Syntax: END; \n      \nEnds a DO group or SELECT group processing."},"StatementOptions":null},{"StatementName":"EXECUTE","StatementHelp":{"#cdata":"Syntax: EXECUTE;\n      \nExecutes a stored compiled DATA step program."},"StatementOptions":null},{"StatementName":"FILE","StatementHelp":{"#cdata":"Specifies the current output file for PUT statements.\n\nSyntax: \n(1) FILE file-specification <device-type> <options> <operating-environment-options>;      \n(2) FILE file-specification<ENCODING='encoding-value'><option-list> <host-option-list>; \n(3) FILE file-specification <type><ENCODING=encoding-value> <options>;  \n(4) FILE LOG | PRINT <options>;  \n\nwhere\n\nfile-specification \nidentifies an external file that the DATA step uses to write output from a PUT statement. \nFile-specification can have these forms: \n\n  'external-file' \n  specifies the physical name of an external file, which is enclosed in quotation marks. \n  The physical name is the name by which the operating environment recognizes the file.\n\n  fileref \n  specifies the fileref of an external file. \n\n  Requirement: You must have previously associated fileref with an external file in a FILENAME \n  statement or function, or in an appropriate operating environment command. There is only one \n  exception to this rule: when you use the FILEVAR= option, the fileref is simply a placeholder. \n\n  fileref(file) \n  specifies a fileref that is previously assigned to an external file that is an aggregate \n  grouping of files. Follow the fileref with the name of a file or member, which is enclosed \n  in parentheses.\n  \n  LOG \n  is a reserved fileref that directs the output that is produced by any PUT statements to the SAS log.\n  PRINT \n  is a reserved fileref that directs the output that is produced by any PUT statements to the same \n  file as the output that is produced by SAS procedures.\n\ndevice-type \nspecifies the type of device or the access method that is used if the fileref points to an input \nor output device or a location that is not a physical file: DISK, DUMMY, GTERM, PIPE, PLOTTER,\nPRINTER, TAPE, TEMP, TERMINAL, UPRINTER. type specifies the type of file in z/OS: DLI, HFS, MVS,\nPIPE, VSAM.\n\noperating-environment-options or host-options\nAdditional specifications might be required when you specify some devices. See the SAS documentation \nfor your operating environment before specifying a value other than DISK. Values in addition to the \nones listed here might be available in some operating environments."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"LOG","StatementOptionHelp":{"#cdata":"Is a reserved fileref that directs the output that is produced by any PUT statements to the SAS log."},"StatementOptionType":"S"},{"StatementOptionName":"DISK","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies that the device is a disk drive."},"StatementOptionType":"S"},{"StatementOptionName":"DUMMY","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies that the output to the file is discarded. Tip: Specifying DUMMY can be \nuseful for testing."},"StatementOptionType":"S"},{"StatementOptionName":"GTERM","StatementOptionHelp":{"#cdata":"[device-type] \n          \nIndicates that the output device type is a graphics device that will receive graphics data."},"StatementOptionType":"S"},{"StatementOptionName":"PIPE","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies an unnamed pipe. Note: Some operating environments do not support pipes."},"StatementOptionType":"S"},{"StatementOptionName":"PLOTTER","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies an unbuffered graphics output device."},"StatementOptionType":"S"},{"StatementOptionName":"PRINTER","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies a printer or printer spool file."},"StatementOptionType":"S"},{"StatementOptionName":"TAPE","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies a tape drive."},"StatementOptionType":"S"},{"StatementOptionName":"TEMP","StatementOptionHelp":{"#cdata":"[device-type] \n          \nCreates a temporary file that exists only as long as the filename is assigned. \n\nRestriction: Do not specify a physical pathname. If you do, SAS returns an error."},"StatementOptionType":"S"},{"StatementOptionName":"TERMINAL","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies the user's terminal."},"StatementOptionType":"S"},{"StatementOptionName":"UPRINTER","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies a Universal Printing printer definition name."},"StatementOptionType":"S"},{"StatementOptionName":"DLI","StatementOptionHelp":{"#cdata":"[type] \n          \nFor IMS-DL/I databases."},"StatementOptionType":"S"},{"StatementOptionName":"HFS","StatementOptionHelp":{"#cdata":"[type] \n          \nFor UNIX System Services files."},"StatementOptionType":"S"},{"StatementOptionName":"MVS","StatementOptionHelp":{"#cdata":"[type] \n          \nFor z/OS data sets."},"StatementOptionType":"S"},{"StatementOptionName":"VSAM","StatementOptionHelp":{"#cdata":"[type] \n          \nFor VSAM files."},"StatementOptionType":"S"},{"StatementOptionName":"COLUMN=|COL=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS automatically sets to the current column location of the pointer."},"StatementOptionType":"V"},{"StatementOptionName":"DELIMITER=|DLM=","StatementOptionHelp":{"#cdata":"Specifies an alternate delimiter (other than a blank) to be used for LIST output."},"StatementOptionType":"V"},{"StatementOptionName":"DLMSTR=","StatementOptionHelp":{"#cdata":"Specifies a character string as an alternate delimiter (other than a blank) to be used \nfor LIST output"},"StatementOptionType":"V"},{"StatementOptionName":"DLMSOPT=","StatementOptionHelp":{"#cdata":"Specifies a parsing option for the DLMSTR= T option that removes trailing blanks of the \nstring delimiter."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'T'"},"StatementOptionToolTips":{"@ToolTip1":"Removes trailing blanks of the string delimiter."}},{"StatementOptionName":"DROPOVER","StatementOptionHelp":{"#cdata":"Discards data items that exceed the output line length (as specified by the LINESIZE= \nor LRECL= options in the FILE statement)."},"StatementOptionType":"S"},{"StatementOptionName":"DSD","StatementOptionHelp":{"#cdata":"Specifies that data values that contain embedded delimiters, such as tabs or commas, \nbe enclosed in quotation marks."},"StatementOptionType":"S"},{"StatementOptionName":"ENCODING=","StatementOptionHelp":{"#cdata":"Specifies the encoding to use when writing to the output file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'warabic'","@Value2":"'wbaltic'","@Value3":"'wlatin2'","@Value4":"'wcyrillic'","@Value5":"'wgreek'","@Value6":"'whebrew'","@Value7":"'wturkish'","@Value8":"'wvietnamese'","@Value9":"'wlatin1'","@Value10":"'utf-8'","@Value11":"'ms-950'","@Value12":"'ms-936'","@Value13":"'ms-932'","@Value14":"'ms-949'"},"StatementOptionToolTips":{"@ToolTip1":"Arabic","@ToolTip2":"Baltic","@ToolTip3":"Central Europe","@ToolTip4":"Cyrillic","@ToolTip5":"Greek","@ToolTip6":"Hebrew","@ToolTip7":"Turkish","@ToolTip8":"Vietnamese","@ToolTip9":"Western","@ToolTip10":"Unicode encoding","@ToolTip11":"Traditional Chinese","@ToolTip12":"Simplified Chinese","@ToolTip13":"Japanese","@ToolTip14":"Korean"}},{"StatementOptionName":"FILENAME=","StatementOptionHelp":{"#cdata":"Defines a character variable, whose name you supply, that SAS sets to the value of the physical \nname of the file currently open for PUT statement output."},"StatementOptionType":"V"},{"StatementOptionName":"FILEVAR=","StatementOptionHelp":{"#cdata":"Defines a variable whose change in value causes the FILE statement to close the current output \nfile and open a new one the next time the FILE statement executes."},"StatementOptionType":"V"},{"StatementOptionName":"FLOWOVER","StatementOptionHelp":{"#cdata":"Causes data that exceeds the current line length to be written on a new line."},"StatementOptionType":"S"},{"StatementOptionName":"FOOTNOTES|FOOTNOTE","StatementOptionHelp":{"#cdata":"Specifies that the currently defined footnotes are printed."},"StatementOptionType":"S"},{"StatementOptionName":"NOFOOTNOTES|NOFOOTNOTE","StatementOptionHelp":{"#cdata":"Specifies that the currently defined footnotes are not printed."},"StatementOptionType":"S"},{"StatementOptionName":"HEADER=","StatementOptionHelp":{"#cdata":"Defines a statement label that identifies a group of SAS statements that you want to execute \neach time SAS begins a new output page"},"StatementOptionType":"V"},{"StatementOptionName":"LINE=","StatementOptionHelp":{"#cdata":"Defines a variable whose value is the current relative line number within the group of lines \navailable to the output pointer."},"StatementOptionType":"V"},{"StatementOptionName":"LINESIZE=|LS=","StatementOptionHelp":{"#cdata":"Sets the maximum number of columns per line for reports and the maximum record length for \ndata files."},"StatementOptionType":"V"},{"StatementOptionName":"LINESLEFT=|LL=","StatementOptionHelp":{"#cdata":"Defines a variable whose value is the number of lines left on the current page."},"StatementOptionType":"V"},{"StatementOptionName":"LRECL=","StatementOptionHelp":{"#cdata":"Specifies the logical record length of the output file."},"StatementOptionType":"V"},{"StatementOptionName":"MOD","StatementOptionHelp":{"#cdata":"Writes the output lines after any existing lines in the file."},"StatementOptionType":"S"},{"StatementOptionName":"N=","StatementOptionHelp":{"#cdata":"Specifies the number of lines that you want available to the output pointer in the current \niteration of the DATA step."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<n>","@Value2":"PAGESIZE|PS"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the number of lines that are available to the output pointer.  Replace n with an integer.","@ToolTip2":"Specifies that the entire page is available to the output pointer."}},{"StatementOptionName":"ODS=","StatementOptionHelp":{"#cdata":"[Syntax: ODS < = (ODS-suboptions) >] \n          \nSpecifies to use the Output Delivery System to format the output from a DATA step."},"StatementOptionType":"S|V"},{"StatementOptionName":"OLD","StatementOptionHelp":{"#cdata":"Replaces the previous contents of the file."},"StatementOptionType":"S"},{"StatementOptionName":"PAD","StatementOptionHelp":{"#cdata":"Specifies that records written to an external file are padded with blanks to the length that \nis specified in the LRECL= option."},"StatementOptionType":"S"},{"StatementOptionName":"NOPAD","StatementOptionHelp":{"#cdata":"Specifies that records written to an external file are not padded with blanks to the length \nthat is specified in the LRECL= option."},"StatementOptionType":"S"},{"StatementOptionName":"PAGESIZE=|PS=","StatementOptionHelp":{"#cdata":"[Syntax: PAGESIZE=value] \n          \nSets the number of lines per page for your reports."},"StatementOptionType":"V"},{"StatementOptionName":"PRINT","StatementOptionHelp":{"#cdata":"Either a reserved fileref that directs the output that is produced by any PUT statements to \nthe same file as the output that is produced by SAS procedures, or an option that specifies \nthat carriage-control characters are placed in the output lines."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Specifies that carriage-control characters are placed in the output lines."},"StatementOptionType":"S"},{"StatementOptionName":"STOPOVER","StatementOptionHelp":{"#cdata":"Stops processing the DATA step immediately if a PUT statement attempts to write \na data item that exceeds the current line length."},"StatementOptionType":"S"},{"StatementOptionName":"TITLES|TITLE","StatementOptionHelp":{"#cdata":"Specifies that the current title lines are printed on the pages of files."},"StatementOptionType":"S"},{"StatementOptionName":"NOTITLES|NOTITLE","StatementOptionHelp":{"#cdata":"Specifies that the current title lines are not printed on the pages of files."},"StatementOptionType":"S"},{"StatementOptionName":"_FILE_=","StatementOptionHelp":{"#cdata":"[Syntax: _FILE_=variable] \n          \nNames a character variable that references the current output buffer of this FILE statement."},"StatementOptionType":"V"},{"StatementOptionName":"BLKSIZE=|BLK=","StatementOptionHelp":{"#cdata":"[Syntax: BLKSIZE=block-size] \n          \n[Windows/UNIX Host Option]\n\nSpecifies the number of bytes that are physically read or written in an I/O operation. \nThe default is 8K. The maximum is 1M (Windows) or 1G-1(UNIX). \n\nIn UNIX, if you specify RECFM=S370VBS, then you should specify BLKSIZE=32760 in order \nto avoid errors with records longer than 255 characters."},"StatementOptionType":"V"},{"StatementOptionName":"BLOCK","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates whether the client \nis to wait if no data is currently available. BLOCK is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"NOBLOCK","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates whether the client \nis to wait if no data is currently available. BLOCK is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"BYTE","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates the type of pipe. \nBYTE is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"MESSAGE","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates the type of pipe. \nBYTE is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"COMMAND","StatementOptionHelp":{"#cdata":"[Windows Host Option]\n        \nAllows remote commands to be issued to DDE server applications that not use the \nSYSTEM topic name."},"StatementOptionType":"S"},{"StatementOptionName":"EOFCONNECT","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes and is valid only when you are defining \nthe server. This option indicates that if an end-of-file (EOF) character is \nreceived from a client, the server should try to connect to the next client."},"StatementOptionType":"S"},{"StatementOptionName":"HOTLINK","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nInstructs SAS to use the DDE HOTLINK."},"StatementOptionType":"S"},{"StatementOptionName":"NOTAB","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nInstructs SAS to ignore tab characters between variables."},"StatementOptionType":"S"},{"StatementOptionName":"IGNOREDOSEOF","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used in the context of I/O operations on variable record format files. When this \noption is specified, any occurrence of ^Z is interpreted as character data and \nnot as an end-of-file marker."},"StatementOptionType":"S"},{"StatementOptionName":"RECFM=","StatementOptionHelp":{"#cdata":"[Windows/UNIX/z/OS Host Option] \n        \nSpecifies the record format of the external file. \n\nUnder z/OS, the following values can be appended to the RECFM values: \n\n  o A specifies that the first byte of each record is an ANSI printer-control character.\n \n  o M specifies that the file is a machine control character file. SAS does not interpret \n    machine code control characters, nor does it create them in output files. \n \n  o S specifies that the file contains spanned records (V), or the file contains standard blocks (F)."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"F","@Value2":"P","@Value3":"S","@Value4":"V|D","@Value5":"N","@Value6":"s370V","@Value7":"S370VB","@Value8":"S370VBS","@Value9":"STREAMLF","@Value10":"FB","@Value11":"VB","@Value12":"U"},"StatementOptionToolTips":{"@ToolTip1":"Fixed-record format","@ToolTip2":"Print format.","@ToolTip3":"Stream-record format.","@ToolTip4":"Variable-record format (the default)","@ToolTip5":"Indicates binary format and causes the file to be treated as a byte stream. If LRECL is not specified,  by default SAS reads 256 bytes at a time from the file.","@ToolTip6":"Indicates the variable S370 record format (V).","@ToolTip7":"Indicates the variable block S370 record format (VB).","@ToolTip8":"Indicates the variable block with spanned records S370 record format (VBS).","@ToolTip9":"[For OpenVMS] Specifies StreamLF record format. Records are delimited by LF.","@ToolTip10":"Specifies fixed-length records, blocked.","@ToolTip11":"Specifies variable-length records, blocked.","@ToolTip12":"Specifies undefined-length records, unblocked."}},{"StatementOptionName":"RETRY=","StatementOptionHelp":{"#cdata":"[Syntax: RETRY=seconds] \n        \n[Windows Host Option]\n\nIs used only in the context of named pipes. This option specifies how long a named \npipe client should wait for a busy pipe. The minimum (and default) value for seconds \nis 10."},"StatementOptionType":"V"},{"StatementOptionName":"SERVER","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes. This option specifies the mode of a \nnamed pipe. The default value is SERVER."},"StatementOptionType":"S"},{"StatementOptionName":"CLIENT","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes. This option specifies the mode of a \nnamed pipe. The default value is SERVER."},"StatementOptionType":"S"},{"StatementOptionName":"TERMSTR=","StatementOptionHelp":{"#cdata":"[Windows/UNIX Host Option] \n        \nSpecifies the end-of-line character for the file. Use this option to share files \nbetween the UNIX and Windows operating environments."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CR","@Value2":"CRLF","@Value3":"LF","@Value4":"NULL","@Value5":"NONE","@Value6":"NL","@Value7":"LFCR","@Value8":"CRNL"},"StatementOptionToolTips":{"@ToolTip1":"Carriage return (CR).","@ToolTip2":"Carriage return (CR) followed by line feed (LF).","@ToolTip3":"Line feed only (the default).","@ToolTip4":"NULL character (0x00).","@ToolTip5":"Record terminators are not used. This parameter provides the same function as FILEDATA=BINARY.","@ToolTip6":"The newline character (x'15') is used as the record terminator. This parameter  provides the same function as FILEDATA=TEXT.","@ToolTip7":"The sequence LF followed by CR is used as the record terminator.","@ToolTip8":"The sequence CR followed by NL is used as the record terminator."}},{"StatementOptionName":"UNBUF","StatementOptionHelp":{"#cdata":"[UNIX Host Option] \n  \nTells SAS not to perform buffered writes to the file on any subsequent FILE statement. \nThis option applies especially when you are reading from or writing to a data collection \ndevice. As explained in SAS Language Reference: Dictionary, it also prevents buffered \nreads on INFILE statements."},"StatementOptionType":"S"},{"StatementOptionName":"ALQ=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the number of blocks initially allocated to an external file when it is created. \nThe value can range from 0 to 2,147,483,647. If the value is 0 (the default), the minimum \nnumber of blocks required for the given file format is used.\n\nThe ALQ= option (allocation quantity) is used for output and corresponds to the FAB$L_ALQ \nfield in OpenVMS Record Management Services (RMS)."},"StatementOptionType":"V"},{"StatementOptionName":"CC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option] \n  \nSpecifies the carriage-control format of the SAS log and the procedure output file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"FORTRAN","@Value2":"PRINT","@Value3":"CR"},"StatementOptionToolTips":{"@ToolTip1":"Indicates FORTRAN carriage-control format. This is the default for print files.","@ToolTip2":"Indicates OpenVMS print format.","@ToolTip3":"Indicates OpenVMS carriage-return, carriage-control format. This is the default  for nonprinting files."}},{"StatementOptionName":"DEQ=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the number of blocks added when OpenVMS RMS automatically extends an external \nfile during a write operation. The value can range from 0 to 65,535. The default value \nis 0, telling OpenVMS RMS to use the process's default value. A large value results in \nfewer file extensions over the life of the file; a small value results in numerous file \nextensions over the life of the file. A file with numerous file extensions might be \nnoncontiguous, thereby slowing record access.\n\nThe DEQ= option (default file extension quantity) is used for output and corresponds to \nthe FAB$W_DEQ field in OpenVMS RMS."},"StatementOptionType":"V"},{"StatementOptionName":"FAC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nOverrides the default file access attributes used for external files. Use this option \nto indicate the level of access you want to allow for an external file. You can allow \nREAD, WRITE, UPDATE, and DELETE access (as well as no access). By default with external \nfiles, files opened for input allow read access, files opened for output allow WRITE \naccess, and files opened for update allow READ and WRITE access. The form of the FAC= \noption is \n\nFAC=access-option-list\n\nwhere access-option-list can be one of the following: \n\nDEL specifies DELETE access.\n \nGET specifies READ access.\n \nPUT specifies WRITE access.\n \nUPD specifies UPDATE access. \n\nYou can combine these values in any order. For example, specifying the following indicates \nthat you want DELETE, READ, and WRITE access: \n\nfac=(del,get,put)"},"StatementOptionType":"V"},{"StatementOptionName":"GSFCC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option] \n  \nSpecifies the file format of graphic stream files (GSF files). When specified in \nthe FILENAME statement, it affects only the GSF files that are created using that \nfileref."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"PRINT","@Value2":"CR","@Value3":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"Creates a GSF file. It is a VFC format file with carriage control set to null. These  files can be used with most utilities with the exception of some file transfer  protocols, such as Kermit. This is the default value for this option.","@ToolTip2":"Creates a carriage return carriage control file.","@ToolTip3":"Creates a file with no carriage control. This format is useful if you plan to download  the file to a personal computer."}},{"StatementOptionName":"KEY=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies which key SAS uses to read the records in an RMS file with indexed organization. \nThe KEY= option is always used with the KEYVALUE= option. "},"StatementOptionType":"V"},{"StatementOptionName":"KEYVALUE=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the key value with which to begin reading an indexed file. "},"StatementOptionType":"V"},{"StatementOptionName":"MBC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the size of the I/O buffers that OpenVMS RMS allocates for a particular file. \nThe value can range from 0 to 127 and represents the number of blocks used for each buffer. \nBy default, this option is set to 0 and the default values for the process are used.\n\nThe MBC= option (multiblock count) is used for both input and output to control the \nallocation for a particular file. If you want to control the allocation size for all \nthe external files used during the current SAS session, you can use the MBC= option in \nevery FILE, FILENAME, or INFILE statement. You can also use the DCL SET RMS_DEFAULT \ncommand to specify a process default, and let the SAS values default to the process's \ndefault values.\n\nThe MBC= option corresponds to the RAB$B_MBC field in OpenVMS RMS or the CONNECT \nMULTIBLOCK_COUNT attribute when using FDL. This option is not supported for DECnet \noperations."},"StatementOptionType":"V"},{"StatementOptionName":"MBF=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the number of I/O buffers you want OpenVMS RMS to allocate for a particular file. \nThe value can range from 0 to 127 and represents the number of buffers used. By default, \nthis option is set to a value of 2. If a value of 0 is specified, the default value for the \nprocess is used.\n\nThe MBF= option (multibuffer count) is used for both input and output to control the number \nof buffers allocated for a particular file. If you want to control the number of buffers \nallocated for all the external files used during the SAS session, you can use the MBF= \noption in every FILE, FILENAME, or INFILE statement. The DCL SET RMS_DEFAULT command can \nbe used to specify a process default. Then, you can let the SAS values default to the \nprocess's default values.\n\nThe MBF= option corresponds to the RAB$B_MBF field in OpenVMS RMS or the CONNECT MULTIBUFFER_COUNT \nattribute when using FDL. This option is not supported for DECnet operations."},"StatementOptionType":"V"},{"StatementOptionName":"SHR=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nOverrides the default file-sharing attributes used for external files. With this option, \nyou can indicate the access level you want to give other users. You can allow READ, WRITE, \nUPDATE, and DELETE access (as well as no access). By default with external files, files \nopened for input allow shared read access, and files opened for output or UPDATE do not \nallow shared access.\n\nHowever, you can allow other users to have READ and WRITE access to a file that you are \nopening for input only. To accomplish this, use the SHR= option. The syntax of the SHR= \noption is \n\nSHR=share-option-list\n\nwhere share-option-list can be one of the following: DEL specifies DELETE access.\n\nGET specifies shared READ access.\n \nNONE specifies no shared access.\n \nPUT specifies shared WRITE access.\n \nUPD specifies UPDATE access.  \n\nYou can combine these values in any order. For example, specifying the following indicates \nthat you want shared DELETE, READ, and WRITE access: \n\nshr=(del,get,put)"},"StatementOptionType":"V"},{"StatementOptionName":"CLOSE=","StatementOptionHelp":{"#cdata":"[z/OS Host Option] \n  \nIndicates how a tape volume is positioned at the end of the DATA step."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"REREAD","@Value2":"LEAVE","@Value3":"REWIND","@Value4":"FREE","@Value5":"DISP"},"StatementOptionToolTips":{"@ToolTip1":"Positions the tape at the logical beginning of the data set.","@ToolTip2":"Positions the tape at the logical end of the data set.","@ToolTip3":"Rewinds the tape to the physical beginning of the volume.","@ToolTip4":"Dynamically deallocates the tape volume.","@ToolTip5":"Is implied by the control language."}},{"StatementOptionName":"CSRC","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies that you want to use the CSRCESRV services (available with z/OS) to compress \ndata on output. For example: \n\n  data _null_;\n     file myfile csrc;\n     put ... ;\n  run;\n\nYou cannot use this option with an external file that has a fixed-length record format."},"StatementOptionType":"S"},{"StatementOptionName":"DCB=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: DCB=fileref \n\nspecifies the fileref of an external file that was referenced in an earlier FILE or \nINFILE statement in the same DATA step. SAS uses that file's RECFM=, LRECL=, and BLKSIZE= \ninformation for the current file."},"StatementOptionType":"V"},{"StatementOptionName":"DEVTYPE=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: DEVTYPE=variable \n\nDefines a character variable (minimum length 24) that SAS sets to the device type. \nSAS obtains the device type by using the z/OS operating environment DEVTYPE macro."},"StatementOptionType":"V"},{"StatementOptionName":"DSCB=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: DSCB=variable \n\nDefines a character variable (minimum length 96) that SAS sets to the Data Set Control \nBlock (DSCB) information from a non-VSAM data set."},"StatementOptionType":"V"},{"StatementOptionName":"JFCB=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: JFCB=variable \n\nDefines a character variable (minimum length 176) that SAS sets to the Job File \nControl Block (JFCB)."},"StatementOptionType":"V"},{"StatementOptionName":"UCBNAME=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: UCBNAME=variable \n\nDefines a character variable (minimum length 3) that SAS sets to the unit name \n(device address), which is derived from information in the unit control block (UCB)."},"StatementOptionType":"V"},{"StatementOptionName":"VOLUME=|VOLUMES=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: VOLUME=variable | VOLUMES=variable \n\nDefines a character variable (with a minimum length of six characters) that SAS sets \nto the tape VOLSER or the disk volume serial number. In the case of a multivolume file, \nthe VOLUME= variable contains the concatenated volume serial numbers up to the length \nof the variable or the first 30 volumes, whichever is less. The value in the VOLUME= \nvariable contains the volume serial number of the first data set in the concatenation \nwhen the file is opened. This serial number changes if you open a subsequent data set \nin the concatenation."},"StatementOptionType":"V"},{"StatementOptionName":"BOM|BOMFILE","StatementOptionHelp":{"#cdata":"[UNIX/z/OS Host Option]\n    \nIncludes a Byte Order Mark when a UNICODE-encoded file is created."},"StatementOptionType":"S"},{"StatementOptionName":"NOBOM|NOBOMFILE","StatementOptionHelp":{"#cdata":"[UNIX/z/OS Host Option]\n    \nSpecifies that a Byte Order Mark is not included when a UNICODE-encoded file is created."},"StatementOptionType":"S"},{"StatementOptionName":"FILEDATA=","StatementOptionHelp":{"#cdata":"[UNIX/z/OS Host Option] \n    \nThe FILEDATA= option specifies that the file being processed is expected to contain \neither binary or text data."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BINARY","@Value2":"TEXT"},"StatementOptionToolTips":{"@ToolTip1":"The FILEDATA= option specifies that the file being processed is expected to contain  binary data.","@ToolTip2":"The FILEDATA= option specifies that the file being processed is expected to contain  text data."}},{"StatementOptionName":"BUFND=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: BUFND=value \n\nIndicates how many data buffers to use for the VSAM data set."},"StatementOptionType":"V"},{"StatementOptionName":"BUFNI=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: BUFNI=value \n\nIndicates how many index buffers to use for the VSAM data set."},"StatementOptionType":"V"},{"StatementOptionName":"FEEDBACK=|FDBK=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: FEEDBACK=variable | FDBK=variable \n\nDefines a numeric variable that SAS sets to the VSAM logical error code. This option \nis similar to the _FDBK_ automatic variable. When SAS sets the FEEDBACK variable, you \nmust reset it to 0 in order to continue."},"StatementOptionType":"V"},{"StatementOptionName":"KEYLEN=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: KEYLEN=variable \n\nSpecifies a numeric SAS variable that, when used with GENKEY, specifies the length \nof the key that is to be compared to the keys in the file."},"StatementOptionType":"V"},{"StatementOptionName":"KEYPOS=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: KEYPOS=variable \n\nIndicates the numeric variable that SAS sets to the position of the VSAM key field. \nThis option enables you to read keys without knowing the key position in advance. \nThis variable is set to the column number (starting from 1)."},"StatementOptionType":"V"},{"StatementOptionName":"PASSWD=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: PASSWD=value \n\nGives the appropriate password for a VSAM data set that has password protection."},"StatementOptionType":"V"},{"StatementOptionName":"RC4STOP","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nStops the DATA step from executing if a return code greater than 4 is returned by \nthe operating environment when the VSAM data set is opened."},"StatementOptionType":"S"},{"StatementOptionName":"RECORDS=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: RECORDS=variable \n\nDefines a numeric variable that SAS sets to the number of logical records in a \nVSAM data set that has been opened for input."},"StatementOptionType":"V"},{"StatementOptionName":"RECORG=","StatementOptionHelp":{"#cdata":"[z/OS Host Option] \n  \nSpecifies the organization of records in a new VSAM data set. Use this option only \nif SMS is active."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"KS","@Value2":"ES","@Value3":"RR","@Value4":"LS"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a VSAM key-sequenced data set.","@ToolTip2":"Specifies a VSAM entry-sequenced data set.","@ToolTip3":"Specifies a VSAM relative-record data set.","@ToolTip4":"Specifies a VSAM linear-space data set."}},{"StatementOptionName":"RESET","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nIndicates that the VSAM file is reset to empty (no records) when it is opened. \nThis option applies only to loading a VSAM data set that has been marked REUSE. \nYou cannot use this option if the data set contains an alternate index."},"StatementOptionType":"S"},{"StatementOptionName":"RRN=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: RRN=variable \n\nDefines a numeric variable that you set to the relative record number (RRN) of the \nrecord that you want to read or write. This option indicates that keyed direct access \nis being used; it is appropriate for RRDS only."},"StatementOptionType":"V"}],"#comment":[{},{},{}]}},{"StatementName":"FORMAT","StatementHelp":{"#cdata":"Associates formats with variables.\n      \nSyntax: \n(1) FORMAT variable-1 <... variable-n> <format> <DEFAULT=default-format>;  \n(2) FORMAT variable-1 <... variable-n> format <DEFAULT=default-format>;  \n(3) FORMAT variable-1 <... variable-n> format variable-1 <... variable-n> format;"},"StatementOptions":{"StatementOption":{"StatementOptionName":"DEFAULT=","StatementOptionHelp":{"#cdata":"[Syntax: DEFAULT=default-format] \n          \nSpecifies a temporary default format for displaying the values of variables that are \nnot listed in the FORMAT statement. These default formats apply only to the current DATA \nstep; they are not permanently associated with variables in the output data set.\n\nA DEFAULT= format specification applies to\n\n  o variables that are not named in a FORMAT or ATTRIB statement \n  o variables that are not permanently associated with a format within a SAS data set \n  o variables that are not written with the explicit use of a format. \n\nDefault: If you omit DEFAULT=, SAS uses BESTw. as the default numeric format and $w. \nas the default character format. \n\nRestriction: Use this option only in a DATA step.  \n\nTip: A DEFAULT= specification can occur anywhere in a FORMAT statement. It can specify \neither a numeric default, a character default, or both."},"StatementOptionType":"V"}}},{"StatementName":"GO TO|GOTO","StatementHelp":{"#cdata":"Syntax: GO TO label | GOTO label;\n      \nJumps to a new statement."},"StatementOptions":null},{"StatementName":"IF","StatementHelp":{"#cdata":"Executes a SAS statement for observations that meet specific conditions. \n\nSyntax: \n(1) IF expression THEN statement; \n    <ELSE statement;> \n(2) IF condition;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"THEN","StatementOptionHelp":{"#cdata":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS \nstatement for observations that are read from a SAS data set, for records in an external file, or \nfor computed values."},"StatementOptionType":"S"},{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"WHEN","StatementOptionHelp":{"#cdata":"WHEN statement in an IF-THEN-WHEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"OUTPUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"GO TO|GOTO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nSyntax: ... GO TO label; | ... GOTO label;\n      \nJumps to a new statement."},"StatementOptionType":"S"},{"StatementOptionName":"PUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"STOP","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nStops execution of the current DATA step."},"StatementOptionType":"S"},{"StatementOptionName":"RETURN","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nStops executing statements at the current point in the DATA step and returns to \na predetermined point in the step. "},"StatementOptionType":"S"},{"StatementOptionName":"CALL","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nSyntax: CALL routine(parameter-1<, ...parameter-n>); \n      \nInvokes a SAS CALL routine."},"StatementOptionType":"S"},{"StatementOptionName":"SET","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct.\n          \nSyntax: SET <SAS-data-set(s) <(data-set-options(s) )>>; \n      \nReads an observation from one or more SAS data sets."},"StatementOptionType":"S"},{"StatementOptionName":"NOT","StatementOptionType":"S"},{"StatementOptionName":"OR","StatementOptionType":"S"},{"StatementOptionName":"AND","StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"ELSE","StatementHelp":{"#cdata":"If the condition in an IF-THEN statement is false and an ELSE statement is present, \nthen the ELSE action is carried out."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"THEN","StatementOptionHelp":{"#cdata":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS \nstatement for observations that are read from a SAS data set, for records in an external file, or \nfor computed values."},"StatementOptionType":"S"},{"StatementOptionName":"IF","StatementOptionHelp":{"#cdata":"Executes a SAS statement for observations that meet specific conditions."},"StatementOptionType":"S"},{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN-ELSE construct."},"StatementOptionType":"S"},{"StatementOptionName":"OUTPUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN-ELSE construct."},"StatementOptionType":"S"},{"StatementOptionName":"NOT","StatementOptionType":"S"},{"StatementOptionName":"OR","StatementOptionType":"S"},{"StatementOptionName":"AND","StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"ERROR","StatementHelp":{"#cdata":"Syntax: ERROR <message>; \n      \nSets _ERROR_ to 1. A message written to the SAS log is optional."},"StatementOptions":null},{"StatementName":"INFILE","StatementHelp":{"#cdata":"Specifies an external file to read with an INPUT statement. \n      \nSyntax: \n(1) INFILE file-specification <device-type><ENCODING=encoding-value> <options>;  \n(2) INFILE file-specification <device-type> <options> <operating-environment-options>; \n(3) INFILE file-specification <ENCODING='encoding-value'><options> <host-options>; \n(4) INFILE DBMS-specifications; \n(5) INFILE DATALINES | CARDS <options>;  \n\nfile-specification \nidentifies a file in one of the following forms: \n\n  fileref \n  specifies the assigned fileref or the allocated ddname of the file. A fileref must \n  conform to the rules for ddnames. That is, it can consist of up to eight letters, \n  numbers, or national characters ($, @, and #) and underscores (_). The first character \n  must be either a letter or a national character.\n\n  fileref(member) \n  specifies a member of a partitioned data set, where the PDS or PDSE is specified by \n  the assigned fileref or allocated ddname.\n\n  If you specify a fileref that is not allocated, then SAS attempts to construct a data \n  set name with the following three qualifiers: \n\n    o the value of the SYSPREF= option (usually the user ID) \n    o the specified fileref \n    o DATA\n\n    If a file is found that has this constructed data set name, then SAS opens it and reads it. \n    The value of the FILEEXT= system option can affect the way SAS interprets PDS and PDSE member names. \n\n  'physical-filename' \n  specifies a physical file, which can be a member of a partitioned data set (PDS), an extended \n  partitioned data set (PDSE), or a UNIX System Services file, using the following syntax:\n\n    o a fully qualified data set name. For example: 'myid.raw.datax'\n    o a fully qualified data set name with a member in parentheses. For example: 'sas.raw.data(mem1)'\n    o a partially qualified data set name with a period preceding it. For example: '.raw.data'\n    o a partially qualified data set name with a period preceding it and a member name in parentheses. \n      For example: '.raw.data(mem1)'\n    o for PDS members, a fully or partially qualified data set name with a wildcard name in parentheses. \n      For example: '.raw.data(mem*)', '.raw.data(*mem1)', '.raw.data(*)'\n    o a UNIX System Services file. For example: '/u/userid/raw' or 'HFS:raw' or '/u/userid/data/*'"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DATALINES|CARDS","StatementOptionHelp":{"#cdata":"Specifies that the input data immediately follows the DATALINES|CARDS statement in the DATA step. \nUsing DATALINES|CARDS allows you to use the INFILE statement options to control how the INPUT \nstatement reads instream data lines."},"StatementOptionType":"S"},{"StatementOptionName":"DATALINES4|CARDS4","StatementOptionHelp":{"#cdata":"Specifies that the input data immediately follows the DATALINES4|CARDS4 statement in the DATA step. \nUsing DATALINES4|CARDS4 allows you to use the INFILE statement options to control how the INPUT \nstatement reads instream data lines."},"StatementOptionType":"S"},{"StatementOptionName":"DISK","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies that the device is a disk drive."},"StatementOptionType":"S"},{"StatementOptionName":"DUMMY","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies that the output to the file is discarded. Tip: Specifying DUMMY can be \nuseful for testing."},"StatementOptionType":"S"},{"StatementOptionName":"GTERM","StatementOptionHelp":{"#cdata":"[device-type] \n          \nIndicates that the output device type is a graphics device that will receive graphics data."},"StatementOptionType":"S"},{"StatementOptionName":"PIPE","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies an unnamed pipe. Note: Some operating environments do not support pipes."},"StatementOptionType":"S"},{"StatementOptionName":"PLOTTER","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies an unbuffered graphics output device."},"StatementOptionType":"S"},{"StatementOptionName":"PRINTER","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies a printer or printer spool file."},"StatementOptionType":"S"},{"StatementOptionName":"TAPE","StatementOptionHelp":{"#cdata":"[device-type] Specifies a tape drive."},"StatementOptionType":"S"},{"StatementOptionName":"TEMP","StatementOptionHelp":{"#cdata":"[device-type] \n          \nCreates a temporary file that exists only as long as the filename is assigned. \n\nRestriction: Do not specify a physical pathname. If you do, SAS returns an error."},"StatementOptionType":"S"},{"StatementOptionName":"TERMINAL","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies the user's terminal."},"StatementOptionType":"S"},{"StatementOptionName":"UPRINTER","StatementOptionType":["S","S"],"StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies a Universal Printing printer definition StatementOptionName."}},{"StatementOptionName":"DLI","StatementOptionHelp":{"#cdata":"[type] \n          \nFor IMS-DL/I databases."},"StatementOptionType":"S"},{"StatementOptionName":"HFS","StatementOptionHelp":{"#cdata":"[type] \n          \nFor UNIX System Services files."},"StatementOptionType":"S"},{"StatementOptionName":"MVS","StatementOptionHelp":{"#cdata":"[type] \n          \nFor z/OS data sets."},"StatementOptionType":"S"},{"StatementOptionName":"VSAM","StatementOptionHelp":{"#cdata":"[type] \n          \nFor VSAM files."},"StatementOptionType":"S"},{"StatementOptionName":"IDMS","StatementOptionHelp":{"#cdata":"[type] \n          \nFor CA-IDMS files."},"StatementOptionType":"S"},{"StatementOptionName":"ISAM","StatementOptionHelp":{"#cdata":"[type] \n          \nFor ISAM files."},"StatementOptionType":"S"},{"StatementOptionName":"VTOC","StatementOptionHelp":{"#cdata":"[type] \n          \nFor a Volume Table of Contents (VTOC)."},"StatementOptionType":"S"},{"StatementOptionName":"COLUMN=|COL=","StatementOptionHelp":{"#cdata":"Names a variable that SAS uses to assign the current column location of the input pointer. \nLike automatic variables, the COLUMN= variable is not written to the data set."},"StatementOptionType":"V"},{"StatementOptionName":"DELIMITER=|DLM=","StatementOptionHelp":{"#cdata":"Specifies an alternate delimiter (other than a blank) to be used for LIST input."},"StatementOptionType":"V"},{"StatementOptionName":"DLMSTR=","StatementOptionHelp":{"#cdata":"Specifies a character string as an alternate delimiter (other than a blank) to be \nused for LIST input"},"StatementOptionType":"V"},{"StatementOptionName":"DLMSOPT=","StatementOptionHelp":{"#cdata":"Specifies whether case-insensitive comparisons will be done, or trailing blanks of the string \ndelimiter will be removed."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'I'","@Value2":"'T'"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that case-insensitive comparisons will be done.","@ToolTip2":"Specifies that trailing blanks of the string delimiter will be removed."}},{"StatementOptionName":"DSD","StatementOptionHelp":{"#cdata":"Specifies that when data values are enclosed in quotation marks, delimiters within the value \nare treated as character data. The DSD option changes how SAS treats delimiters when you use \nLIST input and sets the default delimiter to a comma. When you specify DSD, SAS treats two \nconsecutive delimiters as a missing value and removes quotation marks from character values."},"StatementOptionType":"S"},{"StatementOptionName":"ENCODING=","StatementOptionHelp":{"#cdata":"Specifies the encoding to use when reading from the external file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'warabic'","@Value2":"'wbaltic'","@Value3":"'wlatin2'","@Value4":"'wcyrillic'","@Value5":"'wgreek'","@Value6":"'whebrew'","@Value7":"'wturkish'","@Value8":"'wvietnamese'","@Value9":"'wlatin1'","@Value10":"'utf-8'","@Value11":"'ms-950'","@Value12":"'ms-936'","@Value13":"'ms-932'","@Value14":"'ms-949'"},"StatementOptionToolTips":{"@ToolTip1":"Arabic","@ToolTip2":"Baltic","@ToolTip3":"Central Europe","@ToolTip4":"Cyrillic","@ToolTip5":"Greek","@ToolTip6":"Hebrew","@ToolTip7":"Turkish","@ToolTip8":"Vietnamese","@ToolTip9":"Western","@ToolTip10":"Unicode encoding","@ToolTip11":"Traditional Chinese","@ToolTip12":"Simplified Chinese","@ToolTip13":"Japanese","@ToolTip14":"Korean"}},{"StatementOptionName":"END=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS sets to 1 when the current input data record is the last in \n the input file. Until SAS processes the last data record, the END= variable is set to 0. \n Like automatic variables, this variable is not written to the data set. \n \n Restriction: You cannot use the END= option with UNBUFFERED option, DATALINES or DATALINES4 \n statement, and an INPUT statement that reads multiple input data records."},"StatementOptionType":"V"},{"StatementOptionName":"EOF=","StatementOptionHelp":{"#cdata":"Specifies a statement label that is the object of an implicit GO TO when the INFILE statement \nreaches end of file."},"StatementOptionType":"V"},{"StatementOptionName":"EOV=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS sets to 1 when the first record in a file in a series of \nconcatenated files is read."},"StatementOptionType":"V"},{"StatementOptionName":"EXPANDTABS","StatementOptionHelp":{"#cdata":"Specifies to expand tab characters to the standard tab setting, which is set at 8-column \nintervals that start at column 9."},"StatementOptionType":"S"},{"StatementOptionName":"NOEXPANDTABS","StatementOptionHelp":{"#cdata":"Specifies not to expand tab characters to the standard tab setting, which is set at 8-column \nintervals that start at column 9."},"StatementOptionType":"S"},{"StatementOptionName":"FILENAME=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS sets to the physical StatementOptionName of the currently opened \ninput file. Like automatic variables, the FILENAME= variable is not written to the data set."},"StatementOptionType":"V"},{"StatementOptionName":"FILEVAR=","StatementOptionHelp":{"#cdata":"Specifies a variable whose change in value causes the INFILE statement to close the current input \nfile and open a new one."},"StatementOptionType":"V"},{"StatementOptionName":"FIRSTOBS=","StatementOptionHelp":{"#cdata":"Specifies a record number that SAS uses to begin reading input data records in the input file."},"StatementOptionType":"V"},{"StatementOptionName":"FLOWOVER","StatementOptionHelp":{"#cdata":"Causes an INPUT statement to continue to read the next input data record if it does not \nfind values in the current input line for all the variables in the statement."},"StatementOptionType":"S"},{"StatementOptionName":"LENGTH=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS sets to the length of the current input line."},"StatementOptionType":"V"},{"StatementOptionName":"LINE=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS sets to the line location of the input pointer in the \ninput buffer. Like automatic variables, the LINE= variable is not written to the \ndata set."},"StatementOptionType":"V"},{"StatementOptionName":"LINESIZE=|LS=","StatementOptionHelp":{"#cdata":"Specifies the record length that is available to the INPUT statement."},"StatementOptionType":"V"},{"StatementOptionName":"LRECL=","StatementOptionHelp":{"#cdata":"Specifies the logical record length."},"StatementOptionType":"V"},{"StatementOptionName":"N=","StatementOptionHelp":{"#cdata":"Specifies the number of lines that are available to the input pointer at one time."},"StatementOptionType":"V"},{"StatementOptionName":"MISSOVER","StatementOptionHelp":{"#cdata":"Prevents an INPUT statement from reading a new input data record if it does not \nfind values in the current input line for all the variables in the statement."},"StatementOptionType":"S"},{"StatementOptionName":"MOD","StatementOptionHelp":{"#cdata":"Indicates that data written to the file should be appended to the file"},"StatementOptionType":"S"},{"StatementOptionName":"NEW","StatementOptionHelp":{"#cdata":"Indicates that a new file is to be opened for output. If the file already exists, \nthen it is deleted and re-created."},"StatementOptionType":"S"},{"StatementOptionName":"OLD","StatementOptionHelp":{"#cdata":"Indicates that a new file is to be opened for output. If the file already exists, \nthen the previous contents of the file are replaced."},"StatementOptionType":"S"},{"StatementOptionName":"NBYTE=","StatementOptionHelp":{"#cdata":"Specifies the StatementOptionName of a variable that contains the number of bytes \nto read from a file when you are reading data in stream record format (RECFM=S in \nthe FILENAME statement)."},"StatementOptionType":"V"},{"StatementOptionName":"OBS=","StatementOptionHelp":{"#cdata":"Use OBS= with FIRSTOBS= to read a range of records from the middle of a file. "},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<record-number>","@Value2":"MAX"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the record number of the last record to read in an input file that is read sequentially.","@ToolTip2":"Specifies the maximum number of observations to process, which will be at least as large as the  largest signed, 32-bit integer."}},{"StatementOptionName":"PAD","StatementOptionHelp":{"#cdata":"SAS pads the records that are read from an external file with blanks to the length that is \nspecified in the LRECL= option."},"StatementOptionType":"S"},{"StatementOptionName":"NOPAD","StatementOptionHelp":{"#cdata":"SAS does not pad the records that are read from an external file with blanks to the length that \nis specified in the LRECL= option."},"StatementOptionType":"S"},{"StatementOptionName":"PRINT","StatementOptionHelp":{"#cdata":"Specifies that the input file contains carriage-control characters."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Specifies that the input file does not contain carriage-control characters."},"StatementOptionType":"S"},{"StatementOptionName":"SCANOVER","StatementOptionHelp":{"#cdata":"Causes the INPUT statement to scan the input data records until the character string that \nis specified in the @'character-string' expression is found."},"StatementOptionType":"S"},{"StatementOptionName":"SHAREBUFFERS|SHAREBUFS","StatementOptionHelp":{"#cdata":"Specifies that the FILE statement and the INFILE statement share the same buffer."},"StatementOptionType":"S"},{"StatementOptionName":"START=","StatementOptionHelp":{"#cdata":"Specifies a variable whose value SAS uses as the first column number of the record \nthat the PUT _INFILE_ statement writes. Like automatic variables, the START \nvariable is not written to the data set."},"StatementOptionType":"V"},{"StatementOptionName":"STOPOVER","StatementOptionHelp":{"#cdata":"Causes the DATA step to stop processing if an INPUT statement reaches the end of the \ncurrent record without finding values for all variables in the statement."},"StatementOptionType":"S"},{"StatementOptionName":"TERMSTR=","StatementOptionHelp":{"#cdata":"[Windows/UNIX Host Option] \n        \nSpecifies the end-of-line character for the file. Use this option to share files \nbetween the UNIX and Windows operating environments."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CR","@Value2":"CRLF","@Value3":"LF","@Value4":"NULL","@Value5":"NONE","@Value6":"NL","@Value7":"LFCR","@Value8":"CRNL"},"StatementOptionToolTips":{"@ToolTip1":"Carriage return (CR).","@ToolTip2":"Carriage return (CR) followed by line feed (LF).","@ToolTip3":"Line feed only (the default).","@ToolTip4":"NULL character (0x00).","@ToolTip5":"Record terminators are not used. This parameter provides the same function as FILEDATA=BINARY.","@ToolTip6":"The newline character (x'15') is used as the record terminator. This parameter  provides the same function as FILEDATA=TEXT.","@ToolTip7":"The sequence LF followed by CR is used as the record terminator.","@ToolTip8":"The sequence CR followed by NL is used as the record terminator."}},{"StatementOptionName":"TRUNCOVER","StatementOptionHelp":{"#cdata":"Overrides the default behavior of the INPUT statement when an input data record is shorter \nthan the INPUT statement expects. By default, the INPUT statement automatically reads the \nnext input data record. TRUNCOVER enables you to read variable-length records when some \nrecords are shorter than the INPUT statement expects. Variables without any values assigned \nare set to missing."},"StatementOptionType":"S"},{"StatementOptionName":"UNBUFFERED|UNBUF","StatementOptionHelp":{"#cdata":"Tells SAS not to perform a buffered (\"look ahead\") read."},"StatementOptionType":"S"},{"StatementOptionName":"_INFILE_=","StatementOptionHelp":{"#cdata":"Specifies a character variable that references the contents of the current input buffer \nfor this INFILE statement."},"StatementOptionType":"V"},{"StatementOptionName":"BLKSIZE=|BLK=","StatementOptionHelp":{"#cdata":"[Syntax: BLKSIZE=block-size] \n          \n[Windows/UNIX Host Option]\n\nSpecifies the number of bytes that are physically read or written in an I/O operation. \nThe default is 8K. The maximum is 1M (Windows) or 1G-1(UNIX). \n\nIn UNIX, if you specify RECFM=S370VBS, then you should specify BLKSIZE=32760 in order \nto avoid errors with records longer than 255 characters."},"StatementOptionType":"V"},{"StatementOptionName":"BLOCK","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates whether the client \nis to wait if no data is currently available. BLOCK is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"NOBLOCK","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates whether the client \nis to wait if no data is currently available. BLOCK is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"BYTE","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates the type of pipe. \nBYTE is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"MESSAGE","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates the type of pipe. \nBYTE is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"EOFCONNECT","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes and is valid only when you are defining \nthe server. This option indicates that if an end-of-file (EOF) character is \nreceived from a client, the server should try to connect to the next client."},"StatementOptionType":"S"},{"StatementOptionName":"HOTLINK","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nInstructs SAS to use the DDE HOTLINK."},"StatementOptionType":"S"},{"StatementOptionName":"NOTAB","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nInstructs SAS to ignore tab characters between variables."},"StatementOptionType":"S"},{"StatementOptionName":"IGNOREDOSEOF","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used in the context of I/O operations on variable record format files. When this \noption is specified, any occurrence of ^Z is interpreted as character data and \nnot as an end-of-file marker."},"StatementOptionType":"S"},{"StatementOptionName":"RECFM=","StatementOptionHelp":{"#cdata":"[Windows/UNIX Host Option] \n        \nSpecifies the record format of the external file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"F","@Value2":"P","@Value3":"S","@Value4":"V|D","@Value5":"N","@Value6":"s370V","@Value7":"S370VB","@Value8":"S370VBS","@Value9":"STREAMLF"},"StatementOptionToolTips":{"@ToolTip1":"Fixed-record format","@ToolTip2":"Print format.","@ToolTip3":"Stream-record format.","@ToolTip4":"Variable-record format (the default)","@ToolTip5":"Indicates binary format and causes the file to be treated as a byte stream. If LRECL is not specified,  by default SAS reads 256 bytes at a time from the file.","@ToolTip6":"Indicates the variable S370 record format (V).","@ToolTip7":"Indicates the variable block S370 record format (VB).","@ToolTip8":"Indicates the variable block with spanned records S370 record format (VBS).","@ToolTip9":"[For OpenVMS] Specifies StreamLF record format. Records are delimited by LF."}},{"StatementOptionName":"RETRY=","StatementOptionHelp":{"#cdata":"[Syntax: RETRY=seconds] \n        \n[Windows Host Option]\n\nIs used only in the context of named pipes. This option specifies how long a named \npipe client should wait for a busy pipe. The minimum (and default) value for seconds \nis 10."},"StatementOptionType":"V"},{"StatementOptionName":"SERVER","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes. This option specifies the mode of a \nnamed pipe. The default value is SERVER."},"StatementOptionType":"S"},{"StatementOptionName":"CLIENT","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes. This option specifies the mode of a \nnamed pipe. The default value is SERVER."},"StatementOptionType":"S"},{"StatementOptionName":"FAC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nOverrides the default file access attributes used for external files. Use this option \nto indicate the level of access you want to allow for an external file. You can allow \nREAD, WRITE, UPDATE, and DELETE access (as well as no access). By default with external \nfiles, files opened for input allow read access, files opened for output allow WRITE \naccess, and files opened for update allow READ and WRITE access. The form of the FAC= \noption is \n\nFAC=access-option-list\n\nwhere access-option-list can be one of the following: \n\nDEL specifies DELETE access.\n \nGET specifies READ access.\n \nPUT specifies WRITE access.\n \nUPD specifies UPDATE access. \n\nYou can combine these values in any order. For example, specifying the following indicates \nthat you want DELETE, READ, and WRITE access: \n\nfac=(del,get,put)"},"StatementOptionType":"V"},{"StatementOptionName":"KEY=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies which key SAS uses to read the records in an RMS file with indexed organization. \nThe KEY= option is always used with the KEYVALUE= option. "},"StatementOptionType":"V"},{"StatementOptionName":"KEYVALUE=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the key value with which to begin reading an indexed file. "},"StatementOptionType":"V"},{"StatementOptionName":"MBC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the size of the I/O buffers that OpenVMS RMS allocates for a particular file. \nThe value can range from 0 to 127 and represents the number of blocks used for each buffer. \nBy default, this option is set to 0 and the default values for the process are used.\n\nThe MBC= option (multiblock count) is used for both input and output to control the \nallocation for a particular file. If you want to control the allocation size for all \nthe external files used during the current SAS session, you can use the MBC= option in \nevery FILE, FILENAME, or INFILE statement. You can also use the DCL SET RMS_DEFAULT \ncommand to specify a process default, and let the SAS values default to the process's \ndefault values.\n\nThe MBC= option corresponds to the RAB$B_MBC field in OpenVMS RMS or the CONNECT \nMULTIBLOCK_COUNT attribute when using FDL. This option is not supported for DECnet \noperations."},"StatementOptionType":"V"},{"StatementOptionName":"MBF=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the number of I/O buffers you want OpenVMS RMS to allocate for a particular file. \nThe value can range from 0 to 127 and represents the number of buffers used. By default, \nthis option is set to a value of 2. If a value of 0 is specified, the default value for the \nprocess is used.\n\nThe MBF= option (multibuffer count) is used for both input and output to control the number \nof buffers allocated for a particular file. If you want to control the number of buffers \nallocated for all the external files used during the SAS session, you can use the MBF= \noption in every FILE, FILENAME, or INFILE statement. The DCL SET RMS_DEFAULT command can \nbe used to specify a process default. Then, you can let the SAS values default to the \nprocess's default values.\n\nThe MBF= option corresponds to the RAB$B_MBF field in OpenVMS RMS or the CONNECT MULTIBUFFER_COUNT \nattribute when using FDL. This option is not supported for DECnet operations."},"StatementOptionType":"V"},{"StatementOptionName":"SHR=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nOverrides the default file-sharing attributes used for external files. With this option, \nyou can indicate the access level you want to give other users. You can allow READ, WRITE, \nUPDATE, and DELETE access (as well as no access). By default with external files, files \nopened for input allow shared read access, and files opened for output or UPDATE do not \nallow shared access.\n\nHowever, you can allow other users to have READ and WRITE access to a file that you are \nopening for input only. To accomplish this, use the SHR= option. The syntax of the SHR= \noption is \n\nSHR=share-option-list\n\nwhere share-option-list can be one of the following: DEL specifies DELETE access.\n\nGET specifies shared READ access.\n \nNONE specifies no shared access.\n \nPUT specifies shared WRITE access.\n \nUPD specifies UPDATE access.  \n\nYou can combine these values in any order. For example, specifying the following indicates \nthat you want shared DELETE, READ, and WRITE access: \n\nshr=(del,get,put)"},"StatementOptionType":"V"},{"StatementOptionName":"FILEDATA=","StatementOptionHelp":{"#cdata":"[UNIX/z/OS Host Option] \n    \nThe FILEDATA= option specifies that the file being processed is expected to contain \neither binary or text data."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BINARY","@Value2":"TEXT"},"StatementOptionToolTips":{"@ToolTip1":"The FILEDATA= option specifies that the file being processed is expected to contain  binary data.","@ToolTip2":"The FILEDATA= option specifies that the file being processed is expected to contain  text data."}},{"StatementOptionName":"BACKWARD|BKWD","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nCauses SAS to read the VSAM data set backwards (INFILE only)"},"StatementOptionType":"S"},{"StatementOptionName":"BUFND=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: BUFND=value \n\nIndicates how many data buffers to use for the VSAM data set."},"StatementOptionType":"V"},{"StatementOptionName":"BUFNI=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: BUFNI=value \n\nIndicates how many index buffers to use for the VSAM data set."},"StatementOptionType":"V"},{"StatementOptionName":"CONTROLINTERVAL|CTLINTV|CNV","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nIndicates that you want to read physical VSAM control interval records rather than \nlogical records. This option is typically used for diagnostic purposes (INFILE only)."},"StatementOptionType":"S"},{"StatementOptionName":"ERASE=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: ERASE=variable \n\nDefines a numeric SAS variable that you must set to 1 when you want to erase \na VSAM record (INFILE only)."},"StatementOptionType":"V"},{"StatementOptionName":"FEEDBACK=|FDBK=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: FEEDBACK=variable | FDBK=variable \n\nDefines a numeric variable that SAS sets to the VSAM logical error code. This option \nis similar to the _FDBK_ automatic variable. When SAS sets the FEEDBACK variable, you \nmust reset it to 0 in order to continue."},"StatementOptionType":"V"},{"StatementOptionName":"GENKEY","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nCauses SAS to use the KEY= variable as the leading portion of a record's key. VSAM \nretrieves the first record whose key matches the generic key (INFILE only)."},"StatementOptionType":"S"},{"StatementOptionName":"KEYLEN=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: KEYLEN=variable \n\nSpecifies a numeric SAS variable that, when used with GENKEY, specifies the length \nof the key that is to be compared to the keys in the file."},"StatementOptionType":"V"},{"StatementOptionName":"KEYPOS=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: KEYPOS=variable \n\nIndicates the numeric variable that SAS sets to the position of the VSAM key field. \nThis option enables you to read keys without knowing the key position in advance. \nThis variable is set to the column number (starting from 1)."},"StatementOptionType":"V"},{"StatementOptionName":"NRLS","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSpecifies not to use record-level sharing (RLS) to open an RLS-eligible data set (INFILE only)."},"StatementOptionType":"S"},{"StatementOptionName":"PASSWD=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: PASSWD=value \n\nGives the appropriate password for a VSAM data set that has password protection."},"StatementOptionType":"V"},{"StatementOptionName":"RBA=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: RBA=variable \n\nSpecifies a numeric variable that you set to the relative byte address (RBA) of \nthe data record that you want to read. The RBA= option indicates that addressed \ndirect access is being used; it is appropriate for KSDS and ESDS. If you specify \nthe CONTROLINTERVAL option, you can use the RBA= option to access control records \nin an RRDS (INFILE only)."},"StatementOptionType":"V"},{"StatementOptionName":"RC4STOP","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nStops the DATA step from executing if a return code greater than 4 is returned by \nthe operating environment when the VSAM data set is opened."},"StatementOptionType":"S"},{"StatementOptionName":"RECORDS=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: RECORDS=variable \n\nDefines a numeric variable that SAS sets to the number of logical records in a \nVSAM data set that has been opened for input."},"StatementOptionType":"V"},{"StatementOptionName":"RECORG=","StatementOptionHelp":{"#cdata":"[z/OS Host Option] \n  \nSpecifies the organization of records in a new VSAM data set. Use this option only \nif SMS is active."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"KS","@Value2":"ES","@Value3":"RR","@Value4":"LS"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a VSAM key-sequenced data set.","@ToolTip2":"Specifies a VSAM entry-sequenced data set.","@ToolTip3":"Specifies a VSAM relative-record data set.","@ToolTip4":"Specifies a VSAM linear-space data set."}},{"StatementOptionName":"RESET","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nIndicates that the VSAM file is reset to empty (no records) when it is opened. \nThis option applies only to loading a VSAM data set that has been marked REUSE. \nYou cannot use this option if the data set contains an alternate index."},"StatementOptionType":"S"},{"StatementOptionName":"RRN=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: RRN=variable \n\nDefines a numeric variable that you set to the relative record number (RRN) of the \nrecord that you want to read or write. This option indicates that keyed direct access \nis being used; it is appropriate for RRDS only."},"StatementOptionType":"V"},{"StatementOptionName":"SEQUENTIAL","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSpecifies sequential VSAM record retrieval when either the RBA= (for an ESDS) or \nthe RRN= option (for an RRDS) is specified (INFILE only)."},"StatementOptionType":"S"},{"StatementOptionName":"SKIP","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nIndicates skip-sequential processing of VSAM files. Skip-sequential processing finds \nthe first record whose value is the same as the value specified by the KEY= option; \nrecords are read sequentially thereafter (INFILE only)."},"StatementOptionType":"S"},{"StatementOptionName":"UPDATE=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: UPDATE=variable \n\nDefines a numeric SAS variable that indicates that not every record that it reads \nis to be updated. Use this option when you are updating records in a VSAM data set \n(INFILE only). When an INFILE and a FILE statement reference the same VSAM data set, \nrecords are retrieved for update by default."},"StatementOptionType":"V"},{"StatementOptionName":"CCHHR=","StatementOptionHelp":{"#cdata":"[VTOC Option under z/OS] \n          \nSyntax: CCHHR=variable \n\nspecifies a character variable to which the physical address (cylinder head record) \nof a record is returned. This applies to files on CKD disks only."},"StatementOptionType":"V"},{"StatementOptionName":"CLOSE=","StatementOptionHelp":{"#cdata":"[z/OS Host Option] \n  \nIndicates how a tape volume is positioned at the end of the DATA step."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"REREAD","@Value2":"LEAVE","@Value3":"REWIND","@Value4":"FREE","@Value5":"DISP"},"StatementOptionToolTips":{"@ToolTip1":"Positions the tape at the logical beginning of the data set.","@ToolTip2":"Positions the tape at the logical end of the data set.","@ToolTip3":"Rewinds the tape to the physical beginning of the volume.","@ToolTip4":"Dynamically deallocates the tape volume.","@ToolTip5":"Is implied by the control language."}},{"StatementOptionName":"CSRC","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies that you want to use the CSRCESRV services (available with z/OS) to compress \ndata on output. For example: \n\n  data _null_;\n     file myfile csrc;\n     put ... ;\n  run;\n\nYou cannot use this option with an external file that has a fixed-length record format."},"StatementOptionType":"S"},{"StatementOptionName":"DCB=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: DCB=fileref \n\nspecifies the fileref of an external file that was referenced in an earlier FILE or \nINFILE statement in the same DATA step. SAS uses that file's RECFM=, LRECL=, and BLKSIZE= \ninformation for the current file."},"StatementOptionType":"V"},{"StatementOptionName":"CVAF","StatementOptionHelp":{"#cdata":"[VTOC Option under z/OS] \n  \nTells SAS to use the Common VTOC Access Facility (CVAF) of the IBM program product \nData Facility/Device Support (DF/DS) for indexed VTOCs. If the VTOC is not indexed, \nor if your installation does not have CVAF, this option is ignored."},"StatementOptionType":"S"}],"#comment":[{},{},{}]}},{"StatementName":"INFORMAT","StatementHelp":{"#cdata":"Associates informats with variables. \n      \nSyntax: \n(1) INFORMAT variable-1 <...variable-n> <informat>;  \n(2) INFORMAT <variable-1> <... variable-n> <DEFAULT=default-informat>;  \n(3) INFORMAT variable-1 <...variable-n> informat <DEFAULT=default-informat>;"},"StatementOptions":{"StatementOption":{"StatementOptionName":"DEFAULT=","StatementOptionHelp":{"#cdata":"[Syntax: DEFAULT= default-informat] \n          \nSpecifies a temporary default informat for reading values of the variables that \nare listed in the INFORMAT statement. If no variable is specified, then the DEFAULT= \ninformat specification applies a temporary default informat for reading values of all \nthe variables of that type included in the DATA step. Numeric informats are applied \nto numeric variables, and character informats are applied to character variables. \nThese default informats apply only to the current DATA step. \n\nA DEFAULT= informat specification applies to\n\n  o variables that are not named in an INFORMAT or ATTRIB statement \n  o variables that are not permanently associated with an informat within a SAS data set \n  o variables that are not read with an explicit informat in the current DATA step.\n\nDefault: If you omit DEFAULT=, SAS uses w.d as the default numeric informat and $w. \nas the default character informat. \n\nRestriction: Use this argument only in a DATA step.  \n\nTip: A DEFAULT= specification can occur anywhere in an INFORMAT statement. It can \nspecify either a numeric default, a character default, or both."},"StatementOptionType":"V"}}},{"StatementName":"INPUT","StatementHelp":{"#cdata":"Syntax: INPUT <specification(s)><@|@@>; \n      \nDescribes the arrangement of values in the input data record and assigns input values to the \ncorresponding SAS variables."},"StatementOptions":null},{"StatementName":"KEEP","StatementHelp":{"#cdata":"Syntax: KEEP variable-list; \n      \nSpecifies the variables to include in output SAS data sets."},"StatementOptions":null},{"StatementName":"LABEL","StatementHelp":{"#cdata":"Assigns descriptive labels to variables.\n      \nSyntax: \n(1) LABEL variable-1=label-1 ... <variable-n=label-n>;  \n\n(2) LABEL variable-1=' ' ... <variable-n=' '>;"},"StatementOptions":null},{"StatementName":"LEAVE","StatementHelp":{"#cdata":"Syntax: LEAVE; \n      \nStops processing the current loop and resumes with the next statement in the sequence."},"StatementOptions":null},{"StatementName":"LENGTH","StatementHelp":{"#cdata":"Syntax: LENGTH variable-specification(s)<DEFAULT=n>; \n      \nSpecifies the number of bytes for storing variables."},"StatementOptions":{"StatementOption":{"StatementOptionName":"DEFAULT=","StatementOptionHelp":{"#cdata":"[Syntax: DEFAULT=n] \n          \nChanges the default number of bytes that SAS uses to store the values of any newly created \nnumeric variables."},"StatementOptionType":"V"}}},{"StatementName":"LINK","StatementHelp":{"#cdata":"Syntax: LINK label; \n      \nDirects program execution immediately to the statement label that is specified and, if followed \nby a RETURN statement, returns execution to the statement that follows the LINK statement."},"StatementOptions":null},{"StatementName":"LIST","StatementHelp":{"#cdata":"Syntax: LIST; \n      \nWrites to the SAS log the input data record for the observation that is being processed."},"StatementOptions":null},{"StatementName":"LOCK","StatementHelp":{"#cdata":"Syntax: LOCK libref<.member-name<.member-type | .entry-name.entry-type>> <LIST | QUERY | SHOW | CLEAR> ; \n      \nAcquires and releases an exclusive lock on an existing SAS file."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"LIST|QUERY|SHOW","StatementOptionHelp":{"#cdata":"Writes to the SAS log whether you have an exclusive lock on the specified SAS file."},"StatementOptionType":"S"},{"StatementOptionName":"CLEAR","StatementOptionHelp":{"#cdata":"Releases a lock on the specified SAS file that was acquired by using the LOCK statement in your \nSAS session."},"StatementOptionType":"S"}]}},{"StatementName":"MERGE","StatementHelp":{"#cdata":"Syntax: MERGE SAS-data-set-1 <(data-set-options)> \n  SAS-data-set-2 <(data-set-options) > \n  <...SAS-data-set-n<(data-set-options)>> \n  <END=variable>; \n  \nJoins observations from two or more SAS data sets into a single observation."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"END=","StatementOptionHelp":{"#cdata":"[Syntax: END=variable] \n          \nNames and creates a temporary variable that contains an end-of-file indicator."},"StatementOptionType":"V"},{"StatementOptionName":"ALTER=","StatementOptionType":"V"},{"StatementOptionName":"BUFNO=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"hexX","@Value4":"MIN","@Value5":"MAX"}},{"StatementOptionName":"BUFSIZE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"hexX","@Value6":"MIN","@Value7":"MAX"}},{"StatementOptionName":"CNTLLEV=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"LIB","@Value2":"MEM","@Value3":"REC"}},{"StatementOptionName":"COMPRESS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"NO","@Value2":"YES","@Value3":"CHAR","@Value4":"BINARY"}},{"StatementOptionName":"DLDMGACTION=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"FAIL","@Value2":"ABORT","@Value3":"REPAIR","@Value4":"NOINDEX","@Value5":"PROMPT"}},{"StatementOptionName":"ENCRYPT=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"ENCRYPTKEY=","StatementOptionType":"V"},{"StatementOptionName":"GENMAX=","StatementOptionType":"V"},{"StatementOptionName":"GENNUM=","StatementOptionType":"V"},{"StatementOptionName":"INDEX=","StatementOptionType":"V"},{"StatementOptionName":"LABEL=","StatementOptionType":"V"},{"StatementOptionName":"OUTREP=","StatementOptionType":"V"},{"StatementOptionName":"PW=","StatementOptionType":"V"},{"StatementOptionName":"PWREQ=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"READ=","StatementOptionType":"V"},{"StatementOptionName":"REPEMPTY=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"REPLACE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"REUSE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SPILL=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SORTEDBY=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"by-clause < / collate-name>","@Value2":"_NULL_"}},{"StatementOptionName":"TOBSNO=","StatementOptionType":"V"},{"StatementOptionName":"TRANTAB=","StatementOptionType":"V"},{"StatementOptionName":"TYPE=","StatementOptionType":"V"},{"StatementOptionName":"WRITE=","StatementOptionType":"V"},{"StatementOptionName":"FILECLOSE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"DISP","@Value2":"LEAVE","@Value3":"REREAD","@Value4":"REWIND"}},{"StatementOptionName":"FIRSTOBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"hexX","@Value6":"MIN","@Value7":"MAX"}},{"StatementOptionName":"IN=","StatementOptionType":"V"},{"StatementOptionName":"OBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"nT","@Value6":"hexX","@Value7":"MIN","@Value8":"MAX"}},{"StatementOptionName":"POINTOBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"WHERE=","StatementOptionType":"V"},{"StatementOptionName":"WHEREUP=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SGIO=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"IDXNAME=","StatementOptionType":"V"},{"StatementOptionName":"IDXWHERE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"DROP=","StatementOptionType":"V"},{"StatementOptionName":"KEEP=","StatementOptionType":"V"},{"StatementOptionName":"RENAME=","StatementOptionType":"V"},{"StatementOptionName":"EXTENDOBSCOUNTER=","StatementOptionType":"V"}],"#comment":{}}},{"StatementName":"MISSING","StatementHelp":{"#cdata":"Syntax: MISSING character(s); \n      \nAssigns characters in your input data to represent special missing values for numeric data."},"StatementOptions":null},{"StatementName":"MODIFY","StatementHelp":{"#cdata":"Replaces, deletes, and appends observations in an existing SAS data set in place but does not \ncreate an additional copy.\n      \nSyntax: \n(1) MODIFY master-data-set <(data-set-option(s))> transaction-data-set <(data-set-option(s))> \n    <NOBS=variable> <END=variable> <UPDATEMODE=MISSINGCHECK| \n    NOMISSINGCHECK>; \n    BY by-variable;  \n\n(2) MODIFY master-data-set <(data-set-option(s))> KEY=index </ UNIQUE> <NOBS=variable> <END=variable> ;  \n\n(3) MODIFY master-data-set <(data-set-option(s))> <NOBS=variable> POINT=variable;  \n\n(4) MODIFY master-data-set <(data-set-option(s))> <NOBS=variable> <END=variable>; "},"StatementOptions":{"StatementOption":[{"StatementOptionName":"END=","StatementOptionHelp":{"#cdata":"[Syntax: END=variable] \n          \nCreates and names a temporary variable that contains an end-of-file indicator."},"StatementOptionType":"V"},{"StatementOptionName":"KEY=","StatementOptionHelp":{"#cdata":"[Syntax: KEY=index] \n          \nSpecifies a simple or composite index of the SAS data file that is being modified. \nThe KEY= argument retrieves observations from that SAS data file based on index \nvalues that are supplied by like-named variables in another source of information."},"StatementOptionType":"V"},{"StatementOptionName":"NOBS=","StatementOptionHelp":{"#cdata":"[Syntax: NOBS=variable] \n          \nCreates and names a temporary variable whose value is usually the total number \nof observations in the input data set. For certain SAS views, SAS cannot determine \nthe number of observations. In these cases, SAS sets the value of the NOBS= variable \nto the largest positive integer value available in the operating environment."},"StatementOptionType":"V"},{"StatementOptionName":"POINT=","StatementOptionHelp":{"#cdata":"[Syntax: POINT=variable] \n          \nReads SAS data sets using random (direct) access by observation number. variable \nnames a variable whose value is the number of the observation to read. The POINT= \nvariable is available anywhere in the DATA step, but it is not added to any SAS \ndata set."},"StatementOptionType":"V"},{"StatementOptionName":"UNIQUE","StatementOptionHelp":{"#cdata":"Causes a KEY= search always to begin at the top of the index for the data file being modified."},"StatementOptionType":"S"},{"StatementOptionName":"UPDATEMODE=","StatementOptionHelp":{"#cdata":"Specifies whether missing variable values in a transaction data set are to be allowed to replace \nexisting variable values in a master data set."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"MISSINGCHECK","@Value2":"NOMISSINGCHECK"},"StatementOptionToolTips":{"@ToolTip1":"Prevents missing variable values in a transaction data set from replacing values in a master data set.","@ToolTip2":"Allows missing variable values in a transaction data set to replace values in a master data set by  preventing the check from being performed."}},{"StatementOptionName":"CUREOBS=","StatementOptionHelp":{"#cdata":"[Syntax: CUROBS=variable]  \n          \nCreates and names a variable that contains the observation number that was just read from the data set."},"StatementOptionType":"V"},{"StatementOptionName":"KEYRESET=","StatementOptionHelp":{"#cdata":"[Syntax: KEYRESET=variable] \n          \nControls whether a KEY= search should begin at the top of the index for the data set that is being read. \nWhen the value of the KEYRESET variable is 1, the index lookup begins at the top of the index. When the \nvalue of the KEYRESET variable is 0, the index lookup is not reset and the lookup continues where the \nprior lookup ended. \n\nInteraction:\nThe KEYRESET= option is similar to the UNIQUE option, except the KEYRESET= option enables you to determine \nwhen the KEY= search should begin at the top of the index again."},"StatementOptionType":"V"}]}},{"StatementName":"PAGE","StatementHelp":{"#cdata":"Syntax: PAGE; \n      \nSkips to a new page in the SAS log."},"StatementOptions":null},{"StatementName":"PUT","StatementHelp":{"#cdata":"Syntax: PUT <specification(s)><_ODS_><@|@@>; \n      \nWrites lines to the SAS log, to the SAS output window, or to an external location that is \nspecified in the most recent FILE statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"_INFILE_","StatementOptionHelp":{"#cdata":"Writes the last input data record that is read either from the current input file or from the data \nlines that follow a DATELINES statement."},"StatementOptionType":"S"},{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Writes the values of all variables, which includes automatic variables, that are defined in the \ncurrent DATA step by using named output."},"StatementOptionType":"S"},{"StatementOptionName":"_ODS_","StatementOptionHelp":{"#cdata":"Moves data values for all columns (as defined by the ODS option in the FILE statement) into \na special buffer, from which it is eventually written to the data component. The ODS option \nin the FILE statement defines the structure of the data component that holds the results of \nthe DATA step."},"StatementOptionType":"S"},{"StatementOptionName":"OVERPRINT","StatementOptionHelp":{"#cdata":"Causes the values that follow the keyword OVERPRINT to print on the most recently written \noutput line."},"StatementOptionType":"S"},{"StatementOptionName":"_BLANKPAGE_","StatementOptionHelp":{"#cdata":"Advances the pointer to the first line of a new page, even when the pointer is positioned \non the first line and the first column of a new page."},"StatementOptionType":"S"},{"StatementOptionName":"_PAGE_","StatementOptionHelp":{"#cdata":"Advances the pointer to the first line of a new page. SAS automatically begins a new \npage when a line exceeds the current PAGESIZE= value."},"StatementOptionType":"S"}]}},{"StatementName":"PUTLOG","StatementHelp":{"#cdata":"Syntax: PUTLOG 'message'; \n      \nWrites a message to the SAS log."},"StatementOptions":null},{"StatementName":"RENAME","StatementHelp":{"#cdata":"Syntax: RENAME old-name-1=new-name-1 ... <old-name-n=new-name-n>; \n      \nSpecifies new names for variables in output SAS data sets. "},"StatementOptions":null},{"StatementName":"REPLACE","StatementHelp":{"#cdata":"Syntax: REPLACE <data-set-name-1><...data-set-name-n>; \n      \nReplaces an observation in the same location."},"StatementOptions":null},{"StatementName":"RETAIN","StatementHelp":{"#cdata":"Syntax: RETAIN <element-list(s) <initial-value(s) | \n  (initial-value-1) | (initial-value-list-1) > \n  < ... element-list-n <initial-value-n | \n  (initial-value-n ) | (initial-value-list-n)>>>; \n  \nCauses a variable that is created by an INPUT or assignment statement to retain its value from \none iteration of the DATA step to the next."},"StatementOptions":null},{"StatementName":"RETURN","StatementHelp":{"#cdata":"Syntax: RETURN; \n      \nStops executing statements at the current point in the DATA step and returns to a predetermined \npoint in the step."},"StatementOptions":null},{"StatementName":"SELECT","StatementHelp":{"#cdata":"Executes one of several statements or groups of statements.\n      \nSyntax: \nSELECT <(select-expression)>;  \n  WHEN-1 (when-expression-1 <..., when-expression-n>) statement;  \n    <... WHEN-n (when-expression-1 <..., when-expression-n>) statement;>  \n      <OTHERWISE statement;> \nEND;"},"StatementOptions":null},{"StatementName":"WHEN","StatementHelp":{"#cdata":"SELECT groups contain WHEN statements that identify SAS statements that are executed when a particular \ncondition is true. Use at least one WHEN statement in a SELECT group.\n      \nSyntax: WHEN-1 (when-expression-1 <..., when-expression-n>) statement; "},"StatementOptions":{"StatementOption":{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement."},"StatementOptionType":"S"}}},{"StatementName":"OTHERWISE","StatementHelp":{"#cdata":"An optional OTHERWISE statement specifies a statement to be executed if no WHEN condition is met. \nAn END statement ends a SELECT group.\n\n      \nSyntax: \n  <... WHEN-n (when-expression-1 <..., when-expression-n>) statement;>  \n    <OTHERWISE statement;>"},"StatementOptions":{"StatementOption":{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement."},"StatementOptionType":"S"}}},{"StatementName":"SET","StatementHelp":{"#cdata":"Syntax: SET <SAS-data-set(s) <(data-set-options(s) )>> <options>; \n      \nReads an observation from one or more SAS data sets."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"END=","StatementOptionHelp":{"#cdata":"[Syntax: END=variable] \n          \nCreates and names a temporary variable that contains an end-of-file indicator. \nThe variable, which is initialized to zero, is set to 1 when SET reads the last \nobservation of the last data set listed. This variable is not added to any new \ndata set."},"StatementOptionType":"V"},{"StatementOptionName":"KEY=","StatementOptionHelp":{"#cdata":"[Syntax: KEY=index</UNIQUE>] \n          \nProvides nonsequential access to observations in a SAS data set, which \nare based on the value of an index variable or a key."},"StatementOptionType":"V"},{"StatementOptionName":"INDSNAME=","StatementOptionHelp":{"#cdata":"[Syntax: INDSNAME=variable] \n          \nCreates and names a variable that stores the name of the SAS data set from which \nthe current observation is read. The stored name can be a data set name or a physical \nname. The physical name is the name by which the operating environment recognizes the \nfile."},"StatementOptionType":"V"},{"StatementOptionName":"NOBS=","StatementOptionHelp":{"#cdata":"[Syntax: NOBS=variable] \n          \nCreates and names a temporary variable whose value is usually the total number \nof observations in the input data set or data sets. If more than one data set \nis listed in the SET statement, NOBS= the total number of observations in the \ndata sets that are listed. The number of observations includes those observations \nthat are marked for deletion but are not yet deleted."},"StatementOptionType":"V"},{"StatementOptionName":"OPEN=","StatementOptionHelp":{"#cdata":"Allows you to delay the opening of any concatenated SAS data sets until they are ready to be processed."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"IMMEDIATE","@Value2":"DEFER"},"StatementOptionToolTips":{"@ToolTip1":"During the compilation phase, opens all data sets that are listed in the SET statement.","@ToolTip2":"Opens the first data set during the compilation phase, and opens subsequent data  sets during the execution phase. When the DATA step reads and processes all  observations in a data set, it closes the data set and opens the next data  set in the list."}},{"StatementOptionName":"POINT=","StatementOptionHelp":{"#cdata":"[Syntax: POINT=variable] \n          \nSpecifies a temporary variable whose numeric value determines which observation \nis read. POINT= causes the SET statement to use random (direct) access to read \na SAS data set."},"StatementOptionType":"V"},{"StatementOptionName":"UNIQUE","StatementOptionType":"S"},{"StatementOptionName":"CUREOBS=","StatementOptionHelp":{"#cdata":"[Syntax: CUROBS=variable]  \n          \nCreates and names a variable that contains the observation number that was just read from the data set."},"StatementOptionType":"V"},{"StatementOptionName":"KEYRESET=","StatementOptionHelp":{"#cdata":"[Syntax: KEYRESET=variable] \n          \nControls whether a KEY= search should begin at the top of the index for the data set that is being read. \nWhen the value of the KEYRESET variable is 1, the index lookup begins at the top of the index. When the \nvalue of the KEYRESET variable is 0, the index lookup is not reset and the lookup continues where the \nprior lookup ended. \n\nInteraction:\nThe KEYRESET= option is similar to the UNIQUE option, except the KEYRESET= option enables you to determine \nwhen the KEY= search should begin at the top of the index again."},"StatementOptionType":"V"},{"StatementOptionName":"ALTER=","StatementOptionType":"V"},{"StatementOptionName":"BUFNO=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"hexX","@Value4":"MIN","@Value5":"MAX"}},{"StatementOptionName":"BUFSIZE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"hexX","@Value6":"MIN","@Value7":"MAX"}},{"StatementOptionName":"CNTLLEV=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"LIB","@Value2":"MEM","@Value3":"REC"}},{"StatementOptionName":"COMPRESS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"NO","@Value2":"YES","@Value3":"CHAR","@Value4":"BINARY"}},{"StatementOptionName":"DLDMGACTION=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"FAIL","@Value2":"ABORT","@Value3":"REPAIR","@Value4":"NOINDEX","@Value5":"PROMPT"}},{"StatementOptionName":"ENCRYPT=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"ENCRYPTKEY=","StatementOptionType":"V"},{"StatementOptionName":"GENMAX=","StatementOptionType":"V","StatementOptionHelp":{"#cdata":"Requests generations for a data set and specifies the maximum number of versions."}},{"StatementOptionName":"GENNUM=","StatementOptionType":"V"},{"StatementOptionName":"INDEX=","StatementOptionType":"V"},{"StatementOptionName":"NOMISS","StatementOptionType":"S"},{"StatementOptionName":"LABEL=","StatementOptionType":"V"},{"StatementOptionName":"OUTREP=","StatementOptionType":"V"},{"StatementOptionName":"PW=","StatementOptionType":"V"},{"StatementOptionName":"PWREQ=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"READ=","StatementOptionType":"V","StatementOptionHelp":{"#cdata":"Assigns a read password to a SAS file and enables access to a read-protected SAS file."}},{"StatementOptionName":"REPEMPTY=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"REPLACE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"REUSE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SPILL=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SORTEDBY=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"by-clause < / collate-name>","@Value2":"_NULL_"}},{"StatementOptionName":"TOBSNO=","StatementOptionType":"V"},{"StatementOptionName":"TRANTAB=","StatementOptionType":"V"},{"StatementOptionName":"TYPE=","StatementOptionType":"V"},{"StatementOptionName":"WRITE=","StatementOptionType":"V"},{"StatementOptionName":"FILECLOSE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"DISP","@Value2":"LEAVE","@Value3":"REREAD","@Value4":"REWIND"}},{"StatementOptionName":"FIRSTOBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"hexX","@Value6":"MIN","@Value7":"MAX"}},{"StatementOptionName":"IN=","StatementOptionType":"V"},{"StatementOptionName":"OBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"nT","@Value6":"hexX","@Value7":"MIN","@Value8":"MAX"}},{"StatementOptionName":"POINTOBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"WHERE=","StatementOptionType":"V"},{"StatementOptionName":"WHEREUP=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SGIO=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"IDXNAME=","StatementOptionType":"V"},{"StatementOptionName":"IDXWHERE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"DROP=","StatementOptionType":"V"},{"StatementOptionName":"KEEP=","StatementOptionType":"V"},{"StatementOptionName":"RENAME=","StatementOptionType":"V"},{"StatementOptionName":"EXTENDOBSCOUNTER=","StatementOptionType":"V"}],"#comment":{}}},{"StatementName":"SKIP","StatementHelp":{"#cdata":"Syntax: SKIP <n>; \n      \nCreates a blank line in the SAS log."},"StatementOptions":null},{"StatementName":"STOP","StatementHelp":{"#cdata":"Syntax: STOP; \n      \nStops execution of the current DATA step."},"StatementOptions":null},{"StatementName":"WHERE","StatementHelp":{"#cdata":"Syntax: WHERE where-expression-1 \n  < logical-operator where-expression-n>; \n  \nSelects observations from SAS data sets that meet a particular condition."},"StatementOptions":null},{"StatementName":"RSUBMIT","StatementHelp":{"#cdata":"Syntax: RSUBMIT <options>;  ENDRSUBMIT <CANCEL>;  \n   RDISPLAY <CONNECTREMOTE=><server-ID;>  \n   RGET <CONNECTREMOTE=><server-ID>;  \n   %SYSRPUT macro-variable=value;  \n   %SYSLPUT macro-variable=value </REMOTE=server-ID>;  \n   WAITFOR <_ANY_ | _ALL_> task1...taskn <TIMEOUT=seconds>;  \n   LISTTASK <_ALL_ | task>;  \n   KILLTASK <_ALL_ | task1...taskn>;  \n    \nMarks the beginning of a block of statements that a client session submits to a server\nsession for execution."},"StatementOptions":null},{"StatementName":"ENDRSUBMIT","StatementHelp":{"#cdata":"Marks the end of a block of statements that a client session submits to a server session \nfor execution."},"StatementOptions":null}],"#comment":{}}}}