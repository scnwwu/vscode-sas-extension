{"Procedure":{"Name":"COMPUTAB","ProductGroup":"SAS/ETS","ProcedureHelp":{"#cdata":"Syntax: PROC COMPUTAB options ; \n    BY variables ; \n    COLUMNS names / options ; \n    ROWS names / options ; \n    CELL names / FORMAT= format ; \n    INIT anchor-name locator-name values locator-name values ; \n    programming statements ; \n    SUMBY variables ; \n\nThe COMPUTAB (computing and tabular reporting) procedure produces tabular reports generated \nusing a programmable data table. \n\nThe COMPUTAB procedure is especially useful when you need both the power of a programmable \nspreadsheet and a report generation system, but you want to set up a program to run in a batch \nmode and generate routine reports. \n\nWith PROC COMPUTAB, you can select a subset of observations from the input data set, define \nthe format of a table, operate on its row and column values, and create new columns and rows. \nAccess to individual table values is available when needed. \n\nThe COMPUTAB procedure can tailor reports to almost any desired specification and provide \nconsolidation reports over summarization variables. The generated report values can be stored \nin an output data set. PROC COMPUTAB is especially useful in creating tabular reports such as \nincome statements, balance sheets, and other row and column reports."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nNames the SAS data set that contains the input data. If this option is not specified, \nthe last created data set is used. If you are not reading a data set, use DATA=_NULL_."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"FUZZ=","ProcedureOptionHelp":{"#cdata":"[Syntax: FUZZ=value] \n      \nSpecifies the criterion to use when testing for 0. If a number is within the FUZZ= value of 0, \nthe number is set to 0."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"INITMISS","ProcedureOptionHelp":{"#cdata":"Initializes the COMPUTAB data table to missing rather than to 0."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOTRANSPOSE|NOTRANS","ProcedureOptionHelp":{"#cdata":"Prevents the transposition of the input data set in building the COMPUTAB report tables. \nThe NOTRANS option causes input data set variables to appear among the columns of the \nreport rather than among the rows."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CDEC=","ProcedureOptionHelp":{"#cdata":"[Syntax: CDEC=d] \n      \nSpecifies the default number of decimal places for printing. The default is CDEC=2."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CSPACE=","ProcedureOptionHelp":{"#cdata":"[Syntax: CSPACE=n] \n      \nSpecifies the default number of spaces to insert between columns. The value of the CSPACE= \noption is used as the default value for the +n option in the COLUMNS statement. The default \nis CSPACE=2."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CWIDTH=","ProcedureOptionHelp":{"#cdata":"[Syntax: CWIDTH=w] \n      \nSpecifies a default column width for the report. The default is CWIDTH=9. The width must \nbe in the range of 1\u201332."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NORTR","ProcedureOptionHelp":{"#cdata":"Suppresses the printing of row titles on each page. The NORTR (no row-title repeat) option \nis useful to suppress row titles when report pages are to be joined together in a larger \nreport."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"RTS=","ProcedureOptionHelp":{"#cdata":"[Syntax: RTS=n] \n      \nSpecifies the default number of spaces to be inserted before row titles when row titles appear \nafter the first printed column. The default row-title spacing is RTS=2."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses all printed output. Use the NOPRINT option with the OUT= option to produce an \noutput data set but no printed reports."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OPTIONS","ProcedureOptionHelp":{"#cdata":"Lists PROC COMPUTAB option values. The option values appear on a separate page preceding \nthe procedure\u2019s normal output."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set] \n      \nNames the SAS data set to contain the output data."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"SUMONLY","ProcedureOptionHelp":{"#cdata":"Suppresses printing of detailed reports. When the SUMONLY option is used, PROC COMPUTAB \ngenerates and prints only consolidation tables as specified in the SUMBY statement."},"ProcedureOptionType":"S"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables ; \n\nA BY statement can be used with PROC COMPUTAB to obtain separate reports for \nobservations in groups defined by the BY variables. At the beginning of each \nBY group, before PROC COMPUTAB reads any observations, all table values are \nset to 0 unless the INITMISS option or an INIT statement is specified."},"StatementOptions":null},{"StatementName":"COLUMNS|COLUMN|COLS|COL","StatementHelp":{"#cdata":"Syntax: COLUMNS column-list / options ; \n\nCOLUMNS statements define the columns of the report. The COLUMNS statement can be abbreviated \nCOLUMN, COLS, or COL. The specified column names must be valid SAS names. \n\nYou can use as many COLUMNS statements as you need. A COLUMNS statement can describe \nmore than one column, and one column of the report can be described with several different\nCOLUMNS statements. The order of the columns on the report is determined by the order of \nappearance of column names in COLUMNS statements. The first occurrence of the name determines \nwhere in the sequence of columns a particular column is located. "},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CHAR","StatementOptionHelp":{"#cdata":"Indicates that the columns contain character data."},"StatementOptionType":"S"},{"StatementOptionName":"_LABEL_","StatementOptionHelp":{"#cdata":"Uses labels, if provided, in the heading for the column or columns listed in the COLUMNS \nstatement. If a label has not been provided, the name of the column is used."},"StatementOptionType":"S"},{"StatementOptionName":"MTITLE=|M=","StatementOptionHelp":{"#cdata":"[Syntax: MTITLE=\"text\"] \n          \nSpecifies that the string of characters enclosed in quotes is a master title to be centered \nover all the columns listed in the COLUMNS statement. The list of columns must be consecutive. \nSpecial characters (\"+\", \"*\", \"=\", and so forth) placed on either side of the text expand to \nfill the space."},"StatementOptionType":"V"},{"StatementOptionName":"_NAME_","StatementOptionHelp":{"#cdata":"Uses column names in column headings for the columns listed in the COLUMNS statement. This \noption allows headings (\"text\") and names to be combined in a heading."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Suppresses printing of columns listed in the COLUMNS statement. This option enables you to create \ncolumns to be used for intermediate calculations without having those columns printed."},"StatementOptionType":"S"},{"StatementOptionName":"NOZERO","StatementOptionHelp":{"#cdata":"Suppresses printing of columns when all the values in a column are 0 or missing. Numbers \nwithin the FUZZ= value of 0 are treated as 0."},"StatementOptionType":"S"},{"StatementOptionName":"_PAGE_","StatementOptionHelp":{"#cdata":"Starts a new page of the report before printing each of the columns in the list that follows."},"StatementOptionType":"S"},{"StatementOptionName":"_TITLES_","StatementOptionHelp":{"#cdata":"Prints row titles before each column in the list. The _TITLES_ option can be abbreviated as _TITLE_."},"StatementOptionType":"S"},{"StatementOptionName":"FORMAT=|F=","StatementOptionHelp":{"#cdata":"[Syntax: FORMAT=format] \n          \nSpecifies a format for printing the values of the columns listed in the COLUMNS statement."},"StatementOptionType":"V"},{"StatementOptionName":"LJC","StatementOptionHelp":{"#cdata":"Left-justifies the column headings for the columns listed. By default, columns are right-\njustified. When the LJC (left-justify character) option is used, any character row values \nin the column are also left-justified rather than right-justified."},"StatementOptionType":"S"},{"StatementOptionName":"ZERO=","StatementOptionHelp":{"#cdata":"[Syntax: ZERO=\"text\"] \n          \nSubstitutes \"text\" when the value in the column is 0 or missing."},"StatementOptionType":"V"}]}},{"StatementName":"ROWS|ROW","StatementHelp":{"#cdata":"Syntax: ROWS row-list / options ; | ROW row-list / options ;\n\nROWS statements define the rows of the report. The ROWS statement can be abbreviated ROW. \n\nThe specified row names must be valid SAS names. You can use as many ROWS statements as \nyou need. A ROWS statement can describe more than one row, and one row of the report can \nbe described with several different ROWS statements. The order of the rows in the report \nis determined by the order of appearance of row names in ROWS statements. The first occurrence \nof the name determines where the row is located."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CHAR","StatementOptionHelp":{"#cdata":"Indicates that the rows contain character data."},"StatementOptionType":"S"},{"StatementOptionName":"_LABEL_","StatementOptionHelp":{"#cdata":"Uses labels as row titles for the row or rows listed in the ROWS statement. If a label is not \nprovided, the name of the row is substituted."},"StatementOptionType":"S"},{"StatementOptionName":"_NAME_","StatementOptionHelp":{"#cdata":"Uses row names in row titles for the row or rows listed in the ROWS statement."},"StatementOptionType":"S"},{"StatementOptionName":"DOL","StatementOptionHelp":{"#cdata":"Overlines the rows listed in the ROWS statement with double lines. Overlines are printed \non the line before any row titles or data for the row."},"StatementOptionType":"S"},{"StatementOptionName":"DUL","StatementOptionHelp":{"#cdata":"Underlines the rows listed in the ROWS statement with double lines. Underlines are printed on \nthe line after the data for the row. A row can have both an underline and an overline option."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Suppresses printing of rows listed in the ROWS statement. This option enables you to create \nrows to be used for intermediate calculations without having those rows printed."},"StatementOptionType":"S"},{"StatementOptionName":"NOZERO","StatementOptionHelp":{"#cdata":"Suppresses the printing of a row when all the values are 0 or missing."},"StatementOptionType":"S"},{"StatementOptionName":"OL","StatementOptionHelp":{"#cdata":"Overlines the rows listed in the ROWS statement with a single line. Overlines are printed on \nthe line before any row titles or data for the row."},"StatementOptionType":"S"},{"StatementOptionName":"OVERPRINT","StatementOptionHelp":{"#cdata":"Overprints titles, values, overlining, and underlining associated with rows listed in the \nROWS statement. The OVERPRINT option can be abbreviated OVP. This option is valid only \nwhen the system option OVP is in effect."},"StatementOptionType":"S"},{"StatementOptionName":"_PAGE_","StatementOptionHelp":{"#cdata":"Starts a new page of the report before printing these rows."},"StatementOptionType":"S"},{"StatementOptionName":"SKIP","StatementOptionHelp":{"#cdata":"Prints a blank line after the data lines for these rows."},"StatementOptionType":"S"},{"StatementOptionName":"UL","StatementOptionHelp":{"#cdata":"Underlines the rows listed in the ROWS statement with a single line. Underlines are printed on \nthe line after the data for the row. A row can have both an underline and an overline option."},"StatementOptionType":"S"},{"StatementOptionName":"FORMAT=|F=","StatementOptionHelp":{"#cdata":"[Syntax: FORMAT=format] \n          \nSpecifies a format for printing the values of the rows listed in the ROWS statement."},"StatementOptionType":"V"},{"StatementOptionName":"LJC","StatementOptionHelp":{"#cdata":"Left-justifies character rows in each column."},"StatementOptionType":"S"},{"StatementOptionName":"ZERO=","StatementOptionHelp":{"#cdata":"[Syntax: ZERO=\"text\"] \n          \nSubstitutes \"text\" when the value in the row is 0 or missing."},"StatementOptionType":"V"}]}},{"StatementName":"CELL","StatementHelp":{"#cdata":"Syntax: CELL cell_names / FORMAT= format ; \n\nThe CELL statement specifies the format for printing a particular cell in the COMPUTAB \ndata table. Cell variable names are compound SAS names of the form name1.name2, where \nname1 is the name of a row variable and name2 is the name of a column variable. Formats \nspecified with the FORMAT= option in CELL statements override formats specified in ROWS \nand COLUMNS statements."},"StatementOptions":null},{"StatementName":"INIT","StatementHelp":{"#cdata":"Syntax: INIT anchor-name [locator-name] values [locator-name values] ; \n\nThe INIT statement initializes values in the COMPUTAB data table at the beginning of \neach execution of the procedure and at the beginning of each BY group if a BY statement \nis present. \n\nThe INIT statement in the COMPUTAB procedure is similar in function to the RETAIN statement \nin the DATA step, which initializes values in the program data vector. The INIT statement can \nbe used at any point after the variable to which it refers has been defined in COLUMNS or ROWS \nstatements. Each INIT statement initializes one row or column. Any number of INIT statements \ncan be used. \n\nThe first term after the keyword INIT, anchor-name, anchors initialization to a row or column. \nIf anchor-name is a row name, then all locator-name values in the statement are columns of that \nrow. If anchor-name is a column name, then all locator-name values in the statement are rows of \nthat column."},"StatementOptions":null},{"StatementName":"SUMBY","StatementHelp":{"#cdata":"Syntax: SUMBY variables ; \n      \nThe SUMBY statement produces consolidation tables for variables whose names are in \nthe SUMBY list. Only one SUMBY statement can be used. To use a SUMBY statement, you \nmust use a BY statement. The SUMBY and BY variables must be in the same relative order \nin both statements."},"StatementOptions":null},{"StatementName":"END","StatementHelp":{"#cdata":"Syntax: END; \n      \nEnds a DO group or SELECT group processing."},"StatementOptions":null},{"StatementName":"DELETE","StatementHelp":{"#cdata":"Syntax: DELETE; \n      \nStops processing the current observation."},"StatementOptions":null},{"StatementName":"ATTRIB","StatementHelp":{"#cdata":"Syntax: ATTRIB variable-list(s) attribute-list(s) ; \n      \nAssociates a format, informat, label, and length with one or more variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"FORMAT=","StatementOptionHelp":{"#cdata":"[Syntax: FORMAT=format] \n          \nAssociates a format with variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"INFORMAT=","StatementOptionHelp":{"#cdata":"[Syntax: INFORMAT=informat] \n          \nAssociates an informat with variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"LABEL=","StatementOptionHelp":{"#cdata":"[Syntax: LABEL='label'] \n          \nAssociates a label with variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"LENGTH=","StatementOptionHelp":{"#cdata":"[Syntax: LENGTH=<$>length] \n          \nSpecifies the length of variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"TRANSCODE=","StatementOptionHelp":{"#cdata":"Specifies whether character variables can be transcoded."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that character variables can be transcoded.","@ToolTip2":"Suppresses transcoding."}}]}},{"StatementName":"RETAIN","StatementHelp":{"#cdata":"Syntax: RETAIN <element-list(s) <initial-value(s) | \n  (initial-value-1) | (initial-value-list-1) > \n  < ... element-list-n <initial-value-n | \n  (initial-value-n ) | (initial-value-list-n)>>>; \n  \nCauses a variable that is created by an INPUT or assignment statement to retain its value from \none iteration of the DATA step to the next."},"StatementOptions":null},{"StatementName":"LINK","StatementHelp":{"#cdata":"Syntax: LINK label; \n      \nDirects program execution immediately to the statement label that is specified \nand, if followed by a RETURN statement, returns execution to the statement that \nfollows the LINK statement."},"StatementOptions":null},{"StatementName":"SELECT","StatementHelp":{"#cdata":"Executes one of several statements or groups of statements.\n      \nSyntax: \nSELECT <(select-expression)>;  \n  WHEN-1 (when-expression-1 <..., when-expression-n>) statement;  \n    <... WHEN-n (when-expression-1 <..., when-expression-n>) statement;>  \n      <OTHERWISE statement;> \nEND;"},"StatementOptions":null},{"StatementName":"CALL","StatementHelp":{"#cdata":"Syntax: CALL routine(parameter-1<, ...parameter-n>); \n      \nInvokes a SAS CALL routine. "},"StatementOptions":null},{"StatementName":"ABORT","StatementHelp":{"#cdata":"Syntax: ABORT <ABEND | CANCEL <FILE> | RETURN | > <n> <NOLIST>; \n      \nStops executing the current DATA step, SAS job, or SAS session.\n\nn is an integer value that enables you to specify a condition code: \n    \n  o when used with the CANCEL argument, the value is placed in the SYSINFO automatic macro variable \n  o when not used with the CANCEL argument, the error code that is returned by SAS is ERROR. The value \n    of ERROR depends on the operating system. The condition code n is returned to the operating system \n    as the final SAS system exit code."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ABEND","StatementOptionHelp":{"#cdata":"Causes abnormal termination of the current SAS job or session. Results depend on \nthe method of operation: \n\no batch mode and noninteractive mode \n\n  o stops processing immediately\n  o sends an error message to the SAS log that states that execution was terminated by the ABEND option \n    of the ABORT macro statement\n  o does not execute any subsequent statements or check syntax\n  o returns control to the operating environment; further action is based on how your operating environment \n    and your site treat jobs that end abnormally.\n\no windowing environment and interactive line mode \n\n  o causes your windowing environment and interactive line mode to stop processing immediately \n    and return you to your operating environment."},"StatementOptionType":"S"},{"StatementOptionName":"CANCEL","StatementOptionHelp":{"#cdata":"Causes the cancellation of the current submitted statements. The results depend \non the method of operation:\n\no batch mode and noninteractive mode\n\n  o The entire SAS program and SAS system are terminated.\n  o The error message is written to the SAS log.\n\no windowing environment and interactive line mode \n\n  o It only clears the current submitted program.\n  o Other subsequent submitted programs are not affected.\n  o The error message is written to the SAS log.\n\no workspace server and stored process server \n\n  o It only clears currently submitted program.\n  o Other subsequent submit calls are not affected.\n  o The error message is written to the SAS log.\n\no SAS IntrNet application server \n\n  o A separate execution is created for each request. The execution submits the request \n    code. A CANCEL argument in the request code clears the current submitted code but \n    does not terminate the execution of the SAS session."},"StatementOptionType":"S"},{"StatementOptionName":"CANCEL FILE","StatementOptionHelp":{"#cdata":"Causes only the contents of the autoexec file or %INCLUDE file to be cleared by \nthe %ABORT statement. Other submitted source statements will be executed after \nthe autoexec or %INCLUDE file."},"StatementOptionType":"S"},{"StatementOptionName":"RETURN","StatementOptionHelp":{"#cdata":"Causes abnormal termination of the current SAS job or session. Results depend on \nthe method of operation: \n\no batch mode and noninteractive mode \n\n  o stops processing immediately\n  o sends an error message to the SAS log that states that execution was terminated by the RETURN option \n    in the ABORT macro statement\n  o does not execute any subsequent statements or check syntax\n  o returns control to the operating environment with a condition code indicating an error.\n\no windowing environment and interactive line mode \n\n  o causes your windowing environment and interactive line mode to stop processing immediately \n    and return you to your operating environment."},"StatementOptionType":"S"},{"StatementOptionName":"NOLIST","StatementOptionHelp":{"#cdata":"Suppresses the output of all variables to the SAS log. \n          \nRequirement: NOLIST must be the last option in the ABORT statement."},"StatementOptionType":"S"}]}},{"StatementName":"ARRAY","StatementHelp":{"#cdata":"Syntax: ARRAY array-name { subscript } <$><length> \n  <array-elements> <(initial-value-list)>; \n  \nDefines the elements of an array."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Specifies all variables."},"StatementOptionType":"S"},{"StatementOptionName":"_TEMPORARY_","StatementOptionHelp":{"#cdata":"Creates a list of temporary data elements."},"StatementOptionType":"S"},{"StatementOptionName":"_NUMERIC_","StatementOptionHelp":{"#cdata":"Specifies all numeric variables."},"StatementOptionType":"S"},{"StatementOptionName":"_CHARACTER_","StatementOptionHelp":{"#cdata":"Specifies all character variables."},"StatementOptionType":"S"}]}},{"StatementName":"STOP","StatementHelp":{"#cdata":"Syntax: STOP; \n      \nStops execution of the current DATA step."},"StatementOptions":null},{"StatementName":"PUT","StatementHelp":{"#cdata":"Syntax: PUT <specification(s)><_ODS_><@|@@>; \n      \nWrites lines to the SAS log, to the SAS output window, or to an external location that is \nspecified in the most recent FILE statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"_INFILE_","StatementOptionHelp":{"#cdata":"Writes the last input data record that is read either from the current input file \nor from the data lines that follow a DATELINES statement."},"StatementOptionType":"S"},{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Writes the values of all variables, which includes automatic variables, that are \ndefined in the current DATA step by using named output."},"StatementOptionType":"S"},{"StatementOptionName":"_ODS_","StatementOptionHelp":{"#cdata":"Moves data values for all columns (as defined by the ODS option in the FILE statement) \ninto a special buffer, from which it is eventually written to the data component. The \nODS option in the FILE statement defines the structure of the data component that holds \nthe results of the DATA step."},"StatementOptionType":"S"},{"StatementOptionName":"OVERPRINT","StatementOptionHelp":{"#cdata":"Causes the values that follow the keyword OVERPRINT to print on the most recently written \noutput line."},"StatementOptionType":"S"},{"StatementOptionName":"_BLANKPAGE_","StatementOptionHelp":{"#cdata":"Advances the pointer to the first line of a new page, even when the pointer is positioned \non the first line and the first column of a new page."},"StatementOptionType":"S"},{"StatementOptionName":"_PAGE_","StatementOptionHelp":{"#cdata":"Advances the pointer to the first line of a new page. SAS automatically begins a new \npage when a line exceeds the current PAGESIZE= value."},"StatementOptionType":"S"}]}},{"StatementName":"GO TO|GOTO","StatementHelp":{"#cdata":"Syntax: GOTO label;\n      \nJumps to a new statement."},"StatementOptions":null},{"StatementName":"IF","StatementHelp":{"#cdata":"Executes a SAS statement for observations that meet specific conditions. \n\nSyntax: \n(1) IF expression THEN statement; \n    <ELSE statement;> \n(2) IF condition;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"THEN","StatementOptionHelp":{"#cdata":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS \nstatement for observations that are read from a SAS data set, for records in an external file, or \nfor computed values."},"StatementOptionType":"S"},{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"WHEN","StatementOptionHelp":{"#cdata":"WHEN statement in an IF-THEN-WHEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"OUTPUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"GO TO|GOTO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nSyntax: ... GO TO label; | ... GOTO label;\n      \nJumps to a new statement."},"StatementOptionType":"S"},{"StatementOptionName":"PUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"SET","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct.\n          \nSyntax: SET <SAS-data-set(s) <(data-set-options(s) )>>; \n      \nReads an observation from one or more SAS data sets."},"StatementOptionType":"S"},{"StatementOptionName":"NOT","StatementOptionType":"S"},{"StatementOptionName":"OR","StatementOptionType":"S"},{"StatementOptionName":"AND","StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"ELSE","StatementHelp":{"#cdata":"If the condition in an IF-THEN statement is false and an ELSE statement is present, \nthen the ELSE action is carried out."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"THEN","StatementOptionHelp":{"#cdata":"If the conditions that are specified in the IF clause are met, the IF-THEN statement \nexecutes a SAS statement for observations that are read from a SAS data set, for \nrecords in an external file, or for computed values."},"StatementOptionType":"S"},{"StatementOptionName":"IF","StatementOptionHelp":{"#cdata":"Executes a SAS statement for observations that meet specific conditions."},"StatementOptionType":"S"},{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN-ELSE construct."},"StatementOptionType":"S"},{"StatementOptionName":"OUTPUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN-ELSE construct."},"StatementOptionType":"S"}]}},{"StatementName":"LABEL","StatementHelp":{"#cdata":"Assigns descriptive labels to variables.\n      \nSyntax: \n(1) LABEL variable-1=label-1 ... <variable-n=label-n>;  \n\n(2) LABEL variable-1=' ' ... <variable-n=' '>;"},"StatementOptions":null},{"StatementName":"DO WHILE","StatementHelp":{"#cdata":"Executes statements in a DO-loop repetitively while a condition is true. \n          \nSyntax: \nDO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptions":null},{"StatementName":"DO UNTIL","StatementHelp":{"#cdata":"Executes statements in a DO loop repetitively until a condition is true.\n          \nSyntax: \nDO UNTIL (expression); \n...more SAS statements...  \nEND"},"StatementOptions":null},{"StatementName":"DO","StatementHelp":{"#cdata":"Specifies a group of statements to be executed as a unit.\n      \nSyntax: \n(1) DO; \n...more SAS statements...  \nEND;  \n\n(2) DO index-variable=specification-1 <, ... specification-n>; \n... more SAS statements ...  \nEND;  \n\n(3) DO UNTIL (expression); \n...more SAS statements...  \nEND \n\n(4) DO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"UNTIL","StatementOptionHelp":{"#cdata":"Executes statements in a DO loop repetitively until a condition is true.\n          \nSyntax: \nDO UNTIL (expression); \n...more SAS statements...  \nEND;"},"StatementOptionType":"S"},{"StatementOptionName":"WHILE","StatementOptionHelp":{"#cdata":"Executes statements in a DO-loop repetitively while a condition is true. \n          \nSyntax: \nDO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptionType":"S"},{"StatementOptionName":"OVER","StatementOptionType":"S"},{"StatementOptionName":"TO","StatementOptionHelp":{"#cdata":"Separates the start and stop integers or expressions that control the number of \ntimes the portion of the DATA step between the iterative DO and END statements \nis processed."},"StatementOptionType":"S"},{"StatementOptionName":"BY","StatementOptionHelp":{"#cdata":"Precedes an increment integer (other than 0) or an expression that generates an \ninteger to be added to the value of the index variable in each iteration of the \nDO loop."},"StatementOptionType":"S"}]}}]}}}