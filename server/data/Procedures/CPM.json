{"Procedure":{"Name":"CPM","ProductGroup":"SAS/OR","ProcedureHelp":{"#cdata":"Syntax: PROC CPM options ; \n    ACTIVITY variable ; \n    ACTUAL / actual options ; \n    ALIGNDATE variable ; \n    ALIGNTYPE variable ; \n    BASELINE / baseline options ; \n    CALID variable ; \n    DURATION / duration options ; \n    HEADNODE variable ; \n    HOLIDAY variable / holiday options ; \n    ID variables ; \n    PROJECT variable / project options ; \n    RESOURCE variables / resource options ; \n    SUCCESSOR variables / lag options ; \n    TAILNODE variable ; \n\nThe CPM procedure can be used for planning, controlling, and monitoring a project. A typical \nproject consists of several activities that may have precedence and time constraints. Some of \nthese activities may already be in progress; some of them may follow different work schedules. \nAll of the activities may compete for scarce resources. PROC CPM enables you to schedule activities \nsubject to all of these constraints. \n\nPROC CPM enables you to define calendars and specify holidays for the different activities so that \nyou can schedule around holidays and vacation periods. Once a project has started, you can monitor \nit by specifying current information or progress data that is used by PROC CPM to compute an updated \nschedule. You can compare the new schedule with a baseline (or target) schedule."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ADDACT|ADDALLACT|EXPAND","ProcedureOptionHelp":{"#cdata":"Indicates that an observation is to be added to the Schedule output data set (and the Resource \nSchedule output data set) for each activity that appears as a value of the variables specified \nin the SUCCESSOR or PROJECT statements without appearing as a value of the variable specified \nin the ACTIVITY statement."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CALEDATA=|CALENDAR=","ProcedureOptionHelp":{"#cdata":"[Syntax: CALEDATA=SAS-data-set] \n      \nIdentifies a SAS data set that specifies the work pattern during a standard week for each \nof the calendars that are to be used in the project."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"COLLAPSE","ProcedureOptionHelp":{"#cdata":"Creates only one observation per activity in the output data set when the input data set for a \nnetwork in AON format contains multiple observations for the same activity."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nNames the SAS data set that contains the network specification and activity information."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DATE=","ProcedureOptionHelp":{"#cdata":"Specifies the SAS date, time, or datetime that is to be used as an alignment date for the project."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DAYLENGTH=","ProcedureOptionHelp":{"#cdata":"[Syntax: DAYLENGTH=daylength] \n      \nSpecifies the length of the workday. On each day, work is scheduled starting at the beginning \nof the day as specified in the DAYSTART= option and ending daylength hours later. The DAYLENGTH= \nvalue should be a SAS time value."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DAYSTART=","ProcedureOptionHelp":{"#cdata":"[Syntax: DAYSTART=daystart] \n      \nSpecifies the start of the workday. The DAYSTART= value should be a SAS time value. This parameter \nshould be specified only when interval is one of the following: DTDAY, WORKDAY, DTWRKDAY, DTHOUR, \nDTMINUTE, or DTSECOND; in other words, this parameter should be specified only if the schedule \nproduced by the CPM procedure is in SAS datetime values. The default value of daystart is 9 a.m. \nif INTERVAL is WORKDAY; otherwise, the value of daystart is equal to the time part of the SAS \ndatetime value specified for the DATE= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"FBDATE=","ProcedureOptionHelp":{"#cdata":"[Syntax: FBDATE=fbdate] \n      \nSpecifies a finish-before date that can be specified in addition to the DATE= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"FINISHBEFORE","ProcedureOptionHelp":{"#cdata":"Specifies that the project be scheduled to complete before the date given in the DATE= option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"FIXFINISH","ProcedureOptionHelp":{"#cdata":"Specifies that all finish tasks are to be constrained by their respective early finish times. \nIn other words, the late finish times of all finish tasks do not float to the project completion \ntime."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"HOLIDATA=|HOLIDAY=","ProcedureOptionHelp":{"#cdata":"[Syntax: HOLIDATA=SAS-data-set] \n      \nIdentifies a SAS data set that specifies holidays."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"INTERVAL=","ProcedureOptionHelp":{"#cdata":"Requests that each unit of duration be measured in interval units."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"DAY","@Value2":"WEEK","@Value3":"WEEKDAY","@Value4":"WORKDAY","@Value5":"MONTH","@Value6":"QTR","@Value7":"YEAR","@Value8":"HOUR","@Value9":"MINUTE","@Value10":"SECOND","@Value11":"DTDAY","@Value12":"DTWRKDAY","@Value13":"DTWEEK","@Value14":"DTMONTH","@Value15":"DTQTR","@Value16":"DTYEAR","@Value17":"DTHOUR","@Value18":"DTMINUTE","@Value19":"DTSECOND"},"ProcedureOptionToolTips":{"@ToolTip1":"Day","@ToolTip2":"Week","@ToolTip3":"Day (5-day week)","@ToolTip4":"Day (5-day week: 9-5 day)","@ToolTip5":"Month","@ToolTip6":"Quarter","@ToolTip7":"Year","@ToolTip8":"Hour","@ToolTip9":"Minute","@ToolTip10":"Second","@ToolTip11":"Day (7-day week)","@ToolTip12":"Day (5-day week)","@ToolTip13":"Week","@ToolTip14":"Month","@ToolTip15":"Quarter","@ToolTip16":"Year","@ToolTip17":"Hour","@ToolTip18":"Minute","@ToolTip19":"Second"}},{"ProcedureOptionName":"INTPER=","ProcedureOptionHelp":{"#cdata":"[Syntax: INTPER=period] \n      \nRequests that each unit of duration be equivalent to period units of duration. The default \nvalue is 1."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NACTS=","ProcedureOptionHelp":{"#cdata":"[Syntax: NACTS=nacts] \n      \nSpecifies the number of activities for which memory is allocated in core by the procedure."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NADJ=","ProcedureOptionHelp":{"#cdata":"[Syntax: NADJ=nadj] \n      \nSpecifies the number of precedence constraints (adjacencies) in the project network."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NNODES=","ProcedureOptionHelp":{"#cdata":"[Syntax: NNODES=nnodes] \n      \nSpecifies the size of the symbolic table used to look up the activity names (node names) for the \nnetwork specification in AON (AOA) format."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOUTIL","ProcedureOptionHelp":{"#cdata":"Specifies that the procedure should not use utility data sets for memory management."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NRESREQ=","ProcedureOptionHelp":{"#cdata":"[Syntax: NRESREQ=nres] \n      \nSpecifies the number of distinct resource requirements corresponding to all activities and \nresources in the project."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set] \n      \nSpecifies a name for the output data set that contains the schedule determined by PROC CPM."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"RESOURCEIN=|RESIN=|SIN=|RESLEVEL=","ProcedureOptionHelp":{"#cdata":"[Syntax: RESOURCEIN= |RESIN=| RIN= | RESLEVEL= SAS-data-set] \n      \nNames the SAS data set that contains the levels available for the different resources used by \nthe activities in the project."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"RESOURCEOUT=|RESOUT=|ROUT=|RESUSAGE=","ProcedureOptionHelp":{"#cdata":"[Syntax: RESOURCEOUT=SAS-data-set] \n      \nNames the SAS data set in which you can save resource usage profiles for each of the resources \nspecified in the RESOURCE statement. This data set is also referred to as the Usage data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"RESOURCESCHED=|RESSCHED=|RSCHEDULE=|RSCHED=","ProcedureOptionHelp":{"#cdata":"[Syntax: RESOURCESCHED=SAS-data-set] \n      \nNames the SAS data set in which you can save the schedules for each resource used by\nany activity."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"SETFINISHMILESTONE","ProcedureOptionHelp":{"#cdata":"Specifies that milestones (zero duration activities) should have the same start and finish times \nas the finish time of their predecessor."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SUPPRESSOBSWARN","ProcedureOptionHelp":{"#cdata":"Turns off the display of warnings and notes for every observation with invalid or missing \nspecifications."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"WORKDATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: WORKDATA=SAS-data-set] \n      \nIdentifies a SAS data set that defines the work pattern during a standard working day."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"XFERVARS","ProcedureOptionHelp":{"#cdata":"Indicates that all relevant variables are to be copied from the Activity data set to the Schedule \ndata set. This includes all variables used in the ACTUAL statement, the ALIGNDATE and ALIGNTYPE \nstatements, the SUCCESSOR statement, and the RESOURCE statement."},"ProcedureOptionType":"S"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"ACTIVITY|ACT","StatementHelp":{"#cdata":"Syntax: ACTIVITY variable ; | ACT variable ; \n\nThe ACTIVITY statement is required when data are input in an AON format; this statement \nidentifies the variable that contains the names of the nodes in the network."},"StatementOptions":null},{"StatementName":"ACTUAL","StatementHelp":{"#cdata":"Syntax: ACTUAL / actual options ; \n\nThe ACTUAL statement identifies variables in the Activity data set that contain progress \ninformation about the activities in the project. For a project that is already in progress, \nyou can describe the actual status of any activity by specifying the activity's actual start, \nactual finish, remaining duration, or percent of work completed. At least one of the four \nvariables (A_START, A_FINISH, REMDUR, PCTCOMP) needs to be specified in the ACTUAL statement. \nThese variables are referred to as progress variables. The TIMENOW= option in this statement \nrepresents the value of the current time (referred to as TIMENOW), and it is used in conjunction \nwith the values of the progress variables to check for consistency and to determine default values \nif necessary. \n\nYou can also specify options in the ACTUAL statement that control the updating of the project \nschedule. Using the ACTUAL statement causes four new variables (A_START, A_FINISH, A_DUR, and \nSTATUS) to be added to the Schedule data set"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"A_FINISH=|AF=","StatementOptionHelp":{"#cdata":"[Syntax: A_FINISH= | AF= variable] \n          \nIdentifies a variable in the Activity data set that specifies the actual finish times of \nactivities that are already completed. The actual finish time of an activity must be less \nthan TIMENOW."},"StatementOptionType":"V"},{"StatementOptionName":"A_START=|AS=","StatementOptionHelp":{"#cdata":"[Syntax: A_START= | AS= variable] \n          \nIdentifies a variable in the Activity data set that specifies the actual start times of activities \nthat are in progress or that are already completed. The actual start time of an activity must be less \nthan TIMENOW."},"StatementOptionType":"V"},{"StatementOptionName":"AUTOUPDT","StatementOptionHelp":{"#cdata":"Requests that PROC CPM should assume automatic completion (or start) of activities that are \npredecessors to activities already completed (or in progress)."},"StatementOptionType":"S"},{"StatementOptionName":"ESTIMATEPCTC|ESTPCTC|ESTPCTCOMP|ESTPROG","StatementOptionHelp":{"#cdata":"Indicates that a variable named PCT_COMP is to be added to the Schedule output data set (and the \nResource Schedule output data set) that contains the percent completion time for each activity \n(for each resource used by each activity) in the project. This value is 0 for activities that \nhave not yet started and 100 for completed activities; for activities in progress, this value \nis computed using the actual start time, the value of TIMENOW, and the revised duration of the \nactivity."},"StatementOptionType":"S"},{"StatementOptionName":"FIXASTART","StatementOptionHelp":{"#cdata":"Specifies that the actual start time of an activity should not be overwritten if it is specified \nto be on a non-work day."},"StatementOptionType":"S"},{"StatementOptionName":"NOAUTOUPDT","StatementOptionHelp":{"#cdata":"Requests that PROC CPM should not assume automatic completion of activities. (The NOAUTOUPDT option \nis the reverse of the AUTOUPDT option.)"},"StatementOptionType":"S"},{"StatementOptionName":"PCTCOMP=|PCTCOMPLETE=|PCOMP=","StatementOptionHelp":{"#cdata":"[Syntax: PCTCOMPLETE= | PCTCOMP= | PCOMP= variable] \n          \nIdentifies a variable in the Activity data set that specifies the percentage of the work that \nhas been completed for the current activity. The values for this variable must be between 0 and \n100. A value of 0 for this variable means that the current activity has not yet started. A value \nof 100 means that the activity is already complete."},"StatementOptionType":"V"},{"StatementOptionName":"REMDUR=|RDURATION=|RDUR=","StatementOptionHelp":{"#cdata":"[Syntax: REMDUR= | RDURATION= | RDUR= variable] \n          \nIdentifies a variable in the Activity data set that specifies the remaining duration of \nactivities that are in progress."},"StatementOptionType":"V"},{"StatementOptionName":"SHOWFLOAT","StatementOptionHelp":{"#cdata":"This option in the ACTUAL statement indicates that PROC CPM should allow activities that are \ncompleted or in progress to have nonzero float."},"StatementOptionType":"S"},{"StatementOptionName":"TIMENOW=|CURRDATE=","StatementOptionHelp":{"#cdata":"[Syntax: TIMENOW=timenow] \n          \nSpecifies the SAS date, time, or datetime value that is used as a reference point to resolve the \nvalues of the remaining duration and percent completion times when the ACTUAL statement is used."},"StatementOptionType":"V"},{"StatementOptionName":"TIMENOWSPLT","StatementOptionHelp":{"#cdata":"Indicates that activities that are in progress at TIMENOW can be split at TIMENOW if they \ncause resource infeasibilities."},"StatementOptionType":"S"}]}},{"StatementName":"ALIGNDATE|DATE|ADATE","StatementHelp":{"#cdata":"Syntax: ALIGNDATE | DATE | ADATE variable ; \n\nThe ALIGNDATE statement identifies the variable in the Activity data set that specifies \nthe dates to be used to constrain each activity to start or finish on a particular date. \nThe ALIGNDATE statement is used in conjunction with the ALIGNTYPE statement, which specifies \nthe type of alignment. A missing value for the variables specified in the ALIGNDATE statement \nindicates that the particular activity has no restriction imposed on it. \n\nPROC CPM requires that if the ALIGNDATE statement is used, then all start activities \n(activities with no predecessors) have nonmissing values for the ALIGNDATE variable. \nIf any start activity has a missing ALIGNDATE value, it is assumed to start on the date \nspecified in the PROC CPM statement (if such a date is given) or, if no date is given, on \nthe earliest specified start date of all start activities. If none of the start activities \nhas a start date specified and a project start date is not specified in the PROC CPM statement, \nthe procedure stops execution and returns an error message."},"StatementOptions":null},{"StatementName":"BASELINE","StatementHelp":{"#cdata":"Syntax: BASELINE / options ; \n\nThe BASELINE statement enables you to save a specific schedule as a baseline or target \nschedule and compare another schedule, such as an updated schedule or resource constrained \nschedule, against it."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"B_FINISH=|BF=","StatementOptionHelp":{"#cdata":"[Syntax: B_FINISH= | BF= variable] \n          \nSpecifies the numeric-valued variable in the Activity data set that sets B_FINISH."},"StatementOptionType":"V"},{"StatementOptionName":"B_START=|BS=","StatementOptionHelp":{"#cdata":"[Syntax: B_START= | BS= variable] \n          \nSpecifies the numeric-valued variable in the Activity data set that sets B_START."},"StatementOptionType":"V"},{"StatementOptionName":"COMPARE=","StatementOptionHelp":{"#cdata":"[Syntax: COMPARE=schedule] \n          \nCompares a specific schedule (EARLY, LATE, RESOURCE or ACTUAL) in the Activity data set \nwith the baseline schedule."},"StatementOptionType":"V"},{"StatementOptionName":"SET=","StatementOptionHelp":{"#cdata":"[Syntax: SET=schedule] \n          \nSpecifies which of the four schedules (EARLY, LATE, RESOURCE, or ACTUAL) to set the baseline \nschedule equal to. The SET= option causes the addition of two new variables in the Schedule \ndata set; these are the B_START and B_FINISH variables."},"StatementOptionType":"V"},{"StatementOptionName":"UPDATE=","StatementOptionHelp":{"#cdata":"[Syntax: UPDATE=schedule] \n          \nSpecifies the name of the schedule (EARLY, LATE, ACTUAL, or RESOURCE) that can be used to update \nthe B_START and B_FINISH variables."},"StatementOptionType":"V"}]}},{"StatementName":"CALID","StatementHelp":{"#cdata":"Syntax: CALID variable ; \n\nThe CALID statement specifies the name of a SAS variable that is used in the Activity, Holiday, \nand Calendar data sets to identify the calendar to which each observation refers. This variable \ncan be either numeric or character depending on whether the different calendars are identified \nby unique numbers or names. If this variable is not found in any of the three data sets, PROC CPM \nlooks for a default variable named _CAL_ in each data set (a warning message is then printed to the \nlog)."},"StatementOptions":null},{"StatementName":"DURATION|DUR","StatementHelp":{"#cdata":"Syntax: DURATION | DUR variable / options ;  \n\nThe DURATION statement identifies the variable in the Activity data set that contains the \nlength of time necessary to complete the activity. If the network is input in AOA format, \nthen the variable identifies the duration of the activity denoted by the arc joining the \nTAILNODE and the HEADNODE. If the network is input in AON format, then the variable identifies \nthe duration of the activity specified in the ACTIVITY statement. The variable specified must \nbe numeric. The DURATION statement must be specified. The values of the DURATION variable are \nassumed to be in interval units, where interval is the value of the INTERVAL= option."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"FINISH=","StatementOptionHelp":{"#cdata":"[Syntax: FINISH=variable] \n          \nSpecifies a variable in the Activity data set that is to be used in conjunction with the START \nvariable to determine the activity's duration."},"StatementOptionType":"V"},{"StatementOptionName":"START=","StatementOptionHelp":{"#cdata":"[Syntax: START=variable] \n          \nSpecifies a variable in the Activity data set that is to be used in conjunction with the FINISH \nvariable to determine the activity's duration."},"StatementOptionType":"V"},{"StatementOptionName":"OVERRIDEDUR","StatementOptionHelp":{"#cdata":"Specifies that if the START= and FINISH= values are not missing, the duration computed from these \nvalues is to be used in place of the duration specified for the activity. In other words, the \ncomputed duration is used in place of the duration specified for the activity."},"StatementOptionType":"S"}]}},{"StatementName":"HEADNODE|HEAD|TO","StatementHelp":{"#cdata":"Syntax: HEADNODE | HEAD | TO variable ; \n\nThe HEADNODE statement is required when data are input in AOA format. This statement specifies the \nvariable in the Activity data set that contains the name of the node on the head of an arrow in the \nproject network. This node is identified with the event that signals the end of an activity on that \narc. The variable specified can be either a numeric or character variable because the procedure treats \nthis variable symbolically. Each node must be uniquely defined."},"StatementOptions":null},{"StatementName":"HOLIDAY|HOLIDAYS","StatementHelp":{"#cdata":"Syntax: HOLIDAY | HOLIDAYS variable / options ; \n\nThe HOLIDAY statement specifies the names of variables used to describe non-workdays in the \nHoliday data set. PROC CPM accounts for holidays only when the INTERVAL= option has one of \nthe following values: DAY, WORKDAY, WEEKDAY, DTDAY, DTWRKDAY, DTHOUR, DTMINUTE, or DTSECOND. \nThe HOLIDAY statement must be used with the HOLIDATA= option in the PROC CPM statement. Recall \nthat the HOLIDATA= option identifies the SAS data set that contains a list of the holidays and \nnon-workdays around which you schedule your project. Holidays are defined by specifying the start \nof the holiday (the HOLIDAY variable) and either the length of the holiday (the HOLIDUR variable) \nor the finish time of the holiday (the HOLIFIN variable). The HOLIDAY variable is mandatory with \nthe HOLIDAY statement; the HOLIDUR and HOLIFIN variables are optional."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"HOLIDUR=|HDURATION=","StatementOptionHelp":{"#cdata":"[Syntax: HOLIDUR= | HDURATION= variable] \n          \nIdentifies a variable in the Holiday data set that specifies the duration of the holiday. \nThe INTERVAL= option specified on the PROC CPM statement is used to interpret the value of \nthe holiday duration variables."},"StatementOptionType":"V"},{"StatementOptionName":"HOLIFIN=|HOLIEND=","StatementOptionHelp":{"#cdata":"[Syntax: HOLIFIN=variable | HOLIEND=variable] \n          \nIdentifies a variable in the Holiday data set that specifies the finish time of the holiday \ndefined in that observation. If a particular observation contains both the duration as well \nas the finish time of the holiday, only the finish time is used; the duration is ignored."},"StatementOptionType":"V"}]}},{"StatementName":"ALIGNTYPE|ALIGN|ATYPE","StatementHelp":{"#cdata":"Syntax: ALIGNTYPE | ALIGN | ATYPE variable ; \n\nThe ALIGNTYPE statement is used to specify whether the date value in the ALIGNDATE \nstatement is the earliest start date, the latest finish date, and so forth, for the \nactivity in the observation. The values allowed for the variable specified in the \nALIGNTYPE statement are:\n\n  SEQ   Start equal to \n  SGE   Start greater than or equal to \n  SLE   Start less than or equal to \n  FEQ   Finish equal to \n  FGE   Finish greater than or equal to \n  FLE   Finish less than or equal to \n  MS    Mandatory start equal to \n  MF    Mandatory finish equal to"},"StatementOptions":null},{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variables ; \n\nThe ID statement identifies variables not specified in the TAILNODE, HEADNODE, ACTIVITY, \nSUCCESSOR, or DURATION statements that are to be included in the Schedule data set. This \nstatement is useful for carrying any relevant information about each activity from the \nActivity data set to the Schedule data set."},"StatementOptions":null},{"StatementName":"PROJECT|PARENT","StatementHelp":{"#cdata":"Syntax: PROJECT | PARENT variables / options ; \n\nThe PROJECT statement specifies the variable in the Activity data set that identifies the \nproject to which an activity belongs. This variable must be of the same type and length as \nthe variable defined in the ACTIVITY statement. A project can also be treated as an activity \nwith precedence and time constraints. In other words, any value of the PROJECT variable can \nappear as a value of the ACTIVITY variable, and it can have specifications for the DURATION, \nALIGNDATE, ALIGNTYPE, ACTUAL, RESOURCE, and SUCCESSOR variables. However, some of the \ninterpretations of these variables for a project (or supertask) may be different from the \ncorresponding interpretation for an activity at the lowest level."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"AGGREGATEPARENTRES|AGGREGATEP_RES|AGGREGPR","StatementOptionHelp":{"#cdata":"Indicates that the resource requirements for all supertasks are to be used only for aggregation \npurposes and not for resource-constrained scheduling."},"StatementOptionType":"S"},{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Indicates that, in addition to the ascending sort variables (ES_ASC, LS_ASC, and SS_ASC) that are \nrequested by the ESORDER, LSORDER, and SSORDER options, the corresponding descending sort variables \n(ES_DESC, LS_DESC, and SS_DESC, respectively) are also to be added to the Schedule output data set."},"StatementOptionType":"S"},{"StatementOptionName":"ESORDER|ESO","StatementOptionHelp":{"#cdata":"Indicates that a variable named ES_ASC is to be added to the Schedule output data set; this variable \ncan be used to order the activities in such a way that the activities within each subproject are in \nincreasing order of the early start time."},"StatementOptionType":"S"},{"StatementOptionName":"IGNOREPARENTRES|IGNOREP_RES|IGNOREPR","StatementOptionHelp":{"#cdata":"Indicates that the resource requirements for all supertasks are to be ignored."},"StatementOptionType":"S"},{"StatementOptionName":"LSORDER|LSO","StatementOptionHelp":{"#cdata":"Indicates that a variable named LS_ASC is to be added to the Schedule output data set; this variable \ncan be used to order the activities in such a way that the activities within each subproject are in \nincreasing order of the late start time."},"StatementOptionType":"S"},{"StatementOptionName":"ORDERALL|ALL","StatementOptionHelp":{"#cdata":"Is equivalent to specifying the ESORDER and LSORDER options (and the SSORDER option when resource \nconstrained scheduling is performed)."},"StatementOptionType":"S"},{"StatementOptionName":"RSCHEDORDER|RSCHDORD|RSORDER","StatementOptionHelp":{"#cdata":"Indicates that the order variables that are included in the Schedule output data set are also to be \nincluded in the Resource Schedule output data set."},"StatementOptionType":"S"},{"StatementOptionName":"RSCHEDWBS|RSCHDWBS|RSWBS","StatementOptionHelp":{"#cdata":"Indicates that the WBS code is also to be included in the Resource Schedule data set."},"StatementOptionType":"S"},{"StatementOptionName":"SEPCRIT","StatementOptionHelp":{"#cdata":"Computes individual critical paths for each project."},"StatementOptionType":"S"},{"StatementOptionName":"SSORDER|SSO","StatementOptionHelp":{"#cdata":"Indicates that a variable named SS_ASC is to be added to the Schedule output data set; this variable \ncan be used to order the activities in such a way that the activities within each subproject are in \nincreasing order of the resource-constrained start time."},"StatementOptionType":"S"},{"StatementOptionName":"USEPROJDUR|USEPROJDURSPEC|USESPECDUR","StatementOptionHelp":{"#cdata":"Uses the specified subproject duration to compute the maximum allowed late finish for each subproject. \nThis is similar to the SEPCRIT option, except that the specified project duration is used to set an \nupper bound on each subproject's late finish time instead of the project span as computed from the \nspan of all the subtasks of the project."},"StatementOptionType":"S"},{"StatementOptionName":"WBSCODE|WBS|ADDWBS","StatementOptionHelp":{"#cdata":"Indicates that the CPM procedure is to compute a WBS code for the activities in the project using \nthe project hierarchy structure specified."},"StatementOptionType":"S"}]}},{"StatementName":"RESOURCE|RES","StatementHelp":{"#cdata":"Syntax: RESOURCE variables / resource options ; |\n    RES variables / resource options ; \n\nThe RESOURCE statement identifies the variables in the Activity data set that contain the levels \nof the various resources required by the different activities. This statement is necessary if the \nprocedure is required to summarize resource utilization for various resources."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ACTDELAY=","StatementOptionHelp":{"#cdata":"[Syntax: ACTDELAY=variable] \n          \nSpecifies the name of a variable in the Activity data set that specifies a value for the \nmaximum amount of delay allowed for each activity. The values of this variable should be \ngreater than or equal to 0. If a value is missing, the value of the DELAY= option is used \ninstead."},"StatementOptionType":"V"},{"StatementOptionName":"ACTIVITYPRTY=|ACTPRTY=","StatementOptionHelp":{"#cdata":"[Syntax: ACTIVITYPRTY=variable] \n          \nIdentifies the variable in the Activity data set that contains the priority of each activity. \nThis option is required if resource-constrained scheduling is to be performed and the scheduling \nrule specified is ACTPRTY."},"StatementOptionType":"V"},{"StatementOptionName":"ADDCAL","StatementOptionHelp":{"#cdata":"Requests that a variable, _CAL_, be added to the Resource Schedule data set that identifies the \nresource calendar for each resource used by each activity. For observations that summarize the \nactivity's schedule, this variable identifies the activity's calendar. "},"StatementOptionType":"S"},{"StatementOptionName":"ALL","StatementOptionHelp":{"#cdata":"Is equivalent to specifying the ESPROFILE and LSPROFILE options when an unconstrained schedule \nis obtained and is equivalent to specifying all four options, AVPROFILE (AVP), ESPROFILE (ESP), \nLSPROFILE (LSP), and RCPROFILE (RCP), when a resource-constrained schedule is obtained."},"StatementOptionType":"S"},{"StatementOptionName":"ALTBEFORESUP","StatementOptionHelp":{"#cdata":"Indicates that all alternate resources are to be checked first before using supplementary resources."},"StatementOptionType":"S"},{"StatementOptionName":"APPEND|APPENDINTXRATE|APPENDRATEXINT|APPENDUSAGE","StatementOptionHelp":{"#cdata":"Indicates that the Usage data set is to contain two sets of observations: the first set indicates \nthe rate of usage for each resource at the beginning of the current time period, and the second \nset contains the total usage of each resource for the current time period."},"StatementOptionType":"S"},{"StatementOptionName":"AROUTCAL=","StatementOptionHelp":{"#cdata":"[Syntax: AROUTCAL=calname] \n          \nSpecifies the name of the calendar to be used for incrementing the _TIME_ variable in the \nUsage data set."},"StatementOptionType":"V"},{"StatementOptionName":"AVPROFILE|AVP|AVL","StatementOptionHelp":{"#cdata":"Creates one variable in the Usage data set corresponding to each variable in the RESOURCE statement."},"StatementOptionType":"S"},{"StatementOptionName":"AWAITDELAY","StatementOptionHelp":{"#cdata":"Forces PROC CPM to wait until L_STARTdelay, where delay is the maximum delay allowed for the activity \n(which is the value of the ACTDELAY= variable or the DELAY= option), before an activity is scheduled \nusing supplementary levels of resources."},"StatementOptionType":"S"},{"StatementOptionName":"CUMUSAGE","StatementOptionHelp":{"#cdata":"Specifies that the Usage data set should indicate the cumulative usage of consumable resources."},"StatementOptionType":"S"},{"StatementOptionName":"DELAYANALYSIS|SLIPINF","StatementOptionHelp":{"#cdata":"Causes the addition of three new variables to the Schedule data set. The variables are R_DELAY, \nDELAY_R and SUPPL_R."},"StatementOptionType":"S"},{"StatementOptionName":"ESPROFILE|ESP|ESS","StatementOptionHelp":{"#cdata":"Creates one variable in the Usage data set corresponding to each variable in the RESOURCE statement. \nEach new variable denotes the resource usage based on the early start schedule for the corresponding \nresource variable."},"StatementOptionType":"S"},{"StatementOptionName":"E_START","StatementOptionHelp":{"#cdata":"Requests that the E_START and E_FINISH variables, namely the variables specifying the early start \nschedule, be included in the Schedule data set in addition to the S_START and S_FINISH variables."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUNSCHED","StatementOptionHelp":{"#cdata":"Excludes the resource consumption corresponding to unscheduled activities from the daily resource \nusage reported for each time period in the Usage data set."},"StatementOptionType":"S"},{"StatementOptionName":"FILLUNSCHED|FILLMISSING","StatementOptionHelp":{"#cdata":"Fills in S_START and S_FINISH values for activities that are still unscheduled when resource constrained \nscheduling is stopped either by the STOPDATE= option or due to resource infeasibilities."},"StatementOptionType":"S"},{"StatementOptionName":"F_FLOAT","StatementOptionHelp":{"#cdata":"Requests that the Schedule data set include the F_FLOAT variable computed using the unconstrained \nearly and late start schedules."},"StatementOptionType":"S"},{"StatementOptionName":"INCLUNSCHED","StatementOptionHelp":{"#cdata":"Enables the inclusion of activities that are still unscheduled in the computation of daily \n(or cumulative) resource usage in the Usage data set when resource-constrained scheduling \nis stopped either by the STOPDATE= option or due to resource infeasibilities."},"StatementOptionType":"S"},{"StatementOptionName":"INDEPENDENTALLOC|INDEPALLOC","StatementOptionHelp":{"#cdata":"Enables each resource to be scheduled independently for each activity during resource-constrained \nscheduling."},"StatementOptionType":"S"},{"StatementOptionName":"LSPROFILE|LSP|LSS","StatementOptionHelp":{"#cdata":"Creates one variable in the Usage data set corresponding to each variable in the RESOURCE statement."},"StatementOptionType":"S"},{"StatementOptionName":"L_START","StatementOptionHelp":{"#cdata":"Requests that the L_START and L_FINISH variables, namely the variables specifying the late start \nschedule, be included in the Schedule data set in addition to the S_START and S_FINISH variables."},"StatementOptionType":"S"},{"StatementOptionName":"MAXDATE=","StatementOptionHelp":{"#cdata":"[Syntax: MAXDATE=maxdate] \n          \nSpecifies the maximum value of the _TIME_ variable in the Usage data set. The default value \nof maxdate is the maximum finish time for all of the schedules for which a usage profile was \nrequested."},"StatementOptionType":"V"},{"StatementOptionName":"MAXNSEGMT=|MAXNSEG=","StatementOptionHelp":{"#cdata":"[Syntax: MAXNSEGMT=variable] \n          \nSpecifies a variable in the Activity data set that indicates the maximum number of segments \nthat the current activity can be split into."},"StatementOptionType":"V"},{"StatementOptionName":"MILESTONERESOURCE","StatementOptionHelp":{"#cdata":"Specifies that milestone activities consume resources. If a nonzero requirement is specified for a \nmilestone, the corresponding consumable resources are used at the scheduled time of that milestone."},"StatementOptionType":"S"},{"StatementOptionName":"MILESTONENORESOURCE","StatementOptionHelp":{"#cdata":"Specifies that milestone activities do not consume resources. This implies that all resource \nrequirements are ignored for milestone activities. This is the default behavior."},"StatementOptionType":"S"},{"StatementOptionName":"MINDATE=","StatementOptionHelp":{"#cdata":"[Syntax: MINDATE=mindate] \n          \nSpecifies the minimum value of the _TIME_ variable in the Usage data set. The default value\nof mindate is the minimum start time for all of the schedules for which a usage profile is \nrequested."},"StatementOptionType":"V"},{"StatementOptionName":"MINSEGMTDUR=|MINSEGD=","StatementOptionHelp":{"#cdata":"[Syntax: MINSEGMTDUR=variable] \n          \nSpecifies a variable in the Activity data set that indicates the minimum duration of any \nsegment of the current activity. A missing value for this variable is set to a value equal \nto one fifth of the activity's duration."},"StatementOptionType":"V"},{"StatementOptionName":"MULTIPLEALTERNATES|MULTALT","StatementOptionHelp":{"#cdata":"Indicates that multiple alternate resources can be used to substitute for a single resource."},"StatementOptionType":"S"},{"StatementOptionName":"NOE_START","StatementOptionHelp":{"#cdata":"Requests that the E_START and E_FINISH variables, namely the variables specifying the early start \nschedule, be dropped from the Schedule data set. Note that the default is E_START."},"StatementOptionType":"S"},{"StatementOptionName":"NOF_FLOAT","StatementOptionHelp":{"#cdata":"Requests that the F_FLOAT variable be dropped from the Schedule data set when resource-constrained \nscheduling is requested. This is the default behavior."},"StatementOptionType":"S"},{"StatementOptionName":"NORESOURCEVARS|NORESVARSOUT|NORESVARS","StatementOptionHelp":{"#cdata":"Requests that the variables specified in the RESOURCE statement be dropped from the Schedule \ndata set."},"StatementOptionType":"S"},{"StatementOptionName":"NOT_FLOAT","StatementOptionHelp":{"#cdata":"Requests that the T_FLOAT variable be dropped from the Schedule data set when resource-constrained \nscheduling is requested. This is the default behavior."},"StatementOptionType":"S"},{"StatementOptionName":"NROUTCAL=","StatementOptionHelp":{"#cdata":"[Syntax: NROUTCAL=calnum] \n          \nSpecifies the number of the calendar to be used for incrementing the _TIME_ variable in the \nUsage data set."},"StatementOptionType":"V"},{"StatementOptionName":"OBSTYPE=","StatementOptionHelp":{"#cdata":"Specifies a character variable in the Resource data set that contains the type identifier for \neach observation."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"RESLEVEL","@Value2":"RESTYPE","@Value3":"RESUSAGE","@Value4":"RESPRTY","@Value5":"SUPLEVEL","@Value6":"ALTRATE","@Value7":"ALTPRTY","@Value8":"RESRCDUR","@Value9":"CALENDAR","@Value10":"MULTALT","@Value11":"MINARATE","@Value12":"AUXRES"},"StatementOptionToolTips":{"@ToolTip1":"RESLEVEL variable","@ToolTip2":"RESTYPE variable","@ToolTip3":"RESUSAGE variable","@ToolTip4":"RESPRTY variable","@ToolTip5":"SUPLEVEL variable","@ToolTip6":"ALTRATE variable","@ToolTip7":"ALTPRTY variable","@ToolTip8":"RESRCDUR variable","@ToolTip9":"CALENDAR variable","@ToolTip10":"MULTALT variable","@ToolTip11":"MINARATE variable","@ToolTip12":"AUXRES variable"}},{"StatementOptionName":"PERIOD=|PER=","StatementOptionHelp":{"#cdata":"[Syntax: PERIOD=variable] \n          \nIdentifies the variable in the RESOURCEIN= data set that specifies the date from which a specified \nlevel of the resource is available for each observation with the OBSTYPE variable equal to 'RESLEVEL'."},"StatementOptionType":"V"},{"StatementOptionName":"RCPROFILE|RCP|RCS","StatementOptionHelp":{"#cdata":"Creates one variable in the Usage data set corresponding to each variable in the RESOURCE statement."},"StatementOptionType":"S"},{"StatementOptionName":"RESID=","StatementOptionHelp":{"#cdata":"[Syntax: RESID=variable] \n          \nSpecifies a variable in the RESOURCEIN= data set that indicates the name of the resource \nvariable for which alternate resource information or auxiliary resource information is being \nspecified in that observation."},"StatementOptionType":"V"},{"StatementOptionName":"RESOURCEVARS|RESVARSOUT","StatementOptionHelp":{"#cdata":"Requests that the variables specified in the RESOURCE statement be included in the Schedule data set."},"StatementOptionType":"S"},{"StatementOptionName":"ROUTINTERVAL=|STEPINT=","StatementOptionHelp":{"#cdata":"[Syntax: ROUTINTERVAL=routinterval] \n          \nSpecifies the units to be used to determine the time interval between two successive \nvalues of the _TIME_ variable in the Usage data set."},"StatementOptionType":"V"},{"StatementOptionName":"ROUTINTPER=|STEPSIZE=|STEP=","StatementOptionHelp":{"#cdata":"[Syntax: ROUTINTPER=routintper] \n          \nSpecifies the number of routinterval units between successive observations in the Usage \ndata set where routinterval is the value of the ROUTINTERVAL= option."},"StatementOptionType":"V"},{"StatementOptionName":"ROUTNOBREAK|ROUTCONT","StatementOptionHelp":{"#cdata":"Specifies that the _TIME_ variable is to be incremented using a calendar with no breaks \nor holidays."},"StatementOptionType":"S"},{"StatementOptionName":"RSCHEDID=|RSID=","StatementOptionHelp":{"#cdata":"[Syntax: RSCHEDID=(variables)] \n          \nIdentifies variables not specified in the TAILNODE, HEADNODE, or ACTIVITY statements that \nare to be included in the Resource Schedule data set. This option is useful for carrying \nany relevant information about each activity from the Activity data set to the Resource \nSchedule data set."},"StatementOptionType":"V"},{"StatementOptionName":"SCHEDRULE=|RULE=","StatementOptionHelp":{"#cdata":"Specifies the rule to be used to order the list of activities whose predecessor activities have been \ncompleted while scheduling activities subject to resource constraints."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"LST","@Value2":"LFT","@Value3":"SHORTDUR","@Value4":"ACTPRTY","@Value5":"RESPRTY","@Value6":"DELAYLST"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the activities in the waiting list are sorted in the order of increasing L_START time.","@ToolTip2":"Specifies that the activities in the waiting list are sorted in the order of increasing L_FINISH time.","@ToolTip3":"Specifies that the activities in the waiting list are sorted in the order of increasing durations.","@ToolTip4":"Specifies that PROC CPM should sort the activities in the waiting list in the order of increasing  values of the variable specified in the ACTIVITYPRTY= option in the RESOURCE statement.","@ToolTip5":"Specifies that PROC CPM should sort the activities in the waiting list in the order of increasing  values of the resource priority for the most important resource used by each activity.","@ToolTip6":"Specifies that the activities in the waiting list are sorted in the order of increasing L_START +  ACTDELAY, where ACTDELAY is the value of the ACTDELAY variable for that activity."}},{"StatementOptionName":"SPLITFLAG","StatementOptionHelp":{"#cdata":"Indicates that activities are allowed to be split into segments during resource allocation."},"StatementOptionType":"S"},{"StatementOptionName":"STOPDATE=","StatementOptionHelp":{"#cdata":"[Syntax: STOPDATE=stdate] \n          \nSpecifies the cutoff date for resource-constrained scheduling. When such a date is specified, \nS_START and S_FINISH are set to missing beyond the cutoff date."},"StatementOptionType":"V"},{"StatementOptionName":"T_FLOAT","StatementOptionHelp":{"#cdata":"Requests that the Schedule data set include the T_FLOAT variable computed using the unconstrained \nearly and late start schedules."},"StatementOptionType":"S"},{"StatementOptionName":"TOTUSAGE|INTXRATE|INTUSAGE|RATEXINT","StatementOptionHelp":{"#cdata":"Specifies that the Usage data set is to indicate the total usage of the resource for the current \ntime period."},"StatementOptionType":"S"},{"StatementOptionName":"UNSCHEDMISS","StatementOptionHelp":{"#cdata":"Sets the S_START and S_FINISH values to missing for activities that are still unscheduled when \nresource constrained scheduling is stopped either by the STOPDATE= option or due to resource \ninfeasibilities. This is the default and can be turned off by specifying the FILLUNSCHED option."},"StatementOptionType":"S"},{"StatementOptionName":"UPDTUNSCHED","StatementOptionHelp":{"#cdata":"Causes the procedure to use the S_START and S_FINISH times of scheduled activities to update  \nthe projected start and finish times for the activities that are still unscheduled when \nresource constrained scheduling is stopped either by the STOPDATE= option or due to resource \ninfeasibilities."},"StatementOptionType":"S"},{"StatementOptionName":"WORK=","StatementOptionHelp":{"#cdata":"[Syntax: WORK=variable] \n          \nIdentifies a variable in the Activity data set that specifies the total amount of work required \nby one unit of a resource. This work is represented in units of the INTERVAL parameter."},"StatementOptionType":"V"}]}},{"StatementName":"SUCCESSOR|SUCC","StatementHelp":{"#cdata":"Syntax: SUCCESSOR variables / lag options ; \n\nThe SUCCESSOR statement is required when data are input in an AON format. This statement \nspecifies the variables that contain the names of the immediate successor nodes (activities) \nto the ACTIVITY node. These variables must be of the same type and length as those defined in \nthe ACTIVITY statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALAGCAL=","StatementOptionHelp":{"#cdata":"[Syntax: ALAGCAL=calname] \n          \nSpecifies the name of the calendar to be used for all lags. The default value for this option \nis the DEFAULT calendar."},"StatementOptionType":"V"},{"StatementOptionName":"LAG=","StatementOptionHelp":{"#cdata":"[Syntax: LAG=variables] \n          \nSpecifies the variables in the Activity data set used to identify the lag relationship (lag type, \nduration, and calendar) between the activity and its successor. The LAG variables must be character \nvariables. You can specify as many LAG variables as there are SUCCESSOR variables; each SUCCESSOR \nvariable is matched with the corresponding LAG variable."},"StatementOptionType":"V"},{"StatementOptionName":"NLAGCAL=","StatementOptionHelp":{"#cdata":"[Syntax: NLAGCAL=calnum] \n          \nSpecifies the number of the calendar to be used for all lags. The default value for this option \nis the DEFAULT calendar."},"StatementOptionType":"V"}]}},{"StatementName":"TAILNODE|TAIL|FROM","StatementHelp":{"#cdata":"Syntax: TAILNODE | TAIL | FROM variable ; \n\nThe TAILNODE statement is required when data are input in AOA (arrow notation) format. It specifies \nthe variable that contains the name of each node on the tail of an arc in the project network. This \nnode is identified with the event that signals the start of the activity on that arc. The variable \nspecified can be either a numeric or character variable since the procedure treats this variable \nsymbolically. Each node must be uniquely defined."},"StatementOptions":null}]}}}