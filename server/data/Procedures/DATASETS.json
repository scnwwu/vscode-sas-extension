{"Procedure":{"Name":"DATASETS","ProductGroup":"BASE|CAS","ProcedureHelp":{"#cdata":"The DATASETS procedure is a utility procedure that manages your SAS files. \n  \nWith PROC DATASETS, you can do the following:\n\n  o copy SAS files from one SAS library to another \n  o rename SAS files \n  o repair SAS files \n  o delete SAS files \n  o list the SAS files that are contained in a SAS library \n  o list the attributes of a SAS data set, such as: \n      o the date when the data was last modified \n      o whether the data is compressed \n      o whether the data is indexed \n  o manipulate passwords on SAS files \n  o append SAS data sets \n  o modify attributes of SAS data sets and variables within the data sets \n  o create and delete indexes on SAS data sets \n  o create and manage audit files for SAS data sets \n  o create and delete integrity constraints on SAS data sets"},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ALTER=","ProcedureOptionHelp":{"#cdata":"[Syntax: ALTER=alter-password]      \n      \nProvides the alter password for any alter-protected SAS files in the SAS library."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DETAILS","ProcedureOptionHelp":{"#cdata":"Specifies that the following columns are written to the log: \n\nObs, Entries, or Indexes \ngives the number of observations for SAS files of type AUDIT, DATA, and VIEW; the number of entries for type CATALOG.\n\nVars \ngives the number of variables for types AUDIT, DATA, and VIEW.\n\nLabel \ncontains the label associated with the SAS data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NODETAILS","ProcedureOptionHelp":{"#cdata":"Specifies that the following columns are not written to the log: \n\nObs, Entries, or Indexes \ngives the number of observations for SAS files of type AUDIT, DATA, and VIEW; the \nnumber of entries for type CATALOG.\n\nVars \ngives the number of variables for types AUDIT, DATA, and VIEW.\n\nLabel \ncontains the label associated with the SAS data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"FORCE","ProcedureOptionHelp":{"#cdata":"Performs two separate actions: \n\n  o forces a RUN group to execute even if errors are present in one or more statements in the RUN group.\n\n  o forces all APPEND statements to concatenate two data sets even when the variables in the data sets \n    are not exactly the same."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"GENNUM=","ProcedureOptionHelp":{"#cdata":"Restricts processing for generation data sets."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"HIST","@Value3":"REVERT","@Value4":"<integer>"},"ProcedureOptionToolTips":{"@ToolTip1":"For subordinate CHANGE and DELETE statements, refers to the base version and all  historical versions in a generation group.","@ToolTip2":"For a subordinate DELETE statement, refers to all historical versions, but excludes  the base version in a generation group.","@ToolTip3":"For a subordinate DELETE statement, refers to the base version in a generation group  and changes the most current historical version, if it exists, to the base version.","@ToolTip4":"For subordinate AUDIT, CHANGE, MODIFY, DELETE, and REPAIR statements, refers to a  specific version in a generation group."}},{"ProcedureOptionName":"KILL","ProcedureOptionHelp":{"#cdata":"Deletes all SAS files in the SAS library that are available for processing."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"LIBRARY=|LIB=|DDNAME=|DD=","ProcedureOptionHelp":{"#cdata":"[Syntax: LIBRARY=libref] \n      \nNames the library that the procedure processes. This library is the procedure \ninput/output library."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"MEMTYPE=|MTYPE=|MT=","ProcedureOptionHelp":{"#cdata":"[Syntax: MEMTYPE=(mtype(s))] \n      \nRestricts processing to one or more member types and restricts the listing of the \ndata library directory to SAS files of the specified member types."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"ProcedureOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}},{"ProcedureOptionName":"NOLIST","ProcedureOptionHelp":{"#cdata":"Suppresses the printing of the directory of the SAS files in the SAS log."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOWARN","ProcedureOptionHelp":{"#cdata":"Suppresses the error processing that occurs when a SAS file that is specified in \na SAVE, CHANGE, EXCHANGE, REPAIR, DELETE, or COPY statement or listed as the \nfirst SAS file in an AGE statement, is not in the procedure input library."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PW=","ProcedureOptionHelp":{"#cdata":"[Syntax: PW= password] \n      \nProvides the password for any protected SAS files in the SAS library. PW= can act \nas an alias for READ=, WRITE=, or ALTER=."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"READ=","ProcedureOptionHelp":{"#cdata":"[Syntax: READ=read-password] \n      \nProvides the read-password for any read-protected SAS files in the SAS library."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"AGE","StatementHelp":{"#cdata":"Syntax: AGE current-name related-SAS-file-1 <...current-name related-SAS-file-n> \n    </ <ALTER=alter-password> \n    <MEMTYPE=mtype>>; \n    \nRenames a group of related SAS files in a library."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALTER=","StatementOptionHelp":{"#cdata":"[Syntax: ALTER=alter-password] \n          \nProvides the alter password for any alter-protected SAS files named in the AGE statement."},"StatementOptionType":"V"},{"StatementOptionName":"MEMTYPE=|MTYPE=|MT=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=mtype] \n          \nRestricts processing to one member type."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}}]}},{"StatementName":"APPEND","StatementHelp":{"#cdata":"Syntax: APPEND BASE=<libref.>SAS-data-set \n    <APPENDVER=V6> \n    <DATA=<libref.>SAS-data-set> \n    <FORCE> <NOWARN>; \n    \nAdds the observations from one SAS data set to the end of another SAS data set."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"BASE=|OUT=","StatementOptionHelp":{"#cdata":"[Syntax: BASE=<libref.> SAS-data-set] \n          \nNames the data set to which you want to add rows. BASE= option cannot specify a CAS table.\n\nlibref\n  specifies the library that contains the SAS data set. If you omit the libref, the default is the libref \n  for the procedure input library. If you are using PROC APPEND, the default for libref is either Work or User. \n\ndata-set\n  names a SAS data set. If the APPEND statement cannot find an existing data set with this name, it creates \n  a new data set in the library. That is, you can use the APPEND statement to create a data set by specifying \n  a new data set name in the BASE= argument."},"StatementOptionType":"DV|RV"},{"StatementOptionName":"APPENDVER=","StatementOptionHelp":{"#cdata":"Specifies a SAS version behavior for appending observations to the BASE= data set."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"V6"},"StatementOptionToolTips":{"@ToolTip1":"Uses the Version 6 behavior for appending observations to the BASE= data set, which  is to append one observation at a time."}},{"StatementOptionName":"DATA=|NEW=","StatementOptionHelp":{"#cdata":"[Syntax: DATA=<libref.> SAS-data-set] \n          \nNames the SAS data set or CAS table containing rows that you want to append to the end of the data set specified in the BASE= argument. \n\nlibref\n  specifies the library that contains the data set. If you omit libref, the default is the libref \n  for the procedure input library. The DATA= data set or table can be from any library. You must \n  use the two-level name if the data set resides in a library other than the procedure input library. \n  \ndata-set\n  names a data set or table. If the APPEND statement cannot find an existing data set with this name, \n  it stops processing. \n  \nDefault: the most recently created data set, from any library"},"StatementOptionType":"DV"},{"StatementOptionName":"FORCE","StatementOptionHelp":{"#cdata":"Forces the APPEND statement to concatenateSAS data sets or a CAS table to a SAS data set when the \nDATA= data set contains variables that meet one of the following criteria: \n\n    o are not in the BASE= data set\n    o do not have the same type as the variables in the BASE= data set\n    o are longer than the variables in the BASE= data set."},"StatementOptionType":"S"},{"StatementOptionName":"GETSORT","StatementOptionHelp":{"#cdata":"Copies the sort indicator from the DATA= data set to the BASE= data set."},"StatementOptionType":"S"},{"StatementOptionName":"NOWARN","StatementOptionHelp":{"#cdata":"Suppresses the warning when used with the FORCE option to concatenate two SAS data sets or a CAS table \nand a SAS data set with different variables."},"StatementOptionType":"S"}]}},{"StatementName":"ATTRIB","StatementHelp":{"#cdata":"Syntax: ATTRIB variable list(s) attribute list(s);\n      \nAssociates a format, informat, or label with variables in the SAS data set specified \nin the MODIFY statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"FORMAT=","StatementOptionHelp":{"#cdata":"[Syntax: FORMAT=format] \n          \nAssociates a format with variables in variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"INFORMAT=","StatementOptionHelp":{"#cdata":"[Syntax: INFORMAT=informat] \n          \nAssociates an informat with variables in variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"LABEL=","StatementOptionHelp":{"#cdata":"[Syntax: LABEL='label'] \n          \nAssociates a label with variables in the variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Specifies all variables."},"StatementOptionType":"S"}]}},{"StatementName":"AUDIT","StatementHelp":{"#cdata":"Syntax: AUDIT SAS-file <(SAS-password)>;  \n    INITIATE  \n      <AUDIT_ALL=NO|YES>; \n      <LOG <ADMIN_IMAGE=YES|NO> \n      <BEFORE_IMAGE=YES|NO> \n      <DATA_IMAGE=YES|NO> \n      <ERROR_IMAGE=YES|NO>>; \n      <USER_VAR variable-1 <... variable-n>>; \nor\n\n    AUDIT SAS-file <(<SAS-password> <GENNUM= integer>)>;  \n      SUSPEND|RESUME|TERMINATE;  \n \nInitiates and controls event logging to an audit file as well as suspends, resumes, \nor terminates event logging in an audit file."},"StatementOptions":{"StatementOption":{"StatementOptionName":"GENNUM=","StatementOptionHelp":{"#cdata":"[Syntax: GENNUM=integer] \n          \nSpecifies that the SUSPEND, RESUME, or TERMINATE action be performed on the audit \ntrail of a generation file."},"StatementOptionType":"V"}}},{"StatementName":"CHANGE","StatementHelp":{"#cdata":"Syntax: CHANGE old-name-1=new-name-1 \n    <...old-name-n=new-name-n > \n    </ <ALTER=alter-password> \n    <GENNUM=ALL|integer> \n    <MEMTYPE=mtype>>; \n    \nRenames one or more SAS files in the same SAS library."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALTER=","StatementOptionHelp":{"#cdata":"[Syntax: ALTER=alter-password] \n          \nProvides the alter password for any alter-protected SAS files named in the CHANGE statement."},"StatementOptionType":"V"},{"StatementOptionName":"GENNUM=","StatementOptionHelp":{"#cdata":"[Syntax: GENNUM=ALL|integer] \n          \nRestricts processing for generation data sets.  You can use the option either in \nparentheses after the name of each SAS file or after a forward slash. The following \nlist shows valid values:\n\n  ALL | 0 \n  refers to the base version and all historical versions of a generation group.\n\n  integer \n  refers to a specific version from a generation group. Specifying a positive number is an absolute\n  reference to a specific generation number that is appended to a data set's name; that is, gennum=2\n  specifies MYDATA#002. Specifying a negative number is a relative reference to a historical version\n  in relation to the base version, from the youngest to the oldest; that is, gennum=-1 refers to the\nyoungest historical version."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<integer>","@Value2":"ALL"},"StatementOptionToolTips":{"@ToolTip1":"Refers to a specific version from a generation group. Specifying a positive number  is an absolute reference to a specific generation number that is appended to a  data set's name; that is, gennum=2 specifies MYDATA#002. Specifying a negative  number is a relative reference to a historical version in relation to the base  version, from the youngest to the oldest; that is, gennum=-1 refers to the  youngest historical version.","@ToolTip2":"Refers to the base version and all historical versions of a generation group. Same  as specifying GENNUM=0."}},{"StatementOptionName":"MEMTYPE=|MTYPE=|MT=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=mtype] \n          \nRestricts processing to one member type."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}}]}},{"StatementName":"CONTENTS","StatementHelp":{"#cdata":"Syntax: CONTENTS <option(s)>; \n\n      \nDescribes the contents of one or more SAS data sets or CAS tables and prints the directory of the \nSAS library."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CENTILES","StatementOptionHelp":{"#cdata":"Prints centiles information for indexed variables."},"StatementOptionType":"S"},{"StatementOptionName":"DATA=","StatementOptionHelp":{"#cdata":"[Syntax: DATA=SAS-file-specification | DATA=CAS-table-specification] \n          \nSpecifies an entire library or a specific SAS data set or CAS table within a library.\n\nCAS-table-specification can take one of the following forms: \n\n<libref.>CAS-table\n  names one table to process. The default for libref is the libref of the procedure input library. For example, \n  to obtain the contents of the table HtWt from the procedure input library, use the following CONTENTS statement: \n    \n    contents data=HtWt;\n    \n<libref.>_ALL_ \n  gives you information about all CAS tables.libref refers to the caslib. The default for libref is the libref of the \n  procedure input library. DATA=_ALL_ automatically prints a listing of the tables that are contained in the caslib. \n  \nDefault: most recently created table in your job or session, from any library. "},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"Includes additional columns of information in the output, but only if DIRECTORY \nis also specified."},"StatementOptionType":"S"},{"StatementOptionName":"NODETAILS","StatementOptionHelp":{"#cdata":"Specifies that no additional columns of information are included in the output."},"StatementOptionType":"S"},{"StatementOptionName":"DIRECTORY","StatementOptionHelp":{"#cdata":"Prints a list of all CAS tables or SAS files in the specified SAS library."},"StatementOptionType":"S"},{"StatementOptionName":"FMTLEN","StatementOptionHelp":{"#cdata":"Prints the length of the informat or format."},"StatementOptionType":"S"},{"StatementOptionName":"MEMTYPE=|MT=|MTYPE=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=(mtype-1 <...mtype-n>)] \n          \nRestricts processing to one or more member types."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}},{"StatementOptionName":"NODS","StatementOptionHelp":{"#cdata":"Suppresses printing the contents of individual CAS tables or files when you specify _ALL_ in the \nDATA= option."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Suppresses printing the output of the CONTENTS statement."},"StatementOptionType":"V"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Controls the order when printing a list of variables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"COLLATE","@Value2":"CASECOLLATE","@Value3":"IGNORECASE","@Value4":"VARNUM"},"StatementOptionToolTips":{"@ToolTip1":"Prints a list of variables in alphabetical order beginning with uppercase and then lowercase names.","@ToolTip2":"Prints a list of variables in alphabetical order even if they include mixed-case names and numerics.","@ToolTip3":"Prints a list of variables in alphabetical order ignoring the case of the letters.","@ToolTip4":"Is the same as the VARNUM option."}},{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"[Syntax: OUT=table-name] \n          \nNames an output table."},"StatementOptionType":"DV"},{"StatementOptionName":"OUT2=","StatementOptionHelp":{"#cdata":"[Syntax: OUT2=SAS-data-set] \n          \nNames the output data set to contain information about indexes and integrity constraints."},"StatementOptionType":"DV"},{"StatementOptionName":"SHORT","StatementOptionHelp":{"#cdata":"Prints only the list of variable names, the index information, and the sort information \nfor the SAS data set. \n\nRestriction:\nIf the list of variables is more than 32,767 characters, the list is truncated and a WARNING is written \nto the log. To get a complete list of the variables, request an alphabetical listing of the variables."},"StatementOptionType":"S"},{"StatementOptionName":"VARNUM","StatementOptionHelp":{"#cdata":"Prints a list of the variable names in the order of their logical position in the table.\nThe physical position of the variable in the table is engine-dependent."},"StatementOptionType":"V"}]}},{"StatementName":"COPY","StatementHelp":{"#cdata":"Syntax: COPY OUT=libref-1 \n    <CLONE|NOCLONE> \n    <CONSTRAINT=YES|NO> \n    <DATECOPY> \n    <FORCE> \n    <IN=libref-2> \n    <INDEX=YES|NO> \n    <OVERRIDE=(ds-option-1=value-1 <ds-option-2=value-2 ...> ) >;\n    <SELECT table-name(s)>; \n    <EXCLUDE table-name(s);>\n    <MEMTYPE=(mtype-1 <...mtype-n>)> \n    <MOVE <ALTER=alter-password>> ;\n\nCopies all or some of the SAS files in a SAS library."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=|OUTLIB=|OUTDD=","StatementOptionHelp":{"#cdata":"[Syntax: OUT=libref-1] \n          \nNames the SAS library to copy CAS tables or SAS files to."},"StatementOptionType":"DV"},{"StatementOptionName":"IN=|INLIB=|INDD=","StatementOptionHelp":{"#cdata":"[Syntax: IN=libref-2] \n          \nNames the SAS library containing CAS tables or SAS files to copy."},"StatementOptionType":"DV"},{"StatementOptionName":"ALTER=","StatementOptionHelp":{"#cdata":"[Syntax: ALTER=alter-password] \n          \nProvides the alter password for any alter-protected SAS files that you are moving \nfrom one data library to another."},"StatementOptionType":"V"},{"StatementOptionName":"CLONE","StatementOptionHelp":{"#cdata":"Specifies to copy data set attributes. \n          \nThe only attribute that can be used with the CAS engine is COMPRESS."},"StatementOptionType":"S"},{"StatementOptionName":"NOCLONE","StatementOptionHelp":{"#cdata":"Specifies not to copy data set attributes."},"StatementOptionType":"S"},{"StatementOptionName":"CONSTRAINT=","StatementOptionHelp":{"#cdata":"Specifies whether to copy all integrity constraints when copying a data set."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies to copy all integrity constraints when copying a data set.","@ToolTip2":"Specifies not to copy integrity constraints when copying a data set."}},{"StatementOptionName":"DATECOPY","StatementOptionHelp":{"#cdata":"Copies the SAS internal date and time when the SAS file was created and the date \nand time when it was last modified to the resulting copy of the file."},"StatementOptionType":"S"},{"StatementOptionName":"FORCE","StatementOptionHelp":{"#cdata":"Allows you to use the MOVE option for a SAS data set on which an audit trail exists."},"StatementOptionType":"S"},{"StatementOptionName":"INDEX=","StatementOptionHelp":{"#cdata":"Specifies whether to copy all indexes for a data set when copying the data set to another SAS library."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies to copy all indexes for a data set when copying the data set to another SAS library.","@ToolTip2":"Specifies not to copy indexes for a data set when copying the data set to another SAS library."}},{"StatementOptionName":"MEMTYPE=|MT=|MTYPE=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=(mtype-1 <...mtype-n>)] \n          \nRestricts processing to one or more member types.\n\nMember types available for the CAS engine are DATA and ALL."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}},{"StatementOptionName":"MOVE","StatementOptionHelp":{"#cdata":"Moves CAS tables or SAS files from the input data library (named with the IN= option) to the output \ndata library (named with the OUT= option) and deletes the original files from the \ninput data library."},"StatementOptionType":"S"},{"StatementOptionName":"OVERRIDE=","StatementOptionHelp":{"#cdata":"Syntax: OVERRIDE=(ds-option-1=value-1 <ds-option-2=value-2> ...) \n          \nOverrides specified output SAS data set options copied from the input CAS table. Some SAS data set options \nmight not be appropriate in the output CAS table context of COPY. \n\nRestriction:\nThe OVERRIDE= option is ignored if the NOCLONE option is specified. However, it can be used to modify \nattributes other than those controlled by the NOCLONE option."},"StatementOptionType":"V"}]}},{"StatementName":"DELETE","StatementHelp":{"#cdata":"Syntax: DELETE SAS-file-1 <...SAS-file-n> \n    </ <ALTER=alter-password> \n    <GENNUM=ALL|HIST|REVERT|integer> \n    <MEMTYPE=mtype>>; \n    \n Syntax: DELETE table-name(s) ;\n\nDeletes tables from a library."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALTER=","StatementOptionHelp":{"#cdata":"[Syntax: ALTER=alter-password] \n          \nProvides the alter password for any alter-protected SAS files that you want to delete."},"StatementOptionType":"V"},{"StatementOptionName":"GENNUM=","StatementOptionHelp":{"#cdata":"Restricts processing for generation data sets."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ALL","@Value2":"HIST","@Value3":"REVERT","@Value4":"integer"},"StatementOptionToolTips":{"@ToolTip1":"Refers to the base version and all historical versions in a generation group.","@ToolTip2":"Refers to all historical versions, but excludes the base version in a generation group.","@ToolTip3":"Deletes the base version and changes the most current historical version, if it exists,  to the base version.","@ToolTip4":"Is a number that references a specific version from a generation group."}},{"StatementOptionName":"MEMTYPE=|MT=|MTYPE=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=mtype] \n          \nRestricts processing to one member type."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}}]}},{"StatementName":"EXCHANGE","StatementHelp":{"#cdata":"Syntax: EXCHANGE name-1=other-name-1 \n    <...name-n=other-name-n> \n    </ <ALTER=alter-password> \n    <MEMTYPE=mtype>>; \n\nExchanges the names of two SAS files in a SAS library."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALTER=","StatementOptionHelp":{"#cdata":"[Syntax: ALTER=alter-password] \n          \nProvides the alter password for any alter-protected SAS files whose names you want to exchange."},"StatementOptionType":"V"},{"StatementOptionName":"MEMTYPE=|MTYPE=|MT=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=mtype] \n          \nRestricts processing to one member type."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}}]}},{"StatementName":"EXCLUDE","StatementHelp":{"#cdata":"Syntax: EXCLUDE table-name(s) </ MEMTYPE=mtype>; \n      \nExcludes tables from copying."},"StatementOptions":{"StatementOption":{"StatementOptionName":"MEMTYPE=|MTYPE=|MT=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=mtype] \n          \nRestricts processing to one member type.\n\nNote: MEMTYPE= does not apply to CAS tables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}}}},{"StatementName":"FORMAT","StatementHelp":{"#cdata":"Syntax: FORMAT variable-1 <format-1> <...variable-n <format-n>>; \n\nPermanently assigns, changes, and removes variable formats in the SAS data set \nspecified in the MODIFY statement."},"StatementOptions":null},{"StatementName":"IC CREATE","StatementHelp":{"#cdata":"Syntax: IC CREATE <constraint-name=> constraint \n    <MESSAGE='message-string' <MSGTYPE=USER>>; \n    \nCreates an integrity constraint."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"NOT NULL","StatementOptionHelp":{"#cdata":"[constraint][Syntax: NOT NULL (variable)] \n          \nSpecifies that variable does not contain a SAS missing value, including special\nmissing values."},"StatementOptionType":"S"},{"StatementOptionName":"UNIQUE","StatementOptionHelp":{"#cdata":"[constraint][Syntax: UNIQUE (variables)] \n          \nSpecifies that the values of variables must be unique. This constraint is identical\nto DISTINCT."},"StatementOptionType":"S"},{"StatementOptionName":"DISTINCT","StatementOptionHelp":{"#cdata":"[constraint][Syntax: DISTINCT (variables)] \n          \nSpecifies that the values of variables must be unique. This constraint is identical \nto UNIQUE."},"StatementOptionType":"S"},{"StatementOptionName":"CHECK","StatementOptionHelp":{"#cdata":"[constraint][Syntax: CHECK (WHERE-expression)] \n          \nLimits the data values of variables to a specific set, range, or list of values. \nThis behavior is accomplished with a WHERE expression."},"StatementOptionType":"S"},{"StatementOptionName":"PRIMARY KEY","StatementOptionHelp":{"#cdata":"[constraint][Syntax: PRIMARY KEY (variables)] \n          \nSpecifies a primary key, that is, a set of variables that do not contain missing \nvalues and whose values are unique."},"StatementOptionType":"S"},{"StatementOptionName":"FOREIGN KEY","StatementOptionHelp":{"#cdata":"[constraint][Syntax: FOREIGN KEY (variables)] \n          \nSpecifies a foreign key, that is, a set of variables whose values are linked \nto the values of the primary key variables in another data file."},"StatementOptionType":"S"},{"StatementOptionName":"REFERENCES","StatementOptionHelp":{"#cdata":"[constraint]\n          \n[Syntax: FOREIGN KEY (variables) REFERENCES table-name <ON DELETE referential-action> \n  <ON UPDATE referential-action>]\n  \nA foreign key references another table. The referential actions are enforced when \nupdates are made to the values of a primary key variable that is referenced by a \nforeign key."},"StatementOptionType":"S"},{"StatementOptionName":"ON DELETE","StatementOptionHelp":{"#cdata":"[constraint]\n          \n[Syntax: FOREIGN KEY (variables) REFERENCES table-name <ON DELETE referential-action> \n  <ON UPDATE referential-action>]\n  \nA foreign key references another table. The referential actions are enforced when \nupdates are made to the values of a primary key variable that is referenced by a \nforeign key"},"StatementOptionType":"S"},{"StatementOptionName":"ON UPDATE","StatementOptionHelp":{"#cdata":"[constraint] \n          \n[Syntax: FOREIGN KEY (variables) REFERENCES table-name <ON DELETE referential-action> \n  <ON UPDATE referential-action>]\n  \nA foreign key references another table. The referential actions are enforced when \nupdates are made to the values of a primary key variable that is referenced by a \nforeign key"},"StatementOptionType":"S"},{"StatementOptionName":"MESSAGE=","StatementOptionHelp":{"#cdata":"[Syntax: MESSAGE='message-string' <MSGTYPE=USER>\n\nmessage-string is the text of an error message to be written to the log when the data \nfails the constraint.]"},"StatementOptionType":"V"},{"StatementOptionName":"MSGTYPE=","StatementOptionHelp":{"#cdata":"By default when the MESSAGE= option is specified, the message you define is inserted \ninto the SAS error message for the constraint, separated by a space. MSGTYPE=USER \nsuppresses the SAS portion of the message."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"USER"},"StatementOptionToolTips":{"@ToolTip1":"Suppresses the SAS portion of the message."}}]}},{"StatementName":"IC DELETE","StatementHelp":{"#cdata":"Syntax: IC DELETE constraint-name-1 <...constraint-name-n> | _ALL_; \n      \nDeletes an integrity constraint."},"StatementOptions":{"StatementOption":{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Deletes all constraints for the SAS data file specified in the preceding MODIFY \nstatement."},"StatementOptionType":"S"}}},{"StatementName":"IC REACTIVATE","StatementHelp":{"#cdata":"Syntax: IC REACTIVATE foreign-key-name REFERENCES libref;\n      \nReactivates a foreign key integrity constraint that is inactive.\n\nReactivates a foreign key integrity constraint that is inactive."},"StatementOptions":{"StatementOption":{"StatementOptionName":"REFERENCES","StatementOptionHelp":{"#cdata":"A foreign key references a primary key contained in a SAS data set."},"StatementOptionType":"S"}}},{"StatementName":"INDEX CENTILES","StatementHelp":{"#cdata":"Syntax: INDEX CENTILES index-1 <...index-n> </ <REFRESH> \n    <UPDATECENTILES= ALWAYS|NEVER|integer>>;\n\nUpdates centiles statistics for indexed variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"REFRESH","StatementOptionHelp":{"#cdata":"Updates centiles immediately, regardless of the value of UPDATECENTILES."},"StatementOptionType":"S"},{"StatementOptionName":"UPDATECENTILES=|UPDCEN=","StatementOptionHelp":{"#cdata":"Specifies when centiles are to be updated. It is not practical to update centiles after every data set update."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ALWAYS","@Value2":"NEVER","@Value3":"integer"},"StatementOptionToolTips":{"@ToolTip1":"Updates centiles when the data set is closed if any changes have been made to the data set index.  You can specify ALWAYS or 0 and produce the same results.","@ToolTip2":"Does not update centiles. You can specify NEVER or 101 and produce the same results.","@ToolTip3":"Is the percentage of values for the indexed variable that can be updated before centiles are refreshed."}}]}},{"StatementName":"INDEX CREATE","StatementHelp":{"#cdata":"Syntax: INDEX CREATE index-specification-1 <...index-specification-n> \n    </ <NOMISS> <UNIQUE> \n    <UPDATECENTILES= ALWAYS|NEVER|integer>>;\n    \nCreates simple or composite indexes for the SAS data set specified in the \nMODIFY statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"NOMISS","StatementOptionHelp":{"#cdata":"Excludes from the index all observations with missing values for all index variables."},"StatementOptionType":"S"},{"StatementOptionName":"UNIQUE","StatementOptionHelp":{"#cdata":"Specifies that the combination of values of the index variables must be unique."},"StatementOptionType":"S"},{"StatementOptionName":"UPDATECENTILES=|UPDCEN=","StatementOptionHelp":{"#cdata":"Specifies when centiles are to be updated. It is not practical to update centiles after every data set update."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ALWAYS","@Value2":"NEVER","@Value3":"<integer>"},"StatementOptionToolTips":{"@ToolTip1":"Updates centiles when the data set is closed if any changes have been made to the data set index.  You can specify ALWAYS or 0 and produce the same results.","@ToolTip2":"Does not update centiles. You can specify NEVER or 101 and produce the same results.","@ToolTip3":"Is the percentage of values for the indexed variable that can be updated before centiles are refreshed."}}]}},{"StatementName":"INDEX DELETE","StatementHelp":{"#cdata":"Syntax: INDEX DELETE index-1 <...index-n> | _ALL_; "},"StatementOptions":{"StatementOption":{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Deletes all indexes, except for indexes that are owned by an integrity constraint."},"StatementOptionType":"S"}}},{"StatementName":"INFORMAT","StatementHelp":{"#cdata":"Syntax: INFORMAT variable-1 <informat-1> \n    <...variable-n <informat-n>>;\n\nPermanently assigns, changes, and removes variable informats in the data set specified \nin the MODIFY statement."},"StatementOptions":null},{"StatementName":"LABEL","StatementHelp":{"#cdata":"Syntax: LABEL variable-1=<'label-1'|' '> \n    <...variable-n=<'label-n'|' ' >>; \n\nAssigns, changes, and removes variable labels for the SAS data set specified i\nn the MODIFY statement. "},"StatementOptions":null},{"StatementName":"MODIFY","StatementHelp":{"#cdata":"Syntax: MODIFY SAS-file <(option-1 <...option-n>)> \n</ <CORRECTENCODING=encoding-value> \n<DTC=SAS-date-time> \n<GENNUM=integer> \n<MEMTYPE=mtype>>; \n\nChanges the attributes of a SAS file and, through the use of subordinate statements, \nthe attributes of variables in the SAS file."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALTER=","StatementOptionHelp":{"#cdata":"[Syntax: ALTER=alter-password] \n          \nAssigns, changes, or removes an alter password for the SAS file named in the \nMODIFY statement."},"StatementOptionType":"V"},{"StatementOptionName":"CORRECTENCODING=","StatementOptionHelp":{"#cdata":"[Syntax: CORRECTENCODING=encoding-value] \n          \nEnables you to change the encoding indicator, which is recorded in the file's descriptor \ninformation, in order to match the actual encoding of the file's data."},"StatementOptionType":"V"},{"StatementOptionName":"DTC=","StatementOptionHelp":{"#cdata":"[Syntax: DTC=SAS-date-time] \n          \nSpecifies a date and time to substitute for the date and time stamp placed on a SAS \nfile at the time of creation."},"StatementOptionType":"V"},{"StatementOptionName":"GENMAX=","StatementOptionHelp":{"#cdata":"[Syntax: GENMAX=number-of-generations] \n          \nSpecifies the maximum number of versions."},"StatementOptionType":"V"},{"StatementOptionName":"GENNUM=","StatementOptionHelp":{"#cdata":"[Syntax: GENNUM=integer] \n          \nRestricts processing for generation data sets. You can specify GENNUM= either in parentheses \nafter the name of each SAS file or after a forward slash. Valid value is integer, which is a \nnumber that references a specific version from a generation group. Specifying a positive number \nis an absolute reference to a specific generation number that is appended to a data set's name; \nthat is, gennum=2 specifies MYDATA#002. Specifying a negative number is a relative reference \nto a historical version in relation to the base version, from the youngest to the oldest; that \nis, gennum=-1 refers to the youngest historical version. Specifying 0, which is the default, \nrefers to the base version."},"StatementOptionType":"V"},{"StatementOptionName":"LABEL=","StatementOptionHelp":{"#cdata":"[Syntax: LABEL='data-set-label' | ' '] \n          \nAssigns, changes, or removes a data set label for the SAS data set named in the \nMODIFY statement."},"StatementOptionType":"V"},{"StatementOptionName":"MEMTYPE=|MTYPE=|MT=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=mtype] \n          \nRestricts processing to one member type."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}},{"StatementOptionName":"PW=","StatementOptionHelp":{"#cdata":"[Syntax: PW=password-modification] \n          \nAssigns, changes, or removes a read, write, or alter password for the SAS file named \nin the MODIFY statement."},"StatementOptionType":"V"},{"StatementOptionName":"READ=","StatementOptionHelp":{"#cdata":"[Syntax: READ=password-modification] \n          \nAssigns, changes, or removes a read password for the SAS file named in the MODIFY \nstatement."},"StatementOptionType":"V"},{"StatementOptionName":"SORTEDBY=","StatementOptionHelp":{"#cdata":"[Syntax: SORTEDBY=sort-information] \n          \nSpecifies how the data are currently sorted."},"StatementOptionType":"V"},{"StatementOptionName":"SORTEDBY=_NULL_","StatementOptionHelp":{"#cdata":"Removes any existing sort indicator."},"StatementOptionType":"V"},{"StatementOptionName":"TYPE=","StatementOptionHelp":{"#cdata":"[Syntax: TYPE=special-type] \n          \nAssigns or changes the special data set type of a SAS data set."},"StatementOptionType":"V"},{"StatementOptionName":"WRITE=","StatementOptionHelp":{"#cdata":"[Syntax: WRITE=password-modification] \n          \nAssigns, changes, or removes a write password for the SAS file named in the MODIFY \nstatement."},"StatementOptionType":"V"}]}},{"StatementName":"REBUILD","StatementHelp":{"#cdata":"Syntax: REBUILD SAS-file </ ALTER=password GENNUM=n MEMTYPE=mtype NOINDEX>; \n        \nSpecifies whether to restore or delete the disabled indexes and integrity constraints."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALTER=","StatementOptionHelp":{"#cdata":"[Syntax: ALTER=alter-password] \n          \nProvides the alter password for any alter-protected SAS files named in the REBUILD \nstatement."},"StatementOptionType":"V"},{"StatementOptionName":"GENNUM=","StatementOptionHelp":{"#cdata":"[Syntax: GENNUM=integer] \n          \nRestricts processing for generation data sets. You can specify GENNUM= either in parentheses \nafter the name of each SAS file or after a forward slash. Valid value is integer, which is a \nnumber that references a specific version from a generation group. Specifying a positive number \nis an absolute reference to a specific generation number that is appended to a data set's name; \nthat is, gennum=2 specifies MYDATA#002. Specifying a negative number is a relative reference to \na historical version in relation to the base version, from the youngest to the oldest; that is, \ngennum=-1 refers to the youngest historical version. Specifying 0, which is the default, refers \nto the base version."},"StatementOptionType":"V"},{"StatementOptionName":"MEMTYPE=|MTYPE=|MT=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=mtype] \n          \nRestricts processing to one member type."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}},{"StatementOptionName":"NOINDEX","StatementOptionHelp":{"#cdata":"Specifies to delete the disabled indexes and integrity constraints."},"StatementOptionType":"V"}]}},{"StatementName":"RENAME","StatementHelp":{"#cdata":"Syntax: RENAME old-name-1=new-name-1 \n<...old-name-n=new-name-n>; \n\nRenames variables in the SAS data set specified in the MODIFY statement."},"StatementOptions":null},{"StatementName":"REPAIR","StatementHelp":{"#cdata":"Syntax: REPAIR SAS-file-1 <...SAS-file-n> \n    </ <ALTER=alter-password> \n    <GENNUM=integer> \n    <MEMTYPE=mtype>>;\n\nAttempts to restore damaged SAS data sets or catalogs to a usable condition."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALTER=","StatementOptionHelp":{"#cdata":"[Syntax: ALTER=alter-password] \n          \nProvides the alter password for any alter-protected SAS files named in the REPAIR \nstatement."},"StatementOptionType":"V"},{"StatementOptionName":"GENNUM=","StatementOptionHelp":{"#cdata":"[Syntax: GENNUM=integer] \n          \nRestricts processing for generation data sets. You can specify GENNUM= either in parentheses \nafter the name of each SAS file or after a forward slash. Valid value is integer, which is a \nnumber that references a specific version from a generation group. Specifying a positive number \nis an absolute reference to a specific generation number that is appended to a data set's name; \nthat is, gennum=2 specifies MYDATA#002. Specifying a negative number is a relative reference to \na historical version in relation to the base version, from the youngest to the oldest; that is, \ngennum=-1 refers to the youngest historical version. Specifying 0, which is the default, refers \nto the base version."},"StatementOptionType":"V"},{"StatementOptionName":"MEMTYPE=|MTYPE=|MT=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=mtype] \n          \nRestricts processing to one member type."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}},{"StatementOptionName":"READ=","StatementOptionType":"V"},{"StatementOptionName":"WRITE=","StatementOptionType":"V"},{"StatementOptionName":"PW=","StatementOptionType":"V"}]}},{"StatementName":"SAVE","StatementHelp":{"#cdata":"Syntax: SAVE table-name(s) </ MEMTYPE=mtype>; \n      \nDeletes all the tables in a library except the ones listed in the SAVE statement."},"StatementOptions":{"StatementOption":{"StatementOptionName":"MEMTYPE=|MTYPE=|MT=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=mtype] \n          \nRestricts processing to one member type.\n\nNote: MEMTYPE= does not apply to CAS tables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}}}},{"StatementName":"SELECT","StatementHelp":{"#cdata":"Syntax: SELECT table-name(s) </ <ALTER=alter-password> <MEMTYPE= mtype>>; \n\nSelects tables for copying."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALTER=","StatementOptionHelp":{"#cdata":"[Syntax: ALTER=alter-password] \n          \nProvides the alter password for any alter-protected tables that you are moving from \none data library to another.\n\nNote: ALTER= does not apply to CAS."},"StatementOptionType":"V"},{"StatementOptionName":"MEMTYPE=|MTYPE=|MT=","StatementOptionHelp":{"#cdata":"[Syntax: MEMTYPE=mtype] \n          \nRestricts processing to one member type in a library. You can use the option after a forward slash. \nThe MEMTYPE= values available for the CAS engine are DATA and ALL."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"StatementOptionToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"}}]}},{"StatementName":"INITIATE","StatementHelp":{"#cdata":"Syntax: INITIATE  <AUDIT_ALL=NO|YES>; \n    <LOG <ADMIN_IMAGE=YES|NO> \n    <BEFORE_IMAGE=YES|NO> \n    <DATA_IMAGE=YES|NO> \n    <ERROR_IMAGE=YES|NO>>; \n    <USER_VAR variable-1 <... variable-n>>;  \n \n[Use this statement only after an AUDIT statement.]\n\nCreates an audit file that has the same name as the SAS data file and a data set type \nof AUDIT. The audit file logs additions, deletions, and updates to the SAS data file. \nYou must initiate an audit trail before you can suspend, resume, or terminate it."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"AUDIT_ALL=","StatementOptionHelp":{"#cdata":"Specifies whether logging can be suspended and audit settings can be changed."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"},"StatementOptionToolTips":{"@ToolTip1":"Logging cannot be suspended and audit settings cannot be changed.","@ToolTip2":"Logging can be suspended and audit settings can be changed."}},{"StatementOptionName":"LOG","StatementOptionHelp":{"#cdata":"Specifies the audit settings:\n\nADMIN_IMAGE=YES|NO \nspecifies whether the administrative events are logged to the audit file (that is, the \nSUSPEND and RESUME actions).\n\nBEFORE_IMAGE=YES|NO \nspecifies whether the before-update record images are logged to the audit file.\n\nDATA_IMAGE=YES|NO \nspecifies whether the added, deleted, and after-update record images are logged to the audit file.\n\nERROR_IMAGE=YES|NO \nspecifies whether the after-update record images are logged to the audit file."},"StatementOptionType":"V"},{"StatementOptionName":"ADMIN_IMAGE=","StatementOptionHelp":{"#cdata":"Specifies whether the administrative events are logged to the audit file (that is, the SUSPEND and RESUME actions)."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the administrative events are logged to the audit file (that is,  the SUSPEND and RESUME actions).","@ToolTip2":"Specifies that the administrative events are not logged to the audit file (that is,  the SUSPEND and RESUME actions)."}},{"StatementOptionName":"BEFORE_IMAGE=","StatementOptionHelp":{"#cdata":"Specifies whether the before-update record images are logged to the audit file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the before-update record images are logged to the audit file.","@ToolTip2":"Specifies that the before-update record images are not logged to the audit file."}},{"StatementOptionName":"DATA_IMAGE=","StatementOptionHelp":{"#cdata":"Specifies whether the added, deleted, and after-update record images are logged to the audit file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the added, deleted, and after-update record images are logged to the audit file.","@ToolTip2":"Specifies that the added, deleted, and after-update record images are not logged to the audit file."}},{"StatementOptionName":"ERROR_IMAGE=","StatementOptionHelp":{"#cdata":"Specifies whether the after-update record images are logged to the audit file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the after-update record images are logged to the audit file.","@ToolTip2":"Specifies that the after-update record images are not logged to the audit file."}},{"StatementOptionName":"USER_VAR","StatementOptionHelp":{"#cdata":"[Syntax: USER_VAR variable-1 < ... variable-n>] \n          \nDefines optional variables to be logged in the audit file with each update to an observation."},"StatementOptionType":"S"}]}},{"StatementName":"SUSPEND","StatementHelp":{"#cdata":"Suspends event logging to the audit file, but does not delete the audit file."},"StatementOptions":null},{"StatementName":"RESUME","StatementHelp":{"#cdata":"Resumes event logging to the audit file, if it was suspended."},"StatementOptions":null},{"StatementName":"TERMINATE","StatementHelp":{"#cdata":"Terminates event logging and deletes the audit file."},"StatementOptions":null},{"StatementName":"USER_VAR","StatementHelp":{"#cdata":"Syntax: USER_VAR variable-name-1 <$> <length> <LABEL='variable-label' ><variable-name-2 <$> <length> <LABEL='variable-label' > \u2026>;\n      \nDefines optional variables to be logged in the audit file with each update to an observation. \nWhen you use USER_VAR, it must follow an INITIATE statement. \n\n\nRequired Argument\nvariable-name\n  is a name for the variable.\n\nOptional Arguments\n$\n  indicates that the variable is a character variable. \nlength\n  specifies the length of the variable.\n  Default: 8\n  \nLABEL='variable-label'\n  specifies a label for the variable.\n\nRestrictions:\nThe USER_VAR statement must appear in an AUDIT RUN group.\nThe USER_VAR statement is optional. If specified, the USER_VAR statement must immediately \nfollow the INITIATE statement for the applicable audit file."},"StatementOptions":{"StatementOption":{"StatementOptionName":"LABEL=","StatementOptionHelp":{"#cdata":"[Syntax: LABEL='variable-label'] \n          \nSpecifies a label for the variable."},"StatementOptionType":"V"}}},{"StatementName":"XATTR ADD DS","StatementHelp":{"#cdata":"Syntax: XATTR ADD DS attribute-name-1=attribute-value-1 \n      <attribute-name-2=attribute-value-2 \u2026>;    \n    \nAdds an extended attribute to a data set. \n\nRestrictions: The XATTR ADD statement must appear in a MODIFY RUN group\nGeneration data sets do not support extended attributes.\n\nSupports: Base engine only\n\nNotes: An extended attribute can have numeric or character values. A blank space in a character \nvalue indicates a missing value. Missing numeric values are also allowed. \n\nNote that for character values, attribute-value must be in quotation marks, such as \u201dattribute-value\"."},"StatementOptions":null},{"StatementName":"XATTR ADD VAR","StatementHelp":{"#cdata":"Syntax: XATTR ADD VAR variable-name-1 (attribute-name-1=attribute-value-1< \n    attribute-name-2=attribute-value-2 \u2026>)\n    <variable-name-2 (attribute-name-1=attribute-value-1 \n    <attribute-name-2=attribute-value-2 \u2026>) >;  \n    \nAdds an extended attribute to a variable. \n\nRestrictions: The XATTR ADD statement must appear in a MODIFY RUN group\nGeneration data sets do not support extended attributes.\n\nSupports: Base engine only\n\nNotes: An extended attribute can have numeric or character values. A blank space in a character \nvalue indicates a missing value. Missing numeric values are also allowed. \n\nNote that for character values, attribute-value must be in quotation marks, such as \u201dattribute-value\"."},"StatementOptions":null},{"StatementName":"XATTR DELETE DS","StatementHelp":{"#cdata":"Syntax: XATTR DELETE DS attribute-name-1=attribute-value-1 \n      <attribute-name-2=attribute-value-2 \u2026>; \n      \nDeletes all extended attributes from a data set. \nNote that for character values, attribute-value must be in quotation marks, such as \u201dattribute-value\".\n\nRestriction: The XATTR DELETE statement must appear in a MODIFY RUN group\n\nSupports: Base engine only"},"StatementOptions":null},{"StatementName":"XATTR DELETE VAR","StatementHelp":{"#cdata":"Syntax: XATTR DELETE VAR variable-name-1 (attribute-name-1=attribute-value-1 \n      <attribute-name-2=attribute-value-2 ...>) <variable-name-2 (attribute-name-1=attribute-value-1 \n      <attribute-name-2=attribute-value-2 ...>)>\n      \nDeletes all extended attributes from a variable. \nNote that for character values, attribute-value must be in quotation marks, such as \u201dattribute-value\".\n\nRestriction: The XATTR DELETE statement must appear in a MODIFY RUN group\n\nSupports: Base engine only"},"StatementOptions":null},{"StatementName":"XATTR OPTIONS","StatementHelp":{"#cdata":"Syntax: XATTR OPTIONS <SEGLEN=number-of-bytes>; \n      \nSpecifies options as needed for extended attributes. Currently, only SEGLEN= is a valid option. \n\nRestriction: The XATTR OPTIONS statement must appear in a MODIFY RUN group \n\nSupports: Base engine only"},"StatementOptions":{"StatementOption":{"StatementOptionName":"SEGLEN=","StatementOptionHelp":{"#cdata":"[Syntax: SEGLEN=number-of-bytes] \n          \nIndicates the length of the storage element that will hold the character extended attribute value. \nThe value can be 1 to 32,760 bytes. \n\nDefault: 256"},"StatementOptionType":"V"}}},{"StatementName":"XATTR REMOVE DS","StatementHelp":{"#cdata":"Syntax: XATTR REMOVE DS attribute-name(s) ;\n      \nRemoves an extended attribute from a data set. \n\nRestriction: The XATTR REMOVE statement must appear in a MODIFY RUN group\n\nSupports: Base engine only"},"StatementOptions":null},{"StatementName":"XATTR REMOVE VAR","StatementHelp":{"#cdata":"Syntax: XATTR REMOVE VAR variable-name-1 (attribute-name(s))<variable-name-2 (attribute-name(s) \u2026)>;\n      \nRemoves an extended attribute from a variable. \n\nRestriction: The XATTR REMOVE statement must appear in a MODIFY RUN group\n\nSupports: Base engine only"},"StatementOptions":null},{"StatementName":"XATTR SET DS","StatementHelp":{"#cdata":"Syntax: XATTR SET DS attribute-name-1=attribute-value-1 \n      <attribute-name-2=attribute-value-2 \u2026>;    \n    \nUpdates or adds an extended attribute to a data set. If the data set extended attribute does \nnot exist, it will be added. If it does exist, it will be updated with the value specified. \n\nRestrictions: The XATTR SET statement must appear in a MODIFY RUN group\nGeneration data sets do not support extended attributes.\n\nSupports: Base engine only\n\nNotes: A blank space in a character value indicates a missing value. Missing numeric values are also allowed. \n\nNote that for character values, attribute-value must be in quotation marks, such as \u201dattribute-value\"."},"StatementOptions":null},{"StatementName":"XATTR SET VAR","StatementHelp":{"#cdata":"Syntax: XATTR SET VAR variable-name-1 (attribute-name-1=attribute-value-1< \n    attribute-name-2=attribute-value-2 \u2026>)\n    <variable-name-2 (attribute-name-1=attribute-value-1 \n    <attribute-name-2=attribute-value-2 \u2026>) >;  \n    \nUpdates or adds an extended attribute to a variable. If the variable and extended attribute \ncombination does not exist, the extended attribute will be added. If it does exist, the extended \nattribute will be updated with the one specified. \n\nRestrictions: The XATTR SET statement must appear in a MODIFY RUN group\nGeneration data sets do not support extended attributes.\n\nSupports: Base engine only\n\nNotes: A blank space in a character value indicates a missing value. Missing numeric values are also allowed.\n\nNote that for character values, attribute-value must be in quotation marks, such as \u201dattribute-value\"."},"StatementOptions":null},{"StatementName":"XATTR UPDATE DS","StatementHelp":{"#cdata":"Syntax: XATTR UPDATE DS attribute-name-1=attribute-value-1 \n      <attribute-name-2=attribute-value-2 \u2026>;    \n    \nUpdates an extended attribute in a data set. If the extended attribute does not exist, an error is written to the SAS log.\n\nRestrictions: The XATTR UPDATE statement must appear in a MODIFY RUN group\nGeneration data sets do not support extended attributes.\n\nSupports: Base engine only\n\nNotes: A blank space in a character value indicates a missing value. Missing numeric values are also allowed. \n\nNote that for character values, attribute-value must be in quotation marks, such as \u201dattribute-value\"."},"StatementOptions":null},{"StatementName":"XATTR UPDATE VAR","StatementHelp":{"#cdata":"Syntax: XATTR UPDATE VAR variable-name-1 (attribute-name-1=attribute-value-1< \n    attribute-name-2=attribute-value-2 \u2026>)\n    <variable-name-2 (attribute-name-1=attribute-value-1 \n    <attribute-name-2=attribute-value-2 \u2026>) >;  \n    \nUpdates an extended attribute for a variable. If the variable and extended attribute combination \nis not found, an error message is written to the SAS log. \n\nRestrictions: The XATTR UPDATE statement must appear in a MODIFY RUN group\nGeneration data sets do not support extended attributes.\n\nSupports: Base engine only\n\nNotes: A blank space in a character value indicates a missing value. Missing numeric values are also allowed.\n\nNote that for character values, attribute-value must be in quotation marks, such as \u201dattribute-value\"."},"StatementOptions":null},{"StatementName":"DATASETS","StatementHelp":{"#cdata":"Help description not currently available."},"StatementOptions":null},{"StatementName":"LOG","StatementOptions":{"StatementOption":[{"StatementOptionName":"BEFORE_IMAGE=","StatementOptionType":"V"},{"StatementOptionName":"DATA_IMAGE=","StatementOptionType":"V"},{"StatementOptionName":"ERROR_IMAGE=","StatementOptionType":"V"},{"StatementOptionName":"USER_VAR=","StatementOptionType":"V"}]}}],"IgnoreDuplicateName":null,"#comment":{}}}}