{"Procedure":{"Name":"DQSRVSVC","ProductGroup":"SAS DATA QUALITY SERVER","ProcedureHelp":{"#cdata":"Syntax: PROC DQSRVSVC\n    SERVICE=service-name\n    <HOST=host-name>\n    <PORT=port-number>\n    <TIMEOUT=message-processing-limit>\n    <DATA=input-data-set>\n    <OUT=output-data-set>\n    <BLOCKSIZE=rows-per-message>\n    <USERID=user-name-on-server>\n    <PASSWORD=password-on-server>\n    <TRIM>\n    <MISSINGVARSOK>;\n\nThe DQSRVSVC procedure runs a dfPower Architect real-time service on a DataFlux \nIntegration Server. dfPower Architect real-time services are batch processes that \nare intended to cleanse smaller amounts of data at the point of data entry. Data \nprocessing is intended to be synchronous, when a client application requests the \nservice and awaits a response. DQSRVSVC procedure authenticates the user on the \nserver, requests a service, delivers input data to the server, and delivers output \ndata to a SAS data set.\n\nTo improve performance, large input data sets are delivered to the DataFlux \nIntegration Server in chunks of specified size.\n\nTo cleanse or analyze larger amounts of data asynchronously, execute a DataFlux \njob using the functions DQSRVPROFJOB or DQSRVARCHJOB."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"SERVICE=","ProcedureOptionHelp":{"#cdata":"[Syntax: SERVICE=service-name] \n      \nIdentifies the service on the DataFlux Integration Server."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"HOST=","ProcedureOptionHelp":{"#cdata":"[Syntax: HOST=host-name] \n      \nIdentifies the host of the Integration Server. If this option is not specified, \nthe local host is used by default."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PORT=","ProcedureOptionHelp":{"#cdata":"[Syntax: PORT=port-number] \n      \nIdentifies the port through which the local host communicates with the Integration \nServer. If this option is not specified, or if the value is 0 or a negative number, \nthe default port number is used. The default port number is 21036."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TIMEOUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: TIMEOUT=response-limit] \n      \nSpecifies a time in seconds after which the procedure terminates if the local \nhost has not received a response from the Integration Server. data is delivered \nto the server in multiple messages using the BLOCKSIZE option, the TIMEOUT value \nis applied to each message. A value of zero or a negative number enables the \nprocedure to run without a time limit."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=input-data-set] \n      \nIdentifies the location of the input data set. If this option is not specified, \nthen the input data set name is assumed to be _LAST_."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUT=output-data-set] \n      \nIdentifies the storage location of the output data set. If this option is not \nspecified, the default output data set name is _DATA_. dfPower Architect services \nalways create new data sets or overwrite existing data sets."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"BLOCKSIZE=","ProcedureOptionHelp":{"#cdata":"[Syntax: BLOCKSIZE=rows-per-message] \n      \nSpecifies the number of rows of source data that are transmitted to the DataFlux \nIntegration Server in multiple messages. If this option is not specified, then the \nentire data set will be transmitted in a single message. Transmitting large data \nsets in a single message can restrict resources on the Integration Server. The \nserver processes each message separately. The dfPower Architect service program \nneeds to be written to accommodate multiple messages. Output is delivered as usual \nin a single message. \n\nNote: Services that require the entire data set, such as those that calculate \naverages or frequencies, cannot use the BLOCKSIZE option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"USERID=","ProcedureOptionHelp":{"#cdata":"[Syntax: USERID=user-name-on-server] \n      \nIdentifies the user according to the registry in the Integration Server. This \noption is required only if security has been configured on the Integration Server. \nIf security has not been configured on the server, then this option is ignored."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PASSWORD=","ProcedureOptionHelp":{"#cdata":"[Syntax: PASSWORD=password-on-server] \n      \nAuthenticates the user according to the registry in the Integration Server. This \noption is required only if security has been configured on the Integration Server. \nThe password can be plain text or SAS-encoded, as described in About Passwords for \nIntegration Servers. If security has not been configured on the server, then the \nPASSWORD= option is ignored."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TRIM","ProcedureOptionHelp":{"#cdata":"Removes any blank spaces from the end of the input data set. This option is not set by default."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MISSINGVARSOK","ProcedureOptionHelp":{"#cdata":"Indicates that the DataFlux real-time service is to be allowed to continue to run \nwhen one or more variables (or table columns) are missing from the input data set. \nThis option is not set by default. When it is set, any data that is missing from \nthe input data set is assumed to not be critical or required by the DataFlux real-\ntime service."},"ProcedureOptionType":"S"}]},"ProcedureStatements":null}}