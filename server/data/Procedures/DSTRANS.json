{"Procedure":{"Name":"DSTRANS","ProductGroup":"BASE","#comment":{},"ProcedureHelp":{"#cdata":"Syntax: PROC DSTRANS DSI_TO_DS2 | IN=data-step-file OUT=ds2-filename OUTDIR=ds2-pathname; \n    SUBMIT; \n    ENDSUBMIT; \n    \n The DSTRANS procedure translates a subset of SAS DATA step code into DS2 language statements. \n Then, if necessary, you can revise your program to take advantage of DS2 functionality and \n submit your program in a Base SAS session using the DS2 procedure."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DSI_TO_DS2","ProcedureOptionHelp":{"#cdata":"Requests to dynamically enter the DATA step code to be translated in line as a submit block. \nTo create a submit block, enter a SUBMIT statement (which must appear on a line by itself), \nfollowed by the DATA step code to be translated, and then enter an ENDSUBMIT statement (which \nmust appear on a line by itself) to terminate the submit block."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"IN=","ProcedureOptionHelp":{"#cdata":"[Syntax: IN=data-step-file] \n      \nSpecifies either a SAS fileref that is assigned to the input DATA step (.sas) file or the physical \nlocation of the input file. To assign a fileref, use the FILENAME statement. To specify the physical \nlocation, include the complete pathname and the filename and enclose the physical location in single \nor double quotation marks. \n\nInteraction: If you use a fileref, PROC DSTRANS does not use fileref attributes, such as encoding."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUT=ds2-filename] \n      \nSpecifies either a SAS fileref that is assigned to the output DS2 file (.ds2) or the filename \nof the output file. To assign a fileref, use the FILENAME statement. To specify the filename, \nenclose the filename in single or double quotation marks. \n\nRestriction: You can specify only one output file. \n\nInteraction: Do not specify the pathname with the filename. Specify the pathname with the OUTDIR= argument. \nPROC DSTRANS creates additional output files that are associated with the DS2 program output file and needs \na physical location for all of the output files."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUTDIR=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTDIR=ds2\u2013pathname] \n      \nSpecifies the complete pathname of the output file physical location. \n\nRequirement: You must specify the final directory separator, for example, outdir='C:\\2012\\sasfig\\'. \nNote that the directory separator is host specific. For example, Windows uses the backslash (\\) and \nUNIX uses the forward slash (/). \n\nInteraction: PROC DSTRANS creates additional output files that are associated with the DS2 program \noutput file and needs a physical location for all of the output files."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"SUBMIT","StatementHelp":{"#cdata":"Syntax: SUBMIT; \n      \nLabels the beginning of a submit block. \n\nRequirements: The SUBMIT statement requires the PROC DSTRANS statement argument DSI_TO_DS2.\nUse the SUBMIT statement with the ENDSUBMIT statement to indicate a block of DATA step code \nto submit for translation."},"StatementOptions":null},{"StatementName":"ENDSUBMIT","StatementHelp":{"#cdata":"Syntax: ENDSUBMIT; \n      \nMarks the end of a submit block. \n\nRequirements: The ENDSUBMIT statement requires the PROC DSTRANS statement argument DSI_TO_DS2. \nUse the ENDSUBMIT statement with the SUBMIT statement to indicate a block of DATA step code to \nsubmit for translation."},"StatementOptions":null},{"StatementName":"LENGTH","StatementHelp":{"#cdata":"Syntax: LENGTH variable-specification(s)<DEFAULT=n>; \n      \n[Use only inside a SUBMIT-ENDSUBMIT block.]\n      \nSpecifies the number of bytes for storing variables."},"StatementOptions":{"StatementOption":{"StatementOptionName":"DEFAULT=","StatementOptionHelp":{"#cdata":"[Syntax: DEFAULT=n] \n          \nChanges the default number of bytes that SAS uses to store the values of any newly created \nnumeric variables."},"StatementOptionType":"V"}}},{"StatementName":"GOTO","StatementHelp":{"#cdata":"Syntax: GOTO label;\n      \n[Use only inside a SUBMIT-ENDSUBMIT block.]\n      \nJumps to a new statement."},"StatementOptions":null},{"StatementName":"IF","StatementHelp":{"#cdata":"Executes a SAS statement for observations that meet specific conditions. \n\n[Use only inside a SUBMIT-ENDSUBMIT block.]\n\nSyntax: \n(1) IF expression THEN statement; \n    <ELSE statement;> \n(2) IF condition;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"THEN","StatementOptionHelp":{"#cdata":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS \nstatement for observations that are read from a SAS data set, for records in an external file, or \nfor computed values."},"StatementOptionType":"S"},{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"WHEN","StatementOptionHelp":{"#cdata":"WHEN statement in an IF-THEN-WHEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"OUTPUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"GO TO|GOTO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nSyntax: ... GO TO label; | ... GOTO label;\n      \nJumps to a new statement."},"StatementOptionType":"S"},{"StatementOptionName":"PUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"STOP","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nStops execution of the current DATA step."},"StatementOptionType":"S"},{"StatementOptionName":"RETURN","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nStops executing statements at the current point in the DATA step and returns to \na predetermined point in the step. "},"StatementOptionType":"S"},{"StatementOptionName":"CALL","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nSyntax: CALL routine(parameter-1<, ...parameter-n>); \n      \nInvokes a SAS CALL routine."},"StatementOptionType":"S"},{"StatementOptionName":"SET","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct.\n          \nSyntax: SET <SAS-data-set(s) <(data-set-options(s) )>>; \n      \nReads an observation from one or more SAS data sets."},"StatementOptionType":"S"},{"StatementOptionName":"NOT","StatementOptionType":"S"},{"StatementOptionName":"OR","StatementOptionType":"S"},{"StatementOptionName":"AND","StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"ELSE","StatementHelp":{"#cdata":"If the condition in an IF-THEN statement is false and an ELSE statement is present, \nthen the ELSE action is carried out. \n\n[Use only inside a SUBMIT-ENDSUBMIT block.]"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"THEN","StatementOptionHelp":{"#cdata":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS \nstatement for observations that are read from a SAS data set, for records in an external file, or \nfor computed values."},"StatementOptionType":"S"},{"StatementOptionName":"IF","StatementOptionHelp":{"#cdata":"Executes a SAS statement for observations that meet specific conditions."},"StatementOptionType":"S"},{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN-ELSE construct."},"StatementOptionType":"S"},{"StatementOptionName":"OUTPUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN-ELSE construct."},"StatementOptionType":"S"},{"StatementOptionName":"NOT","StatementOptionType":"S"},{"StatementOptionName":"OR","StatementOptionType":"S"},{"StatementOptionName":"AND","StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"DO","StatementHelp":{"#cdata":"Specifies a group of statements to be executed as a unit.\n\n[Use only inside a SUBMIT-ENDSUBMIT block.]\n\nSyntax: \n(1) DO; \n...more SAS statements...  \nEND;  \n\n(2) DO index-variable=specification-1 <, ... specification-n>; \n... more SAS statements ...  \nEND;  \n\n(3) DO UNTIL (expression); \n...more SAS statements...  \nEND \n\n(4) DO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"UNTIL","StatementOptionHelp":{"#cdata":"Executes statements in a DO loop repetitively until a condition is true.\n          \nSyntax: \nDO UNTIL (expression); \n...more SAS statements...  \nEND"},"StatementOptionType":"S"},{"StatementOptionName":"WHILE","StatementOptionHelp":{"#cdata":"Executes statements in a DO-loop repetitively while a condition is true. \n          \nSyntax: \nDO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptionType":"S"},{"StatementOptionName":"OVER","StatementOptionType":"S"},{"StatementOptionName":"TO","StatementOptionHelp":{"#cdata":"Separates the start and stop integers or expressions that control the number of times the \nportion of the DATA step between the iterative DO and END statements is processed."},"StatementOptionType":"S"},{"StatementOptionName":"BY","StatementOptionHelp":{"#cdata":"Precedes an increment integer (other than 0) or an expression that generates an integer to be \nadded to the value of the index variable in each iteration of the DO loop."},"StatementOptionType":"S"}]}},{"StatementName":"RETURN","StatementHelp":{"#cdata":"Syntax: RETURN; \n\n[Use only inside a SUBMIT-ENDSUBMIT block.]\n\nStops executing statements at the current point in the DATA step and returns to a predetermined \npoint in the step."},"StatementOptions":null},{"StatementName":"SELECT","StatementHelp":{"#cdata":"Executes one of several statements or groups of statements.\n\n[Use only inside a SUBMIT-ENDSUBMIT block.]\n\nSyntax: \nSELECT <(select-expression)>;  \n  WHEN-1 (when-expression-1 <..., when-expression-n>) statement;  \n    <... WHEN-n (when-expression-1 <..., when-expression-n>) statement;>  \n      <OTHERWISE statement;> \nEND;"},"StatementOptions":null},{"StatementName":"WHEN","StatementHelp":{"#cdata":"SELECT groups contain WHEN statements that identify SAS statements that are executed when a particular \ncondition is true. Use at least one WHEN statement in a SELECT group.\n\n[Use only inside a SUBMIT-ENDSUBMIT block.]\n      \nSyntax: WHEN-1 (when-expression-1 <..., when-expression-n>) statement; "},"StatementOptions":{"StatementOption":{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement."},"StatementOptionType":"S"}}},{"StatementName":"OTHERWISE","StatementHelp":{"#cdata":"An optional OTHERWISE statement specifies a statement to be executed if no WHEN condition is met. \nAn END statement ends a SELECT group.\n\n[Use only inside a SUBMIT-ENDSUBMIT block.]\n      \nSyntax: \n  <... WHEN-n (when-expression-1 <..., when-expression-n>) statement;>  \n    <OTHERWISE statement;>"},"StatementOptions":{"StatementOption":{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement."},"StatementOptionType":"S"}}},{"StatementName":"STOP","StatementHelp":{"#cdata":"Syntax: STOP; \n      \n[Use only inside a SUBMIT-ENDSUBMIT block.]\n      \nStops execution of the current DATA step."},"StatementOptions":null},{"StatementName":"LINK","StatementHelp":{"#cdata":"Syntax: LINK label; \n      \n[Use only inside a SUBMIT-ENDSUBMIT block.]\n      \nDirects program execution immediately to the statement label that is specified and, if followed \nby a RETURN statement, returns execution to the statement that follows the LINK statement."},"StatementOptions":null},{"StatementName":"LEAVE","StatementHelp":{"#cdata":"Syntax: LEAVE; \n      \n[Use only inside a SUBMIT-ENDSUBMIT block.]\n      \nStops processing the current loop and resumes with the next statement in the sequence."},"StatementOptions":null},{"StatementName":"CONTINUE","StatementHelp":{"#cdata":"Syntax: CONTINUE; \n      \n[Use only inside a SUBMIT-ENDSUBMIT block.]\n      \nStops processing the current DO-loop iteration and resumes processing the next iteration."},"StatementOptions":null},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT<data-set-name(s)>; \n      \n[Use only inside a SUBMIT-ENDSUBMIT block.]\n      \nWrites the current observation to a SAS data set."},"StatementOptions":null},{"StatementName":"PUT","StatementHelp":{"#cdata":"Syntax: PUT <specification(s)><_ODS_><@|@@>; \n      \n[Use only inside a SUBMIT-ENDSUBMIT block.]\n      \nWrites lines to the SAS log, to the SAS output window, or to an external location that is \nspecified in the most recent FILE statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"_INFILE_","StatementOptionHelp":{"#cdata":"Writes the last input data record that is read either from the current input file or from the data \nlines that follow a DATELINES statement."},"StatementOptionType":"S"},{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Writes the values of all variables, which includes automatic variables, that are defined in the \ncurrent DATA step by using named output."},"StatementOptionType":"S"},{"StatementOptionName":"_ODS_","StatementOptionHelp":{"#cdata":"Moves data values for all columns (as defined by the ODS option in the FILE statement) into \na special buffer, from which it is eventually written to the data component. The ODS option \nin the FILE statement defines the structure of the data component that holds the results of \nthe DATA step."},"StatementOptionType":"S"},{"StatementOptionName":"OVERPRINT","StatementOptionHelp":{"#cdata":"Causes the values that follow the keyword OVERPRINT to print on the most recently written \noutput line."},"StatementOptionType":"S"},{"StatementOptionName":"_BLANKPAGE_","StatementOptionHelp":{"#cdata":"Advances the pointer to the first line of a new page, even when the pointer is positioned \non the first line and the first column of a new page."},"StatementOptionType":"S"},{"StatementOptionName":"_PAGE_","StatementOptionHelp":{"#cdata":"Advances the pointer to the first line of a new page. SAS automatically begins a new \npage when a line exceeds the current PAGESIZE= value."},"StatementOptionType":"S"}]}}]}}}