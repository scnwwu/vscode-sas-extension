{"Procedure":{"Name":"FORMS","ProductGroup":"BASE","ProcedureHelp":{"#cdata":"Syntax: PROC FORMS <option(s)>;\n    BY <DESCENDING> variable-1\n      <\u2026<DESCENDING> variable-n>\n      <NOTSORTED>;\n    FREQ variable;\n    LINE line-number variable(s) </ option(s)>; \n    \nThe FORMS procedure produces labels for envelopes, mailing labels, external tape labels, \nfile cards, and any other printer forms that have a regular pattern. For each observation \nin the input SAS data set, PROC FORMS prints data in a rectangular block called a form unit. \nFor example, a mailing label is a form unit."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ACROSS=|A=","ProcedureOptionHelp":{"#cdata":"[Syntax: ACROSS=form-units-per-line] \n      \nSpecifies the number of form units to print across the page.\n\nDefault: 1\nRange: 1\u2013200"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ALIGN=","ProcedureOptionHelp":{"#cdata":"[Syntax: ALIGN=number] \n      \nControls the number of alignment form units that print before the actual data values. \nUse the alignment form units, which consist solely of Xs, to check printer alignment. \n\nDefault: 8 with FILE=; 0 without FILE= \n\nInteraction: If you use ACROSS=, then the number of dummy form units that\nprint is the product of the values of ACROSS= and ALIGN=."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"BETWEEN=|B=","ProcedureOptionHelp":{"#cdata":"[Syntax: BETWEEN=spaces-between-form-units] \n      \nSpecifies the number of spaces to print between form units. \n\nDefault: 1\nRange: 1\u2013200"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CC","ProcedureOptionHelp":{"#cdata":"In continuous mode, writes a page-eject character at the top of the first page. \nIn page mode, if you also specify FILE=, then CC writes a page-eject character \nat the top of each page. (CC has no effect if you omit FILE=.) \n\nTip: If you omit CC, then PROC FORMS issues blank lines to go to the next page. \nIt is recommended that you always use CC with page-mode operation."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"COPIES=|C=","ProcedureOptionHelp":{"#cdata":"[Syntax: COPIES=number] \n      \nSpecifies the number of form units to produce for each observation in each set of form \nunits. All copies of an observation appear together.\n\nDefault: 1"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nIdentifies the input SAS data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DOWN=|D=","ProcedureOptionHelp":{"#cdata":"[Syntax: DOWN=top-margin] \n      \nSpecifies the number of lines to skip on a page before printing the first form unit. \n\nDefault: 1 \nRange: 1\u2013200\n\nNote: When PROC FORMS writes to the procedure output file, it uses one line for each \nTITLE statement and leaves a blank line beneath the last title. Counting for the top \nmargin begins at the next line. Thus, if you have two TITLE statements and specify DOWN=5, \nthen PROC FORMS begins printing the first form unit on each page on line 9."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"FILE=|DDNAME=|D=","ProcedureOptionHelp":{"#cdata":"[Syntax: FILE=fileref] \n      \nStatement to associate an external file with a fileref \n\nDefault: If you omit FILE=, then PROC FORMS writes to the procedure output file \nand selects page mode.\n\nInteraction: If you use FILE= and do not specify the ALIGN= option, then PROC \nFORMS uses ALIGN=8.\n\nInteraction: When you use FILE=, PROC FORMS uses the value of DOWN= only \non the first page of form units.\n\nInteraction: If you use FILE= with NDOWN= or PAGESIZE= or both, then select\npage mode. Otherwise, select continuous mode."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"INDENT=|I=","ProcedureOptionHelp":{"#cdata":"[Syntax: INDENT=left-margin] \n      \nSpecifies the number of spaces to indent before printing the first form unit in each row. \n\nDefault: 0 \nRange: 0\u2013200"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LINES=|L=","ProcedureOptionHelp":{"#cdata":"[Syntax: LINES=form-unit-length] \n      \nSpecifies the number of lines in a form unit. \n\nDefault: the largest number that is used with the LINE statement\nRange: 1\u2013200"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NDOWN=|ND=","ProcedureOptionHelp":{"#cdata":"[Syntax: NDOWN=form-units-per-page] \n      \nSpecifies the number of form units to print down the page and selects page-mode \noperation. \n\nDefault: FLOOR((PAGESIZE\u2212DOWN+SKIP)/(LINES+SKIP)) where FLOOR is a \nSAS function that returns the largest integer less than or equal to the value of the \nargument.\n\nInteraction: If NDOWN= specifies a number of form units that is less than PAGESIZE= allows, \nthen PROC FORMS uses the value of the NDOWN= option. If NDOWN= specifies a number of form \nunits that is greater than PAGESIZE= allows, then PROC FORMS adjusts the value of NDOWN= \ndownward to accommodate the page size."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PAGESIZE=|PS=","ProcedureOptionHelp":{"#cdata":"[Syntax: PAGESIZE=lines-per-page] \n      \nSpecifies the number of lines on a page of forms after allowing for TITLE statements\nand a blank line after the titles. (See Figure 1.1 on page 10.) PAGESIZE= also\nselects page-mode operation.\n\nDefault: the system page size (with FILE=); inferred from the characteristics of the procedure \noutput file and from title information (without FILE=) \n\nRange: the value of DOWN= plus the value of LINES=, up to 10,000\n\nInteraction: When you write to the procedure output, if the page size that you specify is greater \nthan the page size that is specified by the SAS system option PAGESIZE=, then PROC FORMS adjusts \nthe PROC FORMS page size to accommodate the system page size.\n\nInteraction: If the page size allows for more form units than NDOWN= specifies, then PROC FORMS \nuses the value of the NDOWN= option. If the page size does not allow for as many form units as \nNDOWN= specifies, then PROC FORMS adjusts the value of NDOWN= to accommodate the page size."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SETS=","ProcedureOptionHelp":{"#cdata":"[Syntax: SETS=number] \n      \nSpecifies the number of sets of form units to produce. In page-mode operation, PROC FORMS \nstarts each set on a new page. \n\nDefault: 1"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SKIP=|S=","ProcedureOptionHelp":{"#cdata":"[Syntax: SKIP=lines-between-form-units] \n      \nSpecifies the number of lines to skip between form units. \n\nDefault: 1 \nRange: 1\u2013200"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"WIDTH=|W=","ProcedureOptionHelp":{"#cdata":"[Syntax: WIDTH=form-unit-width] \n      \nSpecifies the number of columns across the form unit. PROC FORMS truncates values that do not \nfit in the specified width. \n\nDefault: width of the widest line \nRange: 1\u2013255"},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY <DESCENDING> variable-1\n    <\u2026<DESCENDING> variable-n>\n    <NOTSORTED>;\n    \nProduces a separate set of forms for each BY group."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING","StatementOptionHelp":{"#cdata":"Specifies that the data set is sorted in descending order by the variable that \nimmediately follows the word DESCENDING in the BY statement."},"StatementOptionType":"S"},{"StatementOptionName":"NOTSORTED","StatementOptionHelp":{"#cdata":"Specifies that observations are not necessarily sorted in alphabetic or numeric order. \nThe data is grouped in another way, for example, chronological order."},"StatementOptionType":"S"}]}},{"StatementName":"FREQ|WEIGHT","StatementHelp":{"#cdata":"Syntax: FREQ variable; \n      \nTreats observations as if they appear multiple times in the input data set."},"StatementOptions":null},{"StatementName":"LINE","StatementHelp":{"#cdata":"Syntax: LINE line-number variable(s) </ option(s)>; \n      \nSpecifies the information to print on one line of the form unit. Use one LINE statement for each \nline of the form unit."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"INDENT=|I=","StatementOptionHelp":{"#cdata":"[Syntax: INDENT=margin-within-form-unit] \n          \nSpecifies the number of spaces to indent the line within the form unit. Contrast this option \nto INDENT= in the PROC FORMS statement, which specifies the size of the left margin that precedes \nthe first form unit in each row."},"StatementOptionType":"V"},{"StatementOptionName":"LASTNAME|L","StatementOptionHelp":{"#cdata":"Rotates the words in a character variable that contains a comma around the comma \nand removes the comma."},"StatementOptionType":"S"},{"StatementOptionName":"PACK|P","StatementOptionHelp":{"#cdata":"Removes extra blanks from the line so that one blank separates variables. \n          \nTip: PACK can fit more fields onto a form unit, but if the values for all the variables are long, \nthen you might lose an entire field. To avoid this problem, use a FORMAT statement to limit the \nspace for each variable. For example, the following statement sets the field widths of the variables \nCITY and STATE to 20 and 2 columns, respectively:\n\n  format city $20. state $2.;"},"StatementOptionType":"S"},{"StatementOptionName":"REMOVE|R","StatementOptionHelp":{"#cdata":"Removes periods that represent missing values from a line that contains no other values."},"StatementOptionType":"S"}]}}]}}}