{"Procedure":{"Name":"FSVIEW","ProductGroup":"SAS/FSP","ProcedureHelp":{"#cdata":"Syntax: PROC FSVIEW <DATA=data-set> | <NEW=data-set <LIKE=data-set>>  <FORMULA=SAS-catalog<.formula-entry>>  \n    <options>;  \n     \n    FORMAT variable-list format <... variable-list-n format-n>;  \n    ID variable <... variable-n>;  \n    INFORMAT variable-list informat <... variable-list-n informat-n>;  \n    VAR variable <... variable-n>;  \n    WHERE expression;  \n\nThe FSVIEW procedure enables you to browse or edit a SAS data set, displaying the data set \nas a table of rows and columns. You can also use it to create a new SAS data set.\n\nThe procedure provides tools for customizing an FSVIEW application. For example, you can \nredesign the display by changing the size, position, and colors of the FSVIEW window. You \ncan also add computed variables, which display values that are calculated from other variables \nin the data set.\n\nYou can also open the FSVIEW window by issuing an FSVIEW command from any SAS System command line.\n\nCAUTION:\nThe FSVIEW procedure edits a SAS data set in place. \nThe FSVIEW procedure does not leave an unedited copy of the original. If you need to preserve \nthe original data, be sure to make a copy of the data set before you begin editing.  \n\nNote: Partially displayed data values are automatically protected in an FSVIEW window, and \ncannot be edited."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"AUTOADD","ProcedureOptionHelp":{"#cdata":"Turns on the autoadd feature. A new observation is displayed when the FSVIEW window is opened. \nAnother new observation is added automatically whenever you enter values in the previous new \nobservation and press ENTER.\n\nThe AUTOADD option is ignored if you also specify the BROWSEONLY or NOADD option with the \nPROC FSVIEW statement."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"BROWSEONLY|BRONLY","ProcedureOptionHelp":{"#cdata":"Prevents editing of data sets during the FSVIEW session. This option disables the MODIFY \ncommand so that data sets that are opened for browsing cannot be switched to editing. It \nalso disables the EDIT command so that additional FSVIEW windows cannot be opened for \nediting."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=data-set <(data-set-options)>] \n      \nNames the SAS data set to edit or browse. By default, the FSVIEW procedure displays \nthe most recently created data set.\n\nIf you specify both the DATA= option and the NEW= option in the same PROC FSVIEW \nstatement, the DATA= option is ignored.\n\nYou can add data set options following the data set name. The options must be enclosed \nin parentheses. The FIRSTOBS= and OBS= options are ignored; all other data set options \nare valid."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DEBUG","ProcedureOptionHelp":{"#cdata":"Turns on the SAS Component Language (SCL) source-level debugger, which provides step-by-step \nassistance in resolving errors in SCL programs. This option is useful when you are creating \nor modifying an application that includes an SCL program."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"EDIT|MODIFY","ProcedureOptionHelp":{"#cdata":"Opens the initial FSVIEW window for editing the data set. By default, the initial FSVIEW \nwindow is opened for browsing.\n\nThis option is ignored if the BROWSEONLY option is also used. If the data set cannot be \nopened for editing, it is opened for browsing instead."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"FORMULA=","ProcedureOptionHelp":{"#cdata":"[Syntax: FORMULA=SAS-catalog<.formula-entry>] \n      \nNames a SAS catalog or specific FORMULA entry that contains formulas for computed variables and \nother FSVIEW session parameters to be associated with the data set, or in which the procedure can \nstore formulas and parameter settings that are defined during the current FSVIEW session.\n\nThe general form of the SAS-catalog value is \n\n  <libref.>catalog-name  \n  \nIf the specified catalog does not already exist, it is created. \nIf you specify only a one-level name, it is treated as a catalog name in the default library, \nWORK. You must use a two-level catalog name if you want to specify a FORMULA entry name.\n\nThe general form of the formula-entry value is \n\n  entry-name<.FORMULA>  \n\nIf you specify a two-level entry name with anything other than FORMULA as the second level \n(entry type), the specified type is ignored; FORMULA is used instead."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LIKE=","ProcedureOptionHelp":{"#cdata":"[Syntax: LIKE=data-set<(data-set-options)> ] \n      \nNames an existing SAS data set whose structure is copied when a new SAS data set is created. \n(This option must be used in conjunction with the NEW= option.) When the FSVIEW NEW window is \nopened, the variable names and attributes of the specified data set are displayed.\n\nYou can add data set options following the data set name. The options must be enclosed in \nparentheses."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"NEW=","ProcedureOptionHelp":{"#cdata":"[Syntax: NEW=data-set <(data-set-options)>] \n      \nCreates a new SAS data set. If a data set that has the specified name already exists, \nthe FSVIEW procedure terminates with an error message.\n\nWhen this option is used, the procedure begins by opening the FSVIEW NEW window, in which \nthe names and attributes of the variables in the new data set are defined. Use the LIKE= \noption in conjunction with the NEW= option to initialize the FSVIEW NEW window with the \nvariable names and attributes of an existing data set. After the structure of the new \ndata set is defined, the FSVIEW window is opened so that observations can be added."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"NOADD","ProcedureOptionHelp":{"#cdata":"Prevents the addition of observations to any data set that is edited during the current FSVIEW \nsession. This option disables the AUTOADD and DUP commands so that no new observations can be \nadded."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOBORDER","ProcedureOptionHelp":{"#cdata":"Suppresses the sides and bottom of the FSEDIT window's border in a character-based display \nenvironment.\n\nNote: This option is ignored in graphical windowing environments.  \n\nWhen this option is used in a supported display environment, text and fields can appear in \nthe columns and row that the border normally occupies.\n\nWhen the NOBORDER option is used in conjunction with the FORMULA= option, the window size \nthat is specified in the FORMULA entry is ignored. The FSVIEW window always occupies the \nmaximum possible number of rows and columns when the NOBORDER option is specified."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NODELETE|NODEL","ProcedureOptionHelp":{"#cdata":"Prevents the deletion of observations from any data set that is edited during the current \nFSVIEW session. This option disables the DELETE command so that observations cannot be \ndeleted."},"ProcedureOptionType":"S"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variable <... variable-n>;  \n      \nwhere variable is the name of a variable from the displayed data set. \n      \nSpecifies one or more variables whose values identify observations in the FSVIEW window."},"StatementOptions":null},{"StatementName":"VAR","StatementHelp":{"#cdata":"Syntax: VAR variable <... variable-n>; \n      \nwhere variable is the name of a variable from the displayed data set. \n      \nSelects which variables to display and what order to display then in."},"StatementOptions":null},{"StatementName":"WHERE","StatementHelp":{"#cdata":"Syntax: WHERE expression; \n      \nwhere expression is any valid WHERE expression that includes one or more of the variables \nin the input data set. \n      \nDefines criteria that observations in the input data set must meet in order to be displayed \nby the procedure.  \n\nBy default, the FSVIEW procedure displays all the observations in the data set. The WHERE \nstatement is useful when you want to view only a subset of the observations in a SAS data \nset. For example, to view only observations for which the value of the variable YEAR is \nless than 5, follow the PROC FSVIEW statement with this statement: \n\n  where year<5;\n\nThe FSVIEW procedure displays only observations that meet the specified condition(s). \nObservations that do not satisfy the condition(s) are not shown and cannot be edited."},"StatementOptions":null}]}}}