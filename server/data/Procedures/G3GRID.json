{"Procedure":{"Name":"G3GRID","ProductGroup":"SAS/GRAPH","ProcedureHelp":{"#cdata":"Syntax: PROC G3GRID <DATA=input-data-set> <OUT=output-data-set>\n      <OUTTRI=output-data-set>;  \n      GRID grid-request </option(s)>;  \n\nThe G3GRID procedure processes an existing SAS data set to create a data set that the G3D \nprocedure or the GCONTOUR procedure can use to produce a three-dimensional surface plot or \na contour plot. The procedure creates a data set whose horizontal X-Y variable values form \na complete grid, and it interpolates the values of the vertical Z variable for each point \non the X-Y plane. \n\nUsing the G3GRID procedure, you can do the following actions:\n\n  o create a rectangular grid of interpolated or smoothed values from irregularly spaced \n    observations for use in a three-dimensional surface or contour plot\n\n  o complete a rectangular grid of interpolated or smoothed values for an input data set \n    that has an insufficient number of observations to produce a three-dimensional surface \n    or contour plot\n\n  o interpolate or smooth data for a three-dimensional plot\n\nThe G3GRID procedure does not produce graphics output. Proc G3GRID produces an output data set \nthat you can use as the input data set for Proc G3D or Proc GCONTOUR."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=input-data-set] \n      \nSpecifies the SAS data set that contains the variables to process. By default, the procedure \nuses the most recently created SAS data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUT=output-data-set] \n      \nSpecifies the output data set. The data set contains any BY variables that you specify, the \ninterpolated or smoothed values of the vertical variables (z through z-n), and the coordinates \nfor all grid positions on the horizontal (x-y) plane. If you specify smoothing, the output data \nset also contains a variable named _SMTH_, whose value is a smoothing parameter. The observations \nin this data set are ordered by any variables that you specify with a BY statement. By default, \nthe output of PROC G3GRID creates WORK.DATA1.\n\nDepending on the shape of the original data, and the options you use, the output data set can \ncontain values for the vertical (z through z-n) values that are outside of the range of the \noriginal values in the data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTTRI=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTTRI=output-data-set] \n      \nSpecifies an additional output data set that contains triangular coordinates. The data set will \ncontain any BY variables that you specify, the two horizontal variables giving the horizontal \n'(x -y) plane coordinates of the input points, and a variable named TRIANGLE that uses the integer \nvalues to label the triangles. The observations in this data set are ordered by any variables that \nyou specify with a BY statement.\n\nThe data set contains three observations for each value of the variable TRIANGLE. The three \nobservations give the coordinates of the three vertices of the triangle. Points on the convex \nhull of the input data set of points are also assumed to lie in degenerate triangles, whose \nother vertices are at infinity. The points in the convex hull can be recovered by keeping only \nthose triangles with exactly two missing vertices.\n\nBy default, no OUTTRI= data set is produced. OUTTRI= is not valid when you specify the SPLINE \noption in the GRID statement."},"ProcedureOptionType":"DV"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"GRID","StatementHelp":{"#cdata":"Syntax: GRID y*x=z(s) </option(s)>; \n\nSpecifies the three numeric variables for interpolation or for smoothing. Can also specify \nthe number of observations (x and y values), in the output data set; output values for the \ntwo horizontal variables x-y; and the interpolation method for the vertical variables. \n\nRequired Arguments:\n\ny*x=z(s) \n  specifies three or more numeric variables from the input data set: \n  y -- is one of the variables that forms the horizontal (x-y) plane \n  x -- is another of the variables that forms the horizontal (x-y) plane \n  z(s) -- is one or more of the vertical variables for the interpolation."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"AXIS1=","StatementOptionHelp":{"#cdata":"[Syntax: AXIS1=ascending-value-list] \n          \nSpecifies a list of numeric values to assign to the first (y) variable in the grid request for \nthe output data set. Numbers that you specify with this option determine the number of values for \ny, and override a value that you specify with the NAXIS1= option. The ascending-value-list must be \narranged in ascending order.The value list can be in any of the following forms: \n\n  o n <...n>\n\n  o n TO n <BY increment>\n\n  o n <...n> TO n <BY increment > <n <...n> >"},"StatementOptionType":"V"},{"StatementOptionName":"AXIS2=","StatementOptionHelp":{"#cdata":"[Syntax: AXIS1=ascending-value-list] \n          \nSpecifies a list of numeric values to assign to the second (x) variable in the grid request for \nthe output data set.  Numbers that you specify with this option determine the number of values \nfor x and override a value that you specify with the NAXIS2= option. The ascending-value-list \nmust be arranged in ascending order.The value list can be in any of the following forms: \n\n  o n <...n>\n\n  o n TO n <BY increment>\n\n  o n <...n> TO n <BY increment > <n <...n> >"},"StatementOptionType":"V"},{"StatementOptionName":"JOIN","StatementOptionHelp":{"#cdata":"Uses a linear interpolation within a set of triangular regions that are formed from the input \ndata set. This interpolation method creates values in the range of the initial values of the \nvertical variable, but the resulting interpolated surface might not be smooth."},"StatementOptionType":"V"},{"StatementOptionName":"NAXIS1=","StatementOptionHelp":{"#cdata":"[Syntax: NAXIS1=n] \n          \nSpecifies the number of values for the first (y) variable in the grid request for the output \ndata set. You can determine the actual values used for y by taking the minimum and the maximum \nvalues of y and dividing the range into n- one equal sections.\n\nA value specified with NAXIS1= is ignored if values are also specified with AXIS1=.\n\nDefault: 11"},"StatementOptionType":"V"},{"StatementOptionName":"NAXIS2=","StatementOptionHelp":{"#cdata":"[Syntax: NAXIS2=n] \n          \nSpecifies the number of values for the second (x) variable in the grid request for the output \ndata set. You can determine the actual values that are used for x by taking the minimum value \nand the maximum value of x, and dividing the range into n- one equal sections.\n\nA value specified with NAXIS2= is ignored if values are also specified with AXIS2=.\n\nDefault: 11"},"StatementOptionType":"V"},{"StatementOptionName":"NEAR=","StatementOptionHelp":{"#cdata":"[Syntax: NEAR=n] \n          \nSpecifies the number of the nearest data points to use for computing the estimates of the first \nderivative, and the second derivative. As NEAR= values become larger, time and computation costs \nincrease significantly. NEAR= is ignored if you specify SPLINE. The value of n must be greater \nthan or equal to 3.\n\nIf the number of input data points is insufficient for the number that you specify with NEAR=, \na smaller number of data points is used.\n\nDefault: 3"},"StatementOptionType":"V"},{"StatementOptionName":"NOSCALE","StatementOptionHelp":{"#cdata":"Specifies that the x and y variables not be scaled to the same range before interpolation. \nBy default, the interpolation is performed after both variables are similarly scaled because \nthe interpolation methods assume that the scales of x and y are comparable."},"StatementOptionType":"S"},{"StatementOptionName":"PARTIAL","StatementOptionHelp":{"#cdata":"Specifies that a spline be used to estimate the derivatives for the biquintic polynomial \ninterpolation. A bivariate spline is fit to the nearest neighbors, and is used to estimate \nthe needed derivatives. This option produces results that are less smooth than those produced \nby the SPLINE option and uses fewer computer resources. However, the results produced by PARTIAL \nare smoother than those that are produced by the default. If you use both the PARTIAL option and \nthe SPLINE option, the PARTIAL option is ignored."},"StatementOptionType":"S"},{"StatementOptionName":"SCALE","StatementOptionHelp":{"#cdata":"Specifies that the x and y variables be scaled to the same range before interpolation. \nThe interpolation is performed after both variables are similarly scaled because the \ninterpolation methods assume that the scales of x and y are comparable."},"StatementOptionType":"S"},{"StatementOptionName":"SMOOTH=","StatementOptionHelp":{"#cdata":"[Syntax: SMOOTH=ascending-value-list] \n          \nSpecifies a list of numbers for smoothing parameters. Use the SMOOTH= option only when you \nalso use the SPLINE option. The ascending-value-list must be arranged in ascending order. \nThe value list can be in any of the following forms:\n\n  o n <...n>\n\n  o n TO n <BY increment>\n\n  o n <...n> TO n <BY increment > <n <...n> >"},"StatementOptionType":"V"},{"StatementOptionName":"SPLINE","StatementOptionHelp":{"#cdata":"Specifies the use of a bivariate spline to interpolate, or to form a smoothed estimate, if you also \nuse the SMOOTH= option. The SPLINE option results in the use of an order n\u00b3 algorithm, where n is \nthe number of input data points. Consequently, this method can be time-consuming. If you use more \nthan 100 input points, the procedure can use excessive time."},"StatementOptionType":"V"}]}},{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY <DESCENDING> variable-1 <...<DESCENDING> variable-n> <NOTSORTED>; \n      \nThe BY statement divides the observations from an input data set into groups for processing. \nEach set of contiguous observations with the same value for a specified variable is called a \nBY group. A variable that defines BY groups is called a BY variable and is the variable that \nis specified in the BY statement. When you use a BY statement, the graphics procedure performs \nthe following operations:\n\n  \u2022 processes each group of observations independently\n\n  \u2022 generates a separate graph or output for each BY group\n\n  \u2022 automatically adds a heading called a BY line to each graph identifying the BY group \n    represented in the graph\n\n  \u2022 adds BY statement information below the Description field of the catalog entry.\n\nBy default, the procedure expects the observations in the input data set to be sorted \nin ascending order of the BY variable values. \n\nNote: The BY statement in SAS/GRAPH is essentially the same as the BY statement in Base SAS.\nHowever, the effect on the output is different when it is used with SAS/GRAPH procedures."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING","StatementOptionHelp":{"#cdata":"Indicates that the data set is sorted in descending order by the specified variable. \nThe option affects only the variable that immediately follows the option name, and \nmust be repeated before every variable that is not sorted in ascending order."},"StatementOptionType":"S"},{"StatementOptionName":"NOTSORTED","StatementOptionHelp":{"#cdata":"Specifies that observations with the same BY value are grouped together, but are not \nnecessarily sorted in alphabetical or numeric order. The observations can be grouped \nin another way, for example, in chronological order.\n\nNOTSORTED can appear anywhere in the BY statement and affects all variables specified \nin the statement. NOTSORTED overrides DESCENDING if both appear in the same BY statement."},"StatementOptionType":"S"}]}}]}}}