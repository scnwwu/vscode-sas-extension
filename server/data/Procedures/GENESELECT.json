{"Procedure":{"Name":"GENESELECT","ProductGroup":"SAS/GENETICS","ProcedureHelp":{"#cdata":"Syntax: PROC GENESELECT <options> ; \n    FREQ variable ; \n    PERFORMANCE <options> ; \n    TRAIT variable </ options> ; \n    VAR variables </ options> ; \n    IMPORTANCE <options> ; \n    PARTIALDEP <options> ; \n    SAVE <options> ; \n    SCORE <options> ; \n\nThe GENESELECT procedure identifies influential genetic and environmental variables \nand their interactions by fitting a model to predict a trait and then evaluating the \ninfluence that the predictor variables and their interactions have on the model. \n\nThe GENESELECT procedure does the following: \n\n  o allows qualitative and quantitative variables \n  o allows a large number of predictor variables \n  o minimizes bias from missing values \n  o outputs an influence measure for single variables and interactions \n  o outputs an influence measure of a variable for each observation \n  o outputs predictions, including probabilities for qualitative traits \n  o outputs a matrix of similarities between predictor variables"},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nSpecifies data. Either the DATA= or INMODEL= option must be specified, \nbut not both."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"INMODEL=","ProcedureOptionHelp":{"#cdata":"[Syntax: INMODEL=SAS-data-set] \n      \nNames a data set created from the SAVE MODEL= option. When using the INMODEL= \noption, the VAR, TRAIT, and FREQ statements are prohibited, as are the DATA= \noption and other model parameters."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"ITERATIONS=","ProcedureOptionHelp":{"#cdata":"[Syntax: ITERATIONS=n] \n      \nSpecifies the number of terms in a boosted series of trees. For quantitative and \nbinary traits, the number of iterations equals the number of trees. For a qualitative, \nnonbinary trait, a separate tree is created for each trait category in each iteration, \nresulting in nJ trees, where J is the number of trait values and n is an integer from 1 \nto 1000. The default value of n is 50."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LEAFFRACTION=","ProcedureOptionHelp":{"#cdata":"[Syntax: LEAFFRACTION=p] \n      \nSpecifies the smallest number of observations a new branch can have, expressed \nas the proportion of the number N of available observations in the DATA= data set \nspecified in the PROC statement. N can be less than the total number of observations \nin the data set because observations with a missing trait or nonpositive value of \nthe variable specified in the FREQ statement are excluded from N. The LEAFSIZE= \noption specifies the same quantity as an absolute number. The procedure uses the \nlarger of the two. P can be any number from zero through one. The default value \nequals 0.001."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"LEAFSIZE=","ProcedureOptionHelp":{"#cdata":"[Syntax: LEAFSIZE=n] \n      \nSpecifies the smallest number of observations a new branch can have. The LEAFFRACTION= \noption specifies the same quantity as a proportion of the original data. The procedure \nuses the larger of the two. The default value equals the number N of available observations \nin the DATA= data set specified in the PROC statement, divided by 1,000, or 5, if 5 is \nlarger, or 5,000, if 5,000 is smaller. N can be less than the total number of observations \nin the data set because observations with a missing trait or nonpositive value of the \nvariable specified in the FREQ statement are excluded from N. The LEAFSIZE= option does \nnot use the values of the variable in the FREQ statement to adjust the count of observations \nin the leaf."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXDEPTH=","ProcedureOptionHelp":{"#cdata":"Specifies the maximum depth of a node that the PROC statement creates automatically. \nThe depth of a node equals the number of splitting rules needed to define the node. \nThe root node has a depth of zero. The children of the root have a depth of one, and \nso on. \n\nThe smallest acceptable value of n is 0. Specify MAXDEPTH=0 to avoid creating a model. \nThe default value of n depends on the MODELTYPE= option. The default value of n is six \nfor MODELTYPE=TREE, and two for MODELTYPE= TREEBOOST."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"<n>","@Value2":"MAX"},"ProcedureOptionToolTips":{"@ToolTip1":"Replace <n> with an actual value for the MAXDEPTH= option.","@ToolTip2":"Specifies n=50, the largest possible value of n."}},{"ProcedureOptionName":"MAXSURROGATES=|MAXSURRS=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXSURROGATES | MAXSURRS=n] \n      \nSpecifies the number of surrogate rules sought for each internal node. A surrogate \nrule is one that emulates the splitting rule. The measure of agreement between a \nsurrogate and the splitting rule is used to compute the interchangeability of two \nvariables. The GENESELECT procedure does not use surrogate rules to predict \nobservations with missing values. The default value of n is 10."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MINCATSIZE=","ProcedureOptionHelp":{"#cdata":"[Syntax: MINCATSIZE=n] \n      \nSpecifies the minimum number of observations that a given qualitative variable value \nmust have in order to use the value in a split search. The GENESELECT procedure handles \nqualitative values that appear in fewer than n observations in the same way it handles \nmissing values. The default value of n is 5."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MODELTYPE=","ProcedureOptionHelp":{"#cdata":"Specifies the type of model to create."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"TREEBOOST","@Value2":"TREE"},"ProcedureOptionToolTips":{"@ToolTip1":"Boosted series of trees","@ToolTip2":"Decision tree"}},{"ProcedureOptionName":"SEED=","ProcedureOptionHelp":{"#cdata":"[Syntax: SEED=n] \n      \nSpecifies the seed for generating random numbers. The value specified for n must \nbe a nonnegative integer. Set n to 0 to use the internal default."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SPLITSIZE=","ProcedureOptionHelp":{"#cdata":"[Syntax: SPLITSIZE=n] \n      \nSpecifies the requisite number of observations a node must have in order for the \nprocedure to consider splitting it. By default, n is twice the value of the LEAFSIZE= \noption. For the LEAFFRACTION=, LEAFSIZE=, MINCATSIZE=, and SPLITSIZE= options in the \nPROC statement, and for the NODESIZE= option in the PERFORMANCE statement, the procedure \ncounts the number of observations in a node without adjusting the number with the values \nof the variable specified in the FREQ statement."},"ProcedureOptionType":"V"}]},"ProcedureStatements":[{"ProcedureStatement":[{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable ; \n\nThe FREQ statement names a variable that contains the frequency of occurrence of each \nobservation. The GENESELECT procedure treats an observation as if it appears n times, \nwhere n is the value of the FREQ variable for the observation. The value of n can be \nfractional to indicate a partial observation. If the value of n is close to zero, \nnegative, or missing, the observation is ignored. When the FREQ statement is not \nspecified, each observation is assigned a frequency of one."},"StatementOptions":null},{"StatementName":"PERFORMANCE","StatementHelp":{"#cdata":"Syntax: PERFORMANCE <options> ; \n\nThe PERFORMANCE statement specifies options affecting the speed of computations \nwith little or no impact on the results."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"WORKDATALOCATION=","StatementOptionHelp":{"#cdata":"Specifies the location where a working copy of the data will be stored."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"RAM","@Value2":"DISK","@Value3":"SOURCE"},"StatementOptionToolTips":{"@ToolTip1":"Requests that the working copy be stored in memory if enough memory is available  for it and still allows for minimal calculations in one pass of the data.","@ToolTip2":"Requests that the working copy be stored in a disk utility file. Storing the copy  on disk can free a considerable amount of memory for calculations, possibly  speeding up the program.","@ToolTip3":"Requests that the data be read multiple times instead of being copied to memory  or a disk utility file. SOURCE is slower than DISK because the DISK copy is  converted to encodings directly usable in the calculations. The SOURCE  location is preferable only when the data do not fit in RAM or in a disk  utility file."}},{"StatementOptionName":"MEMSIZE=","StatementOptionHelp":{"#cdata":"Specifies the maximum amount of memory to allocate for the computations and the \nworking copy of the data if the data are stored in memory."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"mB","@Value2":"mK","@Value3":"mM","@Value4":"mG"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the maximum amount of memory as m bytes.","@ToolTip2":"Specifies the maximum amount of memory as m kilobytes.","@ToolTip3":"Specifies the maximum amount of memory as m megabytes.","@ToolTip4":"Specifies the maximum amount of memory as m gigabytes."}}]}},{"StatementName":"TRAIT","StatementHelp":{"#cdata":"Syntax: TRAIT variable </ option> ; \n\nThe TRAIT statement names the variable that the model tries to predict."},"StatementOptions":{"StatementOption":{"StatementOptionName":"VARTYPE=","StatementOptionHelp":{"#cdata":"Specifies whether the trait is qualitative or quantitative. The default is QUANTITATIVE."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"QUALITATIVE","@Value2":"QUANTITATIVE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the trait is qualitative (for a character variable).","@ToolTip2":"Specifies that the trait is quantitative (for a numeric variable)."}}}},{"StatementName":"VAR","StatementHelp":{"#cdata":"Syntax: VAR variables </ options> ; \n\nThe VAR statement names variables with common options. The VAR statement can \nbe repeated."},"StatementOptions":{"StatementOption":{"StatementOptionName":"VARTYPE=","StatementOptionHelp":{"#cdata":"Specifies whether the variables are qualitative or quantitative. \n          \nThe default is QUANTITATIVE."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"QUALITATIVE","@Value2":"QUANTITATIVE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the variables are qualitative (for character variables).","@ToolTip2":"Specifies that the variables are quantitative (for numeric variables)."}}}},{"StatementName":"IMPORTANCE","StatementHelp":{"#cdata":"Syntax: IMPORTANCE </ options> ; \n\nThe IMPORTANCE statement implements an observation-based approach to evaluate the \nimportance of a variable or of a pair of variables to the predictions of the model. \n\nFor each observation, the value of the variable or pair of variables being evaluated \nis rendered uninformative. The IMPORTANCE statement outputs the prediction once using \nthe actual value and a second time using the uninformative value. The difference between \nthe two predictions shows the dependence of the prediction on the variable or pair of \nvariables being evaluated. The differences for all the observations can be plotted against \nthe actual variable value or observation number to explore where the dependence is stronger \nor weaker. \n\nThe observation-based importance differs from the split-based importance computed in the \nIMPORTANCE= option of the SAVE statement. The latter importance is based on the contribution \na variable makes in reducing the residual sum of squares. \n\nThe IMPORTANCE statement can be repeated."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DATA=","StatementOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n          \nNames the input data set. If the DATA= option is absent, the procedure uses the \ntraining data."},"StatementOptionType":"DV"},{"StatementOptionName":"N2WAY=","StatementOptionHelp":{"#cdata":"[Syntax: N2WAY=mxn] \n          \nRequests to evaluate the best n variables paired with the best n variables, where the \nterm \"best\" here refers to the split-based variable importance rankings computed in \nthe IMPORTANCE= option of the SAVE statement. If n is missing, then n is set to m. The \ndefault value of m and n is 0. When the procedure evaluates a pair of variables, it also \nevaluates the two variables individually and outputs results as if the variables were \nspecified in the VAR= option."},"StatementOptionType":"V"},{"StatementOptionName":"NVARS=","StatementOptionHelp":{"#cdata":"[Syntax: NVARS=n] \n          \nRequests to evaluate the best n variables as ranked by the split-based variable importance \ncomputed in the IMPORTANCE= option of the SAVE statement. If the N2WAY=, NVARS=, and VAR= \noptions are absent, then the procedure assumes NVARS=5."},"StatementOptionType":"V"},{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set] \n          \nNames the output data set to contain the scored data. If the OUT= option is absent, the \nprocedure creates a data set name using the DATA convention. \n\nThe OUT= data set in the IMPORTANCE has the same variables as the OUT= data set in the \nSCORE data set, plus one or two more, _INPUT1_ and _INPUT2_, that contain the name of a \nvariable whose values were treated as uninformative when making the predictions. If _INPUT1_ \nis blank, then _INPUT2_ is blank and the predictions are the same as in the OUT= data set \nof the SCORE statement. \n\nThe OUT= data set becomes very large if many variables are being evaluated. The number of \nobservations in the OUT= data set equals the number of variables and pairs of variables being \nevaluated plus one times the number of observations in the data set. Specify OUT=_NULL_ to \navoid creating a scored data set."},"StatementOptionType":"DV"},{"StatementOptionName":"OUTFIT=","StatementOptionHelp":{"#cdata":"[Syntax: OUTFIT=SAS-data-set] \n          \nNames the output data set to contain the fit statistics. The number of observations \nin the OUTFIT= data set equals the number of variables and pairs of variables being \nevaluated plus one. \n\nThe OUTFIT= data set in the IMPORTANCE has the same variables as the OUTFIT= data set \nin the SCORE data set, plus one or two more, _INPUT1_ and _INPUT2_, that contain the \nname of a variable whose values were treated as uninformative when computating the \nstatistics. If _INPUT1_ is blank, then _INPUT2_ is blank and the statistics are the \nsame as in the OUTFIT= data set of the SCORE statement."},"StatementOptionType":"DV"},{"StatementOptionName":"VAR=","StatementOptionHelp":{"#cdata":"[Syntax: VAR=(varlist)] \n          \nSpecifies variables and pairs of variables to evaluate. Varlist is a list of variable \nnames optionally containing asterisks to indicate a pair of variables. Variables on the \nleft or right of an asterisk may be grouped within square brackets. Brackets may not be \nnested. Parentheses must enclose the list, varlist. \n\nWhen a procedure evaluates a pair of variables, it also evaluates the two variables \nindividually and outputs the results. For example, the following varlist would specify \nvariables A, B, C, D, E, and pairs of variables, B-C, D-E, D-C, and E-C: \n\n  A B*C [D E] * [E C]"},"StatementOptionType":"V"}]}},{"StatementName":"PARTIALDEP","StatementHelp":{"#cdata":"Syntax: PARTIALDEP <DATA=> <OUT=> VAR=(varlist) ; \n\nThe PARTIALDEP statement outputs a partial dependency function for plots and \ninteraction detection."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DATA=","StatementOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n          \nNames the input data set. If the DATA= option is absent, the procedure uses the data. \nOnly the variables listed in the VAR= option are used."},"StatementOptionType":"DV"},{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set] \n          \nNames the output data set to contain the partial dependency function. If the OUT= option \nis absent, the GENESELECT procedure creates a data set name by using the DATA convention. \nThe output variables are the same as output with the OUT= option to the SCORE statement."},"StatementOptionType":"DV"},{"StatementOptionName":"VAR=","StatementOptionHelp":{"#cdata":"[Syntax: VAR=(varlist)] \n          \nSpecifies the variable or pair of variables for which to compute the partial dependency. \nParentheses must enclose the list, varlist. The PARTIALDEP statement requires at least one \nvariable and at most two variables. The procedure ignores the value of all other variables."},"StatementOptionType":"V"}]}},{"StatementName":"SAVE","StatementHelp":{"#cdata":"Syntax: SAVE <options> ; \n\nThe SAVE statement outputs model information into SAS data sets."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DISSIMILARITY=","StatementOptionHelp":{"#cdata":"[Syntax: DISSIMILARITY=SAS-data-set] \n          \nNames the output data set to contain a dissimilarity statistic for pairs of input \nvariables. The data set has the type DISTANCE and is suitable for input to the DATA= \noption of the CLUSTER procedure. The data set includes an ID variable, _VAR_. The \ndissimilarity matrix equals one minus the similarity matrix output in the SIMILARITY= \noption. Similarity relies on surrogate rules. Use the MAXSURROGATES= option in the \nPROC statement to create surrogate rules when the model is fit."},"StatementOptionType":"DV"},{"StatementOptionName":"IMPORTANCE=","StatementOptionHelp":{"#cdata":"[Syntax: IMPORTANCE=SAS-data-set] \n          \nNames the output data set to contain the split-based variable importance."},"StatementOptionType":"DV"},{"StatementOptionName":"MODEL=","StatementOptionHelp":{"#cdata":"[Syntax: MODEL=SAS-data-set] \n          \nNames the output data set to encode the information necessary for use with the INMODEL= \noption in a subsequent invocation of the GENESELECT procedure"},"StatementOptionType":"V"},{"StatementOptionName":"SIMILARITY=","StatementOptionHelp":{"#cdata":"[Syntax: SIMILARITY=SAS-data-set] \n          \nNames the output data set to contain a similarity statistic for pairs of input variables. \nThe data set contains a variable for every input variable used in a primary splitting rule, \nand an additional identification variable, _VAR_, whose value is the name of an input variable. \nSimilarity relies on surrogate rules. Use the MAXSURROGATES= option in the PROC statement to \ncreate surrogate rules when the model is fit. The similarity matrix equals one minus the \ndissimilarity matrix that is created by using the DISSIMILARITY= option. The DISSIMILARITY= \noption creates a DISTANCE matrix suitable for input to the CLUSTER procedure."},"StatementOptionType":"V"}]}},{"StatementName":"SCORE","StatementHelp":{"#cdata":"Syntax: SCORE <options> ; \n\nThe SCORE statement reads a data set containing the input variables used in the model \nand then outputs a data set containing the original variables plus new variables to \ncontain predictions, residuals, decisions, and leaf assignments. The SCORE statement \ncan be repeated."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DATA=","StatementOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n          \nNames the input data set. If the DATA= option is absent, the procedure uses \nthe data."},"StatementOptionType":"DV"},{"StatementOptionName":"PREDICTION","StatementOptionHelp":{"#cdata":"Indicates that prediction variables, such as P_*, should be generated."},"StatementOptionType":"S"},{"StatementOptionName":"NOPREDICTION","StatementOptionHelp":{"#cdata":"Indicates that prediction variables, such as P_*, should not be generated."},"StatementOptionType":"S"},{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set] \n          \nNames the output data set to contain the scored data. If the OUT= option is absent, \nthe procedure creates a data set name by using the DATA convention. Specify OUT=_NULL_ \nto avoid creating a scored data set."},"StatementOptionType":"DV"},{"StatementOptionName":"OUTFIT=","StatementOptionHelp":{"#cdata":"[Syntax: OUTFIT=SAS-data-set] \n          \nNames the output data set to contain the fit statistics."},"StatementOptionType":"DV"},{"StatementOptionName":"ROLE=","StatementOptionHelp":{"#cdata":"Specifies the role of the input data set and determines the fit statistics to compute. \nFor ROLE=TRAIN, VALID, or TEST, observations without a trait value are ignored."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"TRAIN","@Value2":"VALID","@Value3":"TEST","@Value4":"SCORE"},"StatementOptionToolTips":{"@ToolTip1":"[Help description not currently available.]","@ToolTip2":"[Help description not currently available.]","@ToolTip3":"[Help description not currently available.]","@ToolTip4":"[Help description not currently available.]"}}]}}]},null]}}