{"Procedure":{"Name":"HPDMDB","ProductGroup":"HPA","#comment":{},"ProcedureHelp":{"#cdata":"Syntax: PROC HPDMDB DATA= < libref. >SAS-data-set < option(s) > ;\n    CLASS variable (< order-option >) variable (< order-option >) ... ;\n    FREQ variable ;\n    PERFORMANCE performance-options ;\n    VAR variable(s) ;\n    WEIGHT variable ; \n    \nThe HPDMDB procedure is a high-performance version of the DMDB procedure, which creates summaries\nof the input data source. PROC HPDMDB creates two output data sets: the VAROUT data set, which\ncontains a summary of the numeric variables, and the CLASSOUT data set, which contains a summary of\nthe classification variables.\n\nPROC HPDMDB is high-performance in that it takes advantage of distributed and multicore computing\nenvironments when the input data are stored on the SAS appliance. \n\nYou can use PROC HPDMDB to create a data mining database (DMDB) that is compatible with the DMDB\nfrom PROC DMDB, although this feature of PROC HPDMDB might not be supported in future versions."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA= <libref.>SAS-data-set\n      \nNames the SAS data set that contains the information that you want added to the data \nmining database. If the data set resides on the SAS appliance, then the SAS appliance \nis used during summarization."},"ProcedureOptionType":"DV|RV"},{"ProcedureOptionName":"DMDBCAT=","ProcedureOptionHelp":{"#cdata":"Syntax: DMDBCAT= <libref.>SAS-catalog\n      \nNames the metadata catalog to be created by PROC HPDMDB."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CLASSOUT=","ProcedureOptionHelp":{"#cdata":"Syntax: CLASSOUT= <libref.>SAS-data-set \n      \nNames the data set to contain the summaries of classification variables that are specified \nin the CLASS statement."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"VAROUT=","ProcedureOptionHelp":{"#cdata":"Syntax: VAROUT= <libref.>SAS-data-set\n      \nNames the data set to contain the summaries of analysis variables that are specified \nin the VAR statement."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"VARDEF=","ProcedureOptionHelp":{"#cdata":"Syntax: VARDEF=divisor\n      \nSpecifies the divisor to use in the calculation of the variance and standard deviation."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"N","@Value2":"DF"},"ProcedureOptionToolTips":{"@ToolTip1":"Number of observations (n)","@ToolTip2":"Degrees of freedom (n - 1)"}},{"ProcedureOptionName":"PRINT","ProcedureOptionHelp":{"#cdata":"Prints the class-level information to all open ODS destinations."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SPECIALMISSING","ProcedureOptionHelp":{"#cdata":"Enables special missing values to be treated as separate levels."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MAXLEVEL=","ProcedureOptionHelp":{"#cdata":"Syntax: MAXLEVEL=max \n      \nSpecifies the maximum number of levels to be reported for each class variable. If more than max levels\nof a class variable exist, PROC HPDMDB reports the frequency of unreported observations in a level\nnamed _OTHER_."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable (< order-option >) variable (< order-option >) ... ;\n      \nThe CLASS statement specifies the variables whose values define subgroup combinations \nfor the analysis.\n\nThe CLASS and VAR statements are mutually exclusive."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ASCENDING|ASC","StatementOptionHelp":{"#cdata":"Arranges class levels in lowest-to-highest order of unformatted values."},"StatementOptionType":"S"},{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Arranges class levels in highest-to-lowest order of unformatted values."},"StatementOptionType":"S"},{"StatementOptionName":"ASCFORMATTED|ASCFMT","StatementOptionHelp":{"#cdata":"Arranges class levels in ascending order by their formatted values."},"StatementOptionType":"S"},{"StatementOptionName":"DESFORMATTED|DESFMT","StatementOptionHelp":{"#cdata":"Arranges class levels in descending order by their formatted values."},"StatementOptionType":"S"},{"StatementOptionName":"DSORDER|DATA","StatementOptionHelp":{"#cdata":"Arranges class levels according to the order of their appearance in the input data set. \n          \nNOTE: The DSORDER sort option is not supported for input data sets stored on the SAS appliance."},"StatementOptionType":"S"}]}},{"StatementName":"PERFORMANCE","StatementHelp":{"#cdata":"Syntax: PERFORMANCE < performance-options > ;\n      \nThe PERFORMANCE statement defines performance parameters for multithreaded and distributed \ncomputing, passes variables about the distributed computing environment, and requests detailed \nresults about the performance characteristics of a High-Performance Analytics procedure.\n\nWith the PERFORMANCE statement, you can also control whether a High-Performance Analytics \nprocedure executes in SMP or MPP mode."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COMMIT=","StatementOptionHelp":{"#cdata":"Syntax: COMMIT=n\n          \nRequests that the High-Performance Analytics procedure write periodic updates to the \nSAS Log when observations are sent from the client to the appliance for distributed \nprocessing.\n\nHigh-Performance Analytics procedures do not have to use input data that are stored \nin the appliance. You can perform distributed computations regardless of the origin \nor format of the input data, provided the data are in a format that can be read by \nthe SAS System (for example, because a SAS/ACCESS engine is available)."},"StatementOptionType":"V"},{"StatementOptionName":"CPUCOUNT=","StatementOptionHelp":{"#cdata":"Syntax: CPUCOUNT=ACTUAL | num\n          \nSpecifies how many processors the procedure assumes are available on each host in the \ncomputing environment. num can be any integer from 1 to 256.\n\nCPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number\ncan be less than the physical number of CPUs if the SAS process has been restricted by system\nadministration tools. Setting CPUCOUNT= to a number greater than the actual number of available\nCPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system\noption.\n\nIf a High-Performance Analytics procedure executes in SMP mode, this option refers to the client\nmachine of the SAS session. In MPP mode, this option applies to the nodes on the appliance."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACTUAL","@Value2":"<num>"},"StatementOptionToolTips":{"@ToolTip1":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","@ToolTip2":"Replace <num> with an actual number. Setting CPUCOUNT= to a number  greater than the actual number of available CPUs might result in reduced performance. This  option overrides the CPUCOUNT= SAS system option."}},{"StatementOptionName":"DATASERVER=","StatementOptionHelp":{"#cdata":"Syntax: DATASERVER=\u201cname\u201d\n          \nSpecifies the name of the server on Teradata systems as defined through the hosts file \nand as used in the LIBNAME statement for Teradata. For example, if the hosts file defines\n\n    myservercop1 33.44.55.66\n    \nas the server for Teradata, then a LIBNAME specification would be as follows:\n\n    libname TDLib teradata server=myserver user= password= database= ;\n    \nA PERFORMANCE statement to induce running alongside the Teradata server would specify the\nfollowing:\n\n    performance dataserver=\"myserver\";\n    \nIf the DATASERVER= option is specified, it overrides the GRIDDATASERVER environment \nvariable."},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"Requests a table that shows a timing breakdown of the procedure steps."},"StatementOptionType":"V"},{"StatementOptionName":"TIMEOUT=","StatementOptionHelp":{"#cdata":"Syntax: TIMEOUT=s\n          \nSpecifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection\nto the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs\nare submitted to the appliance through workload management tools that might suspend access to the\nappliance for a longer period, you might want to increase the timeout value."},"StatementOptionType":"V"},{"StatementOptionName":"HOST=|GRIDHOST=","StatementOptionHelp":{"#cdata":"Syntax: HOST=\u201cname\u201d | GRIDHOST=\u201cname\u201d \n          \nSpecifies the name of the appliance host in single or double quotes. If the HOST= option \nis specified, it overrides the value of the GRIDHOST environment variable."},"StatementOptionType":"V"},{"StatementOptionName":"INSTALL=|INSTALLLOC=","StatementOptionHelp":{"#cdata":"Syntax: INSTALL=\u201cname\u201d | INSTALLLOC=\u201cname\u201d \n          \nSpecifies the directory in which the High-Performance Analytics shared libraries are \ninstalled on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC \nenvironment variable."},"StatementOptionType":"V"},{"StatementOptionName":"NODES=|NNODES=","StatementOptionHelp":{"#cdata":"Syntax: NODES=n | NNODES=n\n          \nSpecifies the number of nodes in the distributed computing environment, provided that \nthe data are not processed alongside the database.\n\nIf you specify NODES=0, you indicate that you want to process the data in SMP mode on \nthe client machine. If the input data are not alongside the database, this is the default. \nThe High-Performance Analytics procedures then perform the analysis mutlithreaded on the client."},"StatementOptionType":"V"},{"StatementOptionName":"NTHREADS=","StatementOptionHelp":{"#cdata":"Syntax: NTHREADS=n \n          \nSpecifies the number of threads for analytic computations and overrides the SAS system option\nTHREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads\nare determined based on the number of CPUs on the host on which the analytic computations execute.\nThe algorithm by which a CPU count is converted to a thread count is specific to the High-\nPerformance Analytics procedure. Most procedures create one thread per CPU for the analytic computations.\nBy default, High-Performance Analytics procedures execute in multiple concurrent threads unless\nturned off by the NOTHREADS system option or you force single-threaded execution with\nNTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance\nAnalytics procedures can impose more stringent limits if called for by algorithmic considerations.\nYou can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE\nstatement.\n\nNOTE: The SAS system options THREADS | NOTHREADS apply to the client machine on which\nthe SAS High-Performance Analytics procedures execute. They do not apply to the compute nodes\nin a distributed environment."},"StatementOptionType":"V"}]}},{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable ;\n      \nThe FREQ statement specifies a numeric variable that contains the frequency of each observation.\n\nRequired Argument:\nvariable\n  specifies a numeric variable whose value represents the frequency of the observation. For observations\n  where variable is 0 or missing, the observation is omitted in the CLASSOUT data set and is not\n  included in statistical calculations."},"StatementOptions":null},{"StatementName":"VAR","StatementHelp":{"#cdata":"Syntax: VAR variable(s) ;\n      \nThe VAR statement specifies one or more numeric variables to analyze. The CLASS \nand VAR statements are mutually exclusive.\n\nRequired Argument:\nvariable(s)\n  specifies one or more numeric variables to be used in the analysis. The variable(s) must be numeric.\n  For each variable, the VAROUT data set and the metadata contain the following statistics:\n\n    N Number of observations\n    NMISS Number of observations that contain a missing value\n    MIN Minimum observed value\n    MAX Maximum observed value\n    MEAN Mean of observed values\n    STD Standard deviation\n    SKEWNESS Measure of asymmetry\n    KURTOSIS Measure of the \u201cheaviness of the tails\u201d\n    SUM Sum of all nonmissing observations\n    CSS Corrected sum of squares\n    USS Sum of squares"},"StatementOptions":null},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable ;\n      \nThe WEIGHT statement specifies a numeric variable that contains a weight for each observation. The\nvariable is used in the computation of means, standard deviation, skewness, and kurtosis.\n\nRequired Argument:\nvariable\n  represents how the observation should be weighted in statistical calculations. For observations where\n  variable is 0 or missing, then the observation is still included in the CLASSOUT data set, but the\n  value is not used in statistical calculations."},"StatementOptions":null}]}}}