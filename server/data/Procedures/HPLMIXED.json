{"Procedure":{"Name":"HPLMIXED","ProductGroup":"SAS/STAT/HPA","#comment":{},"ProcedureHelp":{"#cdata":"Syntax: PROC HPLMIXED < options > ;\n    CLASS variables ;\n    MODEL dependent = < fixed-effects > < / options > ;\n    RANDOM random-effects < / options > ;\n    REPEATED < repeated-effect >< / options > ;\n    PARMS (value-list) ... < / options > ;\n    PERFORMANCE < options > ; \n\nThe HPLMIXED procedure fits a variety of mixed linear models to data and enables you \nto use these fitted models to make statistical inferences about the data. A mixed linear \nmodel is a generalization of the standard linear model used in the GLM procedure, the \ngeneralization being that the data are permitted to exhibit correlation and nonconstant \nvariability. The mixed linear model, therefore, provides you with the flexibility of \nmodeling not only the means of your data (as in the standard linear model) but their \nvariances and covariances as well. \n\nThe primary assumptions underlying the analyses performed by PROC HPLMIXED are as follows:\n\n  o The data are normally distributed (Gaussian).\n  o The means (expected values) of the data are linear in terms of a certain set of parameters.\n  o The variances and covariances of the data are in terms of a different set of parameters, \n    and they exhibit a structure matching one of those available in PROC HPLMIXED."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ABSCONV=","ProcedureOptionHelp":{"#cdata":"Syntax: ABSCONV=r\n      \nSpecifies an absolute function convergence criterion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ABSFCONV=","ProcedureOptionHelp":{"#cdata":"Syntax: ABSFCONV=r<n> \n      \nSpecifies an absolute function convergence criterion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ABSGCONV=","ProcedureOptionHelp":{"#cdata":"Syntax: ABSGCONV=r<n> \n      \nSpecifies an absolute gradient convergence criterion. Termination requires the maximum \nabsolute gradient element to be small."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"BLUP","ProcedureOptionHelp":{"#cdata":"Syntax: BLUP< (suboptions) > \n      \nRequests that best linear unbiased predictions (BLUPs) for the random effects be displayed. To use this\noption, you must also use the PARMS statement to specify fixed values for the covariance parameters.\nThe BLUP solution might be sensitive to the order of observations, and hence to how the data are\ndistributed on the grid. If there are multiple measures of a repeated effect, then the BLUP solution is\nnot unique. If the order of these multiple measures on the grid differs for different runs, then different\nBLUP solutions will result. \n\nYou can specify the following suboptions:\n\n  ITPRINT=number specifies that the iteration history be displayed after every number of iterations.\n    The default value is 10, which means the procedure displays the iteration history\n    for every 10 iterations.\n  MAXITER=number specifies the maximum number of iterations allowed. The default value is the\n    number of parameters in the BLUP option plus 2.\n  TOL=number specifies the tolerance value. The default value is the square root of machine\n    precision."},"ProcedureOptionType":"S","SubOptionsKeywords":"ITPRINT=|MAXITER=|TOL="},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=SAS-data-set\n      \nNames the SAS data set to be used by PROC HPLMIXED. The default is the most recently created\ndata set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"FCONV=","ProcedureOptionHelp":{"#cdata":"Syntax: FCONV=r \n      \nSpecifies the relative function convergence criterion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"GCONV=","ProcedureOptionHelp":{"#cdata":"Syntax: GCONV=r \n      \nSpecifies the relative gradient convergence criterion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXCLPRINT=","ProcedureOptionHelp":{"#cdata":"Syntax: MAXCLPRINT=number \n      \nSpecifies the maximum levels of CLASS variables to print in the ODS table \u201cClassLevels.\u201d \nThe default value is 20. MAXCLPRINT=0 enables you to print all levels of each CLASS variable. \nHowever, the option NOCLPRINT takes precedence over MAXCLPRINT."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXFUNC=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXFUNC=i] \n      \nSpecifies the maximum number n of function calls in the optimization process. The default \nvalues are as follows, depending on the optimization technique:\n\n   TRUREG, NRRIDG, NEWRAP: 125\n   QUANEW, DBLDOG: 500\n   CONGRA: 1000\n   NMSIMP: 3000\n  \nNote that the optimization can terminate only after completing a full iteration. Therefore, \nthe number of function calls that are actually performed can exceed the number that is \nspecified by the MAXFUNC= option. You can choose the optimization technique with the \nTECHNIQUE= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXITER=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXITER= i <n>] \n      \nSpecifies the maximum number n of iterations in the optimization process. The default \nvalues are as follows, depending on the optimization technique:\n\n   o TRUREG, NRRIDG, NEWRAP: 50\n   o QUANEW, DBLDOG: 200\n   o CONGRA: 400\n   o NMSIMP: 1000 \n  \nThese default values also apply when n is specified as a missing value. You can choose the \noptimization technique with the TECHNIQUE= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXTIME=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXTIME=r] \n      \nSpecifies an upper limit of r seconds of CPU time for the optimization process. The default \nvalue is the largest floating-point double representation of your computer. Note that the \ntime specified by the MAXTIME= option is checked only once at the end of each iteration. \nTherefore, the actual running time can be longer than that specified by the MAXTIME= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"METHOD=","ProcedureOptionHelp":{"#cdata":"Specifies the estimation method for the covariance parameters."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"REML","@Value2":"ML"},"ProcedureOptionToolTips":{"@ToolTip1":"The REML specification performs residual (restricted) maximum likelihood, and it is the default method.","@ToolTip2":"The ML specification performs maximum likelihood."}},{"ProcedureOptionName":"MINITER=","ProcedureOptionHelp":{"#cdata":"Syntax: MINITER= i\n      \nSpecifies the minimum number of iterations. The default value is 0. If you request more iterations\nthan are actually needed for convergence to a stationary point, the optimization algorithms can behave\nstrangely. For example, the effect of rounding errors can prevent the algorithm from continuing for\nthe required number of iterations."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NAMELEN=","ProcedureOptionHelp":{"#cdata":"Syntax: NAMELEN=number\n      \nSpecifies the length to which long effect names are shortened. The default and minimum value is 20."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOCLPRINT","ProcedureOptionHelp":{"#cdata":"Syntax: NOCLPRINT< =number > \n      \nSuppresses the display of the \u201cClass Level Information\u201d table if you do not specify \nnumber. If you specify number, the values of the classification variables are displayed \nfor only those variables whose number of levels is less than number. Specifying a number \nhelps to reduce the size of the \u201cClass Level Information\u201d table if some classification \nvariables have a large number of levels."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"SINGCHOL=","ProcedureOptionHelp":{"#cdata":"Syntax: SINGCHOL=number \n      \nTunes the singularity criterion in Cholesky decompositions. The default is 1E4 times the \nmachine epsilon; this product is approximately 1E-12 on most computers."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SINGSWEEP=","ProcedureOptionHelp":{"#cdata":"Syntax: SINGSWEEP=number \n      \nTunes the singularity criterion for sweep operations. The default is 1E4 times the\nmachine epsilon; this product is approximately 1E-12 on most computers."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SINGULAR=","ProcedureOptionHelp":{"#cdata":"Syntax: SINGULAR=number \n      \nTunes the general singularity criterion applied by the HPLMIXED procedure in sweeps \nand inversions. The default is 1E4 times the machine epsilon; this product is approximately \n1E-12 on most computers."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TECHNIQUE=","ProcedureOptionHelp":{"#cdata":"[Syntax: TECHNIQUE=name] \n      \nSpecifies the optimization technique to obtain maximum likelihood estimates."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"CONGRA","@Value2":"DBLDOG","@Value3":"NEWRAP","@Value4":"NMSIMP","@Value5":"NRRIDG","@Value6":"QUANEW","@Value7":"TRUREG","@Value8":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Chooses one of four different conjugate-gradient optimization algorithms, which can be more precisely  defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip2":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation  of the Cholesky factor of the Hessian.","@ToolTip3":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson  optimization technique. The algorithm combines a line-search algorithm with ridging, and it  can be modified with the LINESEARCH= option.","@ToolTip4":"Performs a Nelder-Mead simplex optimization.","@ToolTip5":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson  optimization technique. This algorithm does not perform a line search.","@ToolTip6":"Chooses one of four different quasi-Newton optimization algorithms that can be more precisely  defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip7":"Performs a usually very stable but, for large problems, memory- and time-consuming trust-region  optimization technique. The algorithm is implemented similar to Gay (1983) and Mor\u00e9 and Sorensen (1983).","@ToolTip8":"Does not perform any optimization. This option is similar to METHOD=NONE, but TECH=NONE also  computes and displays residuals and goodness of fit statistics."}},{"ProcedureOptionName":"XCONV=","ProcedureOptionHelp":{"#cdata":"Syntax: XCONV=r \n      \nSpecifies the relative parameter convergence criterion."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable < (options) >... < variable < (options) >> < / global-options > ;\n      \nThe CLASS statement names the classification variables to be used as explanatory variables in the analysis.\nThe CLASS statement must precede the MODEL statement. You can list the response variable for binary\nand multinomial models in the CLASS statement, but this is not necessary.\n\nThe HPLOGISTIC procedure does not support the SPLIT option in the CLASS statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sorting order of the classification variable. If both the DESCENDING and ORDER=\noptions are specified, High-Performance Analytics procedures order the categories according to the\nORDER= option and then reverse that order."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Specifies the sorting order for the levels of classification variables. This ordering \ndetermines which parameters in the model correspond to each level in the data. \n\nBy default, ORDER=FORMATTED."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FORMATTED","@Value3":"FREQ","@Value4":"FREQDATA","@Value5":"FREQFORMATTED","@Value6":"FREQINTERNAL","@Value7":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Levels sorted by the order of appearance in the input data set FORMATTED External  formatted values, except for numeric.","@ToolTip2":"Levels sorted by the external formatted values, except for numeric variables with  no explicit format, which are sorted by their unformatted (internal) values","@ToolTip3":"Levels sorted by the descending frequency count (levels with more observations come  earlier in the order)","@ToolTip4":"Levels sorted by the order of descending frequency count, and within counts by order  of appearance in the input data set when counts are tied","@ToolTip5":"Levels sorted by the order of descending frequency count, and within counts by formatted  value when counts are tied","@ToolTip6":"Levels sorted by the Order of descending frequency count, and within counts by unformatted  (internal) value when counts are tied","@ToolTip7":"Levels sorted by the unformatted value"}},{"StatementOptionName":"REF=|REFERENCE=","StatementOptionHelp":{"#cdata":"[Syntax: REF=\u2019level\u2019 | keyword] \n          \nSpecifies the reference level for PARAM=REFERENCE. For an individual (but not a global) variable\nREF= option, you can specify the level of the variable to use as the reference level. Specify the\nformatted value of the variable if a format is assigned. For a REF= option or global-option, you can\nuse one of the following keywords. The default is REF=LAST."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<'level'>","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"For an individual (but not a global) variable REF= option, you can specify the level of the variable  to use as the reference level.","@ToolTip2":"Designates the first-ordered level as reference.","@ToolTip3":"Designates the last-ordered level as reference."}},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (\u201c.\u201d, \u201c.A\u201d, . . . , \u201c.Z\u201d for numeric variables and blanks for character variables) as\nvalid values for the CLASS variable.\n\nIf you do not specify the MISSING option, observations with missing values for CLASS variables are\nremoved from the analysis, even if the CLASS variables are not used in the model formulation."},"StatementOptionType":"S"},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"Specifies the parameterization method for the classification variable or variables. \n          \nThe GLM parameterization is the default."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"GLM","@Value2":"REFERENCE"},"StatementOptionToolTips":{"@ToolTip1":"Less-than-full-rank reference cell coding. This parameterization is used in, for example, the GLM, MIXED, and GLIMMIX procedures in SAS/STAT.","@ToolTip2":"Reference cell encoding. You can choose the reference value with a specific variable option in the CLASS statement, or designate the first or last ordered value with a globaloption. The default is REF=LAST."}},{"StatementOptionName":"TRUNCATE","StatementOptionHelp":{"#cdata":"Syntax: TRUNCATE< =n > \n          \nSpecifies the truncation width of formatted values of CLASS variables when the optional n is specified.\nIf n is not specified, the TRUNCATE option requests that classification levels should be determined\nusing no more than the first 16 characters of the formatted values of CLASS variables. When formatted\nvalues are longer than 16 characters, you can use this option in order to revert to the levels as\ndetermined in releases prior to SAS 9."},"StatementOptionType":"S|V"}]}},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL dependent = < fixed-effects >< / options > ;\n\nThe MODEL statement names a single dependent variable and the fixed effects, which determine the X\nmatrix of the mixed model. The MODEL statement is required. \n\nAn intercept is included in the fixed-effects model by default. If no fixed effects are specified, \nonly this intercept term is fit. The intercept can be removed by using the NOINT option."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALPHA=","StatementOptionHelp":{"#cdata":"Syntax: ALPHA=number \n      \nRequests that a t-type confidence interval be constructed for each of the fixed-effects \nparameters with confidence level 1-number. The value of number must be between 0 and 1; \nthe default is 0.05."},"StatementOptionType":"V"},{"StatementOptionName":"CL","StatementOptionHelp":{"#cdata":"Requests that t-type confidence limits be constructed for each of the fixed-effects \nparameter estimates. The confidence level is 0.95 by default; this can be changed \nwith the ALPHA= option."},"StatementOptionType":"S"},{"StatementOptionName":"DDFM=","StatementOptionHelp":{"#cdata":"Syntax: DDFM=NONE | RESIDUAL \n          \nSpecifies the method for computing the denominator degrees of freedom for the tests of fixed effects.\nThe DDFM=RESIDUAL option performs all tests by using the residual degrees of freedom, n -\nrank.X/, where n is the number of observations used. It is the default degrees-of-freedom method.\nDDFM=NONE specifies that no denominator degrees of freedom be applied. PROC HPLMIXED then\nessentially assumes that infinite degrees of freedom are available in the calculation of p-values. The\np-values for t tests are then identical to p-values that are derived from the standard normal distribution."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"RESIDUAL"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that no denominator degrees of freedom be applied. PROC HPLMIXED then essentially  assumes that infinite degrees of freedom are available in the calculation of p-values.","@ToolTip2":"Performs all tests by using the residual degrees of freedom, n - rank(X)/, where n is the number  of observations used. It is the default degrees-of-freedom method."}},{"StatementOptionName":"NOINT","StatementOptionHelp":{"#cdata":"Requests that no intercept be included in the model. An intercept is included by default."},"StatementOptionType":"S"},{"StatementOptionName":"SOLUTION|S","StatementOptionHelp":{"#cdata":"Requests that a solution for the fixed-effects parameters be produced."},"StatementOptionType":"S"}]}},{"StatementName":"RANDOM","StatementHelp":{"#cdata":"Syntax: RANDOM random-effects </ options> ;\n      \nThe RANDOM statement defines the random effects constituting the \u03b3 vector in the mixed \nmodel. It can be used to specify traditional variance component models and to specify \nrandom coefficients. The random effects can be classification or continuous, and multiple \nRANDOM statements are possible. \n\nYou can specify INTERCEPT (or INT) as a random effect to indicate the intercept. PROC HPLMIXED \ndoes not include the intercept in the RANDOM statement by default as it does in the MODEL \nstatement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALPHA=","StatementOptionHelp":{"#cdata":"[Syntax: ALPHA=number] \n          \nRequests that a t-type confidence interval be constructed for each of the random-effect \nestimates with confidence level 1-number. The value of number must be between 0 and 1. \nIf a value is specified it overrides the value from the ALPHA= option in the MODEL statement. \nThe default value is 0.05."},"StatementOptionType":"V"},{"StatementOptionName":"CL","StatementOptionHelp":{"#cdata":"Requests that t-type confidence limits be constructed for each of the random-effect estimates. \nThe confidence level is 0.95 by default; this can be changed with the ALPHA= option."},"StatementOptionType":"S"},{"StatementOptionName":"SOLUTION|S","StatementOptionHelp":{"#cdata":"Requests that the solution for the random-effects parameters be produced."},"StatementOptionType":"S"},{"StatementOptionName":"SUBJECT=|SUB=","StatementOptionHelp":{"#cdata":"[Syntax: SUBJECT=effect] \n          \nIdentifies the subjects in your mixed model. Complete independence is assumed across \nsubjects; thus, for the RANDOM statement, the SUBJECT= option produces a block-diagonal \nstructure in G with identical blocks. The Z matrix is modified to accommodate this block \ndiagonality. In fact, specifying a subject effect is equivalent to nesting all other \neffects in the RANDOM statement within the subject effect.\n\nWhen you specify the SUBJECT= option and a classification random effect, computations \nare usually much quicker if the levels of the random effect are duplicated within each \nlevel of the SUBJECT= effect."},"StatementOptionType":"V"},{"StatementOptionName":"TYPE=","StatementOptionHelp":{"#cdata":"[Syntax: TYPE=covariance-structure] \n          \nSpecifies the covariance structure of G."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ANTE(1)","@Value2":"AR(1)","@Value3":"ARH(1)","@Value4":"ARMA(1,1)","@Value5":"CS","@Value6":"CSH","@Value7":"FA(q)","@Value8":"FA0(q)","@Value9":"HF","@Value10":"TOEP","@Value11":"TOEP(q)","@Value12":"TOEPH","@Value13":"TOEPH(q)","@Value14":"UN","@Value15":"UN(q)","@Value16":"UNR","@Value17":"UNR(q)","@Value18":"VC|SIMPLE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a first-order ante-dependence structure (see Kenward 1987, Patel 1991, and Macchiavelli and Arnold 1994)","@ToolTip2":"Specifies a first-order autoregressive structure.","@ToolTip3":"Specifies a heterogeneous first-order autoregressive structure.","@ToolTip4":"Specifies the first-order autoregressive moving-average structure","@ToolTip5":"Specifies the compound-symmetry structure, which has constant variance and constant covariance.","@ToolTip6":"Specifies the heterogeneous compound-symmetry structure, which is an equi-correlation structure  but allows for different variances.","@ToolTip7":"Specifies the factor-analytic structure with q factors (Jennrich and Schluchter 1986).","@ToolTip8":"Is similar to the FA(q) structure except that no diagonal matrix D is included.","@ToolTip9":"Specifies the Huynh-Feldt covariance structure (Huynh and Feldt 1970). This structure is similar  to the CSH structure in that it has the same number of parameters and heterogeneity along the main  diagonal. However, it constructs the off-diagonal elements by taking arithmetic rather than geometric means.","@ToolTip10":"Specifies a full Toeplitz matrix, which can be viewed as an autoregressive structure with order equal to  the dimension of the matrix.","@ToolTip11":"Specifies a banded Toeplitz structure. This can be viewed as a moving-average structure with order equal to q-1.","@ToolTip12":"Specifies a heterogeneous banded Toeplitz structure.","@ToolTip13":"Specifies a heterogeneous banded Toeplitz structure. PROC MIXED estimates only the first q bands of  the matrix, setting all higher bands equal to 0.","@ToolTip14":"Specifies a completely general (unstructured) covariance matrix parameterized directly in terms of  variances and covariances.","@ToolTip15":"Specifies a completely general (unstructured) covariance matrix parameterized directly in terms of  variances and covariances. PROC MIXED estimates only the first q bands of the matrix, setting all  higher bands equal to 0.","@ToolTip16":"Specifies a completely general (unstructured) covariance matrix parameterized in terms of variances  and correlations.","@ToolTip17":"Specifies a completely general (unstructured) covariance matrix parameterized in terms of variances  and correlations. PROC MIXED estimates only the first q bands of the matrix, setting all higher bands equal to zero.","@ToolTip18":"Specifies standard variance components and is the default structure for both the RANDOM. In the RANDOM statement, a distinct variance component is assigned to each effect."}}]}},{"StatementName":"PARMS","StatementHelp":{"#cdata":"Syntax: PARMS <(value-list)> ...</ options> ;\n      \nThe PARMS statement specifies initial values for the covariance parameters, or it requests \na grid search over several values of these parameters. You must specify the values in the \norder in which they appear in the \"Covariance Parameter Estimates\" table. \n\nThe value-list specification can take any of several forms: \n\n  m \n  a single value \n\n  m1,m2,...,mn\n  several values \n\n  m to n \n  a sequence where m equals the starting value, n equals the ending value, and the increment equals 1 \n\n  m to n by i \n  a sequence where m equals the starting value, n equals the ending value, and the increment equals i \n\n  m1,m2 to m3\n  mixed values and sequences \n\nYou can use the PARMS statement to input known parameters."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"HOLD=|EQCONS=","StatementOptionHelp":{"#cdata":"Syntax: HOLD=value-list \n          \nSpecifies which parameter values PROC HPLMIXED should hold equal to the specified \nvalues. For example, the following statement constrains the first and third covariance \nparameters to equal 5 and 2, respectively:\n\n    parms (5) (3) (2) (3) / hold=1,3;"},"StatementOptionType":"V"},{"StatementOptionName":"LOWERB=","StatementOptionHelp":{"#cdata":"Syntax: LOWERB=value-list \n          \nEnables you to specify lower boundary constraints on the covariance parameters. The value-list\nspecification is a list of numbers or missing values (.) separated by commas. You must list the numbers\nin the order that PROC HPLMIXED uses for the covariance parameters, and each number corresponds\nto the lower boundary constraint. A missing value instructs PROC HPLMIXED to use its default\nconstraint. If you do not specify numbers for all of the covariance parameters, PROC HPLMIXED\nassumes the remaining ones are missing."},"StatementOptionType":"V"},{"StatementOptionName":"NOITER","StatementOptionHelp":{"#cdata":"Requests that no Newton-Raphson iterations be performed and that PROC HPLMIXED use the best value \nfrom the grid search to perform inferences. By default, iterations begin at the best value \nfrom the PARMS grid search."},"StatementOptionType":"S"},{"StatementOptionName":"PARMSDATA=|PDATA=","StatementOptionHelp":{"#cdata":"Syntax: PARMSDATA=SAS-data-set \n          \nReads in covariance parameter values from a SAS data set. The data set should contain the Est or\nCovp1\u2013Covpn variables."},"StatementOptionType":"DV"},{"StatementOptionName":"UPPERB=","StatementOptionHelp":{"#cdata":"Syntax: UPPERB=value-list \n          \nEnables you to specify upper boundary constraints on the covariance parameters. The value-list\nspecification is a list of numbers or missing values (.) separated by commas. You must list the numbers\nin the order that PROC HPLMIXED uses for the covariance parameters, and each number corresponds\nto the upper boundary constraint. A missing value instructs PROC HPLMIXED to use its default\nconstraint. If you do not specify numbers for all of the covariance parameters, PROC HPLMIXED\nassumes that the remaining ones are missing."},"StatementOptionType":"DV"}]}},{"StatementName":"PERFORMANCE","StatementHelp":{"#cdata":"Syntax: PERFORMANCE < performance-options > ;\n      \nThe PERFORMANCE statement defines performance parameters for multithreaded and distributed \ncomputing, passes variables about the distributed computing environment, and requests detailed \nresults about the performance characteristics of a High-Performance Analytics procedure.\n\nWith the PERFORMANCE statement, you can also control whether a High-Performance Analytics \nprocedure executes in SMP or MPP mode."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COMMIT=","StatementOptionHelp":{"#cdata":"Syntax: COMMIT=n\n          \nRequests that the High-Performance Analytics procedure write periodic updates to the \nSAS Log when observations are sent from the client to the appliance for distributed \nprocessing.\n\nHigh-Performance Analytics procedures do not have to use input data that are stored \nin the appliance. You can perform distributed computations regardless of the origin \nor format of the input data, provided the data are in a format that can be read by \nthe SAS System (for example, because a SAS/ACCESS engine is available)."},"StatementOptionType":"V"},{"StatementOptionName":"CPUCOUNT=","StatementOptionHelp":{"#cdata":"Syntax: CPUCOUNT=ACTUAL | num\n          \nSpecifies how many processors the procedure assumes are available on each host in the \ncomputing environment. num can be any integer from 1 to 256.\n\nCPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number\ncan be less than the physical number of CPUs if the SAS process has been restricted by system\nadministration tools. Setting CPUCOUNT= to a number greater than the actual number of available\nCPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system\noption.\n\nIf a High-Performance Analytics procedure executes in SMP mode, this option refers to the client\nmachine of the SAS session. In MPP mode, this option applies to the nodes on the appliance."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACTUAL","@Value2":"<num>"},"StatementOptionToolTips":{"@ToolTip1":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","@ToolTip2":"Replace <num> with an actual number. Setting CPUCOUNT= to a number  greater than the actual number of available CPUs might result in reduced performance. This  option overrides the CPUCOUNT= SAS system option."}},{"StatementOptionName":"DATASERVER=","StatementOptionHelp":{"#cdata":"Syntax: DATASERVER=\u201cname\u201d\n          \nSpecifies the name of the server on Teradata systems as defined through the hosts file \nand as used in the LIBNAME statement for Teradata. For example, if the hosts file defines\n\n    myservercop1 33.44.55.66\n    \nas the server for Teradata, then a LIBNAME specification would be as follows:\n\n    libname TDLib teradata server=myserver user= password= database= ;\n    \nA PERFORMANCE statement to induce running alongside the Teradata server would specify the\nfollowing:\n\n    performance dataserver=\"myserver\";\n    \nIf the DATASERVER= option is specified, it overrides the GRIDDATASERVER environment \nvariable."},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"Requests a table that shows a timing breakdown of the procedure steps."},"StatementOptionType":"V"},{"StatementOptionName":"TIMEOUT=","StatementOptionHelp":{"#cdata":"Syntax: TIMEOUT=s\n          \nSpecifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection\nto the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs\nare submitted to the appliance through workload management tools that might suspend access to the\nappliance for a longer period, you might want to increase the timeout value."},"StatementOptionType":"V"},{"StatementOptionName":"HOST=|GRIDHOST=","StatementOptionHelp":{"#cdata":"Syntax: HOST=\u201cname\u201d | GRIDHOST=\u201cname\u201d \n          \nSpecifies the name of the appliance host in single or double quotes. If the HOST= option \nis specified, it overrides the value of the GRIDHOST environment variable."},"StatementOptionType":"V"},{"StatementOptionName":"INSTALL=|INSTALLLOC=","StatementOptionHelp":{"#cdata":"Syntax: INSTALL=\u201cname\u201d | INSTALLLOC=\u201cname\u201d \n          \nSpecifies the directory in which the High-Performance Analytics shared libraries are \ninstalled on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC \nenvironment variable."},"StatementOptionType":"V"},{"StatementOptionName":"NODES=|NNODES=","StatementOptionHelp":{"#cdata":"Syntax: NODES=n | NNODES=n\n          \nSpecifies the number of nodes in the distributed computing environment, provided that \nthe data are not processed alongside the database.\n\nIf you specify NODES=0, you indicate that you want to process the data in SMP mode on \nthe client machine. If the input data are not alongside the database, this is the default. \nThe High-Performance Analytics procedures then perform the analysis mutlithreaded on the client."},"StatementOptionType":"V"},{"StatementOptionName":"NTHREADS=","StatementOptionHelp":{"#cdata":"Syntax: NTHREADS=n \n          \nSpecifies the number of threads for analytic computations and overrides the SAS system option\nTHREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads\nare determined based on the number of CPUs on the host on which the analytic computations execute.\nThe algorithm by which a CPU count is converted to a thread count is specific to the High-\nPerformance Analytics procedure. Most procedures create one thread per CPU for the analytic computations.\nBy default, High-Performance Analytics procedures execute in multiple concurrent threads unless\nturned off by the NOTHREADS system option or you force single-threaded execution with\nNTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance\nAnalytics procedures can impose more stringent limits if called for by algorithmic considerations.\nYou can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE\nstatement.\n\nNOTE: The SAS system options THREADS | NOTHREADS apply to the client machine on which\nthe SAS High-Performance Analytics procedures execute. They do not apply to the compute nodes\nin a distributed environment."},"StatementOptionType":"V"}]}},{"StatementName":"REPEATED","StatementHelp":{"#cdata":"Syntax: repeated-effect >< / options > ; \n      \nThe REPEATED statement is used to specify the R matrix in the mixed model. If no REPEATED statement\nis specified, R is assumed to be equal tO \u03c3\u00b2I. For this release,you can only use the REPEATED statement\nwith BLUP option. The statement is ignored when there is no BLUP option specified. \n\nFor many repeated measures models, no repeated effect is required in the REPEATED statement. Simply use\nthe SUBJECT= option to define the blocks of R and the TYPE= option to define their covariance structure.\nIn this case, the repeated measures data must be similarly ordered for each subject, and you must indicate\nall missing response variables with periods in the input data set unless they all fall at the end of a subject\u2019s\nrepeated response profile. These requirements are necessary in order to inform PROC HPLMIXED of the\nproper location of the observed repeated responses. When the HPLMIXED procedure operates in MPP\nmode in a distributed environment, the use of a repeated effect is required, since the order of the input data\nis not necessarily reproducible. \n\nSpecifying a repeated effect is useful when you do not want to indicate missing values with periods in the\ninput data set. The repeated effect must contain only classification variables. Make sure that the levels of the\nrepeated effect are different for each observation within a subject; otherwise, PROC HPLMIXED constructs\nidentical rows in R corresponding to the observations with the same level. This results in a singular R matrix\nand an infinite likelihood."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"SUBJECT=|SUB=","StatementOptionHelp":{"#cdata":"[Syntax: SUBJECT=effect | SUB=effect] \n\nIdentifies the subjects in your mixed model. Complete independence is assumed across subjects;\ntherefore, the SUBJECT= option produces a block-diagonal structure in R with identical blocks.\nWhen the SUBJECT= effect consists entirely of classification variables, the blocks of R correspond\nto observations sharing the same level of that effect. These blocks are sorted according to this effect\nas well. \n\nIf you want to model nonzero covariance among all of the observations in your SAS data set, specify\nSUBJECT=Dummy_Intercept to treat the data as if they are all from one subject. You need to create\nthis Dummy_Intercept variable in the data set. However, be aware that in this case PROC HPLMIXED\nmanipulates an R matrix with dimensions equal to the number of observations. If no SUBJECT=\neffect is specified, then every observation is assumed to be from a different subject and R is assumed\nto be diagonal. For this reason, you usually want to use the SUBJECT= option in the REPEATED\nstatement."},"StatementOptionType":"V"},{"StatementOptionName":"TYPE=","StatementOptionHelp":{"#cdata":"[Syntax: TYPE=covariance-structure] \n          \nSpecifies the covariance structure of the R matrix. The SUBJECT= option defines the blocks of R,\nand the TYPE= option specifies the structure of these blocks. The default structure is VC, which is\nonly one supported for this release."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ANTE(1)","@Value2":"AR(1)","@Value3":"ARH(1)","@Value4":"ARMA(1,1)","@Value5":"CS","@Value6":"CSH","@Value7":"FA(q)","@Value8":"FA0(q)","@Value9":"HF","@Value10":"TOEP","@Value11":"TOEP(q)","@Value12":"TOEPH","@Value13":"TOEPH(q)","@Value14":"UN","@Value15":"UN(q)","@Value16":"UNR","@Value17":"UNR(q)","@Value18":"VC|SIMPLE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a first-order ante-dependence structure (see Kenward 1987, Patel 1991, and Macchiavelli and Arnold 1994)","@ToolTip2":"Specifies a first-order autoregressive structure.","@ToolTip3":"Specifies a heterogeneous first-order autoregressive structure.","@ToolTip4":"Specifies the first-order autoregressive moving-average structure","@ToolTip5":"Specifies the compound-symmetry structure, which has constant variance and constant covariance.","@ToolTip6":"Specifies the heterogeneous compound-symmetry structure, which is an equi-correlation structure  but allows for different variances.","@ToolTip7":"Specifies the factor-analytic structure with q factors (Jennrich and Schluchter 1986).","@ToolTip8":"Is similar to the FA(q) structure except that no diagonal matrix D is included.","@ToolTip9":"Specifies the Huynh-Feldt covariance structure (Huynh and Feldt 1970). This structure is similar  to the CSH structure in that it has the same number of parameters and heterogeneity along the main  diagonal. However, it constructs the off-diagonal elements by taking arithmetic rather than geometric means.","@ToolTip10":"Specifies a full Toeplitz matrix, which can be viewed as an autoregressive structure with order equal to  the dimension of the matrix.","@ToolTip11":"Specifies a banded Toeplitz structure. This can be viewed as a moving-average structure with order equal to q-1.","@ToolTip12":"Specifies a heterogeneous banded Toeplitz structure.","@ToolTip13":"Specifies a heterogeneous banded Toeplitz structure. PROC HPLMIXED estimates only the first q bands of  the matrix, setting all higher bands equal to 0.","@ToolTip14":"Specifies a completely general (unstructured) covariance matrix parameterized directly in terms of  variances and covariances.","@ToolTip15":"Specifies a completely general (unstructured) covariance matrix parameterized directly in terms of  variances and covariances. PROC HPLMIXED estimates only the first q bands of the matrix, setting all  higher bands equal to 0.","@ToolTip16":"Specifies a completely general (unstructured) covariance matrix parameterized in terms of variances  and correlations.","@ToolTip17":"Specifies a completely general (unstructured) covariance matrix parameterized in terms of variances  and correlations. PROC HPLMIXED estimates only the first q bands of the matrix, setting all higher bands equal to zero.","@ToolTip18":"Specifies standard variance components and is the default structure for both the RANDOM. In the RANDOM statement, a distinct variance component is assigned to each effect."}}]}}]}}}