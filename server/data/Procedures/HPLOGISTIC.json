{"Procedure":{"Name":"HPLOGISTIC","ProductGroup":"SAS/STAT/HPA","#comment":{},"ProcedureHelp":{"#cdata":"Syntax: PROC HPLOGISTIC < options > ;\n    CLASS variable < (options) >... < variable < (options) > > < / global-options > ;\n    MODEL response< (response-options) > = < effects > < / model-options > ;\n    MODEL events/trials< (response-options) > = < effects > < / model-options > ;\n    OUTPUT <OUT=SAS-data-set >\n      < keyword < =name > >...\n      < keyword < =name > > < / options > ;\n    PERFORMANCE performance-options ;\n    SELECTION selection-options ;\n    FREQ variable ;\n    ID variables ;\n    WEIGHT variable ;\n\nThe HPLOGISTIC procedure is a high-performance procedure that fits logistic regression \nmodels for binary, binomial, and multinomial data on the SAS appliance. \n\nThe HPLOGISTIC procedure fits logistic regression models in the broader sense; the procedure \npermits several link functions and can handle ordinal and nominal data with more than two \nresponse categories (multinomial data). \n\nWith the HPLOGISTIC procedure you can read and write data in distributed form and perform \nanalyses in parallel in symmetric multiprocessing (SMP) or massively parallel processing \n(MPP) mode."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ABSCONV=|ABSTOL=","ProcedureOptionHelp":{"#cdata":"Syntax: ABSCONV= | ABSTOL=r\n      \nSpecifies an absolute function convergence criterion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ABSFCONV=|ABSFTOL=","ProcedureOptionHelp":{"#cdata":"Syntax: ABSFCONV=r<n> | ABSFTOL=r<n> \n      \nSpecifies an absolute function difference convergence criterion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ABSGCONV=|ABSGTOL=","ProcedureOptionHelp":{"#cdata":"Syntax: ABSGCONV=r<n> | ABSGTOL=r<n> \n      \nSpecifies the absolute gradient convergence criterion. Termination requires the maximum \nabsolute gradient element to be small."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ALPHA=","ProcedureOptionHelp":{"#cdata":"Syntax: ALPHA=number \n      \nSpecifies a global significance level for the construction of confidence intervals. \nThe confidence level is 1 - number. You can override the global specification with \nthe ALPHA= option in the MODEL statement."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=SAS-data-set\n      \nNames the input SAS data set for PROC HPLOGISTIC to use. The default is the most recently \ncreated data set.\n\nIf the procedure executes in MPP mode, the input data are distributed to memory on the \nappliance nodes and analyzed in parallel, unless the data are already distributed in the \nappliance database. In that case the procedure reads the data alongside the distributed \ndatabase."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"FCONV=|FTOL=","ProcedureOptionHelp":{"#cdata":"Syntax: FCONV=r | FTOL=r \n      \nSpecifies the relative function difference convergence criterion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"FMTLIBXML=","ProcedureOptionHelp":{"#cdata":"Syntax: FMTLIBXML=file-ref \n      \nSpecifies the file reference for the XML stream that contains the user-defined format \ndefinitions. Userdefined formats are handled differently in a distributed computing \nenvironment compared to other SAS products. "},"ProcedureOptionType":"V"},{"ProcedureOptionName":"GCONV=|GTOL=","ProcedureOptionHelp":{"#cdata":"Syntax: GCONV=r | GTOL=r \n      \nSpecifies the relative gradient convergence criterion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ITDETAILS","ProcedureOptionHelp":{"#cdata":"Adds to the \u201cIteration History\u201d table the current values of the parameter estimates and their gradients.\nThese quantities are reported only for parameters that participate in the optimization. The ITDETAILS\noption is not available with model selection."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ITSELECT","ProcedureOptionHelp":{"#cdata":"Generates the \u201cIteration History\u201d table when you perform a model selection."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MAXFUNC=|MAXFU=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXFUNC=i | MAXFU=i] \n\nSpecifies the maximum number n of function calls in the optimization process. The default \nvalues are as follows, depending on the optimization technique:\n\nTRUREG, NRRIDG, NEWRAP: 125\nQUANEW, DBLDOG: 500\nCONGRA: 1,000\nNMSIMP: 3,000\n  \nThe optimization can terminate only after completing a full iteration. Therefore, the number \nof function calls that are actually performed can exceed the number that is specified by the \nMAXFUNC= option. You can choose the optimization technique with the TECHNIQUE= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXITER=|MAXIT=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXITER= | MAXIT=i <n>] \n      \nSpecifies the maximum number n of iterations in the optimization process. The default \nvalues are as follows, depending on the optimization technique:\n\n  o TRUREG, NRRIDG, NEWRAP: 50\n  o QUANEW, DBLDOG: 200\n  o CONGRA: 400\n  o NMSIMP: 1000 \n  \nThese default values also apply when n is specified as a missing value. You can choose \nthe optimization technique with the TECHNIQUE= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXTIME=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXTIME=r] \n      \nSpecifies an upper limit of r seconds of CPU time for the optimization process. The default \nvalue is the largest floating-point double representation of your computer. Note that the \ntime specified by the MAXTIME= option is checked only once at the end of each iteration. \nTherefore, the actual running time can be longer than that specified by the MAXTIME= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MINITER=|MINIT=","ProcedureOptionHelp":{"#cdata":"Syntax: MINITER= | MINIT=i\n      \nSpecifies the minimum number of iterations. The default value is 0. If you request more iterations\nthan are actually needed for convergence to a stationary point, the optimization algorithms can behave\nstrangely. For example, the effect of rounding errors can prevent the algorithm from continuing for\nthe required number of iterations."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NAMELEN=","ProcedureOptionHelp":{"#cdata":"Syntax: NAMELEN=number\n      \nSpecifies the length to which long effect names are shortened. The default and minimum value is 20."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOCLPRINT","ProcedureOptionHelp":{"#cdata":"Syntax: NOCLPRINT< =number > \n      \nSuppresses the display of the \u201cClass Level Information\u201d table if you do not specify \nnumber. If you specify number, the values of the classification variables are displayed \nfor only those variables whose number of levels is less than number. Specifying a number \nhelps to reduce the size of the \u201cClass Level Information\u201d table if some classification \nvariables have a large number of levels."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"NOITPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the generation of the \u201cIteration History\u201d table."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the generation of ODS output."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"NORMALIZE=","ProcedureOptionHelp":{"#cdata":"Specifies whether the objective function should be normalized during the optimization by the reciprocal\nof the used frequency count. The default is to normalize the objective function. This option\naffects the values reported in the \u201cIteration History\u201d table. The results reported in the \u201cFit Statistics\u201d\nare always displayed for the nonnormalized log-likelihood function."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"YES","@Value2":"NO"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies that the objective function should be normalized during the optimization by the reciprocal of the used frequency count. This is the default.","@ToolTip2":"Specifies that the objective function should not be normalized during the optimization by the reciprocal of the used frequency count."}},{"ProcedureOptionName":"NOSTDERR","ProcedureOptionHelp":{"#cdata":"Suppresses the computation of the covariance matrix and the standard errors of the logistic regression\ncoefficients. When the model contains many variables (thousands), the inversion of the Hessian matrix\nto derive the covariance matrix and the standard errors of the regression coefficients can be time \n-consuming."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"SINGCHOL=","ProcedureOptionHelp":{"#cdata":"Syntax: SINGCHOL=number \n      \nTunes the singularity criterion in Cholesky decompositions. The default is 1E4 times the \nmachine epsilon; this product is approximately 1E-12 on most computers."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SINGSWEEP=","ProcedureOptionHelp":{"#cdata":"Syntax: SINGSWEEP=number \n      \nTunes the singularity criterion for sweep operations. The default is 1E4 times the\nmachine epsilon; this product is approximately 1E-12 on most computers."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SINGULAR=","ProcedureOptionHelp":{"#cdata":"Syntax: SINGULAR=number \n      \nTunes the general singularity criterion applied by the HPLOGISTIC procedure in sweeps \nand inversions. The default is 1E4 times the machine epsilon; this product is approximately \n1E-12 on most computers."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TECHNIQUE=|TECH=","ProcedureOptionHelp":{"#cdata":"[Syntax: TECHNIQUE= | TECH=name] \n      \nSpecifies the optimization technique to obtain maximum likelihood estimates."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"CONGRA","@Value2":"DBLDOG","@Value3":"NEWRAP","@Value4":"NMSIMP","@Value5":"NRRIDG","@Value6":"QUANEW","@Value7":"TRUREG","@Value8":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Chooses one of four different conjugate-gradient optimization algorithms, which can be more precisely  defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip2":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation  of the Cholesky factor of the Hessian.","@ToolTip3":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson  optimization technique. The algorithm combines a line-search algorithm with ridging, and it  can be modified with the LINESEARCH= option.","@ToolTip4":"Performs a Nelder-Mead simplex optimization.","@ToolTip5":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson  optimization technique. This algorithm does not perform a line search.","@ToolTip6":"Chooses one of four different quasi-Newton optimization algorithms that can be more precisely  defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip7":"Performs a usually very stable but, for large problems, memory- and time-consuming trust-region  optimization technique. The algorithm is implemented similar to Gay (1983) and Mor\u00e9 and Sorensen (1983).","@ToolTip8":"Does not perform any optimization. This option is similar to METHOD=NONE, but TECH=NONE also  computes and displays residuals and goodness of fit statistics."}}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable < (options) >... < variable < (options) >> < / global-options > ;\n      \nThe CLASS statement names the classification variables to be used as explanatory \nvariables in the analysis. If a CLASS statement is specified, it must precede the \nMODEL statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sorting order of the classification variable. If both the DESCENDING and ORDER=\noptions are specified, High-Performance Analytics procedures order the categories according to the\nORDER= option and then reverse that order."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Specifies the sorting order for the levels of classification variables. This ordering \ndetermines which parameters in the model correspond to each level in the data. \n\nBy default, ORDER=FORMATTED."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FORMATTED","@Value3":"FREQ","@Value4":"FREQDATA","@Value5":"FREQFORMATTED","@Value6":"FREQINTERNAL","@Value7":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Levels sorted by the order of appearance in the input data set FORMATTED External  formatted values, except for numeric.","@ToolTip2":"Levels sorted by the external formatted values, except for numeric variables with  no explicit format, which are sorted by their unformatted (internal) values","@ToolTip3":"Levels sorted by the descending frequency count (levels with more observations come  earlier in the order)","@ToolTip4":"Levels sorted by the order of descending frequency count, and within counts by order  of appearance in the input data set when counts are tied","@ToolTip5":"Levels sorted by the order of descending frequency count, and within counts by formatted  value when counts are tied","@ToolTip6":"Levels sorted by the Order of descending frequency count, and within counts by unformatted  (internal) value when counts are tied","@ToolTip7":"Levels sorted by the unformatted value"}},{"StatementOptionName":"REF=|REFERENCE=","StatementOptionHelp":{"#cdata":"[Syntax: REF='category' | FIRST | LAST] \n          \nSpecifies the reference level for PARAM=REFERENCE. For an individual (but not a global) variable\nREF= option, you can specify the level of the variable to use as the reference level. Specify the\nformatted value of the variable if a format is assigned. For a REF= option or global-option, you can\nuse one of the following keywords. The default is REF=LAST."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'category';","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"You can specify the value (formatted if a format is applied) of the reference category in quotes.","@ToolTip2":"Designates the first-ordered category as reference.","@ToolTip3":"Designates the last-ordered category as reference. This is the default."}},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (\u201c.\u201d, \u201c.A\u201d, . . . , \u201c.Z\u201d for numeric variables and blanks for character variables) as\nvalid values for the CLASS variable.\n\nIf you do not specify the MISSING option, observations with missing values for CLASS variables are\nremoved from the analysis, even if the CLASS variables are not used in the model formulation."},"StatementOptionType":"S"},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"Specifies the parameterization method for the classification variable or variables. \n          \nThe GLM parameterization is the default."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"GLM","@Value2":"REFERENCE"},"StatementOptionToolTips":{"@ToolTip1":"Less-than-full-rank reference cell coding. This parameterization is used in, for example, the GLM, MIXED, and GLIMMIX procedures in SAS/STAT.","@ToolTip2":"Reference cell encoding. You can choose the reference value with a specific variable option in the CLASS statement, or designate the first or last ordered value with a globaloption. The default is REF=LAST."}},{"StatementOptionName":"TRUNCATE","StatementOptionHelp":{"#cdata":"Syntax: TRUNCATE< =n > \n          \nSpecifies the truncation width of formatted values of CLASS variables when the optional n is specified.\nIf n is not specified, the TRUNCATE option requests that classification levels should be determined\nusing no more than the first 16 characters of the formatted values of CLASS variables. When formatted\nvalues are longer than 16 characters, you can use this option in order to revert to the levels as\ndetermined in releases prior to SAS 9."},"StatementOptionType":"S|V"},{"StatementOptionName":"UPCASE","StatementOptionHelp":{"#cdata":"Uppercases the values of character-valued CLASS variables before levelizing them. For example, if the\nUPCASE option is in effect and a CLASS variable can take the values \u2018a\u2019, \u2018A\u2019, and \u2018b\u2019, then \u2018a\u2019 and \u2018A\u2019\nrepresent the same level and the CLASS variable is treated as having only two values: \u2018A\u2019 and \u2018B\u2019."},"StatementOptionType":"S|V"}]}},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL response < (response-options) > = < effects > < / model-options > ;\n  MODEL events / trials < (response-options) > = < effects > < / model-options > ;\n\nThe MODEL statement defines the statistical model in terms of a response variable (the target) or an\nevents/trials specification, model effects constructed from variables in the input data set, and options. An\nintercept is included in the model by default. You can remove the intercept with the NOINT option. \n\nYou can specify a single response variable that contains your binary, ordinal, or nominal response values.\nWhen you have binomial data, you can specify the events/trials form of the response, where one variable\ncontains the number of positive responses (or events) and another variable contains the number of trials.\nNote that the values of both events and (trials \u2013 events) must be nonnegative and the value of trials must be\npositive.\n\nThere are two sets of options in the MODEL statement. The response-options determine how the\nHPLOGISTIC procedure models probabilities for binary data. The model-options control other aspects\nof model formation and inference.\n\nResponse Variable Options\n  DESCENDING reverses the response categories\n  \n  EVENT=\u2019category\u2019|FIRST|LAST\n      specifies the event category \n \n    ORDER=DATA|FORMATTED|FREQ|INTERNAL\n      specifies the sort order\n      \n  REF= specifies the reference category"},"StatementOptions":{"#comment":[{},{}],"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","#comment":{},"StatementOptionType":"S"},{"StatementOptionName":"EVENT=","#comment":{},"StatementOptionType":"V"},{"StatementOptionName":"ORDER=","#comment":{},"StatementOptionType":"V"},{"StatementOptionName":"REF=","#comment":{},"StatementOptionType":"V"},{"StatementOptionName":"ALPHA=","StatementOptionHelp":{"#cdata":"Syntax: ALPHA=number \n      \nRequests that confidence intervals for each of the parameters be constructed with confidence level\n1\u2013number. The value of number must be between 0 and 1; the default is 0.05."},"StatementOptionType":"V"},{"StatementOptionName":"CL","StatementOptionHelp":{"#cdata":"Requests that confidence limits be constructed for each of the parameter estimates. The confidence\nlevel is 0.95 by default; this can be changed with the ALPHA= option."},"StatementOptionType":"S"},{"StatementOptionName":"DDFM=","StatementOptionHelp":{"#cdata":"Specifies how degrees of freedom for statistical inference be determined in the \u201cParameter Estimates\nTable.\u201d \n\nThe HPLOGISTIC procedure always displays the statistical tests and confidence intervals in the \u201cParameter\nEstimates\u201d tables in terms of a t test and a two-sided probability from a t distribution. With\nthe DDFM= option, you can control the degrees of freedom of this t distribution and thereby switch\nbetween small-sample inference and large-sample inference based on the normal or chi-square distribution."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"RESIDUAL","@Value2":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"If you specify DDFM=RESIDUAL, the degrees of freedom are finite and determined by the number of usable frequencies (observations) minus the number of nonredundant model parameters. This leads to t-based statistical tests and confidence intervals. If the number of frequencies is large relative to the number of parameters, the inferences from the two degrees-of-freedom methods are almost identical.","@ToolTip2":"This is the default, which leads to z-based statistical tests and confidence intervals. The HPLOGISTIC procedure then displays the degrees of freedom in the DF column as Infty, the p-values are identical to those from a Wald chi-square test, and the square of the t value equals the Wald chisquare statistic."}},{"StatementOptionName":"INCLUDE=","StatementOptionHelp":{"#cdata":"Syntax: INCLUDE=n\n  INCLUDE=single-effect\n  INCLUDE=(effects)\n  \nForces effects to be included in all models. If you specify INCLUDE=n, then the first n effects that are\nlisted in the MODEL statement are included in all models. If you specify INCLUDE=single-effect or\nif you specify a list of effects within parentheses, then the specified effects are forced into all models.\nThe effects that you specify in the INCLUDE= option must be explanatory effects that are specified in\nthe MODEL statement before the slash (/)."},"StatementOptionType":"V"},{"StatementOptionName":"LACKFIT","StatementOptionHelp":{"#cdata":"Syntax: LACKFIT< (DFREDUCE=r NGROUPS=G) > \n          \nPerforms the Hosmer and Lemeshow goodness-of-fit test (Hosmer and Lemeshow 2000) for binary\nresponse models. \n\nThe subjects are divided into at most G groups of roughly the same size, based on the percentiles of\nthe estimated probabilities. You can specify G as any integer greater than or equal to 5; by default,\nG=10. Let the actual number of groups created be g. The discrepancies between the observed and\nexpected number of observations in these g groups are summarized by the Pearson chi-square statistic,\nwhich is then compared to a chi-square distribution with g\u2013r degrees of freedom. You can specify a\nnonnegative integer r that satisfies g\u2013r >= 1; by default, r=2."},"StatementOptionType":"V","SubOptionsKeywords":"DFREDUCE=|NGROUPS="},{"StatementOptionName":"LINK=|L=","StatementOptionHelp":{"#cdata":"Specifies the link function for the model."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CLOGLOG|CLL","@Value2":"GLOGIT|GENLOGIT","@Value3":"LOGIT","@Value4":"LOGLOG","@Value5":"PROBIT"},"StatementOptionToolTips":{"@ToolTip1":"Complementary log-log function","@ToolTip2":"Generalized logit function","@ToolTip3":"Logit function","@ToolTip4":"Log-log function","@ToolTip5":"Probit function."}},{"StatementOptionName":"NOINT","StatementOptionHelp":{"#cdata":"Requests that no intercept be included in the model. An intercept is included by default. \n          \nThe NOINT option is not available in multinomial models."},"StatementOptionType":"S"},{"StatementOptionName":"OFFSET=","StatementOptionHelp":{"#cdata":"Syntax: OFFSET=variable \n          \nSpecifies a variable to be used as an offset to the linear predictor. An offset plays the role \nof an effect whose coefficient is known to be 1. The offset variable cannot appear in the CLASS \nstatement or elsewhere in the MODEL statement. Observations with missing values for the offset \nvariable are excluded from the analysis."},"StatementOptionType":"V"},{"StatementOptionName":"RSQUARE|R2","StatementOptionHelp":{"#cdata":"Requests a generalized coefficient of determination (R square) and a scaled version thereof for\nthe fitted model. The results are added to the \u201cFit Statistics\u201d table."},"StatementOptionType":"S"},{"StatementOptionName":"START=","StatementOptionHelp":{"#cdata":"Syntax: START=n\n  START=single-effect\n  START=(effects) \n  \nBegins the selection process from the designated initial model for the FORWARD and STEPWISE\nselection methods. If you specify START=n, then the starting model includes the first n effects that\nare listed in the MODEL statement. If you specify START=single-effect or if you specify a list of\neffects within parentheses, then the starting model includes those specified effects. The effects that you\nspecify in the START= option must be explanatory effects that are specified in the MODEL statement\nbefore the slash (/). The START= option is not available when you specify METHOD=BACKWARD\nin the SELECTION statement."},"StatementOptionType":"V"}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT <OUT=SAS-data-set >\n    < keyword < =name > >... < keyword < =name > > < / options > ;\n\nThe OUTPUT statement creates a data set that contains observationwise statistics that are computed after\nfitting the model. The variables in the input data set are not included in the output data set to avoid data\nduplication for large data sets; however, variables specified in the ID statement are included.\n\nIf the input data are in distributed form, where access of data in a particular order cannot be guaranteed, the\nHPLOGISTIC procedure copies the distribution or partition key to the output data set so that its contents\ncan be joined with the input data.\n\nThe output statistics are computed based on the final parameter estimates. If the model fit does not converge,\nmissing values are produced for the quantities that depend on the estimates.\n\nWhen there are more than two response levels, only variables named by the XBETA and PREDICTED\nkeywords have their values computed; the other variables have missing values. These statistics are computed\nfor every response category, and the automatic variable _LEVEL_ identifies the response category upon\nwhich the computed values are based. If you also specify the OBSCAT option, then the observationwise\nstatistics are computed only for the observed response category, as indicated by the value of the _LEVEL_\nvariable.\n\nFor observations in which only the response variable is missing, values of the XBETA and PREDICTED\nstatistics are computed even though these observations do not affect the model fit. This enables, for instance,\npredicted probabilities to be computed for new observations."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=|DATA=","StatementOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set | DATA=SAS-data-set] \n          \nSpecifies the name of the output data set. If the OUT= (or DATA=) option is omitted, the procedure\nuses the DATAn convention to name the output data set."},"StatementOptionType":"RV|DV"},{"StatementOptionName":"LINP|XBETA","StatementOptionHelp":{"#cdata":"[keyword for adding statistics to the OUTPUT data set]\n\nSyntax: LINP|XBETA < =name >\n\nRequests the linear predictor \u0220=x\u2019\u03b2."},"StatementOptionType":"RS|RV"},{"StatementOptionName":"PREDICTED|PRED|P","StatementOptionHelp":{"#cdata":"[keyword for adding statistics to the OUTPUT data set]\n\nSyntax: PREDICTED|PRED|P < =name >\n\nRequests predicted values (predicted probabilities of events) for the response variable."},"StatementOptionType":"RS|RV"},{"StatementOptionName":"RESIDUAL|RESID|R","StatementOptionHelp":{"#cdata":"[keyword for adding statistics to the OUTPUT data set] \n\nSyntax: RESIDUAL|RESID|R < =name >\n\nRequests the raw residual, y - \u03bc, where \u03bc is the estimate of the predicted event probability. This\nstatistic is not computed for multinomial models."},"StatementOptionType":"RS|RV"},{"StatementOptionName":"PEARSON|PEARS|RESCHI","StatementOptionHelp":{"#cdata":"[keyword for adding statistics to the OUTPUT data set] \n\nSyntax: PEARSON|PEARS|RESCHI < =name >\n\nRequests the Pearson residual."},"StatementOptionType":"RS|RV"},{"StatementOptionName":"OBSCAT","StatementOptionHelp":{"#cdata":"Requests (for multinomial models) that observationwise statistics be produced for the response level\nonly. If the OBSCAT option is not specified and the response variable has J levels, then the following\noutputs are created: for cumulative link models, J - 1 records are output for every observation in\nthe input data that corresponds to the J - 1 lower-ordered response categories; for generalized logit\nmodels, J records are output that correspond to all J response categories."},"StatementOptionType":"S"}]}},{"StatementName":"PERFORMANCE","StatementHelp":{"#cdata":"Syntax: PERFORMANCE < performance-options > ;\n      \nThe PERFORMANCE statement defines performance parameters for multithreaded and distributed \ncomputing, passes variables about the distributed computing environment, and requests detailed \nresults about the performance characteristics of a High-Performance Analytics procedure.\n\nWith the PERFORMANCE statement, you can also control whether the HPLOGISTIC procedure executes \nin SMP or MPP mode."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COMMIT=","StatementOptionHelp":{"#cdata":"Syntax: COMMIT=n\n          \nRequests that the High-Performance Analytics procedure write periodic updates to the \nSAS Log when observations are sent from the client to the appliance for distributed \nprocessing.\n\nHigh-Performance Analytics procedures do not have to use input data that are stored \nin the appliance. You can perform distributed computations regardless of the origin \nor format of the input data, provided the data are in a format that can be read by \nthe SAS System (for example, because a SAS/ACCESS engine is available)."},"StatementOptionType":"V"},{"StatementOptionName":"CPUCOUNT=","StatementOptionHelp":{"#cdata":"Syntax: CPUCOUNT=ACTUAL | num\n          \nSpecifies how many processors the procedure assumes are available on each host in the \ncomputing environment. num can be any integer from 1 to 256.\n\nCPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number\ncan be less than the physical number of CPUs if the SAS process has been restricted by system\nadministration tools. Setting CPUCOUNT= to a number greater than the actual number of available\nCPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system\noption.\n\nIf a High-Performance Analytics procedure executes in SMP mode, this option refers to the client\nmachine of the SAS session. In MPP mode, this option applies to the nodes on the appliance."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACTUAL","@Value2":"<num>"},"StatementOptionToolTips":{"@ToolTip1":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","@ToolTip2":"Replace <num> with an actual number. Setting CPUCOUNT= to a number  greater than the actual number of available CPUs might result in reduced performance. This  option overrides the CPUCOUNT= SAS system option."}},{"StatementOptionName":"DATASERVER=","StatementOptionHelp":{"#cdata":"Syntax: DATASERVER=\u201cname\u201d\n          \nSpecifies the name of the server on Teradata systems as defined through the hosts file \nand as used in the LIBNAME statement for Teradata. For example, if the hosts file defines\n\n    myservercop1 33.44.55.66\n    \nas the server for Teradata, then a LIBNAME specification would be as follows:\n\n    libname TDLib teradata server=myserver user= password= database= ;\n    \nA PERFORMANCE statement to induce running alongside the Teradata server would specify the\nfollowing:\n\n    performance dataserver=\"myserver\";\n    \nIf the DATASERVER= option is specified, it overrides the GRIDDATASERVER environment \nvariable."},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"Requests a table that shows a timing breakdown of the procedure steps."},"StatementOptionType":"V"},{"StatementOptionName":"TIMEOUT=","StatementOptionHelp":{"#cdata":"Syntax: TIMEOUT=s\n          \nSpecifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection\nto the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs\nare submitted to the appliance through workload management tools that might suspend access to the\nappliance for a longer period, you might want to increase the timeout value."},"StatementOptionType":"V"},{"StatementOptionName":"HOST=|GRIDHOST=","StatementOptionHelp":{"#cdata":"Syntax: HOST=\u201cname\u201d | GRIDHOST=\u201cname\u201d \n          \nSpecifies the name of the appliance host in single or double quotes. If the HOST= option \nis specified, it overrides the value of the GRIDHOST environment variable."},"StatementOptionType":"V"},{"StatementOptionName":"INSTALL=|INSTALLLOC=","StatementOptionHelp":{"#cdata":"Syntax: INSTALL=\u201cname\u201d | INSTALLLOC=\u201cname\u201d \n          \nSpecifies the directory in which the High-Performance Analytics shared libraries are \ninstalled on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC \nenvironment variable."},"StatementOptionType":"V"},{"StatementOptionName":"NODES=|NNODES=","StatementOptionHelp":{"#cdata":"Syntax: NODES=n | NNODES=n\n          \nSpecifies the number of nodes in the distributed computing environment, provided that \nthe data are not processed alongside the database.\n\nIf you specify NODES=0, you indicate that you want to process the data in SMP mode on \nthe client machine. If the input data are not alongside the database, this is the default. \nThe High-Performance Analytics procedures then perform the analysis mutlithreaded on the client."},"StatementOptionType":"V"},{"StatementOptionName":"NTHREADS=","StatementOptionHelp":{"#cdata":"Syntax: NTHREADS=n \n          \nSpecifies the number of threads for analytic computations and overrides the SAS system option\nTHREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads\nare determined based on the number of CPUs on the host on which the analytic computations execute.\nThe algorithm by which a CPU count is converted to a thread count is specific to the High-\nPerformance Analytics procedure. Most procedures create one thread per CPU for the analytic computations.\nBy default, High-Performance Analytics procedures execute in multiple concurrent threads unless\nturned off by the NOTHREADS system option or you force single-threaded execution with\nNTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance\nAnalytics procedures can impose more stringent limits if called for by algorithmic considerations.\nYou can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE\nstatement.\n\nNOTE: The SAS system options THREADS | NOTHREADS apply to the client machine on which\nthe SAS High-Performance Analytics procedures execute. They do not apply to the compute nodes\nin a distributed environment."},"StatementOptionType":"V"}]}},{"StatementName":"SELECTION","StatementHelp":{"#cdata":"Syntax: SELECTION < options > ;\n      \nThe SELECTION statement performs model selection by examining whether effects should be \nadded to or removed from the model according to rules defined by model selection methods."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"METHOD=|SELECTION=","StatementOptionHelp":{"#cdata":"Syntax: METHOD=NONE | method< (method-options) >\n          \nSpecifies the method used to select the model, optionally followed by parentheses \nenclosing options that are applicable to the specified method. The default selection \nmethod (when the METHOD= option is not specified) is METHOD=STEPWISE. \n\nmethod can be one of the following:\n\n    FORWARD specifies forward selection. This method starts with no effects in the model and\n      adds effects.\n    \n    BACKWARD specifies backward elimination. This method starts with all effects in the model\n      and deletes effects.\n    \n    STEPWISE specifies stepwise regression. This method is similar to the FORWARD method\n      except that effects already in the model do not necessarily stay there.\n      LAR specifies least angle regression. Like forward selection, this method starts by\n      adding effects to an empty model. The parameter estimates at any step are\n      \u201cshrunk\u201d when compared to the corresponding least squares estimates. If the\n      model contains classification variables, then these classification variables are split.\n    \n    LASSO adds and deletes parameters based on a version of ordinary least squares where the\n      sum of the absolute regression coefficients is constrained. If the model contains\n      classification variables, then these classification variables are split. "},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"FORWARD","@Value3":"BACKWARD","@Value4":"STEPWISE","@Value5":"LAR","@Value6":"LASSO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies no model selection.","@ToolTip2":"Specifies forward selection. This method starts with no effects in the model and adds effects.","@ToolTip3":"Specifies backward elimination. This method starts with all effects in the model and deletes effects.","@ToolTip4":"Specifies stepwise regression. This method is similar to the FORWARD method except that effects already in the model do not necessarily stay there.","@ToolTip5":"Adding effects to an empty model. The parameter estimates at any step are \u201cshrunk\u201d when compared to the corresponding least squares estimates. If the model contains classification variables, then these classification variables are split.","@ToolTip6":"Adds and deletes parameters based on a version of ordinary least squares where the sum of the absolute regression coefficients is constrained. If the model contains classification variables, then these classification variables are split."}},{"StatementOptionName":"DETAILS=","StatementOptionHelp":{"#cdata":"Syntax: DETAILS=NONE | SUMMARY | ALL | STEPS< CANDIDATES(ALL | n) >\n  \nSpecifies the level of detail about the selection process that is produced. The default is DETAILS= SUMMARY.\n\nThe DETAILS=ALL and DETAILS=STEPS options produce the following output:\n\n     o tables that provide information about the model selected at each step of the selection process.\n     o entry and removal statistics for inclusion or exclusion candidates at each step. By default, only\n        the top 10 candidates at each step are shown. If you specify STEPS(CANDIDATES(n)), then the\n        best n candidates are shown. If you specify STEPS(CANDIDATES(ALL)), then all candidates\n        are shown.\n     o a selection summary table that shows by step the effect that is added to or removed from the\n        model in addition to the values of the SELECT, STOP, and CHOOSE criteria for the resulting\n        model.\n     o a stop reason table that describes why the selection process stopped.\n     o a selection reason table that describes why the selected model was chosen.      \n     o a selected effects table that lists the effects that are in the selected model. \n    \nThe DETAILS=SUMMARY option produces only the selection summary, stop reason, selection reason,\nand selected effects tables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"SUMMARY","@Value3":"ALL","@Value4":"STEPS"},"StatementOptionToolTips":{"@ToolTip1":"Produces no detail about the selection process that is produced.","@ToolTip2":"Produces only the selection summary, stop reason, selection reason, and selected effects tables.","@ToolTip3":"The DETAILS=ALL option produces the following output:     o tables that provide information about the model selected at each step of the selection process.    o entry and removal statistics for inclusion or exclusion candidates at each step. By default, only      the top 10 candidates at each step are shown. If you specify STEPS(CANDIDATES(n)), then the      best n candidates are shown. If you specify STEPS(CANDIDATES(ALL)), then all candidates      are shown.    o a selection summary table that shows by step the effect that is added to or removed from the      model in addition to the values of the SELECT, STOP, and CHOOSE criteria for the resulting      model.    o a stop reason table that describes why the selection process stopped.    o a selection reason table that describes why the selected model was chosen.          o a selected effects table that lists the effects that are in the selected model.","@ToolTip4":"Syntax: DETAILS=STEPS< CANDIDATES(ALL | n) >                                     This option produces the following output:     o tables that provide information about the model selected at each step of the selection process.    o entry and removal statistics for inclusion or exclusion candidates at each step. By default, only       the top 10 candidates at each step are shown. If you specify STEPS(CANDIDATES(n)), then the       best n candidates are shown. If you specify STEPS(CANDIDATES(ALL)), then all candidates       are shown.    o a selection summary table that shows by step the effect that is added to or removed from the       model in addition to the values of the SELECT, STOP, and CHOOSE criteria for the resulting       model.    o a stop reason table that describes why the selection process stopped.    o a selection reason table that describes why the selected model was chosen.          o a selected effects table that lists the effects that are in the selected model."}},{"StatementOptionName":"HIERARCHY=","StatementOptionHelp":{"#cdata":"Syntax: HIERARCHY=NONE | SINGLE | SINGLECLASS\n          \nSpecifies whether and how the model hierarchy requirement is applied. This option also controls\nwhether a single effect or multiple effects are allowed to enter or leave the model in one step. You\ncan specify that only classification effects, or both classification and continuous effects, be subject to\nthe hierarchy requirement. The HIERARCHY= option is ignored unless you also specify one of the\nfollowing options: METHOD=FORWARD, METHOD=BACKWARD, or METHOD=STEPWISE. \n\nModel hierarchy refers to the requirement that, for any term to be in the model, all model effects\ncontained in the term must be present in the model. For example, in order for the interaction A*B to\nenter the model, the main effects A and B must be in the model. Likewise, neither effect A nor effect\nB can leave the model while the interaction A*B is in the model."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"SINGLE","@Value3":"SINGLECLASS"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that model hierarchy not be maintained. Any single effect can enter or leave the model at any given step of the selection process.  This is the default.","@ToolTip2":"Specifies that only one effect enter or leave the model at one time, subject to the model hierarchy requirement. For example, suppose that the model contains the main effects A and B and the interaction A*B. In the first step of the selection process, either A or B can enter the model. In the second step, the other main effect can enter the model. The interaction effect can enter the model only when both main effects have already entered. Also, before A or B can be removed from the model, the A*B interaction must first be removed. All effects (CLASS and interval) are subject to the hierarchy requirement.","@ToolTip3":"Is the same as HIERARCHY=SINGLE except that only CLASS effects are subject to the hierarchy requirement."}},{"StatementOptionName":"STOPHORIZON=","StatementOptionHelp":{"#cdata":"Syntax: STOPHORIZON=n \n          \nSpecifies the number of consecutive steps at which the STOP= criterion must worsen for a local extremum\nto be detected. The default value is STOPHORIZON=3. The stop horizon value is ignored\nif you also specify STOP=NONE or STOP=SL. For example, suppose that STOP=AIC and the sequence\nof AIC values at steps 1 to 6 of a selection are 10, 7, 4, 6, 5, 2. If STOPHORIZON=2, then\nthe AIC criterion is deemed to have a local minimum at step 3 because the AIC value at the next two\nsteps are greater than the value of 4 that occurs at step 3. However, if STOPHORIZON=3, then the\nvalue of step 3 is not deemed to be a local minimum because the AIC value at step 6 is lower than the\nAIC value at step 3."},"StatementOptionType":"V"}]}},{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable ; \n      \nThe variable in the FREQ statement identifies a numeric variable in the data set that contains \nthe frequency of occurrence for each observation. SAS High-Performance Analytics procedures that \nsupport the FREQ statement treat each observation as if it appeared f times, where f is the value \nof the FREQ variable for the observation. If the frequency value is not an integer, it is truncated \nto an integer. If the frequency value is less than 1 or missing, the observation is not used in the \nanalysis. When the FREQ statement is not specified, each observation is assigned a frequency of 1."}},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable;\n      \nThe variable in the WEIGHT statement is used as a weight to perform a weighted analysis \nof the data. Observations with nonpositive or missing weights are not included in the \nanalysis. If a WEIGHT statement is not included, all observations used in the analysis \nare assigned a weight of 1."}},{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variables ; \n      \nThe ID statement lists one or more variables from the input data set that are transferred to output data sets\ncreated by High-Performance Analytics procedures, provided that the output data set contains one (or more)\nrecords per input observation. For example, when an OUTPUT statement is used to produce observationwise\nscores or prediction statistics, ID variables are added to the output data set. \n\nBy default, High-Performance Analytics procedures do not include all variables from the input data set\nin output data sets."}}]}}}