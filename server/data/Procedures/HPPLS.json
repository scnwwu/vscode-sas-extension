{"Procedure":{"#comment":{},"Name":"HPPLS","ProductGroup":"SAS/STAT","ProcedureHelp":{"#cdata":"Syntax: PROC HPPLS <options> ; \n    BY variables ; \n    CLASS variables </ option> ;    \n    MODEL response-variables = predictor-effects </ options>; \n    OUTPUT <OUT=SAS-data-set><keyword <=prefix>>\u2026<keyword <=prefix>> ;\n    PARTITION <partition-options>;\n    PERFORMANCE <performance-options>;\n    ID variables ; \n\nThe HPPLS procedure is a high-performance version of the PLS procedure in SAS/STAT software, which fits \nmodels by using any one of a number of linear predictive methods, including partial least squares (PLS).\nOrdinary least squares regression, as implemented in SAS/STAT procedures such as the GLM and REG procedures, \nhas the single goal of minimizing sample response prediction error, and it seeks linear functions of the\npredictors that explain as much variation in each response as possible. The HPPLS procedure implements \ntechniques that have the additional goal of accounting for variation in the predictors,  under the \nassumption that directions in the predictor space that are well sampled should provide better prediction \nfor new observations when the predictors are highly correlated. All the techniques that the HPPLS procedure \nimplements work by extracting successive linear combinations of the predictors, called factors (also called \ncomponents, latent vectors, or latent variables), which optimally address one or both of these two \ngoals: explaining response variation and explaining predictor variation. In particular, the method of \npartial least squares balances the two objectives by seeking factors that explain both response and \npredictor variation."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"CENSCALE","ProcedureOptionHelp":{"#cdata":"Lists the centering and scaling information for each response and predictor."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CVTEST","ProcedureOptionHelp":{"#cdata":"[Syntax: CVTEST <(cvtest-options)>] \n      \nSpecifies that van der Voet's (1994) randomization-based model comparison test be performed to test \nmodels with different numbers of extracted factors against the model that minimizes the predicted \nresidual sum of squares.\n\nYou can specify the following cv-test-options:\n\nPVAL=n \nspecifies the cutoff probability for declaring an insignificant difference. The default value is 0.10. \n\nSTAT=test-statistic \nspecifies the test statistic for the model comparison.\n\nNSAMP=n \nspecifies the number of randomizations to perform. The default value is 1000. \n\nSEED=n \nspecifies the seed value for randomization generation (the clock time is used by default)."},"ProcedureOptionType":"V","SubOptionsKeywords":"PVAL=|STAT=|NSAMP=|SEED="},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nNames the input SAS data set to be used by PROC HPPLS. The default is the most recently created data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DETAILS","ProcedureOptionHelp":{"#cdata":"Lists the details of the fitted model for each successive factor."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"METHOD=","ProcedureOptionHelp":{"#cdata":"Specifies the general factor extraction method to be used. By default, METHOD=PLS."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"PLS","@Value2":"SIMPLS","@Value3":"PCR","@Value4":"RRR"},"ProcedureOptionToolTips":{"@ToolTip1":"Syntax: PLS<(PLS-options)>           Requests partial least squares. You can specify the following optional PLS-options in parentheses:     ALGORITHM=NIPALS | SVD | EIG       names the specific algorithm used to compute extracted PLS factors. NIPALS requests the usual iterative      NIPALS algorithm, SVD bases the extraction on the singular value decomposition of X'Y, EIG bases the      extraction on the eigenvalue decomposition of Y'XX'Y.    MAXITER=n      specifies the maximum number of iterations for the NIPALS and RLGW algorithms. The default value is 200.    EPSILON=n      specifies the convergence criterion for the NIPALS and RLGW algorithms. The default value is 10\u207b\u00b9\u00b2.","@ToolTip2":"Requests the straightforward implementation of a statistically inspired modification of the partial  least squares (SIMPLS) method of De Jong (1993).","@ToolTip3":"Requests principal components regression","@ToolTip4":"Requests reduced rank regression"},"SubOptionsKeywords":"ALGORITHM=|MAXITER=|EPSILON="},{"ProcedureOptionName":"MISSING=","ProcedureOptionHelp":{"#cdata":"Specifies how observations with missing values are to be handled in computing the fit."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"NONE","@Value2":"AVG","@Value3":"EM<(EM-options)>"},"ProcedureOptionToolTips":{"@ToolTip1":"Observations with any missing variables (dependent or independent) are excluded from the analysis.","@ToolTip2":"Specifies that the fit be computed by filling in missing values with the average of the nonmissing  values for the corresponding variable.","@ToolTip3":"The procedure first computes the model with MISSING=AVG and then fills in missing values by their  predicted values based on that model and computes the model again. You can specify the following  optional EM-options in parentheses:  MAXITER=n  specifies the maximum number of iterations for the imputation/fit loop.  EPSILON=n  specifies the convergence criterion for the imputation/fit loop. The default value for is 10\u207b\u2078."},"SubOptionsKeywords":"MAXITER=|EPSILON="},{"ProcedureOptionName":"NAMELEN=","ProcedureOptionHelp":{"#cdata":"[Syntax: NAMELEN=number]\n      \nSpecifies the length to which long effect names are shortened. By default, NAMELEN=20. If you specify \na value less than 20 for number, the default is used."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NFAC=","ProcedureOptionHelp":{"#cdata":"[Syntax: NFAC=n] \n      \nSpecifies the number of factors to extract."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOCENTER","ProcedureOptionHelp":{"#cdata":"Suppresses centering of the responses and predictors before fitting. This is useful if the analysis \nvariables are already centered and scaled."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOCLPRINT","ProcedureOptionHelp":{"#cdata":"[Syntax: NOCLPRINT<=number>]\n      \nSuppresses the display of the \"Class Level Information\" table if you do not specify number. If you specify \nnumber, the values of the classification variables are displayed only for variables whose number of levels \nis less than number. Specifying a number helps to reduce the size of the \"Class Level Information\" table if \nsome classification variables have a large number of levels."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"NOCVSTDIZE","ProcedureOptionHelp":{"#cdata":"Suppresses re-centering and rescaling of the responses and predictors before each model is fit \nin the cross validation."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the normal display of results."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOSCALE","ProcedureOptionHelp":{"#cdata":"Suppresses scaling of the responses and predictors before fitting. This is useful if the analysis \nvariables are already centered and scaled."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"VARSS","ProcedureOptionHelp":{"#cdata":"Lists, in addition to the average response and predictor sum of squares accounted for by each successive \nfactor, the amount of variation accounted for in each response and predictor."},"ProcedureOptionType":"S"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables; \n\nYou can specify a BY statement with PROC HPPLS to obtain separate analyses of observations in groups that \nare defined by the BY variables. When a BY statement appears, the procedure expects the input data set to be \nsorted in order of the BY variables. If you specify more than one BY statement, only the last one specified is used. \n\nIf your input data set is not sorted in ascending order, use one of the following alternatives: \n\n  \u2022 Sort the data by using the SORT procedure with a similar BY statement. \n  \u2022 Specify the NOTSORTED or DESCENDING option in the BY statement for the BCHOICE procedure. The NOTSORTED \n    option does not mean that the data are unsorted but rather that the data are arranged in groups (according to values \n    of the BY variables) and that these groups are not necessarily in alphabetical or increasing numeric order. \n  \u2022 Create an index on the BY variables by using the DATASETS procedure (in Base SAS software)."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING","StatementOptionHelp":{"#cdata":"Specifies that the observations are sorted in descending order by the variable that \nimmediately follows the word DESCENDING in the BY statement."},"StatementOptionType":"S"},{"StatementOptionName":"NOTSORTED","StatementOptionHelp":{"#cdata":"Specifies that observations are not necessarily sorted in alphabetic or numeric order."},"StatementOptionType":"S"}]}},{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable <(options)>... <variable <(options)>> </ global-options>; \n      \nThe CLASS statement names the classification variables to be used as explanatory variables in the \nanalysis. The CLASS statement must precede the MODEL statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sorting order of the classification variable. If both the DESCENDING and ORDER= options \nare specified, high-performance statistical procedures order the categories according to the ORDER= \noption and then reverse that order."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Specifies the sort order for the levels of classification variables. This ordering determines which \nparameters in the model correspond to each level in the data. By default, ORDER=FORMATTED. \nFor ORDER=FORMATTED and ORDER=INTERNAL, the sort order is machine-dependent. When ORDER=FORMATTED \nis in effect for numeric variables for which you have supplied no explicit format, the levels are \nordered by their internal values."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FORMATTED","@Value3":"FREQ","@Value4":"FREQDATA","@Value5":"FREQFORMATTED","@Value6":"FREQINTERNAL","@Value7":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Levels sorted by the order of appearance in the input data set.","@ToolTip2":"Levels sorted by the external formatted value, except for numeric variables with no explicit  format, which are sorted by their unformatted (internal) value.","@ToolTip3":"Levels sorted by the descending frequency count; levels with the most observations come first  in the order.","@ToolTip4":"Levels sorted by Order of descending frequency count, and within counts by order of appearance  in the input data set when counts are tied.","@ToolTip5":"Levels sorted by Order of descending frequency count, and within counts by formatted value when  counts are tied.","@ToolTip6":"Levels sorted by Order of descending frequency count, and within counts by unformatted (internal)  value when counts are tied","@ToolTip7":"Levels sorted by the unformatted value."}},{"StatementOptionName":"REFERENCE=|REF=","StatementOptionHelp":{"#cdata":"Syntax: REF='level' | keyword \nREFERENCE='level' | keyword \n\nSpecifies the reference level that is used when you specify PARAM= REFERENCE. For an individual (but not a global) \nvariable REF= option, you can specify the level of the variable to use as the reference level. Specify the formatted \nvalue of the variable if a format is assigned. For a REF= option or global-option, you can use one of the following \nkeywords. The default is REF=LAST."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'<level>'","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"The level of the variable to use as the reference level. Specify the formatted value of the variable  if a format is assigned. Replace <level> with an actual value.","@ToolTip2":"Designates the first ordered level as reference.","@ToolTip3":"Designates the last ordered level as reference."}},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"Requests that the columns of the design matrix that correspond to any effect that contains a split \nclassification variable can be selected to enter or leave a model independently of the other design \ncolumns of that effect. This option is specific to the HPREG procedure."},"StatementOptionType":"S"},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (\".\", \".A\", \u2026, \".Z\" for numeric variables and blanks for character variables) \nas valid values for the CLASS variable.\n\nIf you do not specify the MISSING option, observations that have missing values for CLASS variables \nare removed from the analysis, even if the CLASS variables are not used in the model formulation."},"StatementOptionType":"S"},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"[Syntax: PARAM=keyword]\n          \nSpecifies the parameterization method for the classification variable or variables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"GLM","@Value2":"REFERENCE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a less-than-full-rank reference cell coding. This parameterization is used in, for example,  the GLM, MIXED, and GLIMMIX procedures in SAS/STAT.","@ToolTip2":"Specifies a reference cell encoding. You can choose the reference value by specifying an option for  a specific variable or set of variables in the CLASS statement, or designate the first or last  ordered value by specifying a global-option. The default is REF=LAST."}},{"StatementOptionName":"TRUNCATE","StatementOptionHelp":{"#cdata":"[Syntax: TRUNCATE<=n>] \n          \nSpecifies the truncation width of formatted values of CLASS variables when the optional n is specified.\nIf n is not specified, the TRUNCATE option requests that classification levels be determined by using \nno more than the first 16 characters of the formatted values of CLASS variables."},"StatementOptionType":"S|V"},{"StatementOptionName":"UPCASE","StatementOptionHelp":{"#cdata":"Uppercases the values of character-valued CLASS variables before levelizing them. For example, if the \nUPCASE option is in effect and a CLASS variable can take the values 'a,' 'A,' and 'b,' then 'a' and \n'A' represent the same level and the CLASS variable is treated as having only two values: 'A' and 'B.'"},"StatementOptionType":"S|V"}]}},{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variables ; \n    \nThe ID statement lists one or more variables from the input data set to be transferred to output data \nsets that are created by SAS high-performance analytical procedures, provided that the output data set \nproduces one (or more) records per input observation."},"StatementOptions":null},{"StatementName":"MODEL","StatementHelp":{"#cdata":"[Syntax: MODEL response-variables = predictor-effects </ options> ;]\n      \nThe MODEL statement names the responses and the predictors, which determine the Y and X matrices of the model, respectively. You can simply list the names of the predictor variables as the model effects, but you can also specify other types of effects, including polynomial effects and interactions.\n\nThe MODEL statement is required. You can specify only one MODEL statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"INTERCEPT","StatementOptionHelp":{"#cdata":"Overrides the default, in which the responses and predictors are centered. When responses and predictors \nare centered, no intercept is required in the model."},"StatementOptionType":"S"},{"StatementOptionName":"SOLUTION","StatementOptionHelp":{"#cdata":"Lists the coefficients of the final predictive model for the responses."},"StatementOptionType":"S"}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT <OUT=SAS-data-set><keyword <=prefix>>\u2026<keyword <=prefix>> ; \n\nThe OUTPUT statement creates a data set that contains observationwise statistics, which are computed \nafter fitting the model. If you do not specify any keyword, then only the predicted values for responses \nare included."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"[Syntax: OUT= SAS-data-set] \n          \nSpecifies the output data set."},"StatementOptionType":"DV"},{"StatementOptionName":"H","StatementOptionHelp":{"#cdata":"Requests the approximate leverage. The default prefix is H."},"StatementOptionType":"S|V"},{"StatementOptionName":"PREDICTED|PRED|P","StatementOptionHelp":{"#cdata":"Requests predicted values for each response. The default prefix is Pred."},"StatementOptionType":"S|V"},{"StatementOptionName":"PRESS","StatementOptionHelp":{"#cdata":"Rrequests approximate predicted residuals for each response. The default prefix is PRESS."},"StatementOptionType":"S|V"},{"StatementOptionName":"ROLE","StatementOptionHelp":{"#cdata":"Requests numeric values that indicate the role played by each observation in fitting the model. \nThe default prefix is _ROLE_."},"StatementOptionType":"S|V"},{"StatementOptionName":"STDX","StatementOptionHelp":{"#cdata":"Requests standardized (centered and scaled) predictor values for each predictor. The default prefix is StdX."},"StatementOptionType":"S|V"},{"StatementOptionName":"STDXSSE","StatementOptionHelp":{"#cdata":"Requests the sum of squares of residuals for standardized predictors. The default prefix is StdXSSE."},"StatementOptionType":"S|V"},{"StatementOptionName":"STDY","StatementOptionHelp":{"#cdata":"Requests standardized (centered and scaled) response values for each response. The default prefix is StdY."},"StatementOptionType":"S|V"},{"StatementOptionName":"STDYSSE","StatementOptionHelp":{"#cdata":"Requests the sum of squares of residuals for standardized responses. The default prefix is StdYSSE."},"StatementOptionType":"S|V"},{"StatementOptionName":"TSQUARE|T2","StatementOptionHelp":{"#cdata":"Requests scaled sum of squares of score values. The default prefix is TSquare."},"StatementOptionType":"S|V"},{"StatementOptionName":"XRESIDUAL|XRESID|XR","StatementOptionHelp":{"#cdata":"Requests residuals for each predictor. The default prefix is XResid."},"StatementOptionType":"S|V"},{"StatementOptionName":"XSCORE=","StatementOptionHelp":{"#cdata":"Requests extracted factors (X-scores, latent vectors, latent variables, T) for each selected model \nfactor. The default prefix is XScore.)"},"StatementOptionType":"S|V"},{"StatementOptionName":"YRESIDUAL|YRESID|YR","StatementOptionHelp":{"#cdata":"Requests residuals for each response. The default prefix is YResid."},"StatementOptionType":"S|V"},{"StatementOptionName":"YSCORE","StatementOptionHelp":{"#cdata":"Requests extracted responses (Y-scores, U) for each selected model factor. The default prefix is YScore.)"},"StatementOptionType":"S|V"}]}},{"StatementName":"PARTITION","StatementHelp":{"#cdata":"Syntax: PARTITION <partition-options>;   \n\nThe PARTITION statement specifies how observations in the input data set are logically partitioned into \ndisjoint subsets for model training and testing. Either you can designate a variable in the input data \nset and a set of formatted values of that variable to determine the role of each observation, or you can \nspecify proportions to use for random assignment of observations for each role."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ROLEVAR=|ROLE=","StatementOptionHelp":{"#cdata":"Syntax: ROLEVAR | ROLE=variable (<TEST='value'> <TRAIN='value'>) \n          \nNames the variable in the input data set whose values are used to assign roles to each observation. \nThe formatted values of this variable that are used to assign observations roles are specified in the \nTEST= and TRAIN= suboptions. If you specify only the TEST= suboption, then all observations whose role \nis not determined by the TEST= suboption are assigned to training. If you specify only the TRAIN= suboption, \nthen all observations whose role is not determined by the TRAIN= suboption are assigned to testing."},"StatementOptionType":"V","SubOptionsKeywords":"TEST=|TRAIN="},{"StatementOptionName":"FRACTION","StatementOptionHelp":{"#cdata":"Syntax: FRACTION( <TEST=fraction> <SEED=n> ) \n          \nRequests that specified proportions of the observations in the input data set be randomly assigned \ntraining and testing roles. You specify the proportions for testing by using the TEST= suboption; \nthe specified fraction must be less than 1 and the remaining fraction of the observations are assigned \nto the training role. If you do not specify the TEST= suboption, the default fraction is 0.5. The SEED= \nsuboption specifies an integer that is used to start the pseudorandom number generator for random \npartitioning of data for training and testing. If you do not specify a seed, or if you specify a value \nless than or equal to 0, the seed is generated from reading the time of day from the computer\u2019s clock."},"StatementOptionType":"S","SubOptionsKeywords":"TEST=|SEED="}]}},{"StatementName":"PERFORMANCE","StatementHelp":{"#cdata":"Syntax: PERFORMANCE < performance-options > ;\n      \nThe PERFORMANCE statement defines performance parameters for multithreaded and distributed computing, \npasses variables that describe the distributed computing environment, and requests detailed results \nabout the performance characteristics of the HPPLS procedure. \n\nYou can also use the PERFORMANCE statement to control whether the HPPLS procedure executes in \nsingle-machine mode or distributed mode."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COMMIT=","StatementOptionHelp":{"#cdata":"Syntax: COMMIT=n\n          \nRequests that the High-Performance Analytics procedure write periodic updates to the \nSAS Log when observations are sent from the client to the appliance for distributed \nprocessing.\n\nHigh-Performance Analytics procedures do not have to use input data that are stored \nin the appliance. You can perform distributed computations regardless of the origin \nor format of the input data, provided the data are in a format that can be read by \nthe SAS System (for example, because a SAS/ACCESS engine is available)."},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"Requests a table that shows a timing breakdown of the procedure steps."},"StatementOptionType":"S"},{"StatementOptionName":"GRIDHOST=|HOST=","StatementOptionHelp":{"#cdata":"Syntax: GRIDHOST=\"name\" \nHOST=\"name\"\n\nSpecifies the name of the appliance host in single or double quotation marks. If this option is specified, \nit overrides the value of the GRIDHOST environment variable."},"StatementOptionType":"V"},{"StatementOptionName":"GRIDMODE=|MODE=","StatementOptionHelp":{"#cdata":"Syntax: GRIDMODE=SYM | ASYM \nSyntax: MODE=SYM | ASYM\n\nIs a deprecated option that specifies whether to run the high-performance analytical procedure in \nsymmetric (SYM) mode or asymmetric (ASYM) mode. This option overrides the GRIDMODE environment variable."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"SYM","@Value2":"ASYM"},"StatementOptionToolTips":{"@ToolTip1":"Specifies to run the high-performance analytical procedure in symmetric (SYM) mode","@ToolTip2":"Specifies to run the high-performance analytical procedure in asymmetric (ASYM) mode."}},{"StatementOptionName":"GRIDTIMEOUT=|TIMEOUT=","StatementOptionHelp":{"#cdata":"Syntax: GRIDTIMEOUT=s \nSyntax: TIMEOUT=s\n\nSpecifies the time-out in seconds for a high-performance analytical procedure to wait for a connection \nto the appliance and establish a connection back to the client. The default is 120 seconds. If jobs are \nsubmitted to the appliance through workload management tools that might suspend access to the appliance \nfor a longer period, you might want to increase the time-out value."},"StatementOptionType":"V"},{"StatementOptionName":"INSTALL=|INSTALLLOC=","StatementOptionHelp":{"#cdata":"Syntax: INSTALL=\"name\" \nSyntax: INSTALLLOC=\"name\"\n\nSpecifies the directory in which the shared libraries for the high-performance analytical procedure are \ninstalled on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC environment variable."},"StatementOptionType":"V"},{"StatementOptionName":"LASRSERVER=|LASR=","StatementOptionHelp":{"#cdata":"Syntax: LASRSERVER=\"path\" \nSyntax: LASR=\"path\"\n\nSpecifies the fully qualified path to the description file of a SAS LASR Analytic Server instance. \nIf the input data set is held in memory by this LASR Analytic Server instance, then the procedure \nruns alongside LASR. This option is not needed to run alongside LASR if the DATA= specification of \nthe input data uses a libref that is associated with a LASR Analytic Server instance."},"StatementOptionType":"V"},{"StatementOptionName":"NODES=|NNODES=","StatementOptionHelp":{"#cdata":"Syntax: NODES=ALL | n \nSyntax: NNODES=ALL | n\n\nSpecifies the number of nodes in the distributed computing environment, provided that the data are not \nprocessed alongside the database.\n\nSpecifying NODES=0 indicates that you want to process the data in single-machine mode on the client machine. \nIf the input data are not alongside the database, this is the default. The high-performance analytical \nprocedures then perform the analysis on the client."},"StatementOptionType":"V"},{"StatementOptionName":"NTHREADS=|THREADS=","StatementOptionHelp":{"#cdata":"Syntax: NTHREADS=n \nSyntax: THREADS=n\n\nSpecifies the number of threads for analytic computations and overrides the SAS system option THREADS | NOTHREADS. \nIf you do not specify the NTHREADS= option, the number of threads is determined based on the number of CPUs on the \nhost on which the analytic computations execute. The algorithm by which a CPU count is converted to a thread count \nis specific to the high-performance analytical procedure. Most procedures create one thread per CPU for the analytic \ncomputations.\n\nBy default, high-performance analytical procedures run in multiple concurrent threads unless multithreading has been \nturned off by the NOTHREADS system option or you force single-threaded execution by specifying NTHREADS=1. The largest \nnumber that can be specified for n is 256. Individual high-performance analytical procedures can impose more stringent \nlimits if called for by algorithmic considerations.\n\nNote: The SAS system options THREADS | NOTHREADS apply to the client machine on which the SAS high-performance analytical \nprocedures execute. They do not apply to the compute nodes in a distributed environment."},"StatementOptionType":"V"}]}}]}}}