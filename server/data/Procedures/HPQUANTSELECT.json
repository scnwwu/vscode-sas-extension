{"Procedure":{"#comment":{},"Name":"HPQUANTSELECT","ProductGroup":"SAS/STAT","ProcedureHelp":{"#cdata":"Syntax: PROC PROC HPQUANTSELECT <options> ; \n    BY variables ; \n    CLASS variable <(v-options)> <variable <(v-options \u2026)> > </ v-options> <options> ; \n    CODE <options>; \n    EFFECT name = effect-type (variables </ options> ) ; \n    MODEL variable = <effects> </ options> ; \n    OUTPUT <OUT=SAS-data-set> <keyword <=name> > <\u2026keyword<=name>> ; \n    PARTITION <options> ; \n    WEIGHT variable ; \n\nThe QUANTSELECT procedure compares most closely to the GLMSELECT and QUANTREG procedures. PROC GLMSELECT \nperforms effect selection in the framework of general linear models. PROC QUANTREG supports a variety of \nestimation and inference methods for quantile regression but does not directly provide effect selection \nfacilities. The QUANTSELECT procedure, as a counterpart of PROC GLMSELECT for quantile regression, fills \nthis gap."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=SAS-data-set\n      \nNames the SAS data set to be used by PROC QUANTSELECT. If the DATA= option is not specified, \nPROC QUANTSELECT uses the most recently created SAS data set. If the data set contains a \nvariable named _ROLE_, then this variable is used to assign observations for training, \nvalidation, and testing roles."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"MAXMACRO=","ProcedureOptionHelp":{"#cdata":"Syntax: MAXMACRO=n \n      \nSpecifies the maximum number of macro variables with selected effects to create. By default, MAXMACRO=100. \n\nPROC QUANTSELECT saves the list of selected effects in a macro variable, &_QRSIND. For example, suppose \nyour input effect list consists of x1\u2013x10. Then &_QRSIND would be set to x1 x3 x4 x10 if the first, third, \nfourth, and tenth effects were selected for the model. This list can be used in the MODEL statement of a \nsubsequent procedure. \n\nIf you specify the OUTDESIGN= option in the PROC QUANTSELECT statement, then PROC QUANTSELECT saves the \nlist of columns in the design matrix in a macro variable named &_QRSMOD."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses all displayed output (including plots)."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTDESIGN=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTDESIGN<(options)=><SAS-data-set> \n\nCreates a data set that contains the design matrix. By default, the QUANTSELECT procedure includes \nin the OUTDESIGN data set the matrix that corresponds to all the effects in the selected models. \nTwo schemes for naming the columns of the design matrix are available: \n\n  \u2022 In the first scheme, names of the parameters are constructed from the parameter labels that \n    appear in the parameter estimates table. This naming scheme is the default when you do not \n    request BY processing; it is not available when you do use BY processing. \n\n  \u2022 In the second scheme, the design matrix column names consist of a prefix followed by an index. \n    The default name prefix is _X. This scheme is used when you specify the PREFIX= option or a BY \n    statement; otherwise the first scheme is used. \n\nYou can specify the following options in parentheses to control the contents of the OUTDESIGN= data set: \n\n  ADDINPUTVARS \n    includes all the input data set variables in the OUTDESIGN= data set. \n  ADDVALDATA \n    includes all the VALDATA= data set variables in the OUTDESIGN= data set. This option is ignored \n    if the VALDATA= data set is not specified. \n  ADDTESTDATA \n    includes all the TESTDATA= data set variables in the OUTDESIGN= data set. This option is ignored \n    if TESTDATA= data set is not specified. \n  FULLMODEL \n    includes in the OUTDESIGN= data set parameters that correspond to all effects that are specified \n    in the MODEL statement. By default, only parameters that correspond to the selected model are included. \n  NAMES \n    produces a table that associates columns in the OUTDESIGN= data set with the labels of the parameters \n    they represent. \n  PREFIX<=prefix> \n    creates the design matrix column names from a prefix followed by an index. The default prefix is _X."},"ProcedureOptionType":"S|V","SubOptionsKeywords":"ADDINPUTVARS|ADDVALDATA|ADDTESTDATA|FULLMODEL|NAMES|PREFIX|PREFIX="},{"ProcedureOptionName":"PLOTS=","ProcedureOptionHelp":{"#cdata":"Controls the plots produced through ODS Graphics.\n      \nSyntax: \n(1) PLOTS <(global-plot-options)> <= plot-request <(options)>> \n(2) PLOTS <(global-plot-options)> <= (plot-request <(options)> <... plot-request <(options)>>)> \n\nControls the plots that are produced through ODS Graphics. When you specify only one plot-request, \nyou can omit the parentheses around it.\n\nYou can specify the following global-plot-options, which apply to all plots generated by the \nQUANTSELECT procedure, unless they are altered by specific plot options:\n\n  ENDSTEP=n \n  specifies that the step ranges shown on the horizontal axes of plots terminates at specified step.\n\n  LOGP | LOGPVALUE \n  requests that the natural logarithm of the entry and removal significance levels when the SELECT=SL \n  option is specified in the MODEL statement.. \n\n  MAXSTEPLABEL=n \n  specifies the maximum number of characters beyond which labels of effects on plots are truncated. \n\n  MAXPARMLABEL= n \n  specifies the maximum number of characters beyond which parameter labels on plots are truncated. \n\n  STARTSTEP=n \n  specifies that the step ranges shown on the horizontal axes of plots start at the specified step.\n\n  STEPAXIS=EFFECT | NORMB | NUMBER \n  specifies the horizontal axis to be used on the plots, where this axis represents the sequence \n  of entering or departing effects. \n\n  UNPACK \n  suppresses paneling. By default, multiple plots can appear in some output panels."},"ProcedureOptionType":"S|V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"ACL|ACLPLOT","@Value3":"COEF|COEFFICIENTS|COEFFICIENTPANEL","@Value4":"CRIT|CRITERIA|CRITERIONPANEL","@Value5":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Displays all appropriate graphs.","@ToolTip2":"Syntax: ACL|ACLPLOT<(aclplot-option)>                                 Plots the progression of the average square error on the training data, and the test and validation  data whenever these data are provided with the TESTDATA= and VALDATA= options or are produced by  using a PARTITION statement. The following aclplot-option option is available:    STEPAXIS=EFFECT | NORMB | NUMBER    specifies the method for labeling the horizontal plot axis.","@ToolTip3":"Syntax: COEF | COEFFICIENTS | COEFFICIENTPANEL<(coefficient-panel-options)>                                  Displays a panel of two plots for each quantile level. The upper plot shows the progression of the  parameter values as the selection process proceeds. The lower plot shows the progression of the  CHOOSE= criterion. If no CHOOSE= criterion is in effect, then the AICC criterion is displayed.  You can specify the following coefficient-panel-options:     LABELGAP=percentage    specifies the percentage of the vertical axis range that forms the minimum gap between successive    parameter labels at the final step of the coefficient progression plot.    LOGPVALUE    requests that the natural logarithm of the entry and removal significance levels when the SELECT=SL    option is specified in the MODEL statement.     STEPAXIS=EFFECT | NORMB | NUMBER    specifies the horizontal axis to be used.     UNPACK | UNPACKPANEL    displays the coefficient progression and the CHOOSE= criterion progression in separate plots.","@ToolTip4":"Syntax: CRIT | CRITERIA | CRITERIONPANEL<(criterion-panel-options)>                                  Plots a panel of model fit criteria. If multiple quantile levels apply, the CRITERIA option plots  a panel of model fit criteria for each quantile level. The criteria that are displayed are AIC, AICC,  and SBC, in addition to any other criteria that are named in the CHOOSE=, SELECT=, STOP=, and STATS=  options in the MODEL statement. You can specify the following criterion-panel-options:     STEPAXIS=EFFECT | NORMB | NUMBER    specifies the horizontal axis to be used.     UNPACK | UNPACKPANEL    displays each criterion progression on a separate plot.","@ToolTip5":"Suppresses all plots."},"SubOptionsKeywords":"UNPACK|UNPACKPANEL|STEPAXIS=|LOGPVALUE|LABELGAP=|SHOW=|LOGP|LOGPVALUE"},{"ProcedureOptionName":"SEED=","ProcedureOptionHelp":{"#cdata":"Syntax: SEED=number \n      \nSpecifies an integer used to start the pseudo-random number generator for random cross validation \nand random partitioning of data for training, testing, and validation. If you do not specify a seed \nor if you specify a value less than or equal to 0, the seed is generated by reading the time of day \nfrom the computer's clock."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TESTDATA=","ProcedureOptionHelp":{"#cdata":"Syntax: TESTDATA=SAS-data-set \n      \nNames a SAS data set containing test data. This data set must contain all the variables \nspecified in the MODEL statement. Furthermore, when you also specify a BY statement and the \nTESTDATA= data set contains any of the BY variables, then the TESTDATA= data set must also \ncontain all the BY variables sorted in the order of the BY variables. In this case, only the \ntest data for a specific BY group are used with the corresponding BY group in the analysis \ndata. If the TESTDATA= data set contains none of the BY variables, then the entire TESTDATA= \ndata set is used with each BY group of the analysis data. \n\nIf you specify both a TESTDATA= data set and the PARTITION statement, then the testing \nobservations from the DATA= data set are merged with the TESTDATA= data set for testing \npurposes."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"VALDATA=","ProcedureOptionHelp":{"#cdata":"Syntax: VALDATA=SAS-data-set \n      \nNames a SAS data set containing validation data. This data set must contain all the variables \nspecified in the MODEL statement. Furthermore, when a BY statement is used and the VALDATA= \ndata set contains any of the BY variables, then the VALDATA= data set must also contain all \nthe BY variables sorted in the order of the BY variables. In this case, only the validation \ndata for a specific BY group are used with the corresponding BY group in the analysis data. \nIf the VALDATA= data set contains none of the BY variables, then the entire VALDATA= data \nset is used with each BY group of the analysis data. \n\nIf you specify both a VALDATA= data set and the PARTITION statement, then the validation \nobservations from the DATA= data set are merged with the VALDATA= data set for validation \npurposes."},"ProcedureOptionType":"DV"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables; \n\nYou can specify a BY statement with PROC HPQUANTSELECT to obtain separate analyses of observations in groups that \nare defined by the BY variables. When a BY statement appears, the procedure expects the input data set to be \nsorted in order of the BY variables. If you specify more than one BY statement, only the last one specified is used. \n\nIf your input data set is not sorted in ascending order, use one of the following alternatives: \n\n  \u2022 Sort the data by using the SORT procedure with a similar BY statement. \n  \u2022 Specify the NOTSORTED or DESCENDING option in the BY statement for the BCHOICE procedure. The NOTSORTED \n    option does not mean that the data are unsorted but rather that the data are arranged in groups (according to values \n    of the BY variables) and that these groups are not necessarily in alphabetical or increasing numeric order. \n  \u2022 Create an index on the BY variables by using the DATASETS procedure (in Base SAS software)."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING","StatementOptionHelp":{"#cdata":"Specifies that the observations are sorted in descending order by the variable that \nimmediately follows the word DESCENDING in the BY statement."},"StatementOptionType":"S"},{"StatementOptionName":"NOTSORTED","StatementOptionHelp":{"#cdata":"Specifies that observations are not necessarily sorted in alphabetic or numeric order."},"StatementOptionType":"S"}]}},{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable <(v-options)> <variable <(v-options \u2026)> > </ v-options> <options> ; \n\nThe CLASS statement names the classification variables to be used in the analysis. The CLASS statement \nmust precede the MODEL statement. "},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DELIMITER=","StatementOptionHelp":{"#cdata":"Syntax: DELIMITER='c' \n          \nSpecifies the delimiter character, 'c', to be used between levels of classification variables \nwhen parameter names and lists of class level values are built. The default delimiter is a space. \nThis option is useful if the levels of a classification variable contain embedded blanks."},"StatementOptionType":"V"},{"StatementOptionName":"SHOW|SHOWCODING","StatementOptionHelp":{"#cdata":"Requests a table that shows the coding used for each classification variable."},"StatementOptionType":"S"},{"StatementOptionName":"CPREFIX=","StatementOptionHelp":{"#cdata":"Syntax: CPREFIX=n \n          \nSpecifies that, at most, the first n characters of a CLASS variable name be used in creating names \nfor the corresponding design variables."},"StatementOptionType":"V"},{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sort order of the classification variable."},"StatementOptionType":"S"},{"StatementOptionName":"LPREFIX=","StatementOptionHelp":{"#cdata":"Syntax: LPREFIX=n \n          \nSpecifies that, at most, the first n characters of a CLASS variable label be used in creating labels \nfor the corresponding design variables."},"StatementOptionType":"V"},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Allows missing values, such as '.' for a numeric variable or a blank for a character variable, \nas valid values for the CLASS variable."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Syntax: ORDER=DATA | FORMATTED | FREQ | INTERNAL \n          \nSpecifies the sort order for the levels of classification variables. If ORDER=FORMATTED for numeric \nvariables for which you have supplied no explicit format, the levels are ordered by their internal \nvalues.\n\nBy default, ORDER=FORMATTED. For FORMATTED and INTERNAL, the sort order is machine dependent."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FORMATTED","@Value3":"FREQ","@Value4":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Levels sorted by order of appearance in the input data set ","@ToolTip2":"Levels sorted by external formatted value, except for numeric variables with no explicit format,  which are sorted by their unformatted (internal) value","@ToolTip3":"Levels sorted by descending frequency count; levels with the most observations come first in the order","@ToolTip4":"Levels sorted by unformatted value"}},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"Specifies the parameterization method for the classification variable or variables. \n         \nDesign matrix columns are created from CLASS variables according to the following coding schemes. \nThe default is PARAM=GLM. If PARAM=ORTHPOLY or PARAM=POLY, and the CLASS levels are numeric, then \nthe ORDER= option in the CLASS statement is ignored, and the internal, unformatted values are used."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EFFECT","@Value2":"GLM","@Value3":"ORDINAL|THERMOMETER","@Value4":"POLYNOMIAL|POLY","@Value5":"REFERENCE|REF","@Value6":"ORTHEFFECT","@Value7":"ORTHORDINAL|ORTHOTHERM","@Value8":"ORTHPOLY","@Value9":"ORTHREF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies effect coding.","@ToolTip2":"Specifies less-than-full-rank coding; this option can be used only as a global V-option  (after the slash in the CLASS statement).","@ToolTip3":"Specifies the cumulative parameterization for an ordinal CLASS variable","@ToolTip4":"Specifies polynomial coding.","@ToolTip5":"Specifies reference-cell coding.","@ToolTip6":"Orthogonalizes PARAM=EFFECT.","@ToolTip7":"Orthogonalizes PARAM=ORDINAL.","@ToolTip8":"Orthogonalizes PARAM=POLYNOMIAL.","@ToolTip9":"Orthogonalizes PARAM=REFERENCE."}},{"StatementOptionName":"REF=","StatementOptionHelp":{"#cdata":"Specifies the reference level for PARAM=EFFECT, PARAM=REFERENCE, and their orthogonalizations. \n          \nFor an individual (but not a global) REF= v-option, you can specify the level of the variable \nto use as the reference level. For a global or individual REF= v-option, you can specify REF=FIRST \n(which designates the first-ordered level as reference) or REF=LAST (which designates the last-ordered \nlevel as reference). The default is REF=LAST."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<level>","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the level of the variable to use as the reference level. Replace <level>  with an actual value.","@ToolTip2":"=Designates the first ordered level as reference.","@ToolTip3":"Designates the last ordered level as reference."}},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"Enables the columns of the design matrix that correspond to any effect that contains a split \nclassification variable to be selected to enter or leave a model independently of the other \ndesign columns of that effect."},"StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"CODE","StatementHelp":{"#cdata":"Syntax: CODE <option(s)> ; \n\nThe CODE statement writes SAS DATA step code for computing predicted values of the fitted model either \nto a file or to a catalog entry. This code can then be included in a DATA step to score new data."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CATALOG=|CAT=","StatementOptionHelp":{"#cdata":"Syntax: CATALOG=library.catalog.entry.type\n Syntax: CAT=library.catalog.entry.type \n  \nSpecifies where to write the generated code in the form of library.catalog.entry.type. The compound\nname can have from one to four levels. The default library is determined by the USER= SAS system\noption, which by default is WORK. The default entry is SASCODE, and the default type is SOURCE."},"StatementOptionType":"V"},{"StatementOptionName":"FILE=","StatementOptionHelp":{"#cdata":"Syntax: FILE= filename \n          \nNames the external file that saves the generated code. When enclosed in a quoted string (for example,\nFILE=\"c:nmydirnscorecode.sas\"), this option specifies the path for writing the code to an external\nfile. You can also specify unquoted SAS filenames of no more than eight characters for filename. If\nthe filename is assigned as a fileref in a Base SAS FILENAME statement, the file specified in the\nFILENAME statement is opened. The special filerefs LOG and PRINT are always assigned. If the\nspecified filename is not an assigned fileref, the specified value for filename is concatenated with a .txt\nextension before the file is opened. For example, if FOO is not an assigned fileref, FILE=FOO causes\nFOO.txt to be opened. If filename has more than eight characters, an error message is printed."},"StatementOptionType":"V"},{"StatementOptionName":"FORMAT=","StatementOptionHelp":{"#cdata":"Syntax: FORMAT=format \n         \nSpecifies the format for the regression coefficients and other numerical values that do not have a format\nfrom the input data set. The default format is BEST20."},"StatementOptionType":"V"},{"StatementOptionName":"GROUP=","StatementOptionHelp":{"#cdata":"Syntax: GROUP=group-name \n         \nSpecifies the group identifier for group processing. The group-name should be a valid SAS name of no\nmore than 16 characters. It is used to construct array names and statement labels in the generated code."},"StatementOptionType":"V"},{"StatementOptionName":"IMPUTE","StatementOptionHelp":{"#cdata":"Imputes the predicted values according to an intercept-only model for observations with missing or\ninvalid covariate values. For a continuous response, the predicted value is the mean of the response\nvariable; for a categorical response, the predicted values are the proportions of the response categories.\nWhen the IMPUTE option is specified, the scoring code also creates a variable named _WARN_ that\ncontains one or more single-character codes that indicate problems in computing predicted values. The\ncharacter codes used in _WARN_ go in the following positions:\n\nCode Column Meaning\nM     1     Missing covariate value\nU     2     Unrecognized covariate category"},"StatementOptionType":"S"},{"StatementOptionName":"LINESIZE=|LS=","StatementOptionHelp":{"#cdata":"Syntax: LINESIZE=value |  LS=value \n         \nSpecifies the line size for the generated code. The default is 72. The permissible range is 64 to 254."},"StatementOptionType":"V"}]}},{"StatementName":"EFFECT","StatementHelp":{"#cdata":"Syntax: EFFECT name=effect-type (variables </ options>); \n\nThe EFFECT statement enables you to construct special collections of columns for design matrices. \nThese collections are referred to as constructed effects to distinguish them from the usual model \neffects that are formed from continuous or classification variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"EFFECT-NAME=","StatementOptionHelp":{"#cdata":"Replace 'EFFECT-NAME' with the name of the effect, specified after the EFFECT keyword. \nThis name can appear in only one EFFECT statement and cannot be the name of a \nvariable in the input data set."},"StatementOptionType":"RV","StatementOptionValues":{"@Value1":"COLLECTION","@Value2":"LAG","@Value3":"MULTIMEMBER|MM","@Value4":"POLYNOMIAL|POLY","@Value5":"SPLINE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a collection effect that defines one or more variables as a single effect with multiple  degrees of freedom. The variables in a collection are considered as a unit for estimation and inference.   Option(s) available (specified after a slash (/) following the variable list):   DETAILS  Displays the constituents of the collection effect","@ToolTip2":"Specifies a classification effect in which the level that is used for a particular period corresponds  to the level in the preceding period.   Options available (specified after a slash (/) following the variable list):    DESIGNROLE=    Names a variable that controls to which lag design an observation is assigned     DETAILS    Displays the lag design of the lag effect     NLAG=    Specifies the number of periods in the lag     PERIOD=    Names the variable that defines the period     WITHIN=    Names the variable or variables that define the group within which each period is defined","@ToolTip3":"Specifies a multimember classification effect whose levels are determined by one or more variables  that appear in a CLASS statement.   Options available (specified after a slash (/) following the variable list):     NOEFFECT    Specifies that observations with all missing levels for the multimember variables should    have zero values in the corresponding design matrix columns     WEIGHT=    Specifies the weight variable for the contributions of each of the classification effects","@ToolTip4":"Is a multivariate polynomial effect in the specified numeric variables.                                      Options available (specified after a slash (/) following the variable list):     DEGREE=    Specifies the degree of the polynomial     MDEGREE=    Specifies the maximum degree of any variable in a term of the polynomial     STANDARDIZE=    Specifies centering and scaling suboptions for the variables that define the polynomial","@ToolTip5":"Specifies a regression spline effect whose columns are univariate spline expansions of one or more  variables. A spline expansion replaces the original variable with an expanded or larger set of  new variables.   Options available (specified after a slash (/) following the variable list):     BASIS=    Specifies the type of basis (B-spline basis or truncated power function basis) for the spline expansion     DEGREE=    Specifies the degree of the spline transformation     KNOTMETHOD=    Specifies how to construct the knots for spline effects"},"SubOptionsKeywords":"DETAILS|DESIGNROLE=|NLAG=|PERIOD=|WITHIN=|NOEFFECT|WEIGHT=|DEGREE=|MDEGREE=|STANDARDIZE=|BASIS=|KNOTMETHOD="},{"StatementOptionName":"PERIOD=","StatementOptionHelp":{"#cdata":"[For the LAG effect-type only]\n          \n[Syntax: PERIOD=variable] \n          \nSpecifies the period variable of the LAG design. The number of periods is the number \nof unique formatted values of the PERIOD= variable, and the ordering of the period is \nformed by sorting these formatted values in ascending order. You must specify a PERIOD= \nvariable."},"StatementOptionType":"V"},{"StatementOptionName":"WITHIN=","StatementOptionHelp":{"#cdata":"[For the LAG effect-type only] \n          \n[Syntax: WITHIN=(variables) | WITHIN=variable] \n\nSpecifies a variable (or a list of variables within parentheses) that defines the \nsubject grouping of the lag design. If there is only one WITHIN= variable, then the \nparentheses are not required. Each subject is defined by the unique set of formatted \nvalues of the variables in the WITHIN= list. The subjects are sorted in ascending \nlexicographic order. You must specify a WITHIN= variable."},"StatementOptionType":"V"},{"StatementOptionName":"DESIGNROLE=","StatementOptionHelp":{"#cdata":"[For the LAG effect-type only] \n          \n[Syntax: DESIGNROLE=variable] \n\nSpecifies a numeric variable that is used to subset observations into a fitting group \nin which the value of the DESIGNROW= variable is nonzero and a second group in which \nthe value of the specified variable is zero. The observations in the fitting group are \nused to form the LAG design matrix that is used in fitting the model. The LAG design \nthat corresponds to the non-fitting group is used when scoring observations in the \ninput data set that do not belong to the fitting group. This option is useful when \nyou want to obtain predicted values in an output data set for observations that are \nnot used in fitting the model. If you do not specify a DESIGNROLE= variable, then all \nobservations are assigned to the fitting group."},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"[For the LAG | COLLECTION | MULTIMEMBER | POLYNOMIAL |SPLINE effect-type] \n          \nRequests a table that shows the (1) lag design matrix of the lag effect, or (2) constituents \nof the collection effect, or (3) levels of the multimember effect, or (4) details of the specified \npolynomial, or (5) knot locations and the knots associated with each spline basis function."},"StatementOptionType":"S"},{"StatementOptionName":"NLAG=","StatementOptionHelp":{"#cdata":"[For the LAG effect-type only] \n          \n[Syntax: NLAG= n] \n\nSpecifies the number of lags. By default NLAG=1."},"StatementOptionType":"V"},{"StatementOptionName":"NOEFFECT","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \nSpecifies that, for observations with all missing levels of the multimember variables, \nthe values in the corresponding design matrix columns be set to zero."},"StatementOptionType":"S"},{"StatementOptionName":"STDIZE","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \nSpecifies that for each observation, the entries in the design matrix that corresponds \nto the multimember effect be scaled to have a sum of one."},"StatementOptionType":"S"},{"StatementOptionName":"WEIGHT=","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \n[Syntax: WEIGHT=wght-list] \n\nSpecifies numeric variables used to weigh the contributions of each of the classification \neffects that define the constructed multimember effect. The number of variables in wght-list \nmust match the number of classification variables that define the effect."},"StatementOptionType":"V"},{"StatementOptionName":"DEGREE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL and SPLINE effect-type only] \n          \n[Syntax: DEGREE=n] \n\nSpecifies the (1) degree of the polynomial, or (2) degree of the spline transformation. \nThe degree must be a positive integer. The n degree is typically a small integer, such as \n1, 2, or 3. The default for polynomial effect is DEGREE=1, and DEGREE=3 for spline \ntransformation."},"StatementOptionType":"V"},{"StatementOptionName":"MDEGREE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: MDEGREE=n] \n\nSpecifies the maximum degree of any variable in a term of the polynomial. This degree \nmust be a positive integer. The default is the degree of the specified polynomial."},"StatementOptionType":"V"},{"StatementOptionName":"STANDARDIZE","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: STANDARDIZE <(centerscale-opts)> <= standardize-opt>] \n\nSpecifies that the variables that define the polynomial be standardized. By default, \nthe standardized variables receive prefix \"s_\" in the variable names. \n\nYou can use the following centerscale-opts to specify how the center and scale are estimated: \n\n  METHOD=MOMENTS \n  specifies that the center be estimated by the variable mean and the scale be estimated by the standard deviation. \n\n  METHOD=RANGE \n  specifies that the center be estimated by the midpoint of the variable range and the scale be estimated as half the variable range.\n\n  METHOD=WMOMENTS \n  is the same as METHOD=MOMENTS except that weighted means and weighted standard deviations are used. \n\n  PREFIX=NONE | quoted-string \n  specifies the prefix that is appended to standardized variables when forming the term labels."},"StatementOptionType":"S|V","StatementOptionValues":{"@Value1":"CENTER","@Value2":"CENTERSCALE","@Value3":"NONE","@Value4":"SCALE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that variables be centered but not scaled.","@ToolTip2":"Specifies that variables be centered and scaled. This is the default if you do not  specify a standardization-opt.","@ToolTip3":"Specifies that no standardization be performed.","@ToolTip4":"Specifies that variables be scaled but not centered."}},{"StatementOptionName":"BASIS=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies a basis for the spline expansion."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BSPLINE","@Value2":"TPF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a B-spline basis for the spline expansion.","@ToolTip2":"Syntax: TPF(options)                                      Specifies a truncated power function basis for the spline expansion.   You can modify the number of columns when you request BASIS=TPF with the following options:     NOINT    excludes the intercept column.     NOPOWERS    excludes the intercept and polynomial columns."}},{"StatementOptionName":"KNOTMAX=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only]\n          \n[Syntax: KNOTMAX=value] \n\nSpecifies that, for each variable in the EFFECT statement, the right-side boundary \nknots be equally spaced starting at the maximum of the variable and ending at the \nspecified value. This option is ignored for variables whose maximum value is greater \nthan the specified value or if the DATABOUNDARY option is also specified."},"StatementOptionType":"V"},{"StatementOptionName":"KNOTMETHOD=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies how to construct the knots for spline effects."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EQUAL","@Value2":"LIST","@Value3":"LISTWITHBOUNDARY","@Value4":"MULTISCALE","@Value5":"PERCENTILES","@Value6":"RANGEFRACTIONS"},"StatementOptionToolTips":{"@ToolTip1":"Syntax: EQUAL<(n)>               Specifies that n equally spaced knots be positioned between the extremes of the data.  The default is n=3. For a B-spline basis, any needed boundary knots continue to be  equally spaced unless the DATABOUNDARY option has also been specified. KNOTMETHOD=EQUAL  is the default if no knot-method is specified.","@ToolTip2":"Syntax: LIST(number-list)                                      Specifies the list of internal knots to be used in forming the spline basis columns.  For a B-spline basis, the data extremes are used as boundary knots.","@ToolTip3":"Syntax: LISTWITHBOUNDARY(number-list)                                      Specifies the list of all knots that are used in forming the spline basis columns.","@ToolTip4":"Syntax: MULTISCALE<(multiscale-options)>                                      Specifies that multiple B-spline bases be generated, corresponding to sets with an  increasing number of internal knots.   You can control which scales are included with the following multiscale-options:     STARTSCALE=n    specifies the start scale, where n is a positive integer. The default is STARTSCALE=0.     ENDSCALE=n    specifies the end scale, where n is a positive integer. The default is ENDSCALE=7.","@ToolTip5":"Syntax: PERCENTILES(n)                                      Requests that internal knots be placed at n equally spaced percentiles of the variable  or variables named in the EFFECT statement.","@ToolTip6":"Syntax: RANGEFRACTIONS(fraction-list)                                      Requests that internal knots be placed at each fraction of the ranges of the variables  in the EFFECT statement."}},{"StatementOptionName":"KNOTMIN=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \n[Syntax: KNOTMIN=value] \n\nSpecifies that for each variable in the EFFECT statement, the left-side boundary knots be \nequally spaced starting at the specified value and ending at the minimum of the variable. \nThis option is ignored for variables whose minimum value is less than the specified value \nor if the DATABOUNDARY option is also specified."},"StatementOptionType":"V"}]}},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL dependent = <effects> / <options> ; \n\nThe MODEL statement names the dependent variable and the covariate effects, including covariates, \nmain effects, constructed effects, interactions, and nested effects. If you omit the explanatory \neffects, PROC QUANTSELECT fits an intercept-only model. \n\nAfter the keyword MODEL, specify the dependent (response) variable, followed by an equal sign, \nfollowed by the explanatory effects."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CLB","StatementOptionHelp":{"#cdata":"Requests the 100(1 - \u03b1)% upper and lower confidence limits for the parameter estimates. By default, \nthe 95% limits are computed; you can use the ALPHA= option in the PROC HPQUANTSELECT statement to \nchange the \u03b1 level."},"StatementOptionType":"S"},{"StatementOptionName":"INCLUDE","StatementOptionHelp":{"#cdata":"Syntax: INCLUDE=n | INCLUDE=single-effect | INCLUDE=(effects)  \n          \nForces effects to be included in all models. If you specify INCLUDE=n, then the first n effects that are \nlisted in the MODEL statement are included in all models. If you specify INCLUDE=single-effect or if you \nspecify a list of effects within parentheses, then the specified effects are forced into all models. The \neffects that you specify in the INCLUDE= option must be explanatory effects that are defined in the MODEL \nstatement."},"StatementOptionType":"V"},{"StatementOptionName":"NOINT","StatementOptionHelp":{"#cdata":"Suppresses the intercept term that is otherwise included in the model."},"StatementOptionType":"S"},{"StatementOptionName":"ORDERSELECT","StatementOptionHelp":{"#cdata":"Specifies that, for the selected model, effects be displayed in the order in which they first entered \nthe model. If you do not specify this option, then effects in the selected model are displayed in \nthe order in which they appear in the MODEL statement."},"StatementOptionType":"S"},{"StatementOptionName":"QUANTILES=","StatementOptionHelp":{"#cdata":"Syntax: QUANTILES=number-list | QUANTILE=number-list  \n          \nSpecifies the quantile levels for the quantile regression. You can specify any number of quantile \nlevels in (0, 1). If you do not specify this option, the HPQUANTSELECT procedure performs median \nregression effect selection that corresponds to QUANTILE=0.5."},"StatementOptionType":"V"},{"StatementOptionName":"SPARSITY","StatementOptionHelp":{"#cdata":"Syntax: SPARSITY(<BF | HS> <IID>) \n          \nSpecifies the suboptions for estimating the sparsity function. You can specify the Bofinger method \nby using the BF suboption or the Hall-Sheather method by using the HS suboption. By default, the \nHall-Sheather method is used. You can also specify the IID suboption to assume that the quantile \nregression errors satisfy the independently and identically distributed (iid) assumption."},"StatementOptionType":"S","SubOptionsKeywords":"BF|HS|IID"},{"StatementOptionName":"START=","StatementOptionHelp":{"#cdata":"Syntax: START=n | START=single-effect | START=(effects)  \n          \nBegins the effect-selection process in the forward and stepwise selection methods from the initial model \nthat you designate. If you specify START=n, then the starting model consists of the first n effects listed \nin the MODEL statement. If you specify START=single-effect or if you specify a list of effects within \nparentheses, then the starting model consists of these specified effects. The effects that you specify \nin the START= option must be explanatory effects defined in the MODEL statement. The START= option is not \navailable when you specify METHOD=BACKWARD in the SELECTION statement."},"StatementOptionType":"V"},{"StatementOptionName":"STB","StatementOptionHelp":{"#cdata":"Produces standardized regression coefficients. A standardized regression coefficient is computed by \ndividing a parameter estimate by the ratio of the sample standard deviation of the dependent \nvariable to the sample standard deviation of the regressor."},"StatementOptionType":"S"},{"StatementOptionName":"TOL","StatementOptionHelp":{"#cdata":"Produces tolerance values for the estimates."},"StatementOptionType":"S"},{"StatementOptionName":"VIF","StatementOptionHelp":{"#cdata":"Produces variance inflation factors in the parameter estimates table. Variance inflation \nis the reciprocal of tolerance."},"StatementOptionType":"S"}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT <OUT=SAS-data-set><COPYVARS=(variables)><keyword <=name>>\u2026<keyword <=name>> ; \n\nThe OUTPUT statement creates a data set that contains observationwise statistics, which are computed \nafter the final selected model is fit. To avoid data duplication for large data sets, the variables \nin the input data set are not included in the output data set; however, variables that are specified \nin the ID statement or COPYVARS= option are included."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=SAS-data-set\n          \nSpecifies the new data set. By default, the procedure uses the DATAn convention to name the new data set."},"StatementOptionType":"V"},{"StatementOptionName":"COPYVAR=|COPYVARS=","StatementOptionHelp":{"#cdata":"Syntax: COPYVAR=variable | COPYVARS=(variables)  \n          \nTransfers one or more variables from the input data set to the output data set. Variables that you \nname in an ID statement are also copied from the input data set to the output data set."},"StatementOptionType":"V"},{"StatementOptionName":"LLCM","StatementOptionHelp":{"#cdata":"Syntax: LLCM <=name>\n          \nRequests the lower bound of a 100(1 - \u03b1)% confidence interval for the expected quantile of the \ndependent variable. The default variable name is LCLM."},"StatementOptionType":"S|V"},{"StatementOptionName":"PREDICTED|PRED|P","StatementOptionHelp":{"#cdata":"Syntax: PREDICTED|PRED|P <=name>\n          \nIncludes predicted values in the output data set. The prefix for the default name is p."},"StatementOptionType":"S|V"},{"StatementOptionName":"RESIDUAL|RES|R","StatementOptionHelp":{"#cdata":"Syntax: RESIDUAL|RES|R <=name> \n          \nRequests predicted values for the response variable. The default variable name is Pred. "},"StatementOptionType":"S|V"},{"StatementOptionName":"ROLE","StatementOptionHelp":{"#cdata":"Syntax: ROLE <=name>\n          \nRequests a numeric variable that indicates the role that each observation plays in fitting the model. \nThe default variable name is _ROLE_."},"StatementOptionType":"S|V"},{"StatementOptionName":"STDP","StatementOptionHelp":{"#cdata":"Syntax: STDP <=name>\n          \nRequests standard error of the mean predicted quantiles. The default variable name is STDP."},"StatementOptionType":"S|V"},{"StatementOptionName":"UCLM","StatementOptionHelp":{"#cdata":"Syntax: UCLM \n          \nRequests the upper bound of a 100(1 - \u03b1)% confidence interval for the expected quantile of the dependent \nvariable. The default variable name is UCLM."},"StatementOptionType":"S|V"}]}},{"StatementName":"PARTITION","StatementHelp":{"#cdata":"Syntax: PARTITION <option> ;\n      \nThe PARTITION statement specifies how observations in the input data set are logically partitioned \ninto disjoint subsets for model training, validation, and testing. Either you can designate a variable \nin the input data set and a set of formatted values of that variable to determine the role of each \nobservation, or you can specify proportions to use for random assignment of observations for each role."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"FRACTION","StatementOptionHelp":{"#cdata":"Syntax: FRACTION(<TEST=fraction> <VALIDATE=fraction>)\n\nRandomly assigns the specified proportions of observations in the input data set to testing, validation, \nand training roles. You specify the proportions for testing and validation by using the TEST= and VALIDATE= \nsuboptions. If you specify both the TEST= and VALIDATE= suboptions, then the sum of the specified fractions \nmust be less than 1 and the remaining fraction of the observations are assigned to the training role."},"StatementOptionType":"S","SubOptionsKeywords":"TEST=|VALIDATE="},{"StatementOptionName":"ROLEVAR=|ROLE=","StatementOptionHelp":{"#cdata":"Syntax: ROLEVAR= | ROLE=variable(<TEST='value'> <TRAIN='value'> <VALIDATE='value'>)\n          \nNames the variable in the input data set whose values are used to assign roles to each observation. \nUse the TEST=, TRAIN=, and VALIDATE= suboptions to specify the formatted values of this variable that \nare used to assign observation roles are specified in the TEST=, TRAIN=, and VALIDATE= suboptions. \nIf you do not specify the TRAIN= suboption, then all observations whose roles are not determined by \nthe TEST= and VALIDATE= suboptions are assigned to training."},"StatementOptionType":"V","SubOptionsKeywords":"TEST=|TRAIN=|VALIDATE="}]}},{"StatementName":"PERFORMANCE","StatementHelp":{"#cdata":"Syntax: PERFORMANCE < performance-options > ;\n      \nThe PERFORMANCE statement defines performance parameters for multithreaded and distributed computing, \npasses variables about the distributed computing environment, and requests detailed results about the\nperformance characteristics of a SAS high-performance analytical procedure. \n\nYou can also use the PERFORMANCE statement to control whether a SAS high-performance analytical procedure \nexecutes in single-machine or distributed mode."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COMMIT=","StatementOptionHelp":{"#cdata":"Syntax: COMMIT=n\n          \nRequests that the High-Performance Analytics procedure write periodic updates to the \nSAS Log when observations are sent from the client to the appliance for distributed \nprocessing.\n\nHigh-Performance Analytics procedures do not have to use input data that are stored \nin the appliance. You can perform distributed computations regardless of the origin \nor format of the input data, provided the data are in a format that can be read by \nthe SAS System (for example, because a SAS/ACCESS engine is available)."},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"Requests a table that shows a timing breakdown of the procedure steps."},"StatementOptionType":"S"},{"StatementOptionName":"GRIDHOST=|HOST=","StatementOptionHelp":{"#cdata":"Syntax: GRIDHOST=\"name\" \nHOST=\"name\"\n\nSpecifies the name of the appliance host in single or double quotation marks. If this option is specified, \nit overrides the value of the GRIDHOST environment variable."},"StatementOptionType":"V"},{"StatementOptionName":"GRIDMODE=|MODE=","StatementOptionHelp":{"#cdata":"Syntax: GRIDMODE=SYM | ASYM \nSyntax: MODE=SYM | ASYM\n\nIs a deprecated option that specifies whether to run the high-performance analytical procedure in \nsymmetric (SYM) mode or asymmetric (ASYM) mode. This option overrides the GRIDMODE environment variable."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"SYM","@Value2":"ASYM"},"StatementOptionToolTips":{"@ToolTip1":"Specifies to run the high-performance analytical procedure in symmetric (SYM) mode","@ToolTip2":"Specifies to run the high-performance analytical procedure in asymmetric (ASYM) mode."}},{"StatementOptionName":"GRIDTIMEOUT=|TIMEOUT=","StatementOptionHelp":{"#cdata":"Syntax: GRIDTIMEOUT=s \nSyntax: TIMEOUT=s\n\nSpecifies the time-out in seconds for a high-performance analytical procedure to wait for a connection \nto the appliance and establish a connection back to the client. The default is 120 seconds. If jobs are \nsubmitted to the appliance through workload management tools that might suspend access to the appliance \nfor a longer period, you might want to increase the time-out value."},"StatementOptionType":"V"},{"StatementOptionName":"INSTALL=|INSTALLLOC=","StatementOptionHelp":{"#cdata":"Syntax: INSTALL=\"name\" \nSyntax: INSTALLLOC=\"name\"\n\nSpecifies the directory in which the shared libraries for the high-performance analytical procedure are \ninstalled on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC environment variable."},"StatementOptionType":"V"},{"StatementOptionName":"LASRSERVER=|LASR=","StatementOptionHelp":{"#cdata":"Syntax: LASRSERVER=\"path\" \nSyntax: LASR=\"path\"\n\nSpecifies the fully qualified path to the description file of a SAS LASR Analytic Server instance. \nIf the input data set is held in memory by this LASR Analytic Server instance, then the procedure \nruns alongside LASR. This option is not needed to run alongside LASR if the DATA= specification of \nthe input data uses a libref that is associated with a LASR Analytic Server instance."},"StatementOptionType":"V"},{"StatementOptionName":"NODES=|NNODES=","StatementOptionHelp":{"#cdata":"Syntax: NODES=ALL | n \nSyntax: NNODES=ALL | n\n\nSpecifies the number of nodes in the distributed computing environment, provided that the data are not \nprocessed alongside the database.\n\nSpecifying NODES=0 indicates that you want to process the data in single-machine mode on the client machine. \nIf the input data are not alongside the database, this is the default. The high-performance analytical \nprocedures then perform the analysis on the client."},"StatementOptionType":"V"},{"StatementOptionName":"NTHREADS=|THREADS=","StatementOptionHelp":{"#cdata":"Syntax: NTHREADS=n \nSyntax: THREADS=n\n\nSpecifies the number of threads for analytic computations and overrides the SAS system option THREADS | NOTHREADS. \nIf you do not specify the NTHREADS= option, the number of threads is determined based on the number of CPUs on the \nhost on which the analytic computations execute. The algorithm by which a CPU count is converted to a thread count \nis specific to the high-performance analytical procedure. Most procedures create one thread per CPU for the analytic \ncomputations.\n\nBy default, high-performance analytical procedures run in multiple concurrent threads unless multithreading has been \nturned off by the NOTHREADS system option or you force single-threaded execution by specifying NTHREADS=1. The largest \nnumber that can be specified for n is 256. Individual high-performance analytical procedures can impose more stringent \nlimits if called for by algorithmic considerations.\n\nNote: The SAS system options THREADS | NOTHREADS apply to the client machine on which the SAS high-performance analytical \nprocedures execute. They do not apply to the compute nodes in a distributed environment."},"StatementOptionType":"V"}]}},{"StatementName":"SELECTION","StatementHelp":{"#cdata":"Syntax: SELECTION <options>; \n\nThe SELECTION statement performs variable selection."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"NONE","StatementOptionHelp":{"#cdata":"Sspecifies no model selection."},"StatementOptionType":"S"},{"StatementOptionName":"FORWARD","StatementOptionHelp":{"#cdata":"Specifies the forward selection method, which starts with no effects in the model and adds effects."},"StatementOptionType":"S"},{"StatementOptionName":"BACKWARD","StatementOptionHelp":{"#cdata":"Specifies the backward elimination method, which starts with all effects in the model and deletes effects."},"StatementOptionType":"S"},{"StatementOptionName":"STEPWISE","StatementOptionHelp":{"#cdata":"Specifies the stepwise regression method, which is similar to the forward selection method except \nthat effects already in the model do not necessarily stay there."},"StatementOptionType":"S"},{"StatementOptionName":"TEST=","StatementOptionHelp":{"#cdata":"Syntax: TEST=value \n          \nSpecifies a method to compute significance levels for the selection process."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"LR1","@Value2":"LR2","@Value3":"WALD"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a Likelihood ratio test Type I method.","@ToolTip2":"Specifies a Likelihood ratio test Type I method.","@ToolTip3":"Specifies a Wald score test method."}}]}},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable ; \n\nThe variable in the WEIGHT statement is used as a weight to perform a weighted analysis of the data. \nObservations that have nonpositive or missing weights are not included in the analysis. If you do not \nuse a WEIGHT statement, all observations that are used in the analysis are assigned a weight of 1."},"StatementOptions":null}]}}}