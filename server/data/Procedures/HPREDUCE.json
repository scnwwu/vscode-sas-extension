{"Procedure":{"Name":"HPREDUCE","ProductGroup":"Enterprise Miner/HPA","#comment":{},"ProcedureHelp":{"#cdata":"Syntax: PROC HPREDUCE < options > ;\n    CLASS variable < (options) >... < variable < (options) > > < / global-options > ;\n    REDUCE UNSUPERVISED effects < / reduce-options > ;\n    REDUCE SUPERVISED response ... < response > = effects < / reduce-options > ;\n    PERFORMANCE performance-options ;\n\nThe HPREDUCE procedure is a high-performance procedure that performs both supervised and unsupervised\nvariable selection on the SAS appliance. With the HPREDUCE procedure you can read data in distributed\nform and perform variable selection in parallel in symmetric multiprocessing (SMP) or massively parallel\nprocessing (MPP) mode. \n\nThe HPREDUCE procedure performs unsupervised variable selection by identifying a set of variables that\njointly explain the maximum amount of data variance. Unlike principal component analysis (PCA), which\nreduces dimensionality by generating a set of new variables (variable extraction), the HPREDUCE procedure\nreduces dimensionality by selecting a subset of the original variables (variable selection). Thus, this technique\npreserves model interpretation.\n\nThe HPREDUCE procedure performs supervised variable selection by identifying a set of variables that\njointly explain the maximum amount of variance contained in the response variables. The HPREDUCE\nprocedure supports variable selection in both the regression setting and the classification (categorization)\nsetting. \n\nThe HPREDUCE procedure can also be used to output the sums of squares and crossproducts (SSCP) matrix,\nthe correlation (CORR) matrix, or the covariance (COV) matrix for exploratory data analysis and direct\ninput to statistical procedures that accept that form. This step saves time by eliminating redundant matrix\naggregations."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"CORR","ProcedureOptionHelp":{"#cdata":"Selects variables based on the correlation matrix."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"COV","ProcedureOptionHelp":{"#cdata":"Selects variables based on the covariance matrix."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=SAS-data-set\n      \nNames the input SAS data set to be used by PROC HPREDUCE. The default is the most recently\ncreated data set. If the procedure executes in MPP mode, the input data are distributed to \nmemory on the appliance nodes and analyzed in parallel, unless the data are already distributed \nin the appliance database. When data are already distributed, the procedure reads the data \nalongside the distributed database."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"FMTLIBXML=","ProcedureOptionHelp":{"#cdata":"Syntax: FMTLIBXML=file-ref \n      \nSpecifies the file reference for the XML stream that contains the user-defined format \ndefinitions. Userdefined formats are handled differently in a distributed computing \nenvironment compared to other SAS products. "},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NAMELEN=","ProcedureOptionHelp":{"#cdata":"Syntax: NAMELEN=number\n      \nSpecifies the length to which long effect names are shortened (20 <= number <= 128). \n\nThe default and minimum value is 20."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOCLPRINT","ProcedureOptionHelp":{"#cdata":"Syntax: NOCLPRINT< =number > \n      \nSuppresses the display of the \u201cClass Level Information\u201d table if you do not specify \nnumber. If you specify number, the values of the classification variables are displayed \nfor only those variables whose number of levels is less than number. Specifying a number \nhelps to reduce the size of the \u201cClass Level Information\u201d table if some classification \nvariables have a large number of levels."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the generation of ODS output."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"NOSUMPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the generation of the \u201cSelection Summary\u201d table."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"OUTCP=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTCP=SAS-data-set< /LIST< (EPS = number) > >\n      \nCreates both a data set that contains a symmetric matrix that depicts the relationships among variables\nand also a set of statistics about the input data set and variables. Depending on the Pearson correlation\nstatistics option specified in the PROC HPREDUCE statement, the symmetric matrix can be a correlation\n(CORR) matrix, a covariance (COV) matrix, or a sums of squares and crossproducts (SSCP)\nmatrix.\n\nWhen the LIST option is specified, the symmetric matrix is output in the list-of-list (LIL) format."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SSCP","ProcedureOptionHelp":{"#cdata":"Selects variables based on the sums of squares and crossproducts matrix."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"TECHNIQUE=|TECH=","ProcedureOptionHelp":{"#cdata":"[Syntax: TECHNIQUE= | TECH=name] \n      \nSpecifies the variable selection technique. You can choose from the following techniques by specifying\nthe appropriate keyword:\n\n  VARIANCEANALYSIS | VAR performs variance analysis for variable selection.\n  DISCRIMINANTANALYSIS | DSC performs discriminant analysis for variable selection.\n\nThe default value is TECHNIQUE=VAR.\n\nVariance analysis can be used for both supervised and unsupervised variable selection. Discriminant\nanalysis can only be used for supervised variable selection with one classification variable as the\nresponse."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"VARIANCEANALYSIS|VAR","@Value2":"DISCRIMINANTANALYSIS|DSC"},"ProcedureOptionToolTips":{"@ToolTip1":"Performs variance analysis for variable selection.","@ToolTip2":"Performs discriminant analysis for variable selection."}},{"ProcedureOptionName":"TIMEPRINT","ProcedureOptionHelp":{"#cdata":"Prints the time (in seconds) used by each variable selection iteration in the \u201cSelection Summary\u201d\ntable. If this option does not appear in the PROC HPREDUCE statement, the time information is not\nprinted."},"ProcedureOptionType":"S|V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable < (options) >... < variable < (options) >> < / global-options > ;\n      \nThe CLASS statement names the classification variables to be used as explanatory variables in the analysis.\nThe CLASS statement must precede the REDUCE statement. \n\nThe HPREDUCE procedure does not support the SPLIT option in the CLASS statement. For CLASS variable\nparameterization, the HPREDUCE procedure only support the GLM method."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sorting order of the classification variable. If both the DESCENDING and ORDER=\noptions are specified, High-Performance Analytics procedures order the categories according to the\nORDER= option and then reverse that order."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Specifies the sorting order for the levels of classification variables. This ordering \ndetermines which parameters in the model correspond to each level in the data. \n\nBy default, ORDER=FORMATTED."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FORMATTED","@Value3":"FREQ","@Value4":"FREQDATA","@Value5":"FREQFORMATTED","@Value6":"FREQINTERNAL","@Value7":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Levels sorted by the order of appearance in the input data set FORMATTED External  formatted values, except for numeric.","@ToolTip2":"Levels sorted by the external formatted values, except for numeric variables with  no explicit format, which are sorted by their unformatted (internal) values","@ToolTip3":"Levels sorted by the descending frequency count (levels with more observations come  earlier in the order)","@ToolTip4":"Levels sorted by the order of descending frequency count, and within counts by order  of appearance in the input data set when counts are tied","@ToolTip5":"Levels sorted by the order of descending frequency count, and within counts by formatted  value when counts are tied","@ToolTip6":"Levels sorted by the Order of descending frequency count, and within counts by unformatted  (internal) value when counts are tied","@ToolTip7":"Levels sorted by the unformatted value"}},{"StatementOptionName":"REF=|REFERENCE=","StatementOptionHelp":{"#cdata":"[Syntax: REF=\u2019level\u2019 | keyword] \n          \nSpecifies the reference level for PARAM=REFERENCE. For an individual (but not a global) variable\nREF= option, you can specify the level of the variable to use as the reference level. Specify the\nformatted value of the variable if a format is assigned. For a REF= option or global-option, you can\nuse one of the following keywords. The default is REF=LAST."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<'level'>","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"For an individual (but not a global) variable REF= option, you can specify the level of the variable  to use as the reference level.","@ToolTip2":"Designates the first-ordered level as reference.","@ToolTip3":"Designates the last-ordered level as reference."}},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (\u201c.\u201d, \u201c.A\u201d, . . . , \u201c.Z\u201d for numeric variables and blanks for character variables) as\nvalid values for the CLASS variable.\n\nIf you do not specify the MISSING option, observations with missing values for CLASS variables are\nremoved from the analysis, even if the CLASS variables are not used in the model formulation."},"StatementOptionType":"S"},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"Specifies the parameterization method for the classification variable or variables. \n          \nThe GLM parameterization is the default."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"GLM","@Value2":"REFERENCE"},"StatementOptionToolTips":{"@ToolTip1":"Less-than-full-rank reference cell coding. This parameterization is used in, for example, the GLM, MIXED, and GLIMMIX procedures in SAS/STAT.","@ToolTip2":"Reference cell encoding. You can choose the reference value with a specific variable option in the CLASS statement, or designate the first or last ordered value with a globaloption. The default is REF=LAST."}},{"StatementOptionName":"TRUNCATE","StatementOptionHelp":{"#cdata":"Syntax: TRUNCATE< =n > \n          \nSpecifies the truncation width of formatted values of CLASS variables when the optional n is specified.\nIf n is not specified, the TRUNCATE option requests that classification levels should be determined\nusing no more than the first 16 characters of the formatted values of CLASS variables. When formatted\nvalues are longer than 16 characters, you can use this option in order to revert to the levels as\ndetermined in releases prior to SAS 9."},"StatementOptionType":"S|V"}]}},{"StatementName":"REDUCE","StatementHelp":{"#cdata":"Syntax: REDUCE UNSUPERVISED effects < / reduce-options > ;\n  REDUCE SUPERVISED response ... < response > = effects < / reduce-options > ; \n  \nPROC HPREDUCE can be used for both supervised and unsupervised variable selection. In \nunsupervised case, the REDUCE statement specifies the effects to be considered in the \nvariable selection process. An effect can be an original variable in the input data set \nor a variable constructed from the original variables. In the supervised case, besides \nthe effects, the response variables also needs to be specified. A response variable can \nbe an original variable in the input data set or a variable constructed from the original \nvariables. The HPREDUCE procedure allows users to specify more than one response variables. \n\nThe following reduce-options control the number of variables to be selected:\n\n    MAXSTEPS= Specifies the maximal number steps to take for variable selection\n    MAXEFFECTS= Specifies the number of effects to select\n    VARIANCEXPLAINED | VAREXP= Specifies the fraction of the total variance to be explained\n    MINVARIANCEINCREMENT | VARINC= Specifies minimal increment of explained variance (in\n      fraction of the total variance)"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"UNSUPERVISED","StatementOptionHelp":{"#cdata":"In unsupervised case, the REDUCE statement specifies the effects to be considered in the \nvariable selection process. An effect can be an original variable in the input data set \nor a variable constructed from the original variables."},"StatementOptionType":"S"},{"StatementOptionName":"SUPERVISED","StatementOptionHelp":{"#cdata":"In the supervised case, besides the effects, the response variables also needs to be \nspecified. A response variable can be an original variable in the input data set or \na variable constructed from the original variables."},"StatementOptionType":"S"},{"StatementOptionName":"MAXSTEPS=","StatementOptionHelp":{"#cdata":"Syntax: MAXSTEPS=n \n          \nSpecifies the maximum number of steps to take for variable selection; the number must be greater \nthan or equal to 1. \n\nStops PROC HPREDUCE after it runs n steps."},"StatementOptionType":"V"},{"StatementOptionName":"MAXEFFECTS=","StatementOptionHelp":{"#cdata":"Syntax: MAXEFFECTS=n \n          \nSpecifies the number of effects to select; the number must be greater than or equal to 1. \n\nStops PROC HPREDUCE after n effects have been selected. Since individual levels of one classification\nvariable can be selected in different steps of the variable selection process, PROC HPREDUCE might\ntake more than n steps to select n effects."},"StatementOptionType":"V"},{"StatementOptionName":"VARIANCEEXPLAINED=|VAREXP=","StatementOptionHelp":{"#cdata":"Syntax: VARIANCEEXPLAINED=fraction | VAREXP=fraction \n          \nSpecifies the fraction of the total variance to be explained; the value must be between 0 and 1.\n\nStops PROC HPREDUCE when the fraction of the total variance can be explained by the selected\nvariables."},"StatementOptionType":"V"},{"StatementOptionName":"MINVARIANCEINCREMENT=|VARINC=","StatementOptionHelp":{"#cdata":"Syntax: MINVARIANCEINCREMENT=fraction | VARINC=fraction \n          \nSpecifies the minimum increment of explained variance (in a fraction of the total variance); \nthe value must be between 0 and 1. \n\nStops PROC HPREDUCE when the minimum increment of the explained variance is less than fraction\nof the total variance."},"StatementOptionType":"V"}]}},{"StatementName":"PERFORMANCE","StatementHelp":{"#cdata":"Syntax: PERFORMANCE < performance-options > ;\n      \nThe PERFORMANCE statement defines performance parameters for multithreaded and distributed computing,\npasses variables about the distributed computing environment, and requests detailed results about the\nperformance characteristics of the HPREDUCE procedure. \n\nWith the PERFORMANCE statement, you can also control whether the HPREDUCE procedure executes in\nSMP or MPP mode."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COMMIT=","StatementOptionHelp":{"#cdata":"Syntax: COMMIT=n\n          \nRequests that the High-Performance Analytics procedure write periodic updates to the \nSAS Log when observations are sent from the client to the appliance for distributed \nprocessing.\n\nHigh-Performance Analytics procedures do not have to use input data that are stored \nin the appliance. You can perform distributed computations regardless of the origin \nor format of the input data, provided the data are in a format that can be read by \nthe SAS System (for example, because a SAS/ACCESS engine is available)."},"StatementOptionType":"V"},{"StatementOptionName":"CPUCOUNT=","StatementOptionHelp":{"#cdata":"Syntax: CPUCOUNT=ACTUAL | num\n          \nSpecifies how many processors the procedure assumes are available on each host in the \ncomputing environment. num can be any integer from 1 to 256.\n\nCPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number\ncan be less than the physical number of CPUs if the SAS process has been restricted by system\nadministration tools. Setting CPUCOUNT= to a number greater than the actual number of available\nCPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system\noption.\n\nIf a High-Performance Analytics procedure executes in SMP mode, this option refers to the client\nmachine of the SAS session. In MPP mode, this option applies to the nodes on the appliance."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACTUAL","@Value2":"<num>"},"StatementOptionToolTips":{"@ToolTip1":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","@ToolTip2":"Replace <num> with an actual number. Setting CPUCOUNT= to a number  greater than the actual number of available CPUs might result in reduced performance. This  option overrides the CPUCOUNT= SAS system option."}},{"StatementOptionName":"DATASERVER=","StatementOptionHelp":{"#cdata":"Syntax: DATASERVER=\u201cname\u201d\n          \nSpecifies the name of the server on Teradata systems as defined through the hosts file \nand as used in the LIBNAME statement for Teradata. For example, if the hosts file defines\n\n    myservercop1 33.44.55.66\n    \nas the server for Teradata, then a LIBNAME specification would be as follows:\n\n    libname TDLib teradata server=myserver user= password= database= ;\n    \nA PERFORMANCE statement to induce running alongside the Teradata server would specify the\nfollowing:\n\n    performance dataserver=\"myserver\";\n    \nIf the DATASERVER= option is specified, it overrides the GRIDDATASERVER environment \nvariable."},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"Requests a table that shows a timing breakdown of the procedure steps."},"StatementOptionType":"V"},{"StatementOptionName":"TIMEOUT=","StatementOptionHelp":{"#cdata":"Syntax: TIMEOUT=s\n          \nSpecifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection\nto the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs\nare submitted to the appliance through workload management tools that might suspend access to the\nappliance for a longer period, you might want to increase the timeout value."},"StatementOptionType":"V"},{"StatementOptionName":"HOST=|GRIDHOST=","StatementOptionHelp":{"#cdata":"Syntax: HOST=\u201cname\u201d | GRIDHOST=\u201cname\u201d \n          \nSpecifies the name of the appliance host in single or double quotes. If the HOST= option \nis specified, it overrides the value of the GRIDHOST environment variable."},"StatementOptionType":"V"},{"StatementOptionName":"INSTALL=|INSTALLLOC=","StatementOptionHelp":{"#cdata":"Syntax: INSTALL=\u201cname\u201d | INSTALLLOC=\u201cname\u201d \n          \nSpecifies the directory in which the High-Performance Analytics shared libraries are \ninstalled on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC \nenvironment variable."},"StatementOptionType":"V"},{"StatementOptionName":"NODES=|NNODES=","StatementOptionHelp":{"#cdata":"Syntax: NODES=n | NNODES=n\n          \nSpecifies the number of nodes in the distributed computing environment, provided that \nthe data are not processed alongside the database.\n\nIf you specify NODES=0, you indicate that you want to process the data in SMP mode on \nthe client machine. If the input data are not alongside the database, this is the default. \nThe High-Performance Analytics procedures then perform the analysis mutlithreaded on the client."},"StatementOptionType":"V"},{"StatementOptionName":"NTHREADS=","StatementOptionHelp":{"#cdata":"Syntax: NTHREADS=n \n          \nSpecifies the number of threads for analytic computations and overrides the SAS system option\nTHREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads\nare determined based on the number of CPUs on the host on which the analytic computations execute.\nThe algorithm by which a CPU count is converted to a thread count is specific to the High-\nPerformance Analytics procedure. Most procedures create one thread per CPU for the analytic computations.\nBy default, High-Performance Analytics procedures execute in multiple concurrent threads unless\nturned off by the NOTHREADS system option or you force single-threaded execution with\nNTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance\nAnalytics procedures can impose more stringent limits if called for by algorithmic considerations.\nYou can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE\nstatement.\n\nNOTE: The SAS system options THREADS | NOTHREADS apply to the client machine on which\nthe SAS High-Performance Analytics procedures execute. They do not apply to the compute nodes\nin a distributed environment."},"StatementOptionType":"V"}]}}]}}}