{"Procedure":{"Name":"HPREG","ProductGroup":"SAS/STAT/HPA","#comment":{},"ProcedureHelp":{"#cdata":"Syntax: PROC HPREG < options > ;\n    BY variables ;\n    CODE < options > ;\n    CLASS variable < (options) >... < variable < (options) >> < / global-options > ;\n    MODEL dependent = < effects > < / model-options > ;\n    OUTPUT <OUT=SAS-data-set >\n      < keyword < =name > >...\n      < keyword < =name > > < / options > ;\n    PARTITION < partition-options > ;\n    PERFORMANCE performance-options ;\n    SELECTION selection-options ;\n    FREQ variable ;\n    ID variables ;\n    WEIGHT variable ;\n\nThe HPREG procedure is a high-performance procedure that fits and performs model selection for ordinary\nlinear least squares models. The models supported are standard independently and identically distributed\ngeneral linear models, which can contain main effects that consist of both continuous and classification \nvariables and interaction effects of these variables. The procedure offers extensive capabilities for \ncustomizing the model selection with a wide variety of selection and stopping criteria, from traditional \nand computationally efficient significance-level-based criteria to more computationally intensive \nvalidation-based criteria. PROC HPREG also provides a variety of regression diagnostics that are conditional \non the selected model. \n\nWith the HPREG procedure you can read and write data in distributed form and perform analyses in parallel\nin symmetric multiprocessing (SMP) or massively parallel processing (MPP) mode."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ALPHA=","ProcedureOptionHelp":{"#cdata":"Syntax: ALPHA=number \n      \nSets the significance level used for the construction of confidence intervals. The value \nmust be between 0 and 1; the default value of 0.05 results in 95% intervals. This option \naffects the OUTPUT statement keywords LCL, LCLM, UCL, and UCLM, and the CLB option in the \nMODEL statement."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=SAS-data-set\n      \nNames the input SAS data set to be used by PROC HPREG. The default is the most recently \ncreated data set. \n\nIf the procedure executes in MPP mode, the input data are distributed to memory on the \nappliance nodes and analyzed in parallel, unless the data are already distributed in the \nappliance database. In that case the procedure reads the data alongside the distributed \ndatabase."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"FMTLIBXML=","ProcedureOptionHelp":{"#cdata":"Syntax: FMTLIBXML=file-ref \n      \nSpecifies the file reference for the XML stream that contains the user-defined format \ndefinitions. Userdefined formats are handled differently in a distributed computing \nenvironment compared to other SAS products. "},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NAMELEN=","ProcedureOptionHelp":{"#cdata":"Syntax: NAMELEN=number\n      \nSpecifies the length to which long effect names are shortened. The default and minimum value is 20."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOCLPRINT","ProcedureOptionHelp":{"#cdata":"Syntax: NOCLPRINT< =number > \n      \nSuppresses the display of the \u201cClass Level Information\u201d table if you do not specify \nnumber. If you specify number, the values of the classification variables are displayed \nfor only those variables whose number of levels is less than number. Specifying a number \nhelps to reduce the size of the \u201cClass Level Information\u201d table if some classification \nvariables have a large number of levels."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the generation of ODS output."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"SEED=","ProcedureOptionHelp":{"#cdata":"Syntax: SEED=number \n      \nSpecifies an integer used to start the pseudorandom number generator for random partitioning \nof data for training, testing, and validation. If you do not specify a seed, or if you specify \na value less than or equal to 0, the seed is generated from reading the time of day from the \ncomputer\u2019s clock."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables ; \n      \nYou can specify a BY statement with PROC HPREG to obtain separate analyses of observations in groups\nthat are defined by the BY variables. When a BY statement appears, the procedure expects the input data\nset to be sorted in order of the BY variables. If you specify more than one BY statement, only the last one\nspecified is used. \n\nIf your input data set is not sorted in ascending order, use one of the following alternatives:\n  \u2022 Sort the data by using the SORT procedure with a similar BY statement.\n  \u2022 Specify the NOTSORTED or DESCENDING option in the BY statement for the HPREG procedure.\n\n    The NOTSORTED option does not mean that the data are unsorted but rather that the data are arranged\n    in groups (according to values of the BY variables) and that these groups are not necessarily in\n    alphabetical or increasing numeric order.\n  \u2022 Create an index on the BY variables by using the DATASETS procedure (in Base SAS software).\n\nBY statement processing is not supported when the HPREG procedure runs alongside the database or\nalongside the Hadoop Distributed File System (HDFS). These modes are used if the input data are stored in a\ndatabase or HDFS and the grid host is the appliance that houses the data."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING","StatementOptionHelp":{"#cdata":"Specifies that the observations are sorted in descending order by the variable that immediately \nfollows the word DESCENDING in the BY statement."},"StatementOptionType":"S"},{"StatementOptionName":"NOTSORTED","StatementOptionHelp":{"#cdata":"Specifies that observations are not necessarily sorted in alphabetic or numeric order."},"StatementOptionType":"S"}]}},{"StatementName":"CODE","StatementHelp":{"#cdata":"Syntax: CODE <option(s)> ; \n\nThe CODE statement enables you to write SAS DATA step code for computing predicted values of the fitted\nmodel either to a file or to a catalog entry. This code can then be included in a DATA step to score new data."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CATALOG=|CAT=","StatementOptionHelp":{"#cdata":"Syntax: CATALOG=library.catalog.entry.type\n  CAT=library.catalog.entry.type \n  \nSpecifies where to write the generated code in the form of library.catalog.entry.type. The compound\nname can have from one to four levels. The default library is determined by the USER= SAS system\noption, which by default is WORK. The default entry is SASCODE, and the default type is SOURCE."},"StatementOptionType":"V"},{"StatementOptionName":"DUMMIES","StatementOptionHelp":{"#cdata":"Specifies to keep dummy variables that represent the CLASS levels in the data set. The default\nis NODUMMIES, which specifies that dummy variables not be retained."},"StatementOptionType":"S"},{"StatementOptionName":"NODUMMIES","StatementOptionHelp":{"#cdata":"Specifies that dummy variables not be retained."},"StatementOptionType":"S"},{"StatementOptionName":"ERROR","StatementOptionHelp":{"#cdata":"Specifies to generate code to compute the error function. The default is NOERROR, which\nspecifies that the error function not be generated."},"StatementOptionType":"S"},{"StatementOptionName":"NOERROR","StatementOptionHelp":{"#cdata":"Specifies that the error function not be generated. "},"StatementOptionType":"S"},{"StatementOptionName":"FILE=","StatementOptionHelp":{"#cdata":"Syntax: FILE= filename \n          \nNames the external file that saves the generated code. When enclosed in a quoted string (for example,\nFILE=\"c:nmydirnscorecode.sas\"), this option specifies the path for writing the code to an external\nfile. You can also specify unquoted SAS filenames of no more than eight characters for filename. If\nthe filename is assigned as a fileref in a Base SAS FILENAME statement, the file specified in the\nFILENAME statement is opened. The special filerefs LOG and PRINT are always assigned. If the\nspecified filename is not an assigned fileref, the specified value for filename is concatenated with a .txt\nextension before the file is opened. For example, if FOO is not an assigned fileref, FILE=FOO causes\nFOO.txt to be opened. If filename has more than eight characters, an error message is printed."},"StatementOptionType":"V"},{"StatementOptionName":"FORMAT=","StatementOptionHelp":{"#cdata":"Syntax: FORMAT=format \n          \nSpecifies the format for the regression coefficients and other numerical values that do not have a format\nfrom the input data set. The default format is BEST20."},"StatementOptionType":"V"},{"StatementOptionName":"GROUP=","StatementOptionHelp":{"#cdata":"Syntax: GROUP=group-name \n          \nSpecifies the group identifier for group processing. The group-name should be a valid SAS name of no\nmore than 16 characters. It is used to construct array names and statement labels in the generated code."},"StatementOptionType":"V"},{"StatementOptionName":"IMPUTE","StatementOptionHelp":{"#cdata":"Imputes the predicted values according to an intercept-only model for observations with missing or\ninvalid covariate values. For a continuous response, the predicted value is the mean of the response\nvariable; for a categorical response, the predicted values are the proportions of the response categories.\nWhen the IMPUTE option is specified, the scoring code also creates a variable named _WARN_ that\ncontains one or more single-character codes that indicate problems in computing predicted values."},"StatementOptionType":"S"},{"StatementOptionName":"LINESIZE=","StatementOptionHelp":{"#cdata":"Syntax: LINESIZE=value | LS=value \n          \nSpecifies the line size for the generated code. The default is 72. The permissible range is 64 to 254."},"StatementOptionType":"V"},{"StatementOptionName":"LOOKUP=","StatementOptionHelp":{"#cdata":"Syntax: LOOKUP=lookup-method \n          \nSpecifies the algorithm for looking up CLASS levels. \n\nYou can specify the following lookup-methods:\nAUTO\n  selects the LINEAR algorithm if a CLASS variable has fewer than five categories; otherwise, the\n  BINARY algorithm is used. This is the default. \nBINARY\n  uses a binary search. This method is fast, but might produce incorrect results and the normalized\n  category values might contain characters that collate in different orders in ASCII and EBCDIC,\n  if you generate the code on an ASCII machine and execute the code on an EBCDIC machine or\n  vice versa.\nLINEAR\n  uses a linear search with IF statements that have categories in the order of the class levels. This\n  method is slow if there are many categories.\nSELECT\n  uses a SELECT statement.\n\nThe default is LOOKUP=AUTO."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTO","@Value2":"BINARY","@Value3":"LINEAR","@Value4":"SELECT"},"StatementOptionToolTips":{"@ToolTip1":"Selects the LINEAR algorithm if a CLASS variable has fewer than five categories; otherwise, the BINARY algorithm is used. This is the default.","@ToolTip2":"Uses a binary search. This method is fast, but might produce incorrect results and the normalized category values might contain characters that collate in different orders in ASCII and EBCDIC, if you generate the code on an ASCII machine and execute the code on an EBCDIC machine or vice versa.","@ToolTip3":"Uses a linear search with IF statements that have categories in the order of the class levels. This method is slow if there are many categories.","@ToolTip4":"Uses a SELECT statement."}},{"StatementOptionName":"RESIDUAL","StatementOptionHelp":{"#cdata":"Specifies to generate code to compute residual values. If you request code for residuals and\nthen score a data set that does not contain target values, the residuals will have missing values. The\ndefault is NORESIDUAL, which specifies that the code for residuals not be generated."},"StatementOptionType":"S"},{"StatementOptionName":"NORESIDUAL","StatementOptionHelp":{"#cdata":"Specifies that the code for residuals not be generated."},"StatementOptionType":"S"}]}},{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable < (options) >... < variable < (options) >> < / global-options > ;\n      \nThe CLASS statement names the classification variables to be used as explanatory \nvariables in the analysis. If a CLASS statement is specified, it must precede the \nMODEL statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sorting order of the classification variable. If both the DESCENDING and ORDER=\noptions are specified, High-Performance Analytics procedures order the categories according to the\nORDER= option and then reverse that order."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Specifies the sorting order for the levels of classification variables. This ordering \ndetermines which parameters in the model correspond to each level in the data. \n\nBy default, ORDER=FORMATTED."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FORMATTED","@Value3":"FREQ","@Value4":"FREQDATA","@Value5":"FREQFORMATTED","@Value6":"FREQINTERNAL","@Value7":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Levels sorted by the order of appearance in the input data set FORMATTED External  formatted values, except for numeric.","@ToolTip2":"Levels sorted by the external formatted values, except for numeric variables with  no explicit format, which are sorted by their unformatted (internal) values","@ToolTip3":"Levels sorted by the descending frequency count (levels with more observations come  earlier in the order)","@ToolTip4":"Levels sorted by the order of descending frequency count, and within counts by order  of appearance in the input data set when counts are tied","@ToolTip5":"Levels sorted by the order of descending frequency count, and within counts by formatted  value when counts are tied","@ToolTip6":"Levels sorted by the Order of descending frequency count, and within counts by unformatted  (internal) value when counts are tied","@ToolTip7":"Levels sorted by the unformatted value"}},{"StatementOptionName":"REF=|REFERENCE=","StatementOptionHelp":{"#cdata":"[Syntax: REF=\u2019level\u2019 | keyword] \n          \nSpecifies the reference level for PARAM=REFERENCE. For an individual (but not a global) variable\nREF= option, you can specify the level of the variable to use as the reference level. Specify the\nformatted value of the variable if a format is assigned. For a REF= option or global-option, you can\nuse one of the following keywords. The default is REF=LAST."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<'level'>","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"For an individual (but not a global) variable REF= option, you can specify the level of the variable  to use as the reference level.","@ToolTip2":"Designates the first-ordered level as reference.","@ToolTip3":"Designates the last-ordered level as reference."}},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"Requests that the columns of the design matrix corresponding to any effect containing a split \nclassification variable can be selected to enter or leave a model independently of the other design \ncolumns of that effect. This option is specific to the HPREG procedure."},"StatementOptionType":"S"},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (\u201c.\u201d, \u201c.A\u201d, . . . , \u201c.Z\u201d for numeric variables and blanks for character variables) as\nvalid values for the CLASS variable.\n\nIf you do not specify the MISSING option, observations with missing values for CLASS variables are\nremoved from the analysis, even if the CLASS variables are not used in the model formulation."},"StatementOptionType":"S"},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"Specifies the parameterization method for the classification variable or variables. \n          \nThe GLM parameterization is the default."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"GLM","@Value2":"REFERENCE"},"StatementOptionToolTips":{"@ToolTip1":"Less-than-full-rank reference cell coding. This parameterization is used in, for example, the GLM, MIXED, and GLIMMIX procedures in SAS/STAT.","@ToolTip2":"Reference cell encoding. You can choose the reference value with a specific variable option in the CLASS statement, or designate the first or last ordered value with a globaloption. The default is REF=LAST."}},{"StatementOptionName":"TRUNCATE","StatementOptionHelp":{"#cdata":"Syntax: TRUNCATE< =n > \n          \nSpecifies the truncation width of formatted values of CLASS variables when the optional n is specified.\nIf n is not specified, the TRUNCATE option requests that classification levels should be determined\nusing no more than the first 16 characters of the formatted values of CLASS variables. When formatted\nvalues are longer than 16 characters, you can use this option in order to revert to the levels as\ndetermined in releases prior to SAS 9."},"StatementOptionType":"S|V"}]}},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL dependent=< effects > / < options > ; \n      \nThe MODEL statement names the dependent variable and the explanatory effects, including \ncovariates, main effects, interactions, and nested effects. If you omit the explanatory \neffects, the procedure fits an intercept-only model. \n\nAfter the keyword MODEL, the dependent (response) variable is specified, followed by an \nequal sign. The explanatory effects follow the equal sign."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CLB","StatementOptionHelp":{"#cdata":"Requests the 100(1 - \u03b1)% upper and lower confidence limits for the parameter estimates. By default,\nthe 95% limits are computed; the ALPHA= option in the PROC HPREG statement can be\nused to change the \u03b1 level. The CLB option is not supported when you request METHOD=LAR \nor METHOD=LASSO in the SELECTION statement."},"StatementOptionType":"S"},{"StatementOptionName":"NOINT","StatementOptionHelp":{"#cdata":"Suppresses the intercept term that is otherwise included in the model."},"StatementOptionType":"S"},{"StatementOptionName":"ORDERSELECT","StatementOptionHelp":{"#cdata":"Specifies that, for the selected model, effects be displayed in the order in which they first entered\nthe model. If you do not specify the ORDERSELECT option, then effects in the selected model are\ndisplayed in the order in which they appear in the MODEL statement."},"StatementOptionType":"S"},{"StatementOptionName":"STB","StatementOptionHelp":{"#cdata":"Produces standardized regression coefficients. A standardized regression coefficient is \ncomputed by dividing a parameter estimate by the ratio of the sample standard deviation \nof the dependent variable to the sample standard deviation of the regressor."},"StatementOptionType":"S"},{"StatementOptionName":"TOL","StatementOptionHelp":{"#cdata":"produces tolerance values for the estimates. Tolerance for a parameter is defined as 1 - R\u00b2, where R\u00b2\nis obtained from the regression of the parameter on all other parameters in the model. The TOL option\nis not supported when you request METHOD=LAR or METHOD=LASSO in the SELECTION\nstatement."},"StatementOptionType":"S"},{"StatementOptionName":"VIF","StatementOptionHelp":{"#cdata":"\nProduces variance inflation factors with the parameter estimates. Variance inflation \nis the reciprocal of tolerance. The VIF option is not supported when you request METHOD=LAR \nor METHOD=LASSO in the SELECTION statement."},"StatementOptionType":"S"}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT <OUT=SAS-data-set >\n    < keyword < =name > >... < keyword < =name > > < / options > ;\n\nThe OUTPUT statement creates a data set that contains observationwise statistics that are computed after\nfitting the model. The variables in the input data set are not included in the output data set to avoid data\nduplication for large data sets; however, variables specified in the ID statement are included.\n\nIf the input data are in distributed form, where access of data in a particular order cannot be guaranteed, the\nHPLOGISTIC procedure copies the distribution or partition key to the output data set so that its contents\ncan be joined with the input data.\n\nThe output statistics are computed based on the final parameter estimates. If the model fit does not converge,\nmissing values are produced for the quantities that depend on the estimates.\n\nWhen there are more than two response levels, only variables named by the XBETA and PREDICTED\nkeywords have their values computed; the other variables have missing values. These statistics are computed\nfor every response category, and the automatic variable _LEVEL_ identifies the response category upon\nwhich the computed values are based. If you also specify the OBSCAT option, then the observationwise\nstatistics are computed only for the observed response category, as indicated by the value of the _LEVEL_\nvariable.\n\nFor observations in which only the response variable is missing, values of the XBETA and PREDICTED\nstatistics are computed even though these observations do not affect the model fit. This enables, for instance,\npredicted probabilities to be computed for new observations."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=|DATA=","StatementOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set | DATA=SAS-data-set] \n          \nSpecifies the name of the output data set. If the OUT= (or DATA=) option is omitted, the procedure\nuses the DATAn convention to name the output data set."},"StatementOptionType":"RV|DV"},{"StatementOptionName":"LINP|XBETA","StatementOptionHelp":{"#cdata":"[keyword for adding statistics to the OUTPUT data set]\n          \nRequests the linear predictor \u0220=x\u2019\u03b2."},"StatementOptionType":"S|V"},{"StatementOptionName":"PREDICTED|PRED|P","StatementOptionHelp":{"#cdata":"[keyword for adding statistics to the OUTPUT data set]\n          \nRequests predicted values (predicted probabilities of events) for the response variable."},"StatementOptionType":"RS"},{"StatementOptionName":"RESIDUAL|RESID|R","StatementOptionHelp":{"#cdata":"[keyword for adding statistics to the OUTPUT data set] \n          \nRequests the raw residual, y - \u03bc, where \u03bc is the estimate of the predicted event probability. This\nstatistic is not computed for multinomial models."},"StatementOptionType":"RS"},{"StatementOptionName":"PEARSON|PEARS|RESCHI","StatementOptionHelp":{"#cdata":"[keyword for adding statistics to the OUTPUT data set] \n          \nRequests the Pearson residual."},"StatementOptionType":"RS"},{"StatementOptionName":"OBSCAT","StatementOptionHelp":{"#cdata":"Requests (for multinomial models) that observationwise statistics be produced for the response level\nonly. If the OBSCAT option is not specified and the response variable has J levels, then the following\noutputs are created: for cumulative link models, J - 1 records are output for every observation in\nthe input data that corresponds to the J - 1 lower-ordered response categories; for generalized logit\nmodels, J records are output that correspond to all J response categories."},"StatementOptionType":"S"}]}},{"StatementName":"PERFORMANCE","StatementHelp":{"#cdata":"Syntax: PERFORMANCE < performance-options > ;\n      \nThe PERFORMANCE statement defines performance parameters for multithreaded and distributed \ncomputing, passes variables about the distributed computing environment, and requests detailed \nresults about the performance characteristics of a High-Performance Analytics procedure.\n\nWith the PERFORMANCE statement, you can also control whether the HPREG procedure executes \nin SMP or MPP mode."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COMMIT=","StatementOptionHelp":{"#cdata":"Syntax: COMMIT=n\n          \nRequests that the High-Performance Analytics procedure write periodic updates to the \nSAS Log when observations are sent from the client to the appliance for distributed \nprocessing.\n\nHigh-Performance Analytics procedures do not have to use input data that are stored \nin the appliance. You can perform distributed computations regardless of the origin \nor format of the input data, provided the data are in a format that can be read by \nthe SAS System (for example, because a SAS/ACCESS engine is available)."},"StatementOptionType":"V"},{"StatementOptionName":"CPUCOUNT=","StatementOptionHelp":{"#cdata":"Syntax: CPUCOUNT=ACTUAL | num\n          \nSpecifies how many processors the procedure assumes are available on each host in the \ncomputing environment. num can be any integer from 1 to 256.\n\nCPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number\ncan be less than the physical number of CPUs if the SAS process has been restricted by system\nadministration tools. Setting CPUCOUNT= to a number greater than the actual number of available\nCPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system\noption.\n\nIf a High-Performance Analytics procedure executes in SMP mode, this option refers to the client\nmachine of the SAS session. In MPP mode, this option applies to the nodes on the appliance."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACTUAL","@Value2":"<num>"},"StatementOptionToolTips":{"@ToolTip1":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","@ToolTip2":"Replace <num> with an actual number. Setting CPUCOUNT= to a number  greater than the actual number of available CPUs might result in reduced performance. This  option overrides the CPUCOUNT= SAS system option."}},{"StatementOptionName":"DATASERVER=","StatementOptionHelp":{"#cdata":"Syntax: DATASERVER=\u201cname\u201d\n          \nSpecifies the name of the server on Teradata systems as defined through the hosts file \nand as used in the LIBNAME statement for Teradata. For example, if the hosts file defines\n\n    myservercop1 33.44.55.66\n    \nas the server for Teradata, then a LIBNAME specification would be as follows:\n\n    libname TDLib teradata server=myserver user= password= database= ;\n    \nA PERFORMANCE statement to induce running alongside the Teradata server would specify the\nfollowing:\n\n    performance dataserver=\"myserver\";\n    \nIf the DATASERVER= option is specified, it overrides the GRIDDATASERVER environment \nvariable."},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"Requests a table that shows a timing breakdown of the procedure steps."},"StatementOptionType":"V"},{"StatementOptionName":"TIMEOUT=","StatementOptionHelp":{"#cdata":"Syntax: TIMEOUT=s\n          \nSpecifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection\nto the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs\nare submitted to the appliance through workload management tools that might suspend access to the\nappliance for a longer period, you might want to increase the timeout value."},"StatementOptionType":"V"},{"StatementOptionName":"HOST=|GRIDHOST=","StatementOptionHelp":{"#cdata":"Syntax: HOST=\u201cname\u201d | GRIDHOST=\u201cname\u201d \n          \nSpecifies the name of the appliance host in single or double quotes. If the HOST= option \nis specified, it overrides the value of the GRIDHOST environment variable."},"StatementOptionType":"V"},{"StatementOptionName":"INSTALL=|INSTALLLOC=","StatementOptionHelp":{"#cdata":"Syntax: INSTALL=\u201cname\u201d | INSTALLLOC=\u201cname\u201d \n          \nSpecifies the directory in which the High-Performance Analytics shared libraries are \ninstalled on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC \nenvironment variable."},"StatementOptionType":"V"},{"StatementOptionName":"NODES=|NNODES=","StatementOptionHelp":{"#cdata":"Syntax: NODES=n | NNODES=n\n          \nSpecifies the number of nodes in the distributed computing environment, provided that \nthe data are not processed alongside the database.\n\nIf you specify NODES=0, you indicate that you want to process the data in SMP mode on \nthe client machine. If the input data are not alongside the database, this is the default. \nThe High-Performance Analytics procedures then perform the analysis mutlithreaded on the client."},"StatementOptionType":"V"},{"StatementOptionName":"NTHREADS=","StatementOptionHelp":{"#cdata":"Syntax: NTHREADS=n \n          \nSpecifies the number of threads for analytic computations and overrides the SAS system option\nTHREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads\nare determined based on the number of CPUs on the host on which the analytic computations execute.\nThe algorithm by which a CPU count is converted to a thread count is specific to the High-\nPerformance Analytics procedure. Most procedures create one thread per CPU for the analytic computations.\nBy default, High-Performance Analytics procedures execute in multiple concurrent threads unless\nturned off by the NOTHREADS system option or you force single-threaded execution with\nNTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance\nAnalytics procedures can impose more stringent limits if called for by algorithmic considerations.\nYou can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE\nstatement.\n\nNOTE: The SAS system options THREADS | NOTHREADS apply to the client machine on which\nthe SAS High-Performance Analytics procedures execute. They do not apply to the compute nodes\nin a distributed environment."},"StatementOptionType":"V"}]}},{"StatementName":"SELECTION","StatementHelp":{"#cdata":"Syntax: SELECTION <METHOD=method<(method-options)>><options>;\n      \nThe SELECTION statement performs model selection by examining whether effects should be added to or\nremoved from the model according to rules that are defined by model selection methods."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"METHOD=|SELECTION=","StatementOptionHelp":{"#cdata":"Syntax: <METHOD=method < (method-options)\n          \nSpecifies the selection method to use."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BACKWARD","@Value2":"FORWARD","@Value3":"FORWARDSWAP","@Value4":"STEPWISE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the backward elimination method.","@ToolTip2":"Specifies the forward selection method.","@ToolTip3":"Specifies forward-swap selection, which is an extension of the forward selection method.","@ToolTip4":"specifies the stepwise regression method."},"SubOptionsKeywords":"ADAPTIVE|GAMMA=|FAST|LSCOEFFS|SLENTRY=|SLE=|SLSTAY=|SLS="},{"StatementOptionName":"ADAPTIVE","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n\nSyntax: ADAPTIVE <(GAMMA=nonnegative number)>\n\nApplies adaptive weights to each of the coefficients when METHOD=LASSO. Ordinary least squares \nestimates of the model parameters are used to form the adaptive weights. You use the GAMMA= option \nto specify the power transformation that is applied to the parameters in forming the adaptive weights. \nBy default, GAMMA=1."},"StatementOptionType":"S","SubOptionsKeywords":"GAMMA="},{"StatementOptionName":"CHOOSE=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: CHOOSE=criterion \n          \nChooses from the list of models (at each step of the selection process) the model that yields the best \nvalue of the specified criterion."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AIC","@Value2":"AICC","@Value3":"SBC"},"StatementOptionToolTips":{"@ToolTip1":"Specifies Akaike\u2019s information criterion.","@ToolTip2":"Specifies the corrected Akaike\u2019s information criterion.","@ToolTip3":"Specifies the Schwarz Bayesian information criterion."}},{"StatementOptionName":"COMPETITIVE","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nIs applicable as a method-option only when METHOD=STEPWISE. If you specify the COMPETITIVE option, \nthen the SELECT= criterion is evaluated for all models in which an effect currently in the model \nis dropped or an effect not yet in the model is added."},"StatementOptionType":"S"},{"StatementOptionName":"FAST","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nImplements the computational algorithm of Lawless and Singhal (1978) to compute a first-order \napproximation to the remaining slope estimates for each subsequent elimination of a variable \nfrom the model. When applied in backward selection, this option essentially leads to approximating \nthe selection process as the selection process of a linear regression model in which the crossproducts \nmatrix equals the Hessian matrix in the full model under consideration. This option is available only \nwhen METHOD=BACKWARD is specified. It is computationally efficient because the model is not fit after \nremoval of each effect."},"StatementOptionType":"S"},{"StatementOptionName":"LSCOEFFS","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nRequests a hybrid version of the LAR and LASSO methods, in which the sequence of models is determined \nby the LAR or LASSO algorithm but the coefficients of the parameters for the model at any step are \ndetermined by using ordinary least squares."},"StatementOptionType":"S"},{"StatementOptionName":"MAXEFFECTS=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: MAXEFFECTS=n \n\nSpecifies the maximum number of effects in any model that is considered during the selection process. \nThis option is ignored when METHOD=BACKWARD is specified."},"StatementOptionType":"V"},{"StatementOptionName":"MAXSTEPS=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: MAXSTEPS=n \n\nSpecifies the maximum number of selection steps that are performed. The default value of n is the \nnumber of effects in the SCALEMODEL or MODEL statement when METHOD=FORWARD or METHOD=BACKWARD."},"StatementOptionType":"V"},{"StatementOptionName":"MINEFFECTS=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: MINEFFECTS=n \n\nSpecifies the minimum number of effects in any model that is considered during backward selection. \nThis option is ignored unless METHOD=BACKWARD is specified."},"StatementOptionType":"V"},{"StatementOptionName":"SELECT=|CRITERION=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: SELECT=SL|criterion | CRITERION=SL|criterion\n          \nSpecifies the criterion that the procedure uses to determine the order in which effects enter or leave \nat each step of the selection method. For each step, the effect whose addition to or removal from the \ncurrent model yields the maximum improvement in the specified criterion is selected. You can use the \ntraditional significance-level approach by specifying the SL criterion; for other supported criteria, \nsee the chapter for the relevant procedure. This option is not valid when METHOD=LAR or METHOD=LASSO."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AIC","@Value2":"AICC","@Value3":"SBC"},"StatementOptionToolTips":{"@ToolTip1":"Specifies Akaike\u2019s information criterion.","@ToolTip2":"Specifies the corrected Akaike\u2019s information criterion.","@ToolTip3":"Specifies the Schwarz Bayesian information criterion."}},{"StatementOptionName":"SLENTRY=|SLE=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: SLENTRY=value | SLE=value \n\nSpecifies the significance level for entry when STOP=SL or SELECT=SL. By default, SLENTRY=0.05."},"StatementOptionType":"V"},{"StatementOptionName":"SLSTAY=|SLS=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: SLSTAY=value | SLS=value \n\nSpecifies the significance level for staying in the model when STOP=SL or SELECT=SL. \n\nBy default, SLSTAY=0.05."},"StatementOptionType":"V"},{"StatementOptionName":"STOP=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: STOP=criterion \n          \nSpecifies a criterion that is used to stop the selection process."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"SL","@Value2":"NONE","@Value3":"<criterion>"},"StatementOptionToolTips":{"@ToolTip1":"Stops the selection process at the step where the significance level of the candidate for entry   is greater than the SLENTRY= value for addition steps when METHOD=FORWARD or METHOD=STEPWISE   and where the significance level of the candidate for removal is greater than the SLSTAY= value   when METHOD=BACKWARD or METHOD=STEPWISE.","@ToolTip2":"Stops the selection process if no suitable add or drop candidates can be found or if a size-based   limit is reached.","@ToolTip3":"Stops the selection process if the selection process produces a local extremum of this criterion   or if a size-based limit is reached. "}},{"StatementOptionName":"DETAILS=","StatementOptionHelp":{"#cdata":"Syntax: DETAILS=SUMMARY | STEPS | ALL | NONE\n          \nSpecifies the level of detail to be produced about the selection process. The default is DETAILS=\nSUMMARY."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"SUMMARY","@Value2":"STEPS","@Value3":"ALL","@Value4":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"Produces a summary table that shows the effect that is added or removed at each step along with the  criteria specified in the SELECT=, CHOOSE=, and STOP= method-options. The summary table is produced  by default if you do not specify the DETAILS= option.","@ToolTip2":"Syntax: DETAILS=STEPS<(CANDIDATES(ALL | n))>                                     Produces the preceding summary table and displays the results from fitting each model at each step. If you specify STEPS(CANDIDATES(n)), then the best n candidates are shown. If you specify  STEPS(CANDIDATES(ALL)), then all candidates are shown.","@ToolTip3":"Produces the preceding tables and a detailed listing of all candidates at each step along with their  ranking in terms of the selection criterion for addition to or removal from the model.","@ToolTip4":"Specifies that no details be produced about the selection process."},"SubOptionsKeywords":"CANDIDATES"},{"StatementOptionName":"HIERARCHY=","StatementOptionHelp":{"#cdata":"Syntax: HIERARCHY=NONE | SINGLE | SINGLECLASS\n          \nSpecifies whether and how the model hierarchy requirement is applied. You can specify that only classification\neffects, or both classification and continuous effects, be subject to the hierarchy requirement.\nThis option is ignored unless you also specify one of the following options: METHOD=FORWARD,\nMETHOD=BACKWARD, or METHOD=STEPWISE."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"SINGLE","@Value3":"SINGLECLASS"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that model hierarchy not be maintained. Any single effect can enter or leave the model at any step of the selection process.","@ToolTip2":"Specifies that only one effect enter or leave the model at one time, subject to the model  hierarchy requirement.","@ToolTip3":"Is the same as HIERARCHY=SINGLE except that only CLASS effects are subject to the hierarchy  requirement."}},{"StatementOptionName":"ORDERSELECT","StatementOptionHelp":{"#cdata":"Specifies that effects in the selected model are displayed in the order in which they first entered the\nmodel. If you do not specify the ORDERSELECT option, then effects in the selected model are\ndisplayed in the order in which they appear in the MODEL statement."},"StatementOptionType":"S"},{"StatementOptionName":"PLOT=|PLOTS=","StatementOptionHelp":{"#cdata":"Syntax: PLOT <(global-plot-options)> <= plot-request <(options)>> \nSyntax: PLOTS <(global-plot-options)> <= (plot-request <(options)> <\u2026plot-request <(options)>>)>\n\nControls the selection process plots that are produced through ODS Graphics. \n\nEach global-plot-option applies to all plots that the SELECTION statement generates, unless you \nalter the option by using a specific plot option that follows a plot-request. You can specify \nthe following global-plot-options:\n\nENDSTEP=n \nterminates the step ranges shown on the horizontal axes of plots at the specified step.\nLOGP | LOGPVALUE \nuses a logarithmic axis to display entry and removal significance levels. \nMAXPARMLABEL=n \nspecifies the maximum number of characters beyond which all parameter labels on the coefficient \nprogression panel and the coefficient progression plot are suppressed. By default, MAXPARMLABEL=20.\nMAXSTEPLABEL=n \nspecifies the maximum number of characters of effect labels to display on the horizontal axes \nof the plots. By default, MAXSTEPLABEL=20.\nSTARTSTEP=n \nspecifies that the step ranges shown on the horizontal axes of plots start at the specified step.\nSTEPAXIS=EFFECT | NORMB | NUMBER \nspecifies the horizontal axis to be used on the plots, where this axis represents the sequence \nof entering or departing effects.\nUNPACK | UNPACKPANEL suppresses paneling."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ALL","@Value2":"COEFFICIENTS","@Value3":"CRITERIA","@Value4":"FITBYROLE ","@Value5":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"produces all relevant plots.","@ToolTip2":"Syntax: COEFFICIENTS | COEFFICIENTPANEL <(UNPACK | UNPACKPANEL)>                                       Creates a panel of two plots. The upper plot shows the progression of the parameter values as the  selection process proceeds. The lower plot shows the progression of the CHOOSE= criterion.","@ToolTip3":"Syntax: CRITERIA | CRITERIONPANEL <(UNPACK | UNPACKPANEL)>                                       Creates a panel of model fit criteria. If you specify the UNPACK option, then each criterion  progression is shown in a separate plot.","@ToolTip4":"Plots the progression of a fit statistic on the training, test, and validation data. The fit statistic  that is displayed depends on the type of model that is being fit. The fit by role plot is not  produced if you do not specify a PARTITION statement.","@ToolTip5":"Suppress all selection process plots, even if you specify other plot options."},"SubOptionsKeywords":"ENDSTEP=|LOGP|LOGPVALUE|MAXPARMLABEL=|MAXSTEPLABEL=|STARTSTEP=|STEPAXIS=|UNPACK|UNPACKPANEL"},{"StatementOptionName":"STOPHORIZON=","StatementOptionHelp":{"#cdata":"Syntax: STOPHORIZON=n\n          \nSpecifies the number of consecutive steps at which the STOP= criterion must worsen in order for a\nlocal extremum to be detected. The stop horizon value is ignored if you also specify STOP=NONE\nor STOP=SL. For example, suppose that STOP=AIC and the sequence of AIC values at steps 1 to 6\nof a selection are 10, 7, 4, 6, 5, 2. If STOPHORIZON=2, then the AIC criterion is deemed to have a\nlocal minimum at step 3 because the AIC value at the next two steps are greater than the value 4 that\noccurs at step 3. However, if STOPHORIZON=3, then the value at step 3 is not deemed to be a local\nminimum because the AIC value at step 6 is lower than the AIC value at step 3. When METHOD=LAR\nor METHOD=LASSO, n is ignored and STOPHORIZON=1 is used. By default, STOPHORIZON=3."},"StatementOptionType":"V"}],"#comment":{}}},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable;\n      \nThe variable in the WEIGHT statement is used as a weight to perform a weighted analysis \nof the data. Observations with nonpositive or missing weights are not included in the \nanalysis. If a WEIGHT statement is not included, all observations used in the analysis \nare assigned a weight of 1."}},{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variables ; \n      \nThe ID statement lists one or more variables from the input data set that are transferred \nto output data sets created by SAS High-Performance Analytics procedures, provided that the \noutput data set produces one (or more) records per input observation."}},{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable ; \n      \nThe variable in the FREQ statement identifies a numeric variable in the data set that contains \nthe frequency of occurrence for each observation. SAS High-Performance Analytics procedures that \nsupport the FREQ statement treat each observation as if it appeared f times, where f is the value \nof the FREQ variable for the observation. If the frequency value is not an integer, it is truncated \nto an integer. If the frequency value is less than 1 or missing, the observation is not used in the \nanalysis. When the FREQ statement is not specified, each observation is assigned a frequency of 1."}},{"StatementName":"PARTITION","StatementHelp":{"#cdata":"Syntax: PARTITION <partition-options> ;\n      \nThe PARTITION statement specifies how observations in the input data set are logically \npartitioned into disjoint subsets for model training, validation, and testing. Either \nyou can designate a variable in the input data set and a set of formatted values of that \nvariable to determine the role of each observation, or you can specify proportions to \nuse for random assignment of observations for each role."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ROLEVAR=|ROLE=","StatementOptionHelp":{"#cdata":"Syntax: ROLEVAR= | ROLE=variable(<TEST=\u2019value\u2019> <TRAIN=\u2019value\u2019> <VALIDATE=\u2019value\u2019>)\n          \nNames the variable in the input data set whose values are used to assign roles to \neach observation. The formatted values of this variable that are used to assign \nobservations roles are specified in the TEST=, TRAIN=, and VALIDATE= suboptions. \nIf you do not specify the TRAIN= suboption, then all observations whose role is \nnot determined by the TEST= or VALIDATE= suboptions are assigned\nto training."},"StatementOptionType":"V","SubOptionsKeywords":"TEST=|TRAIN=|VALIDATE="},{"StatementOptionName":"FRACTION","StatementOptionHelp":{"#cdata":"Syntax: FRACTION(<TEST=fraction> <VALIDATE=fraction>)\n          \nFRACTION(<TEST=fraction> <VALIDATE=fraction>) \n\nRequests that specified proportions of the observations in the input data set be randomly \nassigned training and validation roles. You specify the proportions for testing and validation \nby using the TEST= and VALIDATE= suboptions. If you specify both the TEST= and the VALIDATE= \nsuboptions, then the sum of the specified fractions must be less than 1 and the remaining \nfraction of the observations are assigned to the training role."},"StatementOptionType":"S","SubOptionsKeywords":"TEST=|VALIDATE="}]}}]}}}