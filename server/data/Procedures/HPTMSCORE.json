{"Procedure":{"Name":"HPTMSCORE","ProductGroup":"HPA","#comment":{},"ProcedureHelp":{"#cdata":"Syntax: PROC HPTMSCORE < options > ;\n    VARIABLE variable ;\n    DOC_ID variable ;\n    PERFORMANCE performance-options ;\n    \nFor high-performance text mining, scoring is the process of applying the parsing and SVD projections to\nnew textual data. The HPTMSCORE procedure performs this scoring of new documents, and its primary\noutput is a document data set Outdocpro, which holds the reduced dimensional representation of the score\ncollection. PROC HPTMSCORE uses some of the output data sets of the HPTMINE procedure as input\ndata to ensure consistency between scoring and training. During scoring, the new textual data must be\nparsed with the same settings that the training data were parsed with, indexed using only the subset of terms\nthat were used during training, and projected onto the reduced dimensional subspace of the singular value\ndecomposition that was derived from the training data. The three data sets, Outconfig, Outterms and Svdu,\nwhich were created with PROC HPTMINE facilitate this process and serve as input to PROC HPTMSCORE\nwith the CONFIG=, TERMS=, and SVDU= options, respectively. The purpose of these three data sets are\nsummarized below under their respective options.\n\nThe HPTMSCORE procedure processes large-scale textual data in parallel to achieve efficiency and scalability.\nThe following list summarizes the basic features of PROC HPTMSCORE:\n\n o Functionalities related to document parsing, term-by-document matrix creation, and dimension reduction\n    are integrated into one procedure to process data more efficiently.\n o Parsing and term-by-document matrix creation are performed in parallel.\n o Computation of document projection is performed in parallel.\n o Analysis can be performed on a massively parallel SAS high-performance appliance.\n o All phases of processing make use of a high degree of multithreading.\n o Input data can be read in parallel when the data source is the appliance database."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"CONFIG=","ProcedureOptionHelp":{"#cdata":"Syntax: CONFIG=SAS-data-set \n      \nSpecifies the input SAS data set that contains configuration information for PROC HPTMSCORE. The\ndata set used for this option should be the one generated by the OUTCONFIG option in the PARSE\nstatement of the HPTMINE procedure during training."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DATA=|DOC=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=SAS-data-set | DOC=SAS-data-set \n      \nSpecifies the input SAS data set of documents to be used by PROC HPTMSCORE. The default is the\nmost recently created data set. If PROC HPTMSCORE executes in MPP mode, the input data are\ndistributed to memory on the appliance nodes and analyzed in parallel, unless the data are already\ndistributed in the appliance database. When data are already distributed, PROC HPTMSCORE reads\nthe data alongside the distributed database."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the generation of ODS output."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTPARENT=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTPARENT=SAS-data-set \n      \nSpecifies the output data set to contain a compressed representation of the sparse term-by-document\nfrequency matrix. The data set contains only the kept, representative terms, and the child frequencies\nare attributed to the corresponding parent."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SVDDOCPRO=","ProcedureOptionHelp":{"#cdata":"Syntax: SVDDOCPRO=SAS-data-set \n      \nSpecifies the output data set to contain the reduced dimensional projections for each document. The\ncontents of this data set are formed by multiplying the term-by-document frequency matrix by the\ninput data set that is specified in the SVDU= option and then normalizing the result."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SVDU=","ProcedureOptionHelp":{"#cdata":"Syntax: SVDU=SAS-data-set \n      \nSpecifies the input data set that contains the U matrix, which is created during training by PROC\nHPTMINE. The data set contains the information needed to project each document into the reduced\ndimensional space."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"TERMS=","ProcedureOptionHelp":{"#cdata":"Syntax: TERMS=SAS-data-set \n      \nSpecifies the input SAS data set of terms to be used by PROC HPTMSCORE. The data set used\nfor this option should be the one generated by the OUTTERMS= option in the PARSE statement\nof the HPTMINE procedure during training. This data set conveys to PROC HPTMSCORE which\nterms should be used in the analysis, if they should be mapped to a parent, and assigns them a key\nthat corresponds to the key used on the input data set that is specified by the SVDU= option."},"ProcedureOptionType":"DV"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"DOC_ID","StatementHelp":{"#cdata":"Syntax: DOC_ID variable ; \n      \nThis statement specifies the variable that contains the ID of each document. In the input data set, each \nrow corresponds to one document. The ID of each document must be unique; it can be either a number or a\nstring of characters."},"StatementOptions":{"StatementOption":{"StatementOptionName":"DUPLICATIONCHECK|DUPCHK","StatementOptionHelp":{"#cdata":"Syntax: DUPLICATIONCHECK | DUPCHK \n          \nChecks the uniqueness of the ID of each document. When this option is not specified, no duplication\ncheck is performed. When this option is specified in the DOC_ID statement and duplicate document\nIDs are detected, the HPTMSCORE procedure outputs a warning message, which shows the number of\nduplicate document IDs that have been detected."},"StatementOptionType":"S"}}},{"StatementName":"PERFORMANCE","StatementHelp":{"#cdata":"Syntax: PERFORMANCE < performance-options > ;\n      \nThe PERFORMANCE statement defines performance parameters for multithreaded and distributed computing,\npasses variables about the distributed computing environment, and requests detailed results about\nthe performance characteristics of the HPTMSCORE procedure.\n\nYou can also use the PERFORMANCE statement to control whether the HPTMSCORE procedure executes\nin SMP or MPP mode."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COMMIT=","StatementOptionHelp":{"#cdata":"Syntax: COMMIT=n\n          \nThis option specifies the minimum number of observations transferred from the client to the \nappliance necessary to update the SAS Log. For instance, if you specify COMMIT=5000, then \nevery time the number of observations sent exceeds an integer multiple of 5000 a log message \nis produced. This message indicates the actual number of observations distributed, not the \nCOMMIT= value that triggered the message. "},"StatementOptionType":"V"},{"StatementOptionName":"CPUCOUNT=","StatementOptionHelp":{"#cdata":"Syntax: CPUCOUNT=ACTUAL | num\n          \nThis argument specifies how many processors PROC HPBIN assumes are available on each host \nin the computing environment. Valid values for number are integers between 1 and 256, \ninclusive. Setting CPUCOUNT= to a value greater than the actual number of available CPUs \nmight results in reduced performance. Specify CPUCOUNT=ACTUAL to set CPUCOUNT= to the \nnumber of processors physically available. This number can be less than the physical \nnumber of CPUs if the SAS process has been restricted by system administration tools. \nThis option overrides the CPUCOUNT= SAS system option. If PROC HPBIN executes in SMP \nmode, then this option referes to the client machine of the SAS session. If PROC HPBIN \nexecutes in MPP mode, then this option applies the nodes on the appliance."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ACTUAL","@Value2":"<num>"},"StatementOptionToolTips":{"@ToolTip1":"Sets CPUCOUNT to the number of processors physically available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","@ToolTip2":"Replace <num> with an actual number. Setting CPUCOUNT= to a number  greater than the actual number of available CPUs might result in reduced performance. This  option overrides the CPUCOUNT= SAS system option."}},{"StatementOptionName":"DATASERVER=","StatementOptionHelp":{"#cdata":"Syntax: DATASERVER=\u201cname\u201d\n          \nSpecifies the name of the server on Teradata systems as defined through the hosts file \nand as used in the LIBNAME statement for Teradata. For example, if the hosts file defines\n\n    myservercop1 33.44.55.66\n    \nas the server for Teradata, then a LIBNAME specification would be as follows:\n\n    libname TDLib teradata server=myserver user= password= database= ;\n    \nA PERFORMANCE statement to induce running alongside the Teradata server would specify the\nfollowing:\n\n    performance dataserver=\"myserver\";\n    \nIf the DATASERVER= option is specified, it overrides the GRIDDATASERVER environment \nvariable."},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"Specify this option to request a table that shows a timing breakdown of the procedure steps."},"StatementOptionType":"V"},{"StatementOptionName":"TIMEOUT=","StatementOptionHelp":{"#cdata":"Syntax: TIMEOUT=s\n          \nThis options specifies the length of time, in seconds, PROC HPBIN should wait for a connection \nto the appliance and to establish a connection back to the client. The default value for s is \n120 seconds. If jobs are submitted to the appliance through workload management tools that might \nsuspend access to the appliance for a longer period, you might want to increase the timeout value. "},"StatementOptionType":"V"},{"StatementOptionName":"HOST=|GRIDHOST=","StatementOptionHelp":{"#cdata":"Syntax: HOST=name | GRIDHOST=name\n          \nThis option specifies the name of the appliance host. The HOST= option overrides the value \nof the GRIDHOST environment variable."},"StatementOptionType":"V"},{"StatementOptionName":"INSTALL=|INSTALLLOC=","StatementOptionHelp":{"#cdata":"Syntax: INSTALL=\u201cname\u201d | INSTALLLOC=\u201cname\u201d \n          \nThis option specifies the directory where the High-Performance Analytics shared libraries \nare installed on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC \nenvironment variable."},"StatementOptionType":"V"},{"StatementOptionName":"NODES=|NNODES=","StatementOptionHelp":{"#cdata":"Syntax: NODES=n | NNODES=n\n          \nThis option specifies the number of nodes in the distributed computing environment, \nprovided that the data are not processed alongside the database. \n\nSpecify NODES=0 to indicate that you want to process the data in SMP mode on the client \nmachine. If the input data are not alongside the database, this is the default setting. \nThe HPBIN procedure then performs multithreaded analysis on the client. If the data are \nnot read alongside the database, the NODES= option specifies the number of nodes on the \nappliance that are involved in the analysis. If the number of nodes can be modified by \nthe application, you can specify a NODES= option where n exceeds the number of physical \nnodes on the appliance. The High-Performance Analytics software then oversubscribes the \nnodes and associates nodes with multiple units of work. For example, on a system with \n16 appliance nodes, the following statement would oversubscribe the system by a factor \nof 3: \n\n  performance nodes=48 host=\"hpa.sas.com\"; \n  \nGenerally, it is not advisable to oversubscribe the system because the analytic code \nis optimized for a certain level of multithreading on the nodes that depend on the CPU \ncount. If the data are read alongside the distributed database on the appliance, specifying \na nonzero value for the NODES= option has no effect. The number of units of work in the \ndistributed computing environment is then determined by the distribution of the data and \ncannot be altered."},"StatementOptionType":"V"},{"StatementOptionName":"NTHREADS=","StatementOptionHelp":{"#cdata":"Syntax: NTHREADS=n \n          \nThis option specifies the number of threads used for analytic computations and overrides the \nSAS system option THREADS | NOTHREADS. If you do not specify the NTHREADS= option, then the \nnumber of threads is determined based on the number of CPUs on the host machine where the \nanalytic computations execute. By default, High-Performance Analytics procedures execute in \nmultiple concurrent threads, unless you disable this behavior with the NOTHREADS system option \nor you specify NTHREADS=1 to force single-threaded execution. The value specified here must \nnot exceed 256.\n\nNote:The SAS system option THREADS | NOTHREADS applies to the current machine where the SAS \nHigh-Performance Analytics procedures execute. This option does not apply to the compute nodes \nin a distributed environment."},"StatementOptionType":"V"}]}},{"StatementName":"VARIABLE|VAR","StatementHelp":{"#cdata":"Syntax: VARIABLE|VAR variable ;\n      \nThis statement specifies the variable that contains the text to be processed."}}]}}}