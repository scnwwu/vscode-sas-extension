{"Procedure":{"Name":"HTTP","ProductGroup":"BASE","ProcedureHelp":{"#cdata":"Syntax: PROC HTTP URL=\"URL-to-target\" METHOD=\"http-method\" <option(s)>;\n    \nPROC HTTP issues HTTP requests. PROC HTTP reads as input the entire body from a fileref \nand writes output to a fileref. PROC HTTP can also read custom request headers from a \nfileref and write response headers to a fileref."},"ProcedureOptions":{"#comment":[{},{}],"ProcedureOption":[{"ProcedureOptionName":"URL=","ProcedureOptionHelp":{"#cdata":"Specifies the endpoint for the HTTP request."},"ProcedureOptionType":"RV"},{"ProcedureOptionName":"AUTH_ANY","ProcedureOptionHelp":{"#cdata":"When a user name and password are supplied, they are used to authenticate the connected server.\nOtherwise, any other form of authentication that is available is used. Specifying AUTH_ANY is \nequivalent to specifying AUTH_NEGOTIATE, AUTH_NTLM, and AUTH_BASIC on the procedure statement. \n\nDefault: This is the default authentication type if an authentication type is not specified. \n\nTip: Since there is a chance of more than one trip to the HTTP server, specify EXPECT_100_CONTINUE \nto prevent data from being uploaded multiple times. "},"ProcedureOptionType":"S"},{"ProcedureOptionName":"AUTH_BASIC","ProcedureOptionHelp":{"#cdata":"Specifies to use user identity authentication to authenticate the connected server. The user name \nand password are supplied with the WEBUSERNAME and WEBPASSWORD arguments."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"AUTH_NTLM","ProcedureOptionHelp":{"#cdata":"Specifies to use NTLM authentication to authenticate to the connected server. As long as your current\nuser identity has permissions, authentication is established. \n\nRestriction: NTLM is currently available only on Windows clients."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"AUTH_NEGOTIATE","ProcedureOptionHelp":{"#cdata":"Specifies to use NTLM, Kerberos. or some other type of HTTP authentication to authenticate to the \nconnected server. As long as your current user identity has permissions, authentication is established."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CLEAR_CACHE","ProcedureOptionHelp":{"#cdata":"Specifies to clear both the shared connection and cookie caches before the HTTP request is executed."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CLEAR_CONN_CACHE","ProcedureOptionHelp":{"#cdata":"Specifies to clear the shared connection cache before the HTTP request is executed."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CLEAR_COOKIE_CACHE","ProcedureOptionHelp":{"#cdata":"Specifies to clear the shared cookie cache before the HTTP request is executed."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CT=","ProcedureOptionHelp":{"#cdata":"Syntax: CT=\"content-type\"\n      \nUsed in conjunction with the HEADERIN= argument, specifies the HTTP content-type to be set in the request\nheaders. The content-type describes the data contained in the body fully enough that the receiving user \nagent can present the data to the user. \n\nExamples of content-type specifications are: \n  CT=\"Text/HTML; charset=ISO-8859-4\"\n  CT=\"Text/plain; charset=us-ascii\"\n  CT=\"Application/x-www-form-urlencoded\""},"ProcedureOptionType":"V"},{"ProcedureOptionName":"EXPECT_100_CONTINUE","ProcedureOptionHelp":{"#cdata":"Enables a client that is sending a request message with a request body to determine whether the target \nserver is willing to accept the request, based on the request headers. Use EXPECT_100_CONTINUE when \nyou are sending large amounts of data and want to make sure that no unnecessary transfers of the data \noccur. For more information, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html#sec8.2.3. \n\nValid in: HTTP requests that specify the IN= argument, most commonly with PUT. \nInteraction: This argument is used in conjunction with the HEADEROUT= argument."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"HEADERIN=","ProcedureOptionHelp":{"#cdata":"Syntax: HEADERIN=fileref-to-request-header-file\n      \nSpecifies a fileref to a text file that contains one line per request header in \nthe format key:value. \n\nz/OS Specifics: In the z/OS operating environment, HEADERIN= files must be created with a variable record length. \n\nCAUTION:\nDo not specify both the HEADERS statement and the HEADERIN= argument. \nThe behavior that results from specifying both options together is not defined. "},"ProcedureOptionType":"V"},{"ProcedureOptionName":"HEADEROUT=","ProcedureOptionHelp":{"#cdata":"Syntax: HEADEROUT=fileref-to-response-header-file\n      \nSpecifies a fileref to a text file to which the response headers are in the format key:value."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"HEADEROUT_OVERWRITE","ProcedureOptionHelp":{"#cdata":"Used in conjunction with the HEADEROUT= argument, causes the response header to record only the last \nheader block sent by the web server when a redirect occurs."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"HTTP_TOKENAUTH","ProcedureOptionHelp":{"#cdata":"Generates a one-time password from the metadata server that can be used to access the SAS Content Server."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"IN=","ProcedureOptionHelp":{"#cdata":"Syntax: IN=\"string\" | fileref\n      \nSpecifies the input data.\n\nBeginning in the third maintenance release of SAS 9.4, you can specify input data in a quoted string \nor in a fileref. Previous SAS releases require that you specify a fileref. \n\nRequirement: This option is required when the POST and PUT methods are used."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"METHOD=","ProcedureOptionHelp":{"#cdata":"Syntax: METHOD=\"http-method\"\n      \nSpecifies an HTTP method. Standard methods include HEAD, TRACE, GET, POST, PUT, and DELETE.\nBeginning with the third maintenance release of SAS 9.4, the method is open-ended. Any method that \nconforms to the HTTP/1.1 standard and is recognizable by the target web server is acceptable.\n\nDefault: Beginning with the third maintenance release of SAS 9.4, if you omit the METHOD argument \nand do not specify the IN argument, the default method is GET. If you omit METHOD and do specify the \nIN argument \u2014 and in SAS releases prior to the third maintenance release\u2014 the default method is POST.\n\nRestriction: Software releases prior to the third maintenance release of SAS 9.4 support only the \nstandard methods."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NO_CONN_CACHE","ProcedureOptionHelp":{"#cdata":"Disables connection caching for this HTTP request. The connection will be made with the specified \nconnection parameters."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NO_COOKIE_CACHE","ProcedureOptionHelp":{"#cdata":"Specifies cached cookies will not be used for this HTTP request. This argument does not prevent \ncookies from being sent manually with the \"Cookie\" header."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUT=","ProcedureOptionHelp":{"#cdata":"Syntax: OUT=fileref-to-response-data\n      \nSpecifies a fileref where output is written."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PROXY_AUTH_BASIC","ProcedureOptionHelp":{"#cdata":"Specifies to perform user identity authentication through a proxy server. The user name and password \nare supplied with the PROXYUSERNAME and PROXYPASSWORD arguments."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PROXY_AUTH_NTLM","ProcedureOptionHelp":{"#cdata":"Specifies to perform NTLM authentication through a proxy server. As long as your current user identity\nhas permissions, authentication is established. \n\nRestriction: NTLM is currently available only on Windows clients."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PROXY_AUTH_NEGOTIATE","ProcedureOptionHelp":{"#cdata":"Specifies to perform NTLM, Kerberos, or some other type of HTTP authentication through a proxy server.\nAs long as your current user identity has permissions, authentication is established."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PROXYHOST=","ProcedureOptionHelp":{"#cdata":"Syntax: PROXYHOST=\"proxy-host-name\"\n      \nSpecifies the Internet host name of an HTTP proxy server. Beginning in the third maintenance release of SAS 9.4, \nyou can specify both the host name and the port number in the PROXYHOST argument in the form: \n\n  host-name:port-number\n  \nWhen this syntax is used, there is no need to specify the PROXYPORT argument. \n\nEarlier SAS versions require you to specify both the PROXYHOST and PROXYPORT arguments. For the earlier \nreleases, specify PROXYHOST= as: \n\n  host-name"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PROXYPASSWORD=","ProcedureOptionHelp":{"#cdata":"Syntax: PROXYPASSWORD=\"proxy-passwd\"\n      \nSpecifies an HTTP proxy server password. \n\nTips:\nThe password is required only if your proxy server requires credentials. \nEncodings that are produced by PROC PWENCODE are supported."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PROXYPORT=","ProcedureOptionHelp":{"#cdata":"Syntax: PROXYPORT=proxy-port-number\n      \nSpecifies an HTTP proxy server port. Beginning in the third maintenance release of SAS 9.4, PROXYPORT \nis an optional argument. You are not required to specify PROXYPORT if you specified both the HTTP proxy \nserver host name and port number in the PROXYHOST argument. \n\nNote: Earlier SAS releases require that the HTTP proxy server host name and port number are specified \nseparately in the PROXYHOST and PROXYPORT arguments."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PROXYUSERNAME=","ProcedureOptionHelp":{"#cdata":"Syntax: PROXYUSERNAME=\"proxy-user-name\" \n      \nSpecifies an HTTP proxy server user name. \n\nTip: The user name is required only if your proxy server requires credentials."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TIMEOUT=","ProcedureOptionHelp":{"#cdata":"Syntax: TIMEOUT=integer\n      \nSpecifies the number of seconds of inactivity to wait before canceling an HTTP request. Use this argument \nto prevent hangs if there is a chance that the server will not respond. The default value, 0 (zero), means \nno time-out period.\n\nRestriction:\nThis option is supported beginning with SAS 9.4M5 and SAS Viya 3.3."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"WEBAUTHDOMAIN=","ProcedureOptionHelp":{"#cdata":"Syntax: WEBAUTHDOMAIN=\"web-credentials-from-metadata\" \n      \nSpecifies the web authentication domain. If specified, a user name and password \nis retrieved from metadata for the specified authentication domain."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"WEBPASSWORD=","ProcedureOptionHelp":{"#cdata":"Syntax: WEBPASSWORD=\"basic-authentication-password\"\n      \nSpecifies a password for basic authentication.\n\nTip: Encodings that are produced by PROC PWENCODE are supported."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"WEBUSERNAME=","ProcedureOptionHelp":{"#cdata":"Syntax: WEBUSERNAME=\"basic-authentication-name\" \n      \nSpecifies a user name for basic authentication."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"DEBUG","StatementHelp":{"#cdata":"Syntax: DEBUG Level=<0 | 1 | 2 | 3>; \n      \nWrites debugging information to the SAS log.\n\nRestriction:\nThis statement is supported beginning with SAS 9.4M5 and SAS Viya 3.3."},"StatementOptions":{"StatementOption":{"StatementOptionName":"LEVEL=","StatementOptionHelp":{"#cdata":"Syntax: "},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"0","@Value2":"1","@Value3":"2","@Value4":"3"},"StatementOptionToolTips":{"@ToolTip1":"No debugging. This is the default value when the DEBUG statement is not specified. ","@ToolTip2":"Displays the request and response headers in the log.","@ToolTip3":"Displays request data as well as level 1 messages in the log. ","@ToolTip4":"Displays response data as well as level 2 messages in the log."}}}},{"StatementName":"HEADERS","StatementHelp":{"#cdata":"Syntax: HEADERS \"HeaderName\"=\"HeaderValue\" <\"HeaderName-n\"=\"HeaderValue-n\"> \n      \nSpecifies request headers for the HTTP request.\n\nRequired Argument\n\"HeaderName\"=\"HeaderValue\" \n  is a name and value pair that represents a header name and its value. The HeaderName can be a standard \n  header name or a custom header name. For information about header field definitions, see the HTTP/1.1 \n  specification at www.w3.org. \n  \nNote: Do not specify a colon (:) in the header name. The name=value pairs are automatically translated \ninto the following form:\n\n  HeaderName : HeaderValue"},"StatementOptions":null}]}}}