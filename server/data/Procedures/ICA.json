{"Procedure":{"Name":"ICA","ProductGroup":"CAS|VIYA|VISUAL STATISTICS","ProcedureHelp":{"#cdata":"Syntax: PROC ICA <options>;\n    BY variables;\n    DISPLAY <table-list> </ options>;\n    DISPLAYOUT table-spec-list </ options>;\n    OUTPUT OUT=CAS-libref.data-table\n      <COPYVARS=(variables)>\n      <keyword <=prefix>>\u2026<keyword <=prefix>>;\n    VAR variables;\n    \nThe ICA procedure performs independent component analysis in SAS Viya.\n\nIndependent component analysis attempts to extract from the observed multivariate data independent \ncomponents (also called factors or latent variables) that are as statistically independent from each \nother as possible. The methods that PROC ICA implements, where statistical independence is defined \nas the maximization of non-Gaussianity, seek linear combinations of the observed random variables \nthat maximize the non-Gaussianity of the estimated independent components."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table \n\nNames the input data table for PROC ICA to use. The default is the most recently created data \ntable. CAS-libref.data-table is a two-level name, where \n\nCAS-libref\n  refers to a collection of information that is defined in the LIBNAME statement and includes \n  the caslib, which includes a path to the data, and a session identifier, which defaults to \n  the active session but which can be explicitly defined in the LIBNAME statement.\n  \ndata-table\n  specifies the name of the input data table."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"EIGTHRESH=|EIGENTHRESHOLD=","ProcedureOptionHelp":{"#cdata":"Syntax: EIGTHRESH=p | EIGENTHRESHOLD=p\n      \nSpecifies the threshold for the proportion of variance explained by eigenvalues, where 0 \u2264 p \u2264 1. \nIf the proportion of variance that an eigenvalue explains is less than the threshold, the eigenvalue \nis discarded in the analysis. You can use this option to reduce the dimensionality of the input data. \n\nBy default, EIGTHRESH=0."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"GFUNCTION=|GFUNC=","ProcedureOptionHelp":{"#cdata":"Syntax: GFUNCTION=EXP | LOGCOSH OR GFUNC=EXP | LOGCOSH\n      \nSpecifies the nonquadratic function G(x) to be used in the approximation of negentropy."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"EXP","@Value2":"LOGCOSH"},"ProcedureOptionToolTips":{"@ToolTip1":"Uses an exponential function","@ToolTip2":"Uses a log cosh function"}},{"ProcedureOptionName":"METHOD=","ProcedureOptionHelp":{"#cdata":"Syntax: METHOD=DEFLATION<(defl-options)> | SYMMETRIC<(symm-options)>\n      \nSpecifies the independent component extraction method to be used."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"DEFLATION","@Value2":"SYMMETRIC"},"ProcedureOptionToolTips":{"@ToolTip1":"Syntax: DEFLATION<(defl-options)>          Requests the deflationary decorrelation method. You can specify the following defl-options:    MAXITER=n   specifies the maximum number of iterations to perform. By default, MAXITER=500.    TOL=n    TOLERANCE=n   specifies the convergence criterion. By default, TOL=1E\u20134.","@ToolTip2":"Syntax: SYMMETRIC<(symm-options)>                             Requests the symmetric decorrelation method. You can specify the following symm-options:    MAXITER=n   specifies the maximum number of iterations to perform. By default, MAXITER=500.    TOL=n    TOLERANCE=n   specifies the convergence criterion. By default, TOL=1E\u20134."},"SubOptionsKeywords":"MAXITER=|TOLERANCE=|TOL="},{"ProcedureOptionName":"N=","ProcedureOptionHelp":{"#cdata":"Syntax: N=number\n      \nSpecifies the number of independent components to be computed. The default is the number \nof numeric variables to be analyzed. The number must be an integer greater than or equal \nto 0. If N=0, the default is used."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOCENTER","ProcedureOptionHelp":{"#cdata":"Suppresses centering of the numeric variables to be analyzed. This option is useful if the analysis \nvariables are already centered and scaled."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOSCALE","ProcedureOptionHelp":{"#cdata":"Suppresses scaling of the numeric variables to be analyzed. This option is useful if the analysis \nvariables are already centered and scaled."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PREFIX=","ProcedureOptionHelp":{"#cdata":"Syntax: PREFIX=name\n      \nSpecifies a prefix for naming the independent components. By default, the names are Comp1, Comp2, \u2026, \nCompn. If you specify PREFIX=Abc, the components are named Abc1, Abc2, Abc3, and so on. The number \nof characters in the prefix plus the number of digits required to designate the variables should \nnot exceed the current name length that is defined by the VALIDVARNAME= system option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SEED=","ProcedureOptionHelp":{"#cdata":"Syntax: SEED=number\n      \nSpecifies an integer as the seed value for pseudorandom number generation. PROC ICA uses random \nvalues to initialize the demixing matrix. Changing the seed value changes the initial demixing \nmatrix, resulting in a different estimated demixing matrix. If you do not specify this option \nor if number is less than or equal to 0, the seed is generated by reading the time of day from \nthe computer\u2019s clock. By default, SEED=0."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"WHITEPREFIX=|WPREFIX=","ProcedureOptionHelp":{"#cdata":"Syntax: WHITEPREFIX=name | WPREFIX=name\n      \nSpecifies a prefix for naming the whitened variables. By default, the names are White1, White2, \u2026, \nWhiten. If you specify WHITEPREFIX=Abc, the components are named Abc1, Abc2, Abc3, and so on. \nThe number of characters in the prefix plus the number of digits required to designate the \nvariables should not exceed the current name length that is defined by the VALIDVARNAME= \nsystem option."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables;\n\nYou can specify a BY statement in PROC ICA to obtain separate analyses of observations in groups that \nare defined by the values of the BY variables. If you specify more than one BY statement, only the last \none specified is used."},"StatementOptions":null},{"StatementName":"DISPLAY","StatementHelp":{"#cdata":"Syntax: DISPLAY <table-list> </ options>;\n      \nThe DISPLAY statement enables you to specify a list of display tables to display or exclude. This statement \nis similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve \nperformance when a large number of tables could be generated (such as in BY-group processing). The procedure \nprocesses the DISPLAY statement on a CAS server and thus sends only a subset of ODS tables to the SAS client. \nBecause ODS statements are processed on a SAS client, all the display tables generated are first sent to the \nclient and then the client creates a subset. If both DISPLAY and ODS statements are used together, the DISPLAY \nstatement takes precedence over the ODS statements."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CASESENSITIVE","StatementOptionHelp":{"#cdata":"Performs a case-sensitive comparison of table names in the table-list to display table names when \ntables are subsetted for display. To preserve case, you must enclose table names in the table-list \nin quotation marks."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDE","StatementOptionHelp":{"#cdata":"Displays all display tables except those specified in the table-list."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDEALL","StatementOptionHelp":{"#cdata":"Suppresses display of all tables. This option takes precedence over the other options."},"StatementOptionType":"S"},{"StatementOptionName":"TRACE","StatementOptionHelp":{"#cdata":"Displays the display table names, labels, and paths."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAYOUT","StatementHelp":{"#cdata":"Syntax: DISPLAYOUT table-spec-list < / options > ;\n      \nThe DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This\nstatement is similar to the ODS OUTPUT statement.\n\nThe table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a\nkey=value format:\n\n  key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the\n    CAS output table name.\n  key specifies key as the ODS table name and also as the CAS output table name.\n  \nTable names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT\nstatement does not support regular expressions."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"INCLUDEALL","StatementOptionHelp":{"#cdata":"Creates output CAS tables for all display tables. The name of the created output CAS table is the same \nas the corresponding display table name. If you specify this option, the table-spec-list specification \nis ignored."},"StatementOptionType":"S"},{"StatementOptionName":"NOREPLACE","StatementOptionHelp":{"#cdata":"Does not replace an existing CAS output table of the same name."},"StatementOptionType":"S"},{"StatementOptionName":"REPEATED","StatementOptionHelp":{"#cdata":"Replicates all CAS output tables on all nodes."},"StatementOptionType":"S"}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT OUT=CAS-libref.data-table\n    <COPYVARS=(variables)>\n    <keyword <=prefix>>\u2026<keyword <=prefix>>;\n\nThe OUTPUT statement creates a data table that contains observationwise statistics, which are \ncomputed after PROC ICA fits the model. If you do not specify a keyword, then only the independent \ncomponent values are included."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table\n          \nNames the output data table for PROC TSNE to use. You must specify this option before any other options. \n\nCAS-libref.data-table is a two-level name, where\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to where the data table is to be stored, and\n    a session identifier, which defaults to the active session but which can be explicitly\n    defined in the LIBNAME statement. \n    \n  data-table specifies the name of the output data table."},"StatementOptionType":"V"},{"StatementOptionName":"COPYVAR=|COPYVARS=","StatementOptionHelp":{"#cdata":"Syntax: COPYVAR=variable | COPYVARS=(variables) \n          \nTransfers one or more variables from the input data table to the output data table."},"StatementOptionType":"V"},{"StatementOptionName":"COMP|COMPONENT","StatementOptionHelp":{"#cdata":"Syntax: COMP<=prefix> | COMPONENT<=prefix>\n          \nRequests the source values for each indepedent component. The optional prefix is for naming the \noutput variables. The default prefix is the one that you specify in the PREFIX= option."},"StatementOptionType":"S|V"},{"StatementOptionName":"WHITE","StatementOptionHelp":{"#cdata":"Syntax: WHITE<=prefix>\n          \nRequests the source values for each whitened variable. The optional prefix is for naming the \noutput variables. The default prefix is the one that you specify in the WHITEPREFIX= option."},"StatementOptionType":"S|V"}]}},{"StatementName":"VAR","StatementHelp":{"#cdata":"Syntax: VAR variables;\n\nThe VAR statement lists the numeric variables to be analyzed. If you omit the VAR statement, \nall numeric variables that are not specified in other statements are analyzed."},"StatementOptions":null}]}}}