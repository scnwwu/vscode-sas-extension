{"Procedure":{"Name":"INTPOINT","ProductGroup":"SAS/OR","ProcedureHelp":{"#cdata":"Syntax: PROC INTPOINT options ; \n    CAPACITY variable ; \n    COEF variables ; \n    COLUMN variable ; \n    COST variable ; \n    DEMAND variable ; \n    HEADNODE variable ; \n    ID variables ; \n    LO variable ; \n    NAME variable ; \n    NODE variable ; \n    QUIT; \n    RHS variable ; \n    ROW variables ; \n    RUN; \n    SUPDEM variable ; \n    SUPPLY variable ; \n    TAILNODE variable ; \n    TYPE variable ; \n    VAR variables ;\n\nThe INTPOINT procedure solves the Network Program with Side Constraints (NPSC) problem and the \nmore general Linear Programming (LP) problem. NPSC and LP models can be used to describe a wide \nvariety of real-world applications ranging from production, inventory, and distribution problems \nto financial applications."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ARCDATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: ARCDATA=SAS-data-set] \n      \nNames the data set that contains arc and, optionally, nonarc variable information and nodal \nsupply/demand data."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"CONDATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: CONDATA=SAS-data-set] \n      \nNames the data set that contains the side constraint data."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"CONOUT=|COUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: CONOUT=SAS-data-set] \n      \nNames the output data set that receives an optimal solution."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"MPSOUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: MPSOUT=SAS-data-set] \n      \nNames the SAS data set that contains converted sparse or dense format input data in MPS format."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"NODEDATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: NODEDATA=SAS-data-set] \n      \nNames the data set that contains the node supply and demand specifications."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"ARCS_ONLY_ARCDATA","ProcedureOptionHelp":{"#cdata":"Indicates that data for arcs only are in the ARCDATA= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ARC_SINGLE_OBS","ProcedureOptionHelp":{"#cdata":"Indicates that for all arcs and nonarc variables, data for each arc or nonarc variable is found in \nonly one observation of the ARCDATA= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"BYPASSDIVIDE=|BYPASSDIV=|BPD=","ProcedureOptionHelp":{"#cdata":"[Syntax: BYPASSDIVIDE=b] \n      \nShould be used only when the MAXFLOW option has been specified; that is, PROC INTPOINT is solving \na maximal flow problem."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"BYTES=","ProcedureOptionHelp":{"#cdata":"[Syntax: BYTES=b] \n      \nIndicates the size of the main working memory (in bytes) that PROC INTPOINT will allocate."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CON_SINGLE_OBS","ProcedureOptionHelp":{"#cdata":"Improves how the CONDATA= data set is read. How it works depends on whether the CONDATA has a dense \nor sparse format."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"DEFCAPACITY=|DC=","ProcedureOptionHelp":{"#cdata":"[Syntax: DEFCAPACITY=c] \n      \nRequests that the default arc capacity and the default nonarc variable value upper bound \n(or for LP problems, the default LP variable value upper bound) be c."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DEFCONTYPE=|DEFTYPE=|DCT=","ProcedureOptionHelp":{"#cdata":"Specifies the default constraint type."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"LE","@Value2":"EQ","@Value3":"GE"},"ProcedureOptionToolTips":{"@ToolTip1":"For less than or equal to","@ToolTip2":"For equal to","@ToolTip3":"For greater than or equal to"}},{"ProcedureOptionName":"DEFCOST=","ProcedureOptionHelp":{"#cdata":"[Syntax: DEFCOST=c] \n      \nRequests that the default arc cost and the default nonarc variable objective function coefficient \n(or for an LP, the default LP variable objective function coefficient) be c."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DEFMINFLOW=|DMF=","ProcedureOptionHelp":{"#cdata":"[Syntax: DEFMINFLOW=m] \n      \nRequests that the default lower flow bound through arcs and the default lower value bound of \nnonarc variables (or for an LP, the default lower value bound of LP variables) be m."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DEMAND=","ProcedureOptionHelp":{"#cdata":"[Syntax: DEMAND=d] \n      \nSpecifies the demand at the SINK node specified by the SINK= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"GROUPED=","ProcedureOptionHelp":{"#cdata":"PROC INTPOINT can take a much shorter time to read data if the data have been grouped prior to the PROC INTPOINT call."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"ARCDATA","@Value2":"CONDATA","@Value3":"BOTH","@Value4":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Indicates that the ARCDATA= data set has been grouped by values of the NAME list variable.","@ToolTip2":"Indicates that the CONDATA= data set has been grouped.","@ToolTip3":"Indicates that both GROUPED=ARCDATA and GROUPED=CONDATA are TRUE.","@ToolTip4":"Indicates that the data sets have not been grouped, that is, neither GROUPED=ARCDATA nor GROUPED=CONDATA is TRUE.  This is the default, but it is much better if GROUPED=ARCDATA, or GROUPED=CONDATA, or GROUPED=BOTH."}},{"ProcedureOptionName":"INFINITY=","ProcedureOptionHelp":{"#cdata":"[Syntax: INFINITY=i] \n      \nIs the largest number used by PROC INTPOINT in computations."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXFLOW|MF","ProcedureOptionHelp":{"#cdata":"Specifies that PROC INTPOINT solve a maximum flow problem."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MAXIMIZE|MAX","ProcedureOptionHelp":{"#cdata":"Specifies that PROC INTPOINT find the maximum cost flow through the network."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MEMREP","ProcedureOptionHelp":{"#cdata":"Indicates that information on the memory usage and paging schemes (if necessary) is reported by \nPROC INTPOINT on the SAS log."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NAMECTRL=","ProcedureOptionHelp":{"#cdata":"[Syntax: NAMECTRL=i] \n      \nIs used to interpret arc and nonarc variable names in the CONDATA= data set."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NARCS=","ProcedureOptionHelp":{"#cdata":"[Syntax: NARCS=n] \n      \nSpecifies the approximate number of arcs."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NCOEFS=","ProcedureOptionHelp":{"#cdata":"[Syntax: NCOEFS=n] \n      \nSpecifies the approximate number of constraint coefficients."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NCONS=","ProcedureOptionHelp":{"#cdata":"[Syntax: NCONS=n] \n      \nSpecifies the approximate number of constraints."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NNAS=","ProcedureOptionHelp":{"#cdata":"[Syntax: NNAS=n] \n      \nSpecifies the approximate number of nonarc variables."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NNODES=","ProcedureOptionHelp":{"#cdata":"[Syntax: NNODES=n] \n      \nSpecifies the approximate number of nodes."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NON_REPLIC=","ProcedureOptionHelp":{"#cdata":"Prevents PROC INTPOINT from doing unnecessary checks of data previously read."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"COEFS","@Value2":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Indicates that each constraint coefficient is specified once in the CONDATA= data set.","@ToolTip2":"Indicates that constraint coefficients can be specified more than once in the CONDATA= data set. This is the default."}},{"ProcedureOptionName":"OPTIM_TIMER","ProcedureOptionHelp":{"#cdata":"Indicates that the procedure is to issue a message to the SAS log giving the CPU time spent doing \n optimization."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"RHSOBS=","ProcedureOptionHelp":{"#cdata":"[Syntax: RHSOBS=charstr] \n      \nSpecifies the keyword that identifies a right-hand-side observation when using the sparse format \nfor data in the CONDATA= data set. The keyword is expected as a value of the SAS variable in the \nCONDATA= data set named in the COLUMN list specification. The default value of the RHSOBS= option \nis _RHS_ or _rhs_. If charstr is not a valid SAS variable name, enclose it in quotes."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SCALE=","ProcedureOptionHelp":{"#cdata":"Indicates that the NPSC side constraints or the LP constraints are to be scaled. Scaling is useful \nwhen some coefficients are either much larger or much smaller than other coefficients."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"ROW","@Value2":"COL","@Value3":"BOTH","@Value4":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Specify this if you want the largest absolute value of coefficients in each constraint to be about 1.0.","@ToolTip2":"Specify this if you want NPSC nonarc variable columns or LP variable columns to be scaled so that the  absolute value of the largest constraint coefficient of that variable is near to 1.","@ToolTip3":"Specify this if you want the largest absolute value of coefficients in each constraint, and the absolute  value of the largest constraint coefficient of an NPSC nonarc variable or LP variable to be near to 1.  This is the default.","@ToolTip4":"Specify this if no scaling should be done."}},{"ProcedureOptionName":"SHORTPATH|SP","ProcedureOptionHelp":{"#cdata":"Specifies that PROC INTPOINT solve a shortest path problem."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SINK=|SINKNODE=","ProcedureOptionHelp":{"#cdata":"[Syntax: SINK=sinkname] \n      \nIdentifies the demand node. The SINK= option is useful when you specify the MAXFLOW option or \nthe SHORTPATH option and you need to specify toward which node the shortest path or maximum flow \nis directed."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SOURCE=|SOURCENODE=","ProcedureOptionHelp":{"#cdata":"[Syntax: SOURCE=sourcename] \n      \nIdentifies a supply node. The SOURCE= option is useful when you specify the MAXFLOW or the SHORTPATH \noption and need to specify from which node the shortest path or maximum flow originates."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SPARSECONDATA|SCDATA","ProcedureOptionHelp":{"#cdata":"Indicates that the CONDATA= data set has data in the sparse data format. Otherwise, it is assumed \nthat the data are in the dense format."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SUPPLY=","ProcedureOptionHelp":{"#cdata":"[Syntax: SUPPLY=s] \n      \nSpecifies the supply at the source node specified by the SOURCE= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"THRUNET","ProcedureOptionHelp":{"#cdata":"Tells PROC INTPOINT to force through the network any excess supply (the amount by which total supply \nexceeds total demand) or any excess demand (the amount by which total demand exceeds total supply) \nas is required."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"TYPEOBS=","ProcedureOptionHelp":{"#cdata":"[Syntax: TYPEOBS=charstr] \n      \nSpecifies the keyword that identifies a type observation when using the sparse format for data \nin the CONDATA= data set. The keyword is expected as a value of the SAS variable in the CONDATA= \ndata set named in the COLUMN list specification. The default value of the TYPEOBS= option is _TYPE_ \nor _type_. If charstr is not a valid SAS variable name, enclose it in quotes."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"VERBOSE=","ProcedureOptionHelp":{"#cdata":"[Syntax: VERBOSE=v] \n      \nLimits the number of similar messages that are displayed on the SAS log."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ZERO2=|Z2=","ProcedureOptionHelp":{"#cdata":"[Syntax: ZERO2=z] \n      \nSpecifies the zero tolerance level used when determining whether the final solution has \nbeen reached."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ZEROTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: ZEROTOL=z] \n \nSpecifies the zero tolerance used when PROC INTPOINT must compare any real number with another \nreal number, or zero."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"FACT_METHOD=","ProcedureOptionHelp":{"#cdata":"[Syntax: FACT_METHOD=f] \n      \nEnables you to choose the type of algorithm used to factorize and solve the main linear systems \nat each iteration of the interior point algorithm."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TOLDINF=|RTOLDINF=","ProcedureOptionHelp":{"#cdata":"[Syntax: TOLDINF=t] \n      \nSpecifies the allowed amount of dual infeasibility."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TOLPINF=|RTOLPINF=","ProcedureOptionHelp":{"#cdata":"[Syntax: TOLPINF=t] \n      \nSpecifies the allowed amount of primal infeasibility."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TOLTOTDINF=|TOLTOTDINF=","ProcedureOptionHelp":{"#cdata":"[Syntax: TOLTOTDINF=t] \n      \nSpecifies the allowed total amount of dual infeasibility."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TOLTOTPINF=|RTOLTOTPINF=","ProcedureOptionHelp":{"#cdata":"[Syntax: TOLTOTPINF=t] \n      \nSpecifies the allowed total amount of primal infeasibility."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CHOLTINYTOL=|RCHOLTINYTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: CHOLTINYTOL=c] \n      \nSpecifies the cut-off tolerance for Cholesky factorization."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DENSETHR=|RDENSETHR=","ProcedureOptionHelp":{"#cdata":"[Syntax: DENSETHR=d] \n      \nSpecifies the density threshold for Cholesky factorization."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PDSTEPMULT=|RPDSTEPMULT=","ProcedureOptionHelp":{"#cdata":"[Syntax: PDSTEPMULT=p] \n      \nSpecifies the step-length multiplier."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PRSLTYPE=|IPRSLTYPE=","ProcedureOptionHelp":{"#cdata":"Controls how much preprocessing to do."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"-1","@Value2":"0","@Value3":"1","@Value4":"2","@Value5":"3"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies not to perform preprocessing.","@ToolTip2":"Given upper and lower bounds on each variable, the greatest and least contribution to the row activity  of each variable is computed. If these are within the limits set by the upper and lower bounds on the  row activity, then the row is redundant and can be discarded. Otherwise, whenever possible, the bounds  on any of the variables are tightened.","@ToolTip3":"When there are exactly two unfixed variables with coefficients in an equality constraint, one variable  is solved in terms of the other. The problem will have one less variable.","@ToolTip4":"It may be possible to determine that an equality constraint is not constraining a variable.","@ToolTip5":"All possible reductions are performed. PRSLTYPE=3 is the default."}},{"ProcedureOptionName":"PRINTLEVEL2=","ProcedureOptionHelp":{"#cdata":"[Syntax: PRINTLEVEL2=p] \n      \nIs used when you want to see PROC INTPOINT's progress to the optimum."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"RTTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: RTTOL=r] \n      \nSpecifies the zero tolerance used during the ratio test of the interior point algorithm."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXITERB=|IMAXITERB=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXITERB=m] \n      \nSpecifies the maximum number of iterations that the interior point algorithm can perform. \nThe default value for m is 100."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PDGAPTOL=|RPDGAPTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: PDGAPTOL=p] \n      \nSpecifies the primal-dual gap or duality gap tolerance."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STOP_C=","ProcedureOptionHelp":{"#cdata":"[Syntax: STOP_C=s] \n      \nIs used to determine whether optimization should stop. At the beginning of each iteration, \nif complementarity is less than of equal to s, optimization will stop."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STOP_DG=","ProcedureOptionHelp":{"#cdata":"[Syntax: STOP_DG=s] \n      \nIs used to determine whether optimization should stop. At the beginning of each iteration, if the \nduality gap is less than of equal to s, optimization will stop."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STOP_IB=","ProcedureOptionHelp":{"#cdata":"[Syntax: STOP_IB=s] \n      \nIs used to determine whether optimization should stop. At the beginning of each iteration, if total \nbound infeasibility is less than of equal to s, optimization will stop."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STOP_IC=","ProcedureOptionHelp":{"#cdata":"[Syntax: STOP_IC=s] \n      \nIs used to determine whether optimization should stop. At the beginning of each iteration, if total \nconstraint infeasibility is less than of equal to s, optimization will stop."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STOP_ID=","ProcedureOptionHelp":{"#cdata":"[Syntax: STOP_ID=s] \n      \nIs used to determine whether optimization should stop. At the beginning of each iteration, if total \ndual infeasibility is less than of equal to s, optimization will stop."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AND_STOP_C=","ProcedureOptionHelp":{"#cdata":"[Syntax: AND_STOP_C=s] \n      \nIs used to determine whether optimization should stop. At the beginning of each iteration, \nif complementarity (the value of the Complem-ity column in the table produced when you specify \nPRINTLEVEL2=1 or PRINTLEVEL2=2) is <= s, and the other conditions related to other AND_STOP \nparameters are also satisfied, optimization will stop."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AND_STOP_DG=","ProcedureOptionHelp":{"#cdata":"[Syntax: AND_STOP_DG=s] \n      \nIs used to determine whether optimization should stop. At the beginning of each iteration, if the \nduality gap (the value of the Duality_gap column in the table produced when you specify PRINTLEVEL2=1 \nor PRINTLEVEL2=2) is <= s, and the other conditions related to other AND_STOP parameters are also satisfied, \noptimization will stop."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AND_STOP_IB=","ProcedureOptionHelp":{"#cdata":"[Syntax: AND_STOP_IB=s] \n      \nIs used to determine whether optimization should stop. At the beginning of each iteration, if total \nbound infeasibility is <= s, and the other conditions related to other AND_STOP parameters are also \nsatisfied, optimization will stop."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AND_STOP_IC=","ProcedureOptionHelp":{"#cdata":"[Syntax: AND_STOP_IC=s] \n      \nIs used to determine whether optimization should stop. At the beginning of each iteration, if total \nconstraint infeasibility is <= s, and the other conditions related to other AND_STOP parameters are \nalso satisfied, optimization will stop."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AND_STOP_ID=","ProcedureOptionHelp":{"#cdata":"[Syntax: AND_STOP_ID=s] \n      \nIs used to determine whether optimization should stop. At the beginning of each iteration, if total \ndual infeasibility is <= s, and the other conditions related to other AND_STOP parameters are also \nsatisfied, optimization will stop."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"KEEPGOING_C=","ProcedureOptionHelp":{"#cdata":"[Syntax: KEEPGOING_C=s] \n      \nIs used to determine whether optimization should stop. When a stopping condition is met, if \ncomplementarity (the value of the Complem-ity column in the table produced when you specify \nPRINTLEVEL2=1 or PRINTLEVEL2=2) is > s, optimization will continue."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"KEEPGOING_DG=","ProcedureOptionHelp":{"#cdata":"[Syntax: KEEPGOING_DG=s] \n      \nIs used to determine whether optimization should stop. When a stopping condition is met, if the \nduality gap (the value of the Duality_gap column in the table produced when you specify PRINTLEVEL2=1 \nor PRINTLEVEL2=2) is > s, optimization will continue."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"KEEPGOING_IC=","ProcedureOptionHelp":{"#cdata":"[Syntax: KEEPGOING_IC=s] \n      \nIs used to determine whether optimization should stop. When a stopping condition is met, \nif total constraint infeasibility is > s, optimization will continue."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"KEEPGOING_ID=","ProcedureOptionHelp":{"#cdata":"[Syntax: KEEPGOING_ID=s] \n      \nIs used to determine whether optimization should stop. When a stopping condition is met, \nif total dual infeasibility is > s, optimization will continue. "},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AND_KEEPGOING_C=","ProcedureOptionHelp":{"#cdata":"[Syntax: AND_KEEPGOING_C=s] \n      \nIs used to determine whether optimization should stop. When a stopping condition is met, \nif complementarity (the value of the Complem-ity column in the table produced when you \nspecify PRINTLEVEL2=1 or PRINTLEVEL2=2) is > s, and the other conditions related to other \nAND_KEEPGOING parameters are also satisfied, optimization will continue."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AND_KEEPGOING_DG=","ProcedureOptionHelp":{"#cdata":"[Syntax: AND_KEEPGOING_DG=s] \n      \nIs used to determine whether optimization should stop. When a stopping condition is met, \nif the duality gap (the value of the Duality_gap column in the table produced when you \nspecify PRINTLEVEL2=1 or PRINTLEVEL2=2) is > s, and the other conditions related to other \nAND_KEEPGOING parameters are also satisfied, optimization will continue."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AND_KEEPGOING_IB=","ProcedureOptionHelp":{"#cdata":"[Syntax: AND_KEEPGOING_IB=s] \n      \nIs used to determine whether optimization should stop. When a stopping condition is met, \nif total bound infeasibility is > s, and the other conditions related to other AND_KEEPGOING \nparameters are also satisfied, optimization will continue."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AND_KEEPGOING_IC=","ProcedureOptionHelp":{"#cdata":"[Syntax: AND_KEEPGOING_IC=s] \n      \nIs used to determine whether optimization should stop. When a stopping condition is met, if \ntotal constraint infeasibility is > s, and the other conditions related to other AND_KEEPGOING \nparameters are also satisfied, optimization will continue."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AND_KEEPGOING_ID=","ProcedureOptionHelp":{"#cdata":"[Syntax: AND_KEEPGOING_ID=s] \n      \nIs used to determine whether optimization should stop. When a stopping condition is met, \nif total dual infeasibility is > s, and the other conditions related to other AND_KEEPGOING \nparameters are also satisfied, optimization will continue."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"CAPACITY|CAPAC|UPPERBD","StatementHelp":{"#cdata":"Syntax: CAPACITY | CAPAC | UPPERBD variable ;\n      \nThe CAPACITY statement identifies the SAS variable in the ARCDATA= data set that contains the \nmaximum feasible flow or capacity of the network arcs. If an observation contains nonarc variable \ninformation, the CAPACITY list variable is the upper value bound for the nonarc variable named in \nthe NAME list variable in that observation. \n\nWhen solving an LP, the CAPACITY statement identifies the SAS variable in the ARCDATA= data set \nthat contains the maximum feasible value of the LP variables. \n\nThe CAPACITY list variable must have numeric values. It is not necessary to have a CAPACITY \nstatement if the name of the SAS variable is _CAPAC_, _UPPER_, _UPPERBD, or _HI_."},"StatementOptions":null},{"StatementName":"COEF","StatementHelp":{"#cdata":"Syntax: COEF variables ;\n\nThe COEF list is used with the sparse input format of the CONDATA= data set. The COEF list can \ncontain more than one SAS variable, each of which must have numeric values. If the COEF statement \nis not specified, the CONDATA= data set is searched and SAS variables with names beginning with \n_COE are used. The number of SAS variables in the COEF list must be no greater than the number of \nSAS variables in the ROW list."},"StatementOptions":null},{"StatementName":"COLUMN","StatementHelp":{"#cdata":"Syntax: COLUMN variable ;\n\nThe COLUMN list is used with the sparse input format of the CONDATA= data set."},"StatementOptions":null},{"StatementName":"COST|OBJFN","StatementHelp":{"#cdata":"Syntax: COST variable ; | OBJFN variable ;\n\nThe COST statement identifies the SAS variable in the ARCDATA= data set that contains the \nper unit flow cost through an arc."},"StatementOptions":null},{"StatementName":"DEMAND","StatementHelp":{"#cdata":"Syntax: DEMAND variable ;\n\nThe DEMAND statement identifies the SAS variable in the ARCDATA= data set that contains the \ndemand at the node named in the corresponding HEADNODE list variable. The DEMAND list variable \nmust have numeric values. It is not necessary to have a DEMAND statement if the name of this SAS \nvariable is _DEMAND_."},"StatementOptions":null},{"StatementName":"HEADNODE|HEAD|TOPNODE|TO","StatementHelp":{"#cdata":"Syntax: HEADNODE | HEAD | TOPNODE | TO variable ; \n\n\nThe HEADNODE statement specifies the SAS variable that must be present in the ARCDATA= data \nset that contains the names of nodes toward which arcs are directed. It is not necessary to \nhave a HEADNODE statement if the name of the SAS variable is _HEAD_ or _TO_. The HEADNODE \nvariable must have character values. \n\nThere should be no HEAD statement if you are solving an LP."},"StatementOptions":null},{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variables ;\n\nThe ID statement specifies SAS variables containing values for pre- and post-optimal processing \nand analysis."},"StatementOptions":null},{"StatementName":"LO|LOWERBD|MINFLOW","StatementHelp":{"#cdata":"Syntax: LO variable ; |LOWERBD variable ; | MINFLOW variable ;\n\nThe LO statement identifies the SAS variable in the ARCDATA= data set that contains the minimum \nfeasible flow or lower flow bound for arcs in the network."},"StatementOptions":null},{"StatementName":"NAME|ARCNAME|VARNAME","StatementHelp":{"#cdata":"Syntax: NAME variable ; | ARCNAME variable ; | VARNAME variable ;\n\nEach arc and nonarc variable in an NPSC, or each variable in an LP, that has data in the CONDATA= \ndata set must have a unique name. This variable is identified in the ARCDATA= data set."},"StatementOptions":null},{"StatementName":"NODE","StatementHelp":{"#cdata":"Syntax: NODE variable ;\n\nThe NODE list variable, which must be present in the NODEDATA= data set, has names of nodes \nas values."},"StatementOptions":null},{"StatementName":"QUIT","StatementHelp":{"#cdata":"Syntax: QUIT ;\n\nThe QUIT statement indicates that PROC INTPOINT is to stop immediately."},"StatementOptions":null},{"StatementName":"RHS","StatementHelp":{"#cdata":"Syntax: RHS variable ;\n\nThe RHS variable list is used when the dense format of the CONDATA= data set is used."},"StatementOptions":null},{"StatementName":"ROW","StatementHelp":{"#cdata":"Syntax: ROW variables ;\n\nThe ROW list is used when either the sparse or the dense format of the CONDATA= data set \nis being used. SAS variables in the ROW list have values that are constraint or special \nrow names. The SAS variables in the ROW list must have character values."},"StatementOptions":null},{"StatementName":"RUN","StatementHelp":{"#cdata":"Syntax: RUN ;\n\nThe RUN statement causes optimization to be started."},"StatementOptions":null},{"StatementName":"SUPDEM","StatementHelp":{"#cdata":"Syntax: SUPDEM variable ;\n\nThe SAS variable in this list, which must be present in the NODEDATA= data set, contains supply \nand demand information for the nodes in the NODE list."},"StatementOptions":null},{"StatementName":"SUPPLY","StatementHelp":{"#cdata":"Syntax: SUPPLY variable ;\n\nThe SUPPLY statement identifies the SAS variable in the ARCDATA= data set that contains the supply \nat the node named in that observation's TAILNODE list variable."},"StatementOptions":null},{"StatementName":"TAILNODE|TAIL|FROMNODE|FROM","StatementHelp":{"#cdata":"Syntax: TAILNODE variable ; | TAIL variable ; |\n    FROMNODE variable ; |  FROM variable ;\n\nThe TAILNODE statement specifies the SAS variable that must (when solving an NPSC problem) be present \nin the ARCDATA= data set that has as values the names of tail nodes of arcs. The TAILNODE variable \nmust have character values."},"StatementOptions":null},{"StatementName":"TYPE|CONTYPE","StatementHelp":{"#cdata":"Syntax: TYPE variable ; | CONTYPE variable ;\n\nThe TYPE list, which is optional, names the SAS variable that has as values keywords that indicate\neither the constraint type for each constraint or the type of special rows in the CONDATA= data set."},"StatementOptions":null},{"StatementName":"VAR","StatementHelp":{"#cdata":"Syntax: VAR variables ;\n\nThe VAR variable list is used when the dense data format is used for the CONDATA= data set. \nThe names of these SAS variables are also names of the arc and nonarc variables that have \ndata in the CONDATA= data set."},"StatementOptions":null}]}}}