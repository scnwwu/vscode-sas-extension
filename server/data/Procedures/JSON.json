{"Procedure":{"Name":"JSON","ProductGroup":"BASE","#comment":{},"ProcedureHelp":{"#cdata":"Syntax: PROC JSON OUT=fileref | \"external-file\" <option(s)>; \n  EXPORT <libref.>SAS-data-set <(SAS-data-set-option(s))> </option(s)>; \n  WRITE VALUES value(s) </option(s)>; \n  WRITE OPEN type; \n  WRITE CLOSE;\n  \nThe JSON procedure reads data from a SAS data set and writes it to an external file in JSON1 \nrepresentation. You can control the exported data with several options that remove content \nand affect the format. In addition to exporting data from a SAS data set, PROC JSON provides \nstatements that enable you to write additional data to the external file and control JSON \ncontainers."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"OUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUT=fileref | \"external-file\"] \n      \nIdentifies the JSON output file. \n\nfileref \nspecifies the SAS fileref that is assigned to the JSON output file. To assign a fileref, \nuse the FILENAME statement.\n\n\"external-file\"\nis the physical location of the JSON output file. Include the complete pathname and the filename. \nEnclose the physical name in single or double quotation marks. The maximum length is 200 characters."},"ProcedureOptionType":"RV"},{"ProcedureOptionName":"FMTCHARACTER|FMTCHAR","ProcedureOptionHelp":{"#cdata":"Specifies to apply a character SAS format to the resulting output if a character SAS \nformat is associated with a SAS data set variable. \n\nInteraction: You can specify FMTCHARACTER | NOFMTCHARACTER in the PROC JSON statement, \nthe EXPORT statement, or both. If the option is specified in both statements, the EXPORT \nstatement specification takes precedence. \n\nNote: User-defined formats are also supported."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOFMTCHARACTER|NOFMTCHAR","ProcedureOptionHelp":{"#cdata":"Specifies not to apply a character SAS format to the resulting output if a character SAS \nformat is associated with a SAS data set variable. \n\nThis is the default.\n\nInteraction: You can specify FMTCHARACTER | NOFMTCHARACTER in the PROC JSON statement, \nthe EXPORT statement, or both. If the option is specified in both statements, the EXPORT \nstatement specification takes precedence."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"FMTDATETIME|FMTDT","ProcedureOptionHelp":{"#cdata":"Specifies to apply a date, time, or datetime SAS format to the resulting output if a date, \ntime, or datetime SAS format is associated with a SAS data set variable. Applying a SAS format \nmakes the date and time values in the resulting JSON output more readable. \n\nThis is the default.\n\nInteraction: You can specify FMTCHARACTER | NOFMTCHARACTER in the PROC JSON statement, \nthe EXPORT statement, or both. If the option is specified in both statements, the EXPORT \nstatement specification takes precedence. \n\nTip: User-defined formats are also supported."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOFMTDATETIME|NOFMTDT","ProcedureOptionHelp":{"#cdata":"Specifies not to apply a date, time, or datetime SAS format to the resulting output if a date, \ntime, or datetime SAS format is associated with a SAS data set variable."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"FMTNUMERIC|FMTNUM","ProcedureOptionHelp":{"#cdata":"Specifies to apply a numeric SAS format to the resulting output if a numeric SAS format \nis associated with a SAS data set variable. \n\nRequirement: FMTNUMERIC applies numeric SAS formats. For date, time, and datetime SAS \nformats, use the FMTDATETIME option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOFMTNUMERIC|NOFMTNUM","ProcedureOptionHelp":{"#cdata":"Specifies not to apply a numeric SAS format to the resulting output if a numeric SAS format \nis associated with a SAS data set variable. \n\nThis is the default. \n\nInteraction: With NOFMTNUMERIC or when a numeric variable does not have an associated SAS format, \nnumeric values are written to the output file with a maximum of 12 digits."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"KEYS","ProcedureOptionHelp":{"#cdata":"Specifies to include SAS variable names in the JSON output file. \n      \nDefault: KEYS\n\nInteraction: You can specify KEYS | NOKEYS in the PROC JSON statement, the EXPORT statement, \nor both. If the option is specified in both statements, the EXPORT statement specification \ntakes precedence."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOKEYS","ProcedureOptionHelp":{"#cdata":"Specifies to suppress SAS variable names in the JSON output file. \n      \nDefault: KEYS\n\nInteraction: You can specify KEYS | NOKEYS in the PROC JSON statement, the EXPORT statement, \nor both. If the option is specified in both statements, the EXPORT statement specification \ntakes precedence."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PRETTY","ProcedureOptionHelp":{"#cdata":"Specifies not to format the JSON output. PRETTY creates a more human-readable format that uses \nindention to illustrate the JSON container structure. NOPRETTY writes the output in a single line.\n\nDefault: NOPRETTY \n\nRestriction: You can specify PRETTY | NOPRETTY in the PROC JSON statement only."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPRETTY","ProcedureOptionHelp":{"#cdata":"Specifies not to format the JSON output. PRETTY creates a more human-readable format that uses \nindention to illustrate the JSON container structure. NOPRETTY writes the output in a single line.\n\nDefault: NOPRETTY \n\nRestriction: You can specify PRETTY | NOPRETTY in the PROC JSON statement only."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SASTAGS","ProcedureOptionHelp":{"#cdata":"Specifies to include SAS metadata at the top of the JSON output file. The metadata consists of \nthe SAS export version, exported SAS data set name, and any non-default option specification, \nsuch as PRETTY. \n\nDefault: SASTAGS \n\nInteraction: You can specify SASTAGS | NOSASTAGS in the PROC JSON statement, the EXPORT statement, \nor both. If the option is specified in both statements, the EXPORT statement specification takes \nprecedence."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOSASTAGS","ProcedureOptionHelp":{"#cdata":"Specifies to suppress SAS metadata at the top of the JSON output file. The metadata consists \nof the SAS export version, exported SAS data set name, and any non-default option specification, \nsuch as PRETTY. \n\nDefault: SASTAGS \n\nInteraction: You can specify SASTAGS | NOSASTAGS in the PROC JSON statement, the EXPORT statement, \nor both. If the option is specified in both statements, the EXPORT statement specification takes \nprecedence."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SCAN","ProcedureOptionHelp":{"#cdata":"Specifies that PROC JSON scans and encodes input strings to ensure that only characters that \nare acceptable are exported to the JSON output file. \n\nDefault: SCAN"},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOSCAN","ProcedureOptionHelp":{"#cdata":"Specifies that PROC JSON does not scan and encode input strings.\n      \nDefault: SCAN \n\nInteractions: NOSCAN indicates that the input string is known to contain acceptable JSON text or has \nalready been scanned. When NOSCAN is in effect, the input string or character value is taken as is, \nand the output JSON string is enclosed in quotation marks. \n\nYou can specify SCAN | NOSCAN in the PROC JSON statement, the EXPORT statement, the WRITE VALUES \nstatement, or all three statements. If the option is specified in multiple statements, the EXPORT\nstatement specification takes precedence."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"TRIMBLANKS","ProcedureOptionHelp":{"#cdata":"Specifies to remove trailing blanks from the end of character data in the JSON output. \nOnly space characters are removed. \n\nDefault: TRIMBLANKS \n\nInteraction: You can specify TRIMBLANKSNOTRIMBLANKS in the PROC JSON statement, the EXPORT \nstatement, the WRITE VALUES statement, or all three. If the option is specified in multiple \nstatements, the EXPORT statement specification takes precedence."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOTRIMBLANKS","ProcedureOptionHelp":{"#cdata":"Specifies to retain trailing blanks from the end of character data in the JSON output. \n\nDefault: TRIMBLANKS \n\nInteraction: You can specify TRIMBLANKS | NOTRIMBLANKS in the PROC JSON statement, the EXPORT \nstatement, the WRITE VALUES statement, or all three. If the option is specified in multiple \nstatements, the EXPORT statement specification takes precedence."},"ProcedureOptionType":"S"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"EXPORT|EX","StatementHelp":{"#cdata":"Syntax: EXPORT <libref.>SAS-data-set <(SAS-data-set-option(s))> </option(s)>; \n      \nIdentifies the SAS data set to be exported and controls the resulting output. \n\nInteraction: If the EXPORT statement is the first statement after the PROC JSON statement, the \ntop-level container is a JSON object. However, if the NOSASTAGS option is specified in either \nthe PROC JSON or EXPORT statement, the top-level container is a JSON array. PROC JSON automatically \ncloses the implicitly opened top-level container. \n\nNotes: You can export multiple SAS data sets to the JSON output file by submitting multiple EXPORT \nstatements. The resulting JSON output uses the Unicode encoding form UTF-8. You cannot override the \nencoding in the output file with the ENCODING= data set option in the EXPORT statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"FMTCHARACTER|FMTCHAR","StatementOptionHelp":{"#cdata":"Specifies to apply a character SAS format to the resulting output if a character SAS \nformat is associated with a SAS data set variable. \n\nInteraction: You can specify FMTCHARACTER | NOFMTCHARACTER in the PROC JSON statement, \nthe EXPORT statement, or both. If the option is specified in both statements, the EXPORT \nstatement specification takes precedence. \n\nNote: User-defined formats are also supported."},"StatementOptionType":"S"},{"StatementOptionName":"NOFMTCHARACTER|NOFMTCHAR","StatementOptionHelp":{"#cdata":"Specifies not to apply a character SAS format to the resulting output if a character SAS \nformat is associated with a SAS data set variable. \n\nThis is the default.\n\nInteraction: You can specify FMTCHARACTER | NOFMTCHARACTER in the PROC JSON statement, \nthe EXPORT statement, or both. If the option is specified in both statements, the EXPORT \nstatement specification takes precedence."},"StatementOptionType":"S"},{"StatementOptionName":"FMTDATETIME|FMTDT","StatementOptionHelp":{"#cdata":"Specifies to apply a date, time, or datetime SAS format to the resulting output if a date, \ntime, or datetime SAS format is associated with a SAS data set variable. Applying a SAS format \nmakes the date and time values in the resulting JSON output more readable. \n\nThis is the default.\n\nInteraction: You can specify FMTCHARACTER | NOFMTCHARACTER in the PROC JSON statement, \nthe EXPORT statement, or both. If the option is specified in both statements, the EXPORT \nstatement specification takes precedence. \n\nTip: User-defined formats are also supported."},"StatementOptionType":"S"},{"StatementOptionName":"NOFMTDATETIME|NOFMTDT","StatementOptionHelp":{"#cdata":"Specifies not to apply a date, time, or datetime SAS format to the resulting output if a date, \ntime, or datetime SAS format is associated with a SAS data set variable."},"StatementOptionType":"S"},{"StatementOptionName":"FMTNUMERIC|FMTNUM","StatementOptionHelp":{"#cdata":"Specifies to apply a numeric SAS format to the resulting output if a numeric SAS format \nis associated with a SAS data set variable. \n\nRequirement: FMTNUMERIC applies numeric SAS formats. For date, time, and datetime SAS \nformats, use the FMTDATETIME option."},"StatementOptionType":"S"},{"StatementOptionName":"NOFMTNUMERIC|NOFMTNUM","StatementOptionHelp":{"#cdata":"Specifies not to apply a numeric SAS format to the resulting output if a numeric SAS format \nis associated with a SAS data set variable. \n\nThis is the default. \n\nInteraction: With NOFMTNUMERIC or when a numeric variable does not have an associated SAS format, \nnumeric values are written to the output file with a maximum of 12 digits."},"StatementOptionType":"S"},{"StatementOptionName":"KEYS","StatementOptionHelp":{"#cdata":"Specifies to include SAS variable names in the JSON output file. \n      \nDefault: KEYS\n\nInteraction: You can specify KEYS | NOKEYS in the PROC JSON statement, the EXPORT statement, \nor both. If the option is specified in both statements, the EXPORT statement specification \ntakes precedence."},"StatementOptionType":"S"},{"StatementOptionName":"NOKEYS","StatementOptionHelp":{"#cdata":"Specifies to suppress SAS variable names in the JSON output file. \n      \nDefault: KEYS\n\nInteraction: You can specify KEYS | NOKEYS in the PROC JSON statement, the EXPORT statement, \nor both. If the option is specified in both statements, the EXPORT statement specification \ntakes precedence."},"StatementOptionType":"S"},{"StatementOptionName":"PRETTY","StatementOptionHelp":{"#cdata":"Specifies not to format the JSON output. PRETTY creates a more human-readable format that uses \nindention to illustrate the JSON container structure. NOPRETTY writes the output in a single line.\n\nDefault: NOPRETTY \n\nRestriction: You can specify PRETTY | NOPRETTY in the PROC JSON statement only."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRETTY","StatementOptionHelp":{"#cdata":"Specifies not to format the JSON output. PRETTY creates a more human-readable format that uses \nindention to illustrate the JSON container structure. NOPRETTY writes the output in a single line.\n\nDefault: NOPRETTY \n\nRestriction: You can specify PRETTY | NOPRETTY in the PROC JSON statement only."},"StatementOptionType":"S"},{"StatementOptionName":"SASTAGS","StatementOptionHelp":{"#cdata":"Specifies to include SAS metadata at the top of the JSON output file. The metadata consists of \nthe SAS export version, exported SAS data set name, and any non-default option specification, \nsuch as PRETTY. \n\nDefault: SASTAGS \n\nInteraction: You can specify SASTAGS | NOSASTAGS in the PROC JSON statement, the EXPORT statement, \nor both. If the option is specified in both statements, the EXPORT statement specification takes \nprecedence."},"StatementOptionType":"S"},{"StatementOptionName":"NOSASTAGS","StatementOptionHelp":{"#cdata":"Specifies to suppress SAS metadata at the top of the JSON output file. The metadata consists \nof the SAS export version, exported SAS data set name, and any non-default option specification, \nsuch as PRETTY. \n\nDefault: SASTAGS \n\nInteraction: You can specify SASTAGS | NOSASTAGS in the PROC JSON statement, the EXPORT statement, \nor both. If the option is specified in both statements, the EXPORT statement specification takes \nprecedence."},"StatementOptionType":"S"},{"StatementOptionName":"SCAN","StatementOptionHelp":{"#cdata":"Specifies that PROC JSON scans and encodes input strings to ensure that only characters that \nare acceptable are exported to the JSON output file. \n\nDefault: SCAN \n\nInteraction:\nYou can specify SCAN | NOSCAN in the PROC JSON statement, the EXPORT statement, the WRITE VALUES \nstatement, or all three statements. If the option is specified in multiple statements, the EXPORT\nstatement specification takes precedence."},"StatementOptionType":"S"},{"StatementOptionName":"NOSCAN","StatementOptionHelp":{"#cdata":"Specifies that PROC JSON does not scan and encode input strings.\n      \nDefault: SCAN \n\nInteractions: NOSCAN indicates that the input string is known to contain acceptable JSON text or has \nalready been scanned. When NOSCAN is in effect, the input string or character value is taken as is, \nand the output JSON string is enclosed in quotation marks. \n\nYou can specify SCAN | NOSCAN in the PROC JSON statement, the EXPORT statement, the WRITE VALUES \nstatement, or all three statements. If the option is specified in multiple statements, the EXPORT\nstatement specification takes precedence."},"StatementOptionType":"S"},{"StatementOptionName":"TABLENAME=","StatementOptionHelp":{"#cdata":"[Syntax: TABLENAME=\"name\"]\n        \nSpecifies a name for the exported SAS data set. The name is exported as SAS metadata in the \nJSON output file. Enclose the name in single or double quotation marks. \n\nDefault: The default is the SAS data set member name. \n\nRequirement: The TABLENAME= option requires the SASTAGS option to include the SAS metadata in the JSON output."},"StatementOptionType":"V"},{"StatementOptionName":"TRIMBLANKS","StatementOptionHelp":{"#cdata":"Specifies to remove trailing blanks from the end of character data in the JSON output. \nOnly space characters are removed. \n\nDefault: TRIMBLANKS \n\nInteraction: You can specify TRIMBLANKSNOTRIMBLANKS in the PROC JSON statement, the EXPORT \nstatement, the WRITE VALUES statement, or all three. If the option is specified in multiple \nstatements, the EXPORT statement specification takes precedence."},"StatementOptionType":"S"},{"StatementOptionName":"NOTRIMBLANKS","StatementOptionHelp":{"#cdata":"Specifies to retain trailing blanks from the end of character data in the JSON output. \n\nDefault: TRIMBLANKS \n\nInteraction: You can specify TRIMBLANKS | NOTRIMBLANKS in the PROC JSON statement, the EXPORT \nstatement, the WRITE VALUES statement, or all three. If the option is specified in multiple \nstatements, the EXPORT statement specification takes precedence."},"StatementOptionType":"S"}]}},{"StatementName":"WRITE VALUES|W V","StatementHelp":{"#cdata":"Syntax: WRITE VALUES value(s) </option(s)>; \n      \nWrites one or more values to the JSON output file.\n\nRequired Argument:\n  value(s)\n    specifies one or more values to write to the JSON output file. Separate values with a blank space. \n    A value can be one of the following:\n      \u2022a string, which can be enclosed in single or double quotation marks. If the string is enclosed in \n        quotation marks, there are no restrictions regarding content or length. However, if the string \n        is not enclosed in quotation marks, the following rules apply:\n      \u2022The length of the string cannot exceed 256 bytes.\n      \u2022The first character must begin with a letter of the Latin alphabet (A\u2013Z, a\u2013z) or the underscore. \n        Subsequent characters can be letters of the Latin alphabet, numerals, or underscores.\n      \u2022The string cannot contain blanks or special characters except for the underscore. A string can \n        contain mixed-case letters.\n      \u2022a number represented in integer, floating point, or exponential format.\n      \u2022the Boolean value TRUE | T or FALSE | F.\n      \u2022NULL | N.\n\nInteractions: If the WRITE VALUES statement is the first statement after the PROC JSON statement, \nPROC JSON opens a JSON object as the top-level container. PROC JSON automatically closes the \nimplicitly opened top-level container.\n\nSpecifying multiple values in one WRITE VALUES statement is equivalent to submitting multiple \nWRITE VALUES statements with only one value each. Only the order of the values is significant."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"SCAN","StatementOptionHelp":{"#cdata":"Specifies that PROC JSON scans and encodes input strings to ensure that only characters that \nare acceptable are exported to the JSON output file. \n\nDefault: SCAN \n\nInteraction:\nYou can specify SCAN | NOSCAN in the PROC JSON statement, the EXPORT statement, the WRITE VALUES \nstatement, or all three statements. If the option is specified in multiple statements, the EXPORT\nstatement specification takes precedence."},"StatementOptionType":"S"},{"StatementOptionName":"NOSCAN","StatementOptionHelp":{"#cdata":"Specifies that PROC JSON does not scan and encode input strings.\n      \nDefault: SCAN \n\nInteractions: NOSCAN indicates that the input string is known to contain acceptable JSON text or has \nalready been scanned. When NOSCAN is in effect, the input string or character value is taken as is, \nand the output JSON string is enclosed in quotation marks. \n\nYou can specify SCAN | NOSCAN in the PROC JSON statement, the EXPORT statement, the WRITE VALUES \nstatement, or all three statements. If the option is specified in multiple statements, the EXPORT\nstatement specification takes precedence."},"StatementOptionType":"S"},{"StatementOptionName":"TRIMBLANKS","StatementOptionHelp":{"#cdata":"Specifies to remove trailing blanks from the end of character data in the JSON output. \nOnly space characters are removed. \n\nDefault: TRIMBLANKS \n\nInteraction: You can specify TRIMBLANKSNOTRIMBLANKS in the PROC JSON statement, the EXPORT \nstatement, the WRITE VALUES statement, or all three. If the option is specified in multiple \nstatements, the EXPORT statement specification takes precedence."},"StatementOptionType":"S"},{"StatementOptionName":"NOTRIMBLANKS","StatementOptionHelp":{"#cdata":"Specifies to retain trailing blanks from the end of character data in the JSON output. \n\nDefault: TRIMBLANKS \n\nInteraction: You can specify TRIMBLANKS | NOTRIMBLANKS in the PROC JSON statement, the EXPORT \nstatement, the WRITE VALUES statement, or all three. If the option is specified in multiple \nstatements, the EXPORT statement specification takes precedence."},"StatementOptionType":"S"}]}},{"StatementName":"WRITE OPEN|W O","StatementHelp":{"#cdata":"Syntax: WRITE OPEN type; \n      \nOpens and nests a JSON container in the output file.    \n    \nRequired Argument:\n\ntype\nspecifies the type of JSON container:\n  ARRAY | A\n  specifies that the JSON container is an array, which collects a list of values. An example statement is: \n  \n    write open array;\n  \n  OBJECT | O\n  specifies that the JSON container is an object, which collects key-value pairs. An example statement is: \n  \n    write open object;\n\nInteractions: If the WRITE OPEN statement is the first statement after the PROC JSON statement, \nthe WRITE OPEN statement establishes the top-level container. \n\nSubmit the WRITE CLOSE statement for containers that you explicitly open with the WRITE OPEN statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ARRAY","StatementOptionHelp":{"#cdata":"Specifies that the JSON container is an array, which collects a list of values. An example statement is:\n    \n    write open array;"},"StatementOptionType":"S"},{"StatementOptionName":"OBJECT","StatementOptionHelp":{"#cdata":"Specifies that the JSON container is an object, which collects key-value pairs. An example statement is: \n  \n    write open object;"},"StatementOptionType":"S"}]}},{"StatementName":"WRITE CLOSE|W C","StatementHelp":{"#cdata":"Syntax: WRITE CLOSE; \n\nCloses a JSON container that is open in the JSON output file. \n\nRestriction: The WRITE CLOSE statement cannot be the first statement after the PROC JSON statement.\n\nInteraction: The WRITE CLOSE statement closes the most recently opened container of either type \nthat was explicitly opened with the WRITE OPEN statement. You should submit the WRITE CLOSE \nstatement for containers only if you explicitly opened the container with the WRITE OPEN statement."},"StatementOptions":null}]}}}