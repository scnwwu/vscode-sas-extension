{"Procedure":{"Name":"LMIXED","ProductGroup":"CAS|VIYA|VISUAL STATISTICS","ProcedureHelp":{"#cdata":"Syntax: PROC LMIXED <options>;\n    CLASS variable <(options )> <variable <(options)>> </ global-options>;\n    BY variables;\n    DISPLAY <table-list> </ options>;\n    DISPLAYOUT table-spec-list </ options>;\n    EFFECT name=effect-type (variables </ options>);\n    MODEL dependent = <fixed-effects> </ options>;\n    RANDOM random-effects </ options>;\n    PARMS <(value-list) \u2026> </ options>;\n    WEIGHT variable;\n    OUTPUT OUT=CAS-libref.data-table<COPYVARS=(variables)><keyword <=name>>\u2026<keyword <=name>>;\n    BLUP OUT=CAS-libref.data-table <options>;\n    OPTIMIZATION <options>;\n    \nThe LMIXED procedure fits a variety of linear mixed models to data and enables you to use these fitted \nmodels to make statistical inferences about the data. A linear mixed model is a generalization of the \nstandard linear model that is used in the GLM procedure in SAS/STAT software; the generalization is that \nthe data are permitted to exhibit correlation and nonconstant variability. Therefore, the linear mixed \nmodel provides you with the flexibility of modeling not only the means of your data (as in the standard \nlinear model) but also their variances and covariances."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table \n\nNames the input data table for PROC LMIXED to use. The default is the most recently created data \ntable. CAS-libref.data-table is a two-level name, where \n\nCAS-libref\n  refers to a collection of information that is defined in the LIBNAME statement and includes \n  the caslib, which includes a path to the data, and a session identifier, which defaults to \n  the active session but which can be explicitly defined in the LIBNAME statement.\n  \ndata-table\n  specifies the name of the input data table."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DMMETHOD=|DMM=","ProcedureOptionHelp":{"#cdata":"Syntax: DMMETHOD=DENSE|SPARSE | DMM=DENSE|SPARSE\n      \nSpecifies the method for computing the likelihood, gradient, and Hessian.\n\nThis method can significantly impact both the run-time and the memory efficiency of the LMIXED procedure."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"DENSE","@Value2":"SPARSE"},"ProcedureOptionToolTips":{"@ToolTip1":"Is more suitable for models that have a large number of levels for a common subject effect and a  relatively small number of levels for fixed-effects.","@ToolTip2":"Is more memory-efficient and faster for models that have a large and sparse design matrix."}},{"ProcedureOptionName":"MAXCLPRINT=","ProcedureOptionHelp":{"#cdata":"Syntax: MAXCLPRINT=number\n      \nSpecifies the maximum number of levels of CLASS variables to print in the ODS table \"ClassLevels.\" \nMAXCLPRINT=0 enables you to print all levels of each CLASS variable. However, the option NOCLPRINT \ntakes precedence over MAXCLPRINT. By default, MAXCLPRINT=20."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"METHOD=","ProcedureOptionHelp":{"#cdata":"Syntax: METHOD=ML | REML\n      \nSpecifies the estimation method for the covariance parameters."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"ML","@Value2":"REML"},"ProcedureOptionToolTips":{"@ToolTip1":"Performs maximum likelihood estimation.","@ToolTip2":"Performs residual (restricted) maximum likelihood estimation."}},{"ProcedureOptionName":"MMEQ","ProcedureOptionHelp":{"#cdata":"Displays the coefficients of the mixed model equations."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NAMELEN=","ProcedureOptionHelp":{"#cdata":"Syntax: NAMELEN=number\n      \nSpecifies the length to which long effect names are shortened. The minimum value is 20. \nBe default, NAMELEN=20."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOCLPRINT","ProcedureOptionHelp":{"#cdata":"Syntax: NOCLPRINT<=number>\n      \nSuppresses the display of the \"Class Level Information\" table if you do not specify number. \nIf you specify number, the values of the classification variables are displayed only for \nvariables whose number of levels is less than number. Specifying a number helps reduce the \nsize of the \"Class Level Information\" table if some classification variables have a large \nnumber of levels."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"NOINFO","ProcedureOptionHelp":{"#cdata":"Suppresses the display of the \"Model Information,\" \n\"Number of Observations,\" and \"Dimensions\" tables."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOITPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the display of the \"Iteration History\" table."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the normal display of results. This option is useful when you want only to create one \nor more output data tables by using the OUTPUT statement."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPROFILE","ProcedureOptionHelp":{"#cdata":"Includes the residual variance as one of the covariance parameters in the optimization iterations. \n(By default, this parameter is profiled out of the optimization iterations, except when you have \nspecified the HOLD= option in the PARMS statement.)\n\nThe NOPROFILE option is supported only when DMMETHOD=SPARSE."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"RANKS","ProcedureOptionHelp":{"#cdata":"Displays the rank of the design matrix X.\n\nThis option is supported only when DMMETHOD=SPARSE."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SIMPLE","ProcedureOptionHelp":{"#cdata":"Displays the mean, standard deviation, coefficient of variation, minimum, and maximum statistics \nfor each variable that is not a classification variable in the input DATA= table."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SINGCHOL=","ProcedureOptionHelp":{"#cdata":"Syntax: SINGCHOL=number\n      \nTunes the singularity criterion in Cholesky decompositions. The default is 1E4 times the machine \nepsilon, which is approximately 1E\u201312 on most computers."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SINGRES=","ProcedureOptionHelp":{"#cdata":"Syntax: SINGRES=number\n      \nSets the tolerance for which the residual variance is considered to be zero. The default \nis 1E4 times the machine epsilon, which is approximately 1E\u201312 on most computers."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SINGULAR=","ProcedureOptionHelp":{"#cdata":"Syntax: SINGULAR=number\n      \nTunes the general singularity criterion that the LMIXED procedure applies in sweeps and inversions. \nThe default is 1E4 times the machine epsilon, which is approximately 1E\u201312 on most computers."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TIMING","ProcedureOptionHelp":{"#cdata":"Displays the amount of time (in seconds) that PROC LMIXED took to perform each different task in the \nanalysis and its percentage of the total time."},"ProcedureOptionType":"S"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BLUP","StatementHelp":{"#cdata":"Syntax: BLUP OUT=CAS-libref.data-table <options>;\n\nThe BLUP statement creates a CAS data table that contains the best linear unbiased estimation (BLUE) \nof fixed effects and the best linear unbiased prediction (BLUP) of random effects. To use the BLUP \nstatement, you must also use the PARMS statement to specify fixed values for all covariance parameters. \nWhen you use the BLUP statement, the ODS IterHistory table displays solver iterations that are used for \nBLUP solutions rather than displaying optimization iterations."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table\n          \nNames the output data table for PROC LMIXED to use. You must specify this option before any other \noptions. CAS-libref.data-table is a two-level name, where\n\nCAS-libref\nrefers to a collection of information that is defined in the LIBNAME statement and includes the \ncaslib, which includes a path to where the data table is to be stored, and a session identifier, \nwhich defaults to the active session but which can be explicitly defined in the LIBNAME statement.\n\ndata-table\nspecifies the name of the output data table."},"StatementOptionType":"V"},{"StatementOptionName":"ITPRINT=","StatementOptionHelp":{"#cdata":"Syntax: ITPRINT=number\n          \nDisplays that the iteration history after every number of iterations. By default, ITPRINT=10, \nwhich means the procedure displays the iteration history for every 10 iterations."},"StatementOptionType":"V"},{"StatementOptionName":"MAXITER=","StatementOptionHelp":{"#cdata":"Syntax: MAXITER=number\n          \nSpecifies the maximum number of iterations. The default value is the number of parameters \nin the OUT= data table plus 2."},"StatementOptionType":"V"},{"StatementOptionName":"SOLVER=","StatementOptionHelp":{"#cdata":"Syntax: SOLVER=DIRECT | IOC | IOD\n          \nSpecifies the solver to use for BLUP solutions. By default, SOLVER=IOC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DIRECT","@Value2":"IOC","@Value3":"IOD"},"StatementOptionToolTips":{"@ToolTip1":"Requires storing mixed model equations (MMEQ) in memory and computing the Cholesky decomposition of MMEQ.  This solver is the most accurate, but it is the most inefficient in terms of speed and memory.","@ToolTip2":"Requires storing mixed model equations in memory and iterates on MMEQ to solve for the solutions.This solver  is the most efficient in terms of speed.","@ToolTip3":"Does not build mixed model equations; instead it iterates on data to solve for the solutions. This solver  is most efficient in terms of memory."}},{"StatementOptionName":"TOL=","StatementOptionHelp":{"#cdata":"Syntax: TOL=number\n          \nspecifies the tolerance value. The default value is the square root of machine precision."},"StatementOptionType":"V"}]}},{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables;\n\nYou can specify a BY statement in PROC LMIXED to obtain separate analyses of observations in groups that \nare defined by the values of the BY variables. If you specify more than one BY statement, only the last \none specified is used."},"StatementOptions":null},{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable <(options)> <variable <(options)>> </ global-options>;\n\nThe CLASS statement names the classification variables to be used as explanatory variables \nin the analysis."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sort order of the classification variable."},"StatementOptionType":"S"},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (., ._, .A, \u2026, .Z for numeric variables and blanks for character variables) \nas valid values for the CLASS variable."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Specifies the sort order for the levels of classification variables. This ordering determines which \nparameters in the model correspond to each level in the data. By default, ORDER=FORMATTED. \nFor ORDER=FORMATTED and ORDER=INTERNAL, the sort order is machine-dependent. When ORDER=FORMATTED \nis in effect for numeric variables for which you have supplied no explicit format, the levels are \nordered by their internal values."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FORMATTED","@Value3":"FREQ","@Value4":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Levels sorted by the order of appearance in the input data set.","@ToolTip2":"Levels sorted by the external formatted value, except for numeric variables with no explicit  format, which are sorted by their unformatted (internal) value.","@ToolTip3":"Levels sorted by the descending frequency count; levels with the more observations come ealier  in the order.","@ToolTip4":"Levels sorted by the unformatted value."}},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"Specifies the parameterization method for the classification variable or variables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EFFECT","@Value2":"GLM","@Value3":"ORDINAL|THERMOMETER","@Value4":"POLYNOMIAL|POLY","@Value5":"REFERENCE|REF","@Value6":"ORTHEFFECT","@Value7":"ORTHORDINAL|ORTHOTHERM","@Value8":"ORTHPOLY","@Value9":"ORTHREF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies effect coding.","@ToolTip2":"Specifies less-than-full-rank, reference-cell coding; this option can be used  only as a global option.","@ToolTip3":"Specifies the cumulative parameterization for an ordinal CLASS variable.","@ToolTip4":"Specifies polynomial coding.","@ToolTip5":"Specifies reference-cell coding.","@ToolTip6":"Orthogonalizes PARAM=EFFECT.","@ToolTip7":"Orthogonalizes PARAM=ORDINAL.","@ToolTip8":"Orthogonalizes PARAM=POLYNOMIAL.","@ToolTip9":"Orthogonalizes PARAM=REFERENCE."}},{"StatementOptionName":"REF=|REFERENCE=","StatementOptionHelp":{"#cdata":"Syntax: REF='level' | keyword \n\nSpecifies the reference level for PARAM= EFFECT, PARAM= REFERENCE, and their orthogonalizations."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'<level>'","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"The level of the variable to use as the reference level. Specify the formatted value of the variable  if a format is assigned. Replace <level> with an actual value.","@ToolTip2":"Designates the first ordered level as reference.","@ToolTip3":"Designates the last ordered level as reference."}}]}},{"StatementName":"DISPLAY","StatementHelp":{"#cdata":"Syntax: DISPLAY <table-list> </ options>;\n      \nThe DISPLAY statement enables you to specify a list of display tables to display or exclude. This statement \nis similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve \nperformance when a large number of tables could be generated (such as in BY-group processing). The procedure \nprocesses the DISPLAY statement on a CAS server and thus sends only a subset of ODS tables to the SAS client. \nBecause ODS statements are processed on a SAS client, all the display tables generated are first sent to the \nclient and then the client creates a subset. If both DISPLAY and ODS statements are used together, the DISPLAY \nstatement takes precedence over the ODS statements."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CASESENSITIVE","StatementOptionHelp":{"#cdata":"Performs a case-sensitive comparison of table names in the table-list to display table names when \ntables are subsetted for display. To preserve case, you must enclose table names in the table-list \nin quotation marks."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDE","StatementOptionHelp":{"#cdata":"Displays all display tables except those specified in the table-list."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDEALL","StatementOptionHelp":{"#cdata":"Suppresses display of all tables. This option takes precedence over the other options."},"StatementOptionType":"S"},{"StatementOptionName":"TRACE","StatementOptionHelp":{"#cdata":"Displays the display table names, labels, and paths."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAYOUT","StatementHelp":{"#cdata":"Syntax: DISPLAYOUT table-spec-list < / options > ;\n      \nThe DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This\nstatement is similar to the ODS OUTPUT statement.\n\nThe table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a\nkey=value format:\n\n  key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the\n    CAS output table name.\n  key specifies key as the ODS table name and also as the CAS output table name.\n  \nTable names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT\nstatement does not support regular expressions."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"INCLUDEALL","StatementOptionHelp":{"#cdata":"Creates output CAS tables for all display tables. The name of the created output CAS table is the same \nas the corresponding display table name. If you specify this option, the table-spec-list specification \nis ignored."},"StatementOptionType":"S"},{"StatementOptionName":"NOREPLACE","StatementOptionHelp":{"#cdata":"Does not replace an existing CAS output table of the same name."},"StatementOptionType":"S"},{"StatementOptionName":"REPEATED","StatementOptionHelp":{"#cdata":"Replicates all CAS output tables on all nodes."},"StatementOptionType":"S"}]}},{"StatementName":"EFFECT","StatementHelp":{"#cdata":"Syntax: EFFECT name=effect-type (variables < / options >) ;\n      \nThe EFFECT statement enables you to construct special collections of columns for design matrices. These\ncollections are referred to as constructed effects to distinguish them from the usual model effects that are\nformed from continuous or classification variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"NAME=","StatementOptionHelp":{"#cdata":"Replace 'NAME' with the name of the effect, specified after the EFFECT keyword. \nThis name can appear in only one EFFECT statement and cannot be the name of a \nvariable in the input data set."},"StatementOptionType":"RV","StatementOptionValues":{"@Value1":"COLLECTION","@Value2":"MULTIMEMBER|MM","@Value3":"POLYNOMIAL|POLY","@Value4":"SPLINE"},"StatementOptionToolTips":{"@ToolTip1":"Is a collection effect that defines one or more variables as a single effect with  multiple degrees of freedom. The variables in a collection are considered as a  unit for estimation and inference.  Option(s) available (specified after a slash (/) following the variable list):   DETAILS  Displays the constituents of the collection effect","@ToolTip2":"Is a multimember classification effect whose levels are determined by one or  more variables that appear in a CLASS statement.   Options available (specified after a slash (/) following the variable list):    DETAILS displays the levels of the multimember effect   NOEFFECT specifies that observations with all missing levels for the multimember variables should      have zero values in the corresponding design matrix columns    STDIZE Standardizes the design matrix entries so that each observation has a sum of 1   WEIGHT= specifies the weight variable for the contributions of each of the classification effects","@ToolTip3":"Is a multivariate polynomial effect in the specified numeric variables.                                      Options available (specified after a slash (/) following the variable list):     DEGREE= specifies the degree of the polynomial    DETAILS displays details of the specified polynomial   MDEGREE= specifies the maximum degree of any variable in a term of the polynomial    NOSEPARATE treats the polynomial as a single effect with multiple degrees of freedom   STANDARDIZE= specifies centering and scaling suboptions for the variables that define the polynomial","@ToolTip4":"Is a regression spline effect whose columns are univariate spline expansions of  one or more variables. A spline expansion replaces the original variable with  an expanded or larger set of new variables.   Options available (specified after a slash (/) following the variable list):     BASIS= specifies the type of basis (B-spline basis or truncated power function basis) for the spline expansion    DATABOUNDARY uses the extremes of the data as boundary knots for a B-spline basis   DEGREE= specifies the degree of the spline transformation    DETAILS displays the knots and locations for each spline basis function   KNOTMAX= requests equally spaced right-side boundary knots starting at the variables\u2019 maximum and ending at the KNOTMAX= value   KNOTMETHOD= specifies how to construct the knots for spline effects   KNOTMIN= requests equally spaced left-side boundary knots starting at the     KNOTMAX= value and ending at the variables\u2019 minimum value"},"SubOptionsKeywords":"DETAILS|WITHIN=|NOEFFECT|WEIGHT=|DEGREE=|MDEGREE|NOSEPARATE|STANDARDIZE=|STDSIZE|KNOTMETHOD=|KNOTMAX|KNOTMIN|DATABOUNDARY|BASIS"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"[For the COLLECTION | MULTIMEMBER | POLYNOMIAL |SPLINE effect-type] \n          \nRequests a table that shows the: (1) constituents of the collection effect, or (2) levels of the multimember effect, \nor (3) details of the specified polynomial, or (4) knot locations and the knots associated with each spline basis function."},"StatementOptionType":"S"},{"StatementOptionName":"NOEFFECT","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \nSpecifies that observations whose levels are all missing for the multimember variables should have 0 \nvalues in the corresponding design matrix columns."},"StatementOptionType":"S"},{"StatementOptionName":"STDIZE","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \nSpecifies that for each observation, the entries in the design matrix that corresponds \nto the multimember effect be scaled to have a sum of one."},"StatementOptionType":"S"},{"StatementOptionName":"WEIGHT=","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \n[Syntax: WEIGHT=wght-list] \n\nSpecifies numeric variables used to weigh the contributions of each of the classification \neffects that define the constructed multimember effect. The number of variables in wght-list \nmust match the number of classification variables that define the effect."},"StatementOptionType":"V"},{"StatementOptionName":"DEGREE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL and SPLINE effect-type only] \n          \n[Syntax: DEGREE=n] \n\nSpecifies the (1) degree of the polynomial, or (2) degree of the spline transformation. \nThe degree must be a positive integer. The n degree is typically a small integer, such as \n1, 2, or 3. The default for polynomial effect is DEGREE=1, and DEGREE=3 for spline \ntransformation."},"StatementOptionType":"V"},{"StatementOptionName":"MDEGREE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: MDEGREE=n] \n\nSpecifies the maximum degree of any variable in a term of the polynomial. This degree \nmust be a positive integer. The default is the degree of the specified polynomial."},"StatementOptionType":"V"},{"StatementOptionName":"NOSEPARATE","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \nSpecifies that the polynomial be treated as a single effect with multiple degrees \nof freedom. The effect name that you specify is used as the constructed effect name, \nand the labels of the terms are used as labels of the corresponding parameters."},"StatementOptionType":"S"},{"StatementOptionName":"STANDARDIZE","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: STANDARDIZE <(centerscale-opts)> <= standardize-opt>] \n\nSpecifies that the variables that define the polynomial be standardized. By default, \nthe standardized variables receive prefix \"s_\" in the variable names. \n\nYou can use the following centerscale-opts to specify how the center and scale are estimated: \n\n  METHOD=MOMENTS \n  specifies that the center be estimated by the variable mean and the scale be estimated by the standard deviation. \n\n  METHOD=RANGE \n  specifies that the center be estimated by the midpoint of the variable range and the scale be estimated as half the variable range.\n\n  METHOD=WMOMENTS \n  is the same as METHOD=MOMENTS except that weighted means and weighted standard deviations are used. \n\n  PREFIX=NONE | quoted-string \n  specifies the prefix that is appended to standardized variables when forming the term labels."},"StatementOptionType":"S|V","StatementOptionValues":{"@Value1":"CENTER","@Value2":"CENTERSCALE","@Value3":"NONE","@Value4":"SCALE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that variables be centered but not scaled.","@ToolTip2":"Specifies that variables be centered and scaled. This is the default if you do not  specify a standardization-opt.","@ToolTip3":"Specifies that no standardization be performed.","@ToolTip4":"Specifies that variables be scaled but not centered."}},{"StatementOptionName":"BASIS=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies a basis for the spline expansion."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BSPLINE","@Value2":"TPF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a B-spline basis for the spline expansion.","@ToolTip2":"Syntax: TPF(options)                                      Specifies a truncated power function basis for the spline expansion.   You can modify the number of columns when you request BASIS=TPF with the following options:     NOINT    excludes the intercept column.     NOPOWERS    excludes the intercept and polynomial columns."}},{"StatementOptionName":"DATABOUNDARY","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only]\n          \nSpecifies that the extremes of the data be used as boundary knots when building a B-spline basis."},"StatementOptionType":"S"},{"StatementOptionName":"KNOTMAX=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only]\n          \n[Syntax: KNOTMAX=value] \n\nSpecifies that, for each variable in the EFFECT statement, the right-side boundary \nknots be equally spaced starting at the maximum of the variable and ending at the \nspecified value. This option is ignored for variables whose maximum value is greater \nthan the specified value or if the DATABOUNDARY option is also specified."},"StatementOptionType":"V"},{"StatementOptionName":"KNOTMETHOD=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies how to construct the knots for spline effects."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EQUAL","@Value2":"LIST","@Value3":"LISTWITHBOUNDARY","@Value4":"MULTISCALE","@Value5":"PERCENTILES","@Value6":"RANGEFRACTIONS"},"StatementOptionToolTips":{"@ToolTip1":"Syntax: EQUAL<(n)>               Specifies that n equally spaced knots be positioned between the extremes of the data.  The default is n=3. For a B-spline basis, any needed boundary knots continue to be  equally spaced unless the DATABOUNDARY option has also been specified. KNOTMETHOD=EQUAL  is the default if no knot-method is specified.","@ToolTip2":"Syntax: LIST(number-list)                                      Specifies the list of internal knots to be used in forming the spline basis columns.  For a B-spline basis, the data extremes are used as boundary knots.","@ToolTip3":"Syntax: LISTWITHBOUNDARY(number-list)                                      Specifies the list of all knots that are used in forming the spline basis columns.","@ToolTip4":"Syntax: MULTISCALE<(multiscale-options)>                                      Specifies that multiple B-spline bases be generated, corresponding to sets with an  increasing number of internal knots.   You can control which scales are included with the following multiscale-options:     STARTSCALE=n    specifies the start scale, where n is a positive integer. The default is STARTSCALE=0.     ENDSCALE=n    specifies the end scale, where n is a positive integer. The default is ENDSCALE=7.","@ToolTip5":"Syntax: PERCENTILES(n)                                      Requests that internal knots be placed at n equally spaced percentiles of the variable  or variables named in the EFFECT statement.","@ToolTip6":"Syntax: RANGEFRACTIONS(fraction-list)                                      Requests that internal knots be placed at each fraction of the ranges of the variables  in the EFFECT statement."}},{"StatementOptionName":"KNOTMIN=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \n[Syntax: KNOTMIN=value] \n\nSpecifies that for each variable in the EFFECT statement, the left-side boundary knots be \nequally spaced starting at the specified value and ending at the minimum of the variable. \nThis option is ignored for variables whose minimum value is less than the specified value \nor if the DATABOUNDARY option is also specified."},"StatementOptionType":"V"},{"StatementOptionName":"NATURALCUBIC","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nUses a natural cubic spline basis for the spline expansion. Natural cubic splines, also known \nas restricted cubic splines, are cubic splines that are constrained to be linear beyond the \nextreme knots."},"StatementOptionType":"S"},{"StatementOptionName":"SEPARATE","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies that when multiple variables are specified in the EFFECT statement, \nthe spline basis for each variable be treated as a separate effect. The names \nof these separated effects are formed by appending an underscore followed by \nthe name of the variable to the name that you specify in the EFFECT statement."},"StatementOptionType":"S"},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies that each individual column in the design matrix that corresponds to the spline \neffect be treated as a separate effect that can enter or leave the model independently. \nNames for these split effects are generated by appending the variable name and an index \nfor each column to the name that you specify in the EFFECT statement."},"StatementOptionType":"S"}]}},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL dependent = < fixed-effects >< / options > ;\n\nThe MODEL statement names a single dependent variable and the fixed effects, which determine the X\nmatrix of the mixed model. The MODEL statement is required. \n\nAn intercept is included in the fixed-effects model by default. If no fixed effects are specified, \nonly this intercept term is fit. The intercept can be removed by using the NOINT option."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALPHA=","StatementOptionHelp":{"#cdata":"Syntax: ALPHA=\u03b1 \n      \nSets the confidence level to be 1-\u03b1 for each confidence interval of the fixed-effects parameters, \nwhere \u03b1 must be a number between 0 and 1. By default, ALPHA=0.05."},"StatementOptionType":"V"},{"StatementOptionName":"DDFM=","StatementOptionHelp":{"#cdata":"Syntax: DDFM=NONE | RESIDUAL \n          \nSpecifies the method for computing the denominator degrees of freedom for the tests of fixed effects.\n\nBy default, DDFM=RESIDUAL."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"RESIDUAL"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that no denominator degrees of freedom be applied. PROC HPLMIXED then essentially  assumes that infinite degrees of freedom are available in the calculation of p-values.","@ToolTip2":"Performs all tests by using the residual degrees of freedom, n - rank(X)/, where n is the number  of observations used."}},{"StatementOptionName":"NOINT","StatementOptionHelp":{"#cdata":"Requests that no intercept be included in the model. (An intercept is included by default.)"},"StatementOptionType":"S"},{"StatementOptionName":"SOLUTION|S","StatementOptionHelp":{"#cdata":"Produces a solution for the fixed-effects parameters."},"StatementOptionType":"S"}]}},{"StatementName":"OPTIMIZATION","StatementHelp":{"#cdata":"Syntax: OPTIMIZATION <options>;\n\nThe OPTIMIZATION statement specifies the technique and relevant specifications that are used \nin nonlinear optimization of REML and ML functions."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ABSCONV=","StatementOptionHelp":{"#cdata":"Syntax: ABSCONV=r \n          \nSpecifies an absolute function convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"ABSFCONV=","StatementOptionHelp":{"#cdata":"Syntax: ABSFCONV=r \n          \nSpecifies an absolute function difference convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"ABSGCONV=","StatementOptionHelp":{"#cdata":"Syntax: ABSGCONV=r\n          \nSpecifies an absolute gradient convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"FCONV=","StatementOptionHelp":{"#cdata":"Syntax: FCONV=r \n          \nSpecifies the relative function convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"FCONV2=","StatementOptionHelp":{"#cdata":"Syntax: FCONV2=r\n          \nSpecifies a second function convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"GCONV=","StatementOptionHelp":{"#cdata":"Syntax: GCONV=r\n          \nSpecifies the relative gradient convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"GCONV2=","StatementOptionHelp":{"#cdata":"Syntax: GCONV2=r\n          \nSpecifies another relative gradient convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"MAXFUNC=","StatementOptionHelp":{"#cdata":"Syntax: MAXFUNC=n\n          \nSpecifies the maximum number  of function calls in the optimization process. The optimization \ncan terminate only after completing a full iteration. Therefore, the number of function calls \nthat are performed can exceed n. The default values are as follows, depending on the optimization \ntechnique:\n\nWhen TECHNIQUE=TRUREG, NRRIDG, or NEWRAP, MAXFUNC=123 by default.\nWhen TECHNIQUE=QUANEW or DBLDOG, MAXFUNC=500 by default.\nWhen TECHNIQUE=CONGRA, MAXFUNC=1,000 by default.\nWhen TECHNIQUE=NMSIMP, MAXFUNC=3,000 by default."},"StatementOptionType":"V"},{"StatementOptionName":"MAXITER=","StatementOptionHelp":{"#cdata":"Syntax: MAXITER=n\n          \nSpecifies the maximum number  of iterations in the optimization process. These default values \nalso apply when  is specified as a missing value. The default values are as follows, depending \non the optimization technique:\n\nWhen TECHNIQUE=TRUREG, NRRIDG, or NEWRAP, MAXITER=50 by default.\nWhen TECHNIQUE=QUANEW or DBLDOG, MAXITER=200 by default.\nWhen TECHNIQUE=CONGRA, MAXITER=400 by default.\nWhen TECHNIQUE=NMSIMP, MAXITER=1,000 by default."},"StatementOptionType":"V"},{"StatementOptionName":"MAXTIME=","StatementOptionHelp":{"#cdata":"Syntax: MAXTIME=r \n          \nSpecifies an upper limit of  seconds of CPU time for the optimization process. The default value \nis the largest floating-point double representation of your computer. The time specified by the \nMAXTIME= option is checked only once at the end of each iteration. Therefore, the actual running \ntime can be longer than r."},"StatementOptionType":"V"},{"StatementOptionName":"MINITER=","StatementOptionHelp":{"#cdata":"Syntax: MINITER=n \n          \nSpecifies the minimum number of iterations. The default value is 0."},"StatementOptionType":"V"},{"StatementOptionName":"TECHNIQUE=|TECH=","StatementOptionHelp":{"#cdata":"[Syntax: TECHNIQUE=keyword | TECH=keyword\n          \nSpecifies the optimization technique for obtaining restricted maximum likelihood estimation (REML) \nor maximum likelihood estimation (ML). There is no algorithm for optimizing general nonlinear functions \nthat always finds the global optimum for a general nonlinear optimization problem in a reasonable amount \nof time. Because no single optimization technique is always superior to others, PROC LMIXED provides a \nvariety of optimization techniques that work well in various circumstances.\n\nBy default, TECHNIQUE=NRRIDG when DMMETHOD=DENSE. Otherwise, TECHNIQUE=QUANEW by default.\n\nXCONV=r"},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CONGRA","@Value2":"DBLDOG","@Value3":"NEWRAP","@Value4":"NNSIMP","@Value5":"NONE","@Value6":"NRRIDG","@Value7":"QUANEW","@Value8":"TRUREG"},"StatementOptionToolTips":{"@ToolTip1":"Performs a conjugate-gradient optimization.","@ToolTip2":"Performs a version of double-dogleg optimization.","@ToolTip3":"Performs a Newton-Raphson optimization that combines a line-search algorithm with ridging.","@ToolTip4":"Performs a Nelder-Mead simplex optimization.","@ToolTip5":"Performs no optimization.","@ToolTip6":"Performs a Newton-Raphson optimization with ridging.","@ToolTip7":"Performs a dual quasi-Newton optimization.","@ToolTip8":"Performs a trust-region optimization."}},{"StatementOptionName":"XCONV=","StatementOptionHelp":{"#cdata":"Syntax: XCONV= \n          \nSpecifies the relative parameter convergence criterion.\n\nThe default value is r = 1E\u20138 for the NMSIMP technique and r = 0 otherwise."},"StatementOptionType":"V"}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT OUT=CAS-libref.data-table <options>;\n\nThe OUTPUT statement creates a data table that contains observationwise statistics, which are computed \nafter the model is fitted. The variables in the input data table are not included in the output data \ntable in order to avoid data duplication for large data tables; however, variables that you specify \nin the COPYVARS= option are included."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table\n          \nNames the output data table for PROC LMIXED to use. You must specify this option before any other options. \n\nCAS-libref.data-table is a two-level name, where\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to where the data table is to be stored, and\n    a session identifier, which defaults to the active session but which can be explicitly\n    defined in the LIBNAME statement. \n    \n  data-table specifies the name of the output data table."},"StatementOptionType":"V"},{"StatementOptionName":"ALLSTATS|ALLSTAT","StatementOptionHelp":{"#cdata":"Adds all available statistics to the output data table."},"StatementOptionType":"S"},{"StatementOptionName":"ALPHA=","StatementOptionHelp":{"#cdata":"Syntax: ALPHA=number\n          \nSpecifies the significance level for the construction of confidence intervals in the output data table. \nThe confidence level is 1 - number, where number must be between 0 and 1. By default, number is equal \nto the value of the ALPHA= option in the MODEL statement, or 0.05 if that option is not specified."},"StatementOptionType":"V"},{"StatementOptionName":"COPYVAR=|COPYVARS=","StatementOptionHelp":{"#cdata":"Syntax: COPYVAR=variable | COPYVARS=(variables) \n          \nCopies one or more variables from the input data table to the output data table."},"StatementOptionType":"V"}]}},{"StatementName":"PARMS","StatementHelp":{"#cdata":"Syntax: PARMS <(value-list)> ...</ options> ;\n      \nThe PARMS statement specifies initial values for the covariance parameters, or it requests \na grid search over several values of these parameters. You must specify the values in the \norder in which they appear in the \"Covariance Parameter Estimates\" table. \n\nThe value-list specification can take any of several forms: \n\n  m \n  a single value \n\n  m1,m2,...,mn\n  several values \n\n  m to n \n  a sequence where m equals the starting value, n equals the ending value, and the increment equals 1 \n\n  m to n by i \n  a sequence where m equals the starting value, n equals the ending value, and the increment equals i \n\n  m1,m2 to m3\n  mixed values and sequences \n\nYou can use the PARMS statement to input known parameters."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"HOLD=|EQCONS=","StatementOptionHelp":{"#cdata":"Syntax: HOLD<=order-list> | EQCONS<=order-list> | HOLD<=ALL> | EQCONS<=ALL>\n\nHolds the values of the covariance parameters whose order is specified in the order-list to the initial \nvalues that are specified in the value-list in the RANDOM statement."},"StatementOptionType":"V"},{"StatementOptionName":"LOWERB=","StatementOptionHelp":{"#cdata":"Syntax: LOWERB=value-list \n          \nSpecifies the lower boundary constraints on the covariance parameters, where value-list is a list \nof numbers or missing values (.) separated by commas. You must list the numbers in the order that \nthe LMIXED procedure uses for the covariance parameters, and each number corresponds to a lower \nboundary constraint. A missing value instructs the LMIXED procedure to use its default constraint. \nIf you do not specify numbers for all the covariance parameters, the LMIXED procedure assumes that \nthe remaining ones are missing."},"StatementOptionType":"V"},{"StatementOptionName":"NOITER","StatementOptionHelp":{"#cdata":"Requests that no optimization iterations be performed and that the LMIXED procedure use the best \nvalue from the grid search to perform inferences."},"StatementOptionType":"S"},{"StatementOptionName":"PARMSDATA=|PDATA=","StatementOptionHelp":{"#cdata":"Syntax: PARMSDATA=CAS-libref.data-table | PDATA=CAS-libref. data-table\n          \nReads in covariance parameter values from a data table. CAS-libref.data-table is a two-level name, \nwhere CAS-libref refers to the caslib and session identifier, and data-table specifies the name of \nthe input data table. "},"StatementOptionType":"DV"},{"StatementOptionName":"UPPERB=","StatementOptionHelp":{"#cdata":"Syntax: UPPERB=value-list \n          \nSpecifies upper boundary constraints on the covariance parameters, where the value-list specification \nis a list of numbers or missing values (.) separated by commas. You must list the numbers in the order \nthat the LMIXED procedure uses for the covariance parameters, and each number corresponds to the upper \nboundary constraint. A missing value instructs the LMIXED procedure to use its default constraint. If \nyou do not specify numbers for all of the covariance parameters, the LMIXED procedure assumes that the \nremaining ones are missing."},"StatementOptionType":"DV"}]}},{"StatementName":"RANDOM","StatementHelp":{"#cdata":"Syntax: RANDOM random-effects </ options> ;\n      \nThe RANDOM statement defines the random effects constituting the \u03b3 vector in the mixed \nmodel. You can use this statement to specify traditional variance component models and \nto specify random coefficients. The random effects can be classification or continuous, \nand multiple RANDOM statements are allowed."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALPHA=","StatementOptionHelp":{"#cdata":"Syntax: ALPHA=\u03b1 \n          \nSets the confidence level to be  for each confidence interval of the random-effects estimates, \nwhere \u03b1 must be a number between 0 and 1. By default, ALPHA=0.05."},"StatementOptionType":"V"},{"StatementOptionName":"CL","StatementOptionHelp":{"#cdata":"Constructs t-type confidence limits for each of the random-effect estimates. The confidence level \nis 0.95 by default; this can be changed with the ALPHA= option."},"StatementOptionType":"S"},{"StatementOptionName":"SOLUTION|S","StatementOptionHelp":{"#cdata":"Produces the solution for the random-effects parameters."},"StatementOptionType":"S"},{"StatementOptionName":"SUBJECT=|SUB=","StatementOptionHelp":{"#cdata":"Syntax: SUBJECT=effect \n          \nIdentifies the subjects in your mixed model. Complete independence is assumed across subjects; \nthus, the SUBJECT= option produces a block-diagonal structure in  that has identical blocks. \nIn fact, specifying an effect is equivalent to nesting all other effects in the RANDOM statement \nwithin the effect."},"StatementOptionType":"V"},{"StatementOptionName":"TYPE=","StatementOptionHelp":{"#cdata":"Syntax: TYPE=covariance-structure \n          \nSpecifies the covariance structure of G."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ANTE(1)","@Value2":"AR(1)","@Value3":"ARH(1)","@Value4":"ARMA(1,1)","@Value5":"CHOL","@Value6":"CS","@Value7":"CSH","@Value8":"FA(q)","@Value9":"FA0(q)","@Value10":"FA1(q)","@Value11":"HF","@Value12":"TOEP","@Value13":"TOEP(q)","@Value14":"TOEPH","@Value15":"TOEPH(q)","@Value16":"UN","@Value17":"UN(q)","@Value18":"UNR","@Value19":"UNR(q)","@Value20":"VC|SIMPLE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a first-order antedependence structure (see Kenward 1987, Patel 1991, and Macchiavelli and Arnold 1994)","@ToolTip2":"Specifies a first-order autoregressive structure.","@ToolTip3":"Specifies a heterogeneous first-order autoregressive structure.","@ToolTip4":"Specifies the first-order autoregressive moving-average (1,1) structure","@ToolTip5":"Specifies a Cholesky root structure","@ToolTip6":"Specifies the compound-symmetry structure, which has constant variance and constant covariance.","@ToolTip7":"Specifies the heterogeneous compound-symmetry structure, which is an equi-correlation structure  but allows for different variances.","@ToolTip8":"Specifies the factor-analytic structure with q factors (Jennrich and Schluchter 1986).","@ToolTip9":"Is similar to the FA(q) structure except that no diagonal factor analytic is included.","@ToolTip10":"Is similar to the FA(q) structure except that an equal factor analytic is included.","@ToolTip11":"Specifies the Huynh-Feldt covariance structure (Huynh and Feldt 1970). This structure is similar  to the CSH structure in that it has the same number of parameters and heterogeneity along the main  diagonal. However, it constructs the off-diagonal elements by taking arithmetic rather than geometric means.","@ToolTip12":"Specifies a full Toeplitz matrix, which can be viewed as an autoregressive structure with order equal to  the dimension of the matrix.","@ToolTip13":"Specifies a banded Toeplitz structure. This can be viewed as a moving-average structure with order equal to q-1.","@ToolTip14":"Specifies a heterogeneous banded Toeplitz structure.","@ToolTip15":"Specifies a heterogeneous banded Toeplitz structure. PROC LMIXED estimates only the first q bands of  the matrix, setting all higher bands equal to 0.","@ToolTip16":"Specifies a completely general (unstructured) covariance matrix parameterized directly in terms of  variances and covariances.","@ToolTip17":"Specifies a completely general (unstructured) covariance matrix parameterized directly in terms of  variances and covariances. PROC LMIXED estimates only the first q bands of the matrix, setting all  higher bands equal to 0.","@ToolTip18":"Specifies a completely general (unstructured) covariance matrix parameterized in terms of variances  and correlations.","@ToolTip19":"Specifies a completely general (unstructured) covariance matrix parameterized in terms of variances  and correlations. PROC LMIXED estimates only the first q bands of the matrix, setting all higher bands equal to zero.","@ToolTip20":"Specifies standard variance components and is the default structure for both the RANDOM. In the RANDOM statement, a distinct variance component is assigned to each effect."}}]}},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable;\n\nThe variable in the WEIGHT statement is used as a weight to perform a weighted analysis of the data. \nObservations that have nonpositive or missing weights are not included in the analysis. If a WEIGHT \nstatement is not included, all observations that are used in the analysis are assigned a weight of 1.\n\nThe WEIGHT statement is supported only when DMMETHOD=SPARSE."},"StatementOptions":null}]}}}