{"Procedure":{"Name":"LP","ProductGroup":"SAS/OR","ProcedureHelp":{"#cdata":"Syntax: PROC LP options ; \n    COEF variables ; \n    COL variable ; \n    ID variable(s) ; \n    IPIVOT; \n    PIVOT; \n    PRINT options ; \n    QUIT options ; \n    RANGE variable ; \n    RESET options ; \n    RHS variables ; \n    RHSSEN variables ; \n    ROW variable(s) ; \n    RUN; \n    SHOW options ; \n    TYPE variable ; \n    VAR variables ; \n\nThe LP procedure solves linear programs, integer programs, and mixed-integer programs. It also \nperforms parametric programming, range analysis, and reports on solution sensitivity to changes \nin the right-hand-side constants and price coefficients."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ACTIVEIN=","ProcedureOptionHelp":{"#cdata":"[Syntax: ACTIVEIN=SAS-data-set] \n      \nNames the SAS data set containing the active nodes in a branch-and-bound tree that is to be used \nto restart an integer program."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"ACTIVEOUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: ACTIVEOUT=SAS-data-set] \n      \nNames the SAS data set in which to save the current branch-and-bound tree of active nodes."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nNames the SAS data set containing the problem data."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DUALOUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: DUALOUT=SAS-data-set] \n      \nNames the SAS data set that contains the current dual solution (shadow prices) on termination \nof PROC LP."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"MPSOUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: MPSOUT=SAS-data-set] \n      \nNames the SAS data set that contains converted sparse or dense format input data in MPS format."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"PRIMALIN=","ProcedureOptionHelp":{"#cdata":"[Syntax: PRIMALIN=SAS-data-set] \n      \nNames the SAS data set that contains a feasible solution to the problem defined by the DATA= \ndata set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"PRIMALOUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: PRIMALOUT=SAS-data-set] \n      \nNames the SAS data set that contains the current primal solution when PROC LP terminates."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"SPARSEDATA","ProcedureOptionHelp":{"#cdata":"Tells PROC LP that the data are in the sparse input format."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"TABLEAUOUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: TABLEAUOUT=SAS-data-set] \n      \nNames the SAS data set in which to save the final tableau."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"FLOW","ProcedureOptionHelp":{"#cdata":"Requests that a journal of pivot information (the Iteration Log) be displayed after every \nPRINTFREQ= iterations."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"FUZZ=","ProcedureOptionHelp":{"#cdata":"[Syntax: FUZZ=\u03b5] \n      \nDisplays all numbers within \u03b5 of zero as zeros. The default value is 1.0E-10."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOFLOW","ProcedureOptionHelp":{"#cdata":"Is the inverse of the FLOW option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPARAPRINT","ProcedureOptionHelp":{"#cdata":"Is the inverse of the PARAPRINT option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the display of the Variable, Constraint, and Sensitivity Analysis summaries."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOTABLEAUPRINT","ProcedureOptionHelp":{"#cdata":"Indicates that the solution be displayed at each pivot when performing parametric programming."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PRINT","ProcedureOptionHelp":{"#cdata":"Is the inverse of the NOPRINT option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PRINTFREQ=","ProcedureOptionHelp":{"#cdata":"[Syntax: PRINTFREQ=m] \n      \nIndicates that after every mth iteration, a line in the (Integer) Iteration Log be displayed. \nThe default value is 1."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PRINTLEVEL=","ProcedureOptionHelp":{"#cdata":"Indicates the amount of displaying that the procedure should perform."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"-2","@Value2":"-1","@Value3":"0","@Value4":"1"},"ProcedureOptionToolTips":{"@ToolTip1":"Only messages to the SAS log are displayed","@ToolTip2":"Is equivalent to NOPRINT unless the problem is infeasible. If it is infeasible, the infeasible rows  are displayed in the Constraint Summary along with the Infeasible Information Summary.","@ToolTip3":"Is identical to NOPRINT","@ToolTip4":"All output is displayed"}},{"ProcedureOptionName":"TABLEAUPRINT","ProcedureOptionHelp":{"#cdata":"Indicates that the final tableau be displayed."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ENDPAUSE","ProcedureOptionHelp":{"#cdata":"Requests that PROC LP pause before displaying the solution."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"FEASIBLEPAUSE","ProcedureOptionHelp":{"#cdata":"Requests that PROC LP pause after a feasible (not necessarily integer feasible) solution \nhas been found."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"IFEASIBLEPAUSE=","ProcedureOptionHelp":{"#cdata":"[Syntax: IFEASIBLEPAUSE=n] \n      \nRequests that PROC LP pause after every n integer feasible solutions."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"IPAUSE=","ProcedureOptionHelp":{"#cdata":"[Syntax: IPAUSE=n] \n      \nRequests that PROC LP pause after every n integer iterations."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOENDPAUSE","ProcedureOptionHelp":{"#cdata":"Is the inverse of the ENDPAUSE option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOFEASIBLEPAUSE","ProcedureOptionHelp":{"#cdata":"Is the inverse of the FEASIBLEPAUSE option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PAUSE=","ProcedureOptionHelp":{"#cdata":"[Syntax: PAUSE=n] \n      \nRequests that PROC LP pause after every n iterations."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PROXIMITYPAUSE=","ProcedureOptionHelp":{"#cdata":"[Syntax: PROXIMITYPAUSE=r] \n      \nCauses the procedure to pause if at least one integer feasible solution has been found and the \nobjective value of the current best integer solution can be determined to be within r units of \nthe optimal integer solution."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"READPAUSE","ProcedureOptionHelp":{"#cdata":"Requests that PROC LP pause after the data have been read and the initial basis inverted."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPREPROCESS","ProcedureOptionHelp":{"#cdata":"Is the inverse of the PREPROCESS option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PEPSILON=","ProcedureOptionHelp":{"#cdata":"[Syntax: PEPSILON=\u03b5] \n      \nSpecifies a positive number close to zero. This value is an error tolerance in the preprocessing."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PMAXIT=","ProcedureOptionHelp":{"#cdata":"[Syntax: PMAXIT=n] \n      \nPerforms at most n preprocessings. Preprocessing repeats itself if it improves some bounds \nor fixes some variables. However when a problem is large and dense, each preprocessing may \ntake a significant amount of CPU time. This option limits the number of preprocessings PROC \nLP performs."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PREPROCESS","ProcedureOptionHelp":{"#cdata":"Performs preprocessing techniques."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"AUTO","ProcedureOptionHelp":{"#cdata":"[Syntax: AUTO | AUTO(m,n)] \n      \nAutomatically sets and adjusts the value of the CONTROL= option. The default values of m and n \nare 20000 and 250000, respectively. You can change the two values according to your computer's \nspace and memory capacities."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"BACKTRACK=","ProcedureOptionHelp":{"#cdata":"Specifies the rule used to choose the next active problem when backtracking is required."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"LIFO","@Value2":"FIFO","@Value3":"OBJ","@Value4":"PROJECT","@Value5":"PSEUDOC","@Value6":"ERROR"},"ProcedureOptionToolTips":{"@ToolTip1":"Chooses the last problem added to the tree of active nodes.","@ToolTip2":"Chooses the first node added to the tree of active nodes.","@ToolTip3":"Chooses the problem whose parent has the smallest (largest if the problem is a maximization)  objective value.","@ToolTip4":"Chooses the problem with the largest (smallest if the problem is a maximization) projected  objective value.","@ToolTip5":"Chooses the problem with the largest (least if the problem is a maximization) projected  pseudocost.","@ToolTip6":"Chooses the problem with the largest error."}},{"ProcedureOptionName":"BINFST","ProcedureOptionHelp":{"#cdata":"Requests that PROC LP branch on binary variables first when integer and binary variables are present."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CANSELECT=","ProcedureOptionHelp":{"#cdata":"Specifies the rule used to choose the next active problem when backtracking is not required or used."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"LIFO","@Value2":"FIFO","@Value3":"OBJ","@Value4":"PROJECT","@Value5":"PSEUDOC","@Value6":"ERROR"},"ProcedureOptionToolTips":{"@ToolTip1":"Chooses the last problem added to the tree of active nodes.","@ToolTip2":"Chooses the first node added to the tree of active nodes.","@ToolTip3":"Chooses the problem whose parent has the smallest (largest if the problem is a maximization) objective value.","@ToolTip4":"Chooses the problem with the largest (smallest if the problem is a maximization) projected objective value.","@ToolTip5":"Chooses the problem with the largest (least if the problem is a maximization) projected pseudocost.","@ToolTip6":"Chooses the problem with the largest error."}},{"ProcedureOptionName":"CONTROL=","ProcedureOptionHelp":{"#cdata":"[Syntax: CONTROL=r] \n      \nSpecifies a number between 0 and 1. This option combines CANSELECT= and other rules to choose the \nnext active problem."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DELTAIT=","ProcedureOptionHelp":{"#cdata":"[Syntax: DELTAIT=r] \n      \nIs used to modify the exploration of the branch-and-bound tree. If more than r integer iterations \nhave occurred since the last integer solution was found, then the procedure uses the backtrack \nstrategy in choosing the next node to be explored. The default value is 3 times the number of \ninteger variables."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DOBJECTIVE=","ProcedureOptionHelp":{"#cdata":"[Syntax: DOBJECTIVE=r] \n      \nSpecifies that PROC LP should discard active nodes that cannot lead to an integer solution with \nthe objective at least as small (or as large for maximizations) as the objective of the relaxed \nproblem plus (minus) r."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"IEPSILON=","ProcedureOptionHelp":{"#cdata":"[Syntax: IEPSILON=\u03b5] \n      \nRequests that PROC LP consider an integer variable as having an integer value if its value \nis within \u03b5 units of an integer. The default value is 1.0E-7"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"IMAXIT=","ProcedureOptionHelp":{"#cdata":"[Syntax: IMAXIT=n] \n      \nPerforms at most n integer iterations. The default value is 100."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"IOBJECTIVE=","ProcedureOptionHelp":{"#cdata":"[Syntax: IOBJECTIVE=r] \n      \nSpecifies that PROC LP should discard active nodes unless the node could lead to an integer \nsolution with the objective smaller (or larger for maximizations) than r."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LIFOTYPE=","ProcedureOptionHelp":{"#cdata":"Specifies the order in which to add the two newly branched active nodes to the LIFO list."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"0","@Value2":"1","@Value3":"2","@Value4":"3"},"ProcedureOptionToolTips":{"@ToolTip1":"Add the node with minimum penalty first","@ToolTip2":"Add the node with maximum penalty first","@ToolTip3":"Add the node resulting from adding xi \u2265 [xopt(k)i] first","@ToolTip4":"Add the node resulting from adding xi \u2264 [xopt(k)i] first"}},{"ProcedureOptionName":"NOAUTO","ProcedureOptionHelp":{"#cdata":"Is the inverse of the AUTO option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOBINFST","ProcedureOptionHelp":{"#cdata":"Is the inverse of the BINFST option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPOSTPROCESS","ProcedureOptionHelp":{"#cdata":"Is the inverse of the POSTPROCESS option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PENALTYDEPTH=","ProcedureOptionHelp":{"#cdata":"[Syntax: PENALTYDEPTH=m] \n      \nRequests that PROC LP examine m variables as branching candidates when VARSELECT=PENALTY."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"POBJECTIVE=","ProcedureOptionHelp":{"#cdata":"[Syntax: POBJECTIVE=r] \n      \nSpecifies that PROC LP should discard active nodes that cannot lead to an integer solution with \nobjective at least as small as o + |o| x r (at least as large as o - |o| x r for maximizations) \nwhere o is the objective of the relaxed noninteger constrained problem."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"POSTPROCESS","ProcedureOptionHelp":{"#cdata":"Attempts to fix binary variables globally based on the relationships among the reduced cost \nand objective value of the relaxed problem and the objective value of the current best \ninteger feasible solution."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PWOBJECTIVE=","ProcedureOptionHelp":{"#cdata":"[Syntax: PWOBJECTIVE=r] \n      \nSpecifies a percentage for use in the automatic update of the WOBJECTIVE= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TREETYPE=","ProcedureOptionHelp":{"#cdata":"Specifies a data compression algorithm."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"0","@Value2":"1","@Value3":"2","@Value4":"3"},"ProcedureOptionToolTips":{"@ToolTip1":"No data compression","@ToolTip2":"Huffman coding compression routines","@ToolTip3":"Adaptive Huffman coding compression routines","@ToolTip4":"Adaptive arithmetic coding compression routines"}},{"ProcedureOptionName":"VARSELECT=","ProcedureOptionHelp":{"#cdata":"Specifies the rule used to choose the branching variable on an integer iteration."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"CLOSE","@Value2":"PRIOR","@Value3":"PSEUDOC","@Value4":"FAR","@Value5":"PRICE","@Value6":"PENALTY"},"ProcedureOptionToolTips":{"@ToolTip1":"Chooses as branching variable the variable xi such that i minimizes       {min{fi(k),1-fi(k)} | i \u0454 S and     IEPSILON \u2264 fi(k) \u2264 1 - IEPSILON}","@ToolTip2":"Chooses as branching variable xi such that i \u0454 S.xopt(k)i is nonintegral, and variable xi has the minimum value  in the INTEGER row in the input data set.","@ToolTip3":"Chooses the problem with the largest (least if the problem is a maximization) projected pseudocost.","@ToolTip4":"Chooses as branching variable the variable xi such that i maximizes       {min{fi(k),1-fi(k)} | i \u0454 S and     IEPSILON \u2264 fi(k) \u2264 1 - IEPSILON}","@ToolTip5":"Chooses as branching variable xi such that i \u0454 S.xopt(k)i is nonintegral, and variable xi has the minimum price coefficient (maximum for maximization).","@ToolTip6":"Chooses as branching variable xi such that i \u0454 S and a bound on the increase in the objective of (LP(k)) (penalty) resulting from adding the constraint       xi \u2264 | xopt(k)i| or xi \u2264 [xopt(k)i]  is maximized."}},{"ProcedureOptionName":"WOBJECTIVE=","ProcedureOptionHelp":{"#cdata":"[Syntax: WOBJECTIVE=r] \n      \nSpecifies that PROC LP should delay examination of active nodes that cannot lead to an integer \nsolution with objective at least as small (as large for maximizations) as r, until all other \nactive nodes have been explored."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NORANGEPRICE","ProcedureOptionHelp":{"#cdata":"Is the inverse of the RANGEPRICE option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NORANGERHS","ProcedureOptionHelp":{"#cdata":"Is the inverse of the RANGERHS option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PRICEPHI","ProcedureOptionHelp":{"#cdata":"[Syntax: PRICEPHI=\u03a6] \n      \nSpecifies the limit for parametric programming when perturbing the price vector."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"RANGEPRICE","ProcedureOptionHelp":{"#cdata":"Indicates that range analysis is to be performed on the price coefficients."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"RANGERHS","ProcedureOptionHelp":{"#cdata":"Indicates that range analysis is to be performed on the right-hand-side vector."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"RHSPHI=","ProcedureOptionHelp":{"#cdata":"[Syntax: RHSPHI=\u03a6] \n      \nSpecifies the limit for parametric programming when perturbing the right-hand-side vector."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DEVEX","ProcedureOptionHelp":{"#cdata":"Indicates that the devex method of weighting the reduced costs be used in pricing."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"EPSILON=","ProcedureOptionHelp":{"#cdata":"[Syntax: EPSILON=\u03b5] \n      \nSpecifies a positive number close to zero."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"GOALPROGRAM","ProcedureOptionHelp":{"#cdata":"Specifies that multiple objectives in the input data set are to be treated as sequential objectives \nin a goal-programming model."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"INFINITY=","ProcedureOptionHelp":{"#cdata":"[Syntax: INFINITY=r] \n      \nSpecifies the largest number PROC LP uses in computation. The INFINITY= option is used to determine \nwhen a problem has an unbounded variable value."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"INVFREQ=","ProcedureOptionHelp":{"#cdata":"[Syntax: INVFREQ=m] \n      \nReinverts the current basis matrix after m major and minor iterations. The default value is 100."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"INVTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: INVTOL=r] \n      \nReinverts the current basis matrix if the largest element in absolute value in the decomposed \nbasis matrix is greater than r."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXIT=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXIT=n] \n      \nSimultaneously sets the values of the MAXIT1=, MAXIT2=, MAXIT3=, and IMAXIT= options."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXIT1=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXIT1=n] \n      \nPerforms at most n  \u2265  phase 1 iterations. The default value is 100."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXIT2=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXIT2=n] \n      \nPerforms at most n  \u2265  phase 2 iterations."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXIT3=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXIT3=n] \n      \nPerforms at most n  \u2265  phase 3 iterations. All dual pivots are counted as phase 3 pivots. \nThe default value is 99999999."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NODEVEX","ProcedureOptionHelp":{"#cdata":"Is the inverse of the DEVEX option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PARARESTORE","ProcedureOptionHelp":{"#cdata":"Indicates that following a parametric programming analysis, PROC LP should restore the basis."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PHASEMIX=","ProcedureOptionHelp":{"#cdata":"[Syntax: PHASEMIX=r] \n      \nSpecifies a number between 0 and 1. When the number is positive, PROC LP tries to improve the \nobjective function of phase 2 during phase 1. The PHASEMIX= option is a weight factor of the \nphase 2 objective function in phase 1. The default value is 0."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PRICETYPE=","ProcedureOptionHelp":{"#cdata":"Specifies the type of multiple pricing to be performed."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"COMPLETE","@Value2":"DYNAMIC","@Value3":"NONE","@Value4":"PARTIAL"},"ProcedureOptionToolTips":{"@ToolTip1":"Complete suboptimization","@ToolTip2":"Complete suboptimization with dynamically varying the value of the PRICE= option","@ToolTip3":"No suboptimization","@ToolTip4":"partial suboptimization"}},{"ProcedureOptionName":"PRICE=","ProcedureOptionHelp":{"#cdata":"[Syntax: PRICE=m] \n      \nSpecifies the number of columns to subset when multiple pricing is used in selecting the column \nto enter the basis."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"RANDOMPRICEMULT=","ProcedureOptionHelp":{"#cdata":"[Syntax: RANDOMPRICEMULT=r] \n      \nSpecifies a number between 0 and 1. This option sets a limit, in phase 1, on the number of \niterations when PROC LP will randomly pick the entering variables. The limit equals r times \nthe number of nonbasic variables, or the number of basic variables, whichever is smaller. \nThe default value of the RANDOMPRICEMULT= option is 0.01."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"REPSILON=","ProcedureOptionHelp":{"#cdata":"[Syntax: REPSILON=\u03b5] \n      \nSpecifies a positive number close to zero. The REPSILON= option is used in the ratio test to \ndetermine which basic variable is to leave the basis. The default value is 1.0E-10."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SCALE=","ProcedureOptionHelp":{"#cdata":"Specifies the type of scaling to be used."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"BOTH","@Value2":"COLUMN","@Value3":"NONE","@Value4":"ROW"},"ProcedureOptionToolTips":{"@ToolTip1":"The matrix coefficients are scaled so that the largest element in absolute value in each row or  column equals 1. They are scaled by columns first and then by rows.","@ToolTip2":"The matrix coefficients are scaled so that the largest element in absolute value in each column equals 1.","@ToolTip3":"No scaling is performed.","@ToolTip4":"The matrix coefficients are scaled so that the largest element in absolute value in each row equals 1."}},{"ProcedureOptionName":"SMALL=","ProcedureOptionHelp":{"#cdata":"[Syntax: SMALL=\u03b5] \n      \nSpecifies a positive number close to zero. Any element in a matrix with a value less than \n\u03b5 is set to zero. The default value is machine dependent."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TIME=","ProcedureOptionHelp":{"#cdata":"[Syntax: TIME=t] \n      \nChecks at each iteration to see if t seconds have elapsed since PROC LP began. If more than \nt seconds have elapsed, the procedure pauses and displays the current solution. The default \nvalue is 120 seconds."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"U=","ProcedureOptionHelp":{"#cdata":"[Syntax: U=r] \n      \nEnables PROC LP to control the choice of pivots during LU decomposition and updating the basis \nmatrix. The variable r should take values between EPSILON and 1.0 because small values of r bias \nthe algorithm toward maintaining sparsity at the expense of numerical stability and vice versa. \nThe more sparse the decomposed basis is, the less time each iteration takes. The default value \nis 0.1."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"COEF","StatementHelp":{"#cdata":"Syntax: COEF variables ;\n\nFor the sparse input format, the COEF statement specifies the numeric variables in the problem \ndata set that contain the coefficients in the model."},"StatementOptions":null},{"StatementName":"COL","StatementHelp":{"#cdata":"Syntax: COL variable ;\n\nFor the sparse input format, the COL statement specifies a character variable in the problem \ndata set that contains the names of the columns in the model. Columns in the model are either \nstructural variables, right-hand-side vectors, right-hand-side change vectors, or a range vector. \nThe COL variable must be a character variable."},"StatementOptions":null},{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variable(s) ;\n\nFor the dense input format, the ID statement specifies a character variable in the problem data set \nthat contains a name for each constraint coefficients row, objective coefficients row, and variable \ndefinition row."},"StatementOptions":null},{"StatementName":"IPIVOT","StatementHelp":{"#cdata":"Syntax: IPIVOT ;\n\nThe IPIVOT statement causes the LP procedure to execute one integer branch-and-bound pivot and pause. \nIf you use the IPIVOT statement while the PROXIMITYPAUSE= option is in effect, pause interferences \nmay occur. To avoid such interferences, you must either reset the PROXIMITYPAUSE value or submit\nIPIVOT; RUN; instead of IPIVOT;."},"StatementOptions":null},{"StatementName":"PIVOT","StatementHelp":{"#cdata":"Syntax: PIVOT ;\n\nThe PIVOT statement causes the LP procedure to execute one simplex pivot and pause."},"StatementOptions":null},{"StatementName":"PRINT","StatementHelp":{"#cdata":"Syntax: PRINT options ;\n\nThe PRINT statement is useful for displaying part of a solution summary, examining intermediate \ntableaus, performing sensitivity analysis, and using parametric programming."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"BEST","StatementOptionHelp":{"#cdata":"Displays a Solution, Variable, and Constraint Summary for the best integer solution found."},"StatementOptionType":"S"},{"StatementOptionName":"COLUMN","StatementOptionHelp":{"#cdata":"Syntax: COLUMN(colnames)/SENSITIVITY \n          \nDisplays a Variable Summary containing the logical and structural variables listed in the colnames \nlist. If the / SENSITIVITY option is included, then sensitivity analysis is performed on the price \ncoefficients for the listed colnames structural variables."},"StatementOptionType":"S","SubOptionsKeywords":"SENSITIVITY"},{"StatementOptionName":"INTEGER","StatementOptionHelp":{"#cdata":"Displays a Variable Summary containing only the integer variables."},"StatementOptionType":"S"},{"StatementOptionName":"INTEGER_NONZEROS","StatementOptionHelp":{"#cdata":"Displays a Variable Summary containing only the integer variables with nonzero activity."},"StatementOptionType":"S"},{"StatementOptionName":"INTEGER_ZEROS","StatementOptionHelp":{"#cdata":"Displays a Variable Summary containing only the integer variables with zero activity."},"StatementOptionType":"S"},{"StatementOptionName":"MATRIX","StatementOptionHelp":{"#cdata":"Syntax: MATRIX(rownames,colnames) / PICTURE \n            \nDisplays the submatrix of the matrix of constraint coefficients defined by the rownames and \ncolnames lists. If the / PICTURE option is included, then the formatted submatrix is displayed."},"StatementOptionType":"S"},{"StatementOptionName":"NONINTEGER","StatementOptionHelp":{"#cdata":"Displays a Variable Summary containing only the continuous variables."},"StatementOptionType":"S"},{"StatementOptionName":"NONINTEGER_NONZEROS","StatementOptionHelp":{"#cdata":"Displays a Variable Summary containing only the continuous variables with nonzero activity."},"StatementOptionType":"S"},{"StatementOptionName":"NONZEROS","StatementOptionHelp":{"#cdata":"Displays a Variable Summary containing only the variables with nonzero activity."},"StatementOptionType":"S"},{"StatementOptionName":"PRICESEN","StatementOptionHelp":{"#cdata":"Displays the results of parametric programming for the current value of the PRICEPHI= option, the price coefficients, and all\nof the price change vectors."},"StatementOptionType":"S"},{"StatementOptionName":"RANGEPRICE","StatementOptionHelp":{"#cdata":"Performs range analysis on the price coefficients."},"StatementOptionType":"S"},{"StatementOptionName":"RANGERHS","StatementOptionHelp":{"#cdata":"Performs range analysis on the right-hand-side vector."},"StatementOptionType":"S"},{"StatementOptionName":"RHSSEN","StatementOptionHelp":{"#cdata":"Displays the results of parametric programming for the current value of the RHSPHI= option, the right-hand-side coefficients, and all \nof the right-hand-side change vectors."},"StatementOptionType":"S"},{"StatementOptionName":"ROW","StatementOptionHelp":{"#cdata":"Syntax: ROW(rownames) / SENSITIVITY \n          \nDisplays a constraint summary containing the rows listed in the rowname list. If the / SENSITIVITY \noption is included, then sensitivity analysis is performed on the right-hand-side coefficients for \nthe listed rownames."},"StatementOptionType":"S"},{"StatementOptionName":"SOLUTION","StatementOptionHelp":{"#cdata":"Displays the Solution Summary, including the Variable Summary and the Constraint Summary."},"StatementOptionType":"S"},{"StatementOptionName":"TABLEAU","StatementOptionHelp":{"#cdata":"Displays the current tableau."},"StatementOptionType":"S"},{"StatementOptionName":"ZEROS","StatementOptionHelp":{"#cdata":"Displays a Variable Summary containing only the variables with zero activity. This may be useful in \n          the analysis of ON/OFF, ZERO/ONE, \nscheduling, and assignment applications."},"StatementOptionType":"S"}]}},{"StatementName":"QUIT","StatementHelp":{"#cdata":"Syntax: QUIT options ;\n\nThe QUIT statement causes the LP procedure to terminate processing immediately. No further \ndisplaying is performed and no output data sets are created."},"StatementOptions":null},{"StatementName":"RANGE","StatementHelp":{"#cdata":"Syntax: RANGE variable ;\n\nFor the dense input format, the RANGE statement identifies the variable in the problem data set that \ncontains the range coefficients. These coefficients enable you to specify the feasible range of a row."},"StatementOptions":null},{"StatementName":"RESET","StatementHelp":{"#cdata":"Syntax: RESET options ;\n\nThe RESET statement is used to change options after the LP procedure has started execution."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"LOWER=","StatementOptionHelp":{"#cdata":"[Syntax: LOWER(colnames)=n] \n          \nDuring phase 3, this sets the lower bound on all of the structural variables listed in the colnames \nlist to an integer value n."},"StatementOptionType":"S|V"},{"StatementOptionName":"UPPER=","StatementOptionHelp":{"#cdata":"[Syntax: UPPER(colnames)=n] \n          \nDuring phase 3, this sets the upper bound on all of the structural variables listed in the colnames \nlist to an integer value n."},"StatementOptionType":"S|V"}]}},{"StatementName":"RHS","StatementHelp":{"#cdata":"Syntax: RHS variables ;\n\nFor the dense input format, the RHS statement identifies variables in the problem data set that contain \nthe right-hand-side constants of the linear program. Only numeric variables can be specified."},"StatementOptions":null},{"StatementName":"RHSSEN","StatementHelp":{"#cdata":"Syntax: RHSSEN variables ;\n\nFor the dense input format, the RHSSEN statement identifies variables in the problem data set that define \nchange vectors for examining the sensitivity of the optimal solution to changes in the RHS constants."},"StatementOptions":null},{"StatementName":"ROW","StatementHelp":{"#cdata":"Syntax: ROW variable(s) ;\n\nFor the dense input format, the ROW statement specifies a character variable in the problem data set \nthat contains a name for each row of constraint coefficients, each row of objective coefficients and \neach variable describing row."},"StatementOptions":null},{"StatementName":"RUN","StatementHelp":{"#cdata":"Syntax: RUN ;\n\nThe RUN statement causes optimization to be started or resumed."},"StatementOptions":null},{"StatementName":"SHOW","StatementHelp":{"#cdata":"Syntax: SHOW options ;\n\nThe SHOW statement specifies that the LP procedure display either the current options or the current \nsolution status on the SAS log."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OPTIONS","StatementOptionHelp":{"#cdata":"Requests that the current options be displayed on the SAS log."},"StatementOptionType":"S"},{"StatementOptionName":"STATUS","StatementOptionHelp":{"#cdata":"Requests that the status of the current solution be displayed on the SAS log."},"StatementOptionType":"S"}]}},{"StatementName":"TYPE","StatementHelp":{"#cdata":"Syntax: TYPE variable ;\n\nThe TYPE statement specifies a character variable in the problem data set that contains the type \nidentifier for each observation. This variable has keyword values that specify how the LP procedure \nshould interpret the observation."},"StatementOptions":null},{"StatementName":"VAR","StatementHelp":{"#cdata":"Syntax: VAR variables ;\n\nFor the dense input format, the VAR statement identifies variables in the problem data set that are to\nbe interpreted as structural variables in the linear program. Only numeric variables can be specified."},"StatementOptions":null}]}}}