{"Procedure":{"Name":"MODELMATRIX","ProductGroup":"CAS|VIYA|VISUAL STATISTICS","ProcedureHelp":{"#cdata":"Syntax: PROC MODELMATRIX <options>;\n    BY variables;\n    CLASS variable <(options)>\u2026<variable <(options)>> </ global-options>;\n    DISPLAY <table-list> </ options>;\n    DISPLAYOUT table-spec-list </ options>;\n    EFFECT name = effect-type (variables </ options>);\n    FREQ variable;\n    MODEL dependent = <effects> </ model-options>;\n    OUTPUT OUT= CAS-libref.data-table </ options>;\n    WEIGHT variable;\n    \nThe MODELMATRIX procedure creates a design matrix (matrix of covariates) that is associated \nwith a user-specified MODEL statement and a user-specified data table in SAS Viya.\n\nThe design matrix is the fundamental component of any regression model; it is often expressed \nas the X matrix."},"ProcedureOptions":{"ProcedureOption":{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table \n\nNames the input data table for PROC MODELMATRIX to use. The default is the most recently created data \ntable. CAS-libref.data-table is a two-level name, where \n\nCAS-libref\n  refers to a collection of information that is defined in the LIBNAME statement and includes \n  the caslib, which includes a path to the data, and a session identifier, which defaults to \n  the active session but which can be explicitly defined in the LIBNAME statement.\n  \ndata-table\n  specifies the name of the input data table."},"ProcedureOptionType":"DV"}},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables;\n\nYou can specify a BY statement in PROC MODELMATRIX to obtain separate analyses of observations in groups that \nare defined by the values of the BY variables. If you specify more than one BY statement, only the last \none specified is used."},"StatementOptions":null},{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable <(options)> <variable <(options)>> </ global-options>;\n\nThe CLASS statement names the classification variables to be used as explanatory variables \nin the analysis."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sort order of the classification variable."},"StatementOptionType":"S"},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (., ._, .A, \u2026, .Z for numeric variables and blanks for character variables) \nas valid values for the CLASS variable."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Specifies the sort order for the levels of classification variables. This ordering determines which \nparameters in the model correspond to each level in the data. By default, ORDER=FORMATTED. \nFor ORDER=FORMATTED and ORDER=INTERNAL, the sort order is machine-dependent. When ORDER=FORMATTED \nis in effect for numeric variables for which you have supplied no explicit format, the levels are \nordered by their internal values."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FORMATTED","@Value3":"FREQ","@Value4":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Levels sorted by the order of appearance in the input data set.","@ToolTip2":"Levels sorted by the external formatted value, except for numeric variables with no explicit  format, which are sorted by their unformatted (internal) value.","@ToolTip3":"Levels sorted by the descending frequency count; levels with the more observations come ealier  in the order.","@ToolTip4":"Levels sorted by the unformatted value."}},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"Specifies the parameterization method for the classification variable or variables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EFFECT","@Value2":"GLM","@Value3":"ORDINAL|THERMOMETER","@Value4":"POLYNOMIAL|POLY","@Value5":"REFERENCE|REF","@Value6":"ORTHEFFECT","@Value7":"ORTHORDINAL|ORTHOTHERM","@Value8":"ORTHPOLY","@Value9":"ORTHREF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies effect coding.","@ToolTip2":"Specifies less-than-full-rank, reference-cell coding; this option can be used  only as a global option.","@ToolTip3":"Specifies the cumulative parameterization for an ordinal CLASS variable.","@ToolTip4":"Specifies polynomial coding.","@ToolTip5":"Specifies reference-cell coding.","@ToolTip6":"Orthogonalizes PARAM=EFFECT.","@ToolTip7":"Orthogonalizes PARAM=ORDINAL.","@ToolTip8":"Orthogonalizes PARAM=POLYNOMIAL.","@ToolTip9":"Orthogonalizes PARAM=REFERENCE."}},{"StatementOptionName":"REF=|REFERENCE=","StatementOptionHelp":{"#cdata":"Syntax: REF='level' | keyword \n\nSpecifies the reference level for PARAM= EFFECT, PARAM= REFERENCE, and their orthogonalizations."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'<level>'","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"The level of the variable to use as the reference level. Specify the formatted value of the variable  if a format is assigned. Replace <level> with an actual value.","@ToolTip2":"Designates the first ordered level as reference.","@ToolTip3":"Designates the last ordered level as reference."}},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"Specifies that design matrix columns that correspond to any effect that contains a split classification \nvariable can be selected to enter or leave a model independently of the other design columns of that \neffect."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAY","StatementHelp":{"#cdata":"Syntax: DISPLAY <table-list> </ options>;\n      \nThe DISPLAY statement enables you to specify a list of display tables to display or exclude. This statement \nis similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve \nperformance when a large number of tables could be generated (such as in BY-group processing). The procedure \nprocesses the DISPLAY statement on a CAS server and thus sends only a subset of ODS tables to the SAS client. \nBecause ODS statements are processed on a SAS client, all the display tables generated are first sent to the \nclient and then the client creates a subset. If both DISPLAY and ODS statements are used together, the DISPLAY \nstatement takes precedence over the ODS statements."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CASESENSITIVE","StatementOptionHelp":{"#cdata":"Performs a case-sensitive comparison of table names in the table-list to display table names when \ntables are subsetted for display. To preserve case, you must enclose table names in the table-list \nin quotation marks."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDE","StatementOptionHelp":{"#cdata":"Displays all display tables except those specified in the table-list."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDEALL","StatementOptionHelp":{"#cdata":"Suppresses display of all tables. This option takes precedence over the other options."},"StatementOptionType":"S"},{"StatementOptionName":"TRACE","StatementOptionHelp":{"#cdata":"Displays the display table names, labels, and paths."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAYOUT","StatementHelp":{"#cdata":"Syntax: DISPLAYOUT table-spec-list < / options > ;\n      \nThe DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This\nstatement is similar to the ODS OUTPUT statement.\n\nThe table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a\nkey=value format:\n\n  key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the\n    CAS output table name.\n  key specifies key as the ODS table name and also as the CAS output table name.\n  \nTable names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT\nstatement does not support regular expressions."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"INCLUDEALL","StatementOptionHelp":{"#cdata":"Creates output CAS tables for all display tables. The name of the created output CAS table is the same \nas the corresponding display table name. If you specify this option, the table-spec-list specification \nis ignored."},"StatementOptionType":"S"},{"StatementOptionName":"NOREPLACE","StatementOptionHelp":{"#cdata":"Does not replace an existing CAS output table of the same name."},"StatementOptionType":"S"},{"StatementOptionName":"REPEATED","StatementOptionHelp":{"#cdata":"Replicates all CAS output tables on all nodes."},"StatementOptionType":"S"}]}},{"StatementName":"EFFECT","StatementHelp":{"#cdata":"Syntax: EFFECT name=effect-type (variables < / options >) ;\n      \nThe EFFECT statement enables you to construct special collections of columns for design matrices. These\ncollections are referred to as constructed effects to distinguish them from the usual model effects that are\nformed from continuous or classification variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"NAME=","StatementOptionHelp":{"#cdata":"Replace 'NAME' with the name of the effect, specified after the EFFECT keyword. \nThis name can appear in only one EFFECT statement and cannot be the name of a \nvariable in the input data set."},"StatementOptionType":"RV","StatementOptionValues":{"@Value1":"COLLECTION","@Value2":"MULTIMEMBER|MM","@Value3":"POLYNOMIAL|POLY","@Value4":"SPLINE"},"StatementOptionToolTips":{"@ToolTip1":"Is a collection effect that defines one or more variables as a single effect with  multiple degrees of freedom. The variables in a collection are considered as a  unit for estimation and inference.  Option(s) available (specified after a slash (/) following the variable list):   DETAILS  Displays the constituents of the collection effect","@ToolTip2":"Is a multimember classification effect whose levels are determined by one or  more variables that appear in a CLASS statement.   Options available (specified after a slash (/) following the variable list):    DETAILS displays the levels of the multimember effect   NOEFFECT specifies that observations with all missing levels for the multimember variables should      have zero values in the corresponding design matrix columns    STDIZE Standardizes the design matrix entries so that each observation has a sum of 1   WEIGHT= specifies the weight variable for the contributions of each of the classification effects","@ToolTip3":"Is a multivariate polynomial effect in the specified numeric variables.                                      Options available (specified after a slash (/) following the variable list):     DEGREE= specifies the degree of the polynomial    DETAILS displays details of the specified polynomial   MDEGREE= specifies the maximum degree of any variable in a term of the polynomial    NOSEPARATE treats the polynomial as a single effect with multiple degrees of freedom   STANDARDIZE= specifies centering and scaling suboptions for the variables that define the polynomial","@ToolTip4":"Is a regression spline effect whose columns are univariate spline expansions of  one or more variables. A spline expansion replaces the original variable with  an expanded or larger set of new variables.   Options available (specified after a slash (/) following the variable list):     BASIS= specifies the type of basis (B-spline basis or truncated power function basis) for the spline expansion    DATABOUNDARY uses the extremes of the data as boundary knots for a B-spline basis   DEGREE= specifies the degree of the spline transformation    DETAILS displays the knots and locations for each spline basis function   KNOTMAX= requests equally spaced right-side boundary knots starting at the variables\u2019 maximum and ending at the KNOTMAX= value   KNOTMETHOD= specifies how to construct the knots for spline effects   KNOTMIN= requests equally spaced left-side boundary knots starting at the     KNOTMAX= value and ending at the variables\u2019 minimum value"},"SubOptionsKeywords":"DETAILS|WITHIN=|NOEFFECT|WEIGHT=|DEGREE=|MDEGREE|NOSEPARATE|STANDARDIZE=|STDSIZE|KNOTMETHOD=|KNOTMAX|KNOTMIN|DATABOUNDARY|BASIS"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"[For the COLLECTION | MULTIMEMBER | POLYNOMIAL |SPLINE effect-type] \n          \nRequests a table that shows the: (1) constituents of the collection effect, or (2) levels of the multimember effect, \nor (3) details of the specified polynomial, or (4) knot locations and the knots associated with each spline basis function."},"StatementOptionType":"S"},{"StatementOptionName":"NOEFFECT","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \nSpecifies that observations whose levels are all missing for the multimember variables should have 0 \nvalues in the corresponding design matrix columns."},"StatementOptionType":"S"},{"StatementOptionName":"STDIZE","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \nSpecifies that for each observation, the entries in the design matrix that corresponds \nto the multimember effect be scaled to have a sum of one."},"StatementOptionType":"S"},{"StatementOptionName":"WEIGHT=","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \n[Syntax: WEIGHT=wght-list] \n\nSpecifies numeric variables used to weigh the contributions of each of the classification \neffects that define the constructed multimember effect. The number of variables in wght-list \nmust match the number of classification variables that define the effect."},"StatementOptionType":"V"},{"StatementOptionName":"DEGREE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL and SPLINE effect-type only] \n          \n[Syntax: DEGREE=n] \n\nSpecifies the (1) degree of the polynomial, or (2) degree of the spline transformation. \nThe degree must be a positive integer. The n degree is typically a small integer, such as \n1, 2, or 3. The default for polynomial effect is DEGREE=1, and DEGREE=3 for spline \ntransformation."},"StatementOptionType":"V"},{"StatementOptionName":"MDEGREE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: MDEGREE=n] \n\nSpecifies the maximum degree of any variable in a term of the polynomial. This degree \nmust be a positive integer. The default is the degree of the specified polynomial."},"StatementOptionType":"V"},{"StatementOptionName":"NOSEPARATE","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \nSpecifies that the polynomial be treated as a single effect with multiple degrees \nof freedom. The effect name that you specify is used as the constructed effect name, \nand the labels of the terms are used as labels of the corresponding parameters."},"StatementOptionType":"S"},{"StatementOptionName":"STANDARDIZE","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: STANDARDIZE <(centerscale-opts)> <= standardize-opt>] \n\nSpecifies that the variables that define the polynomial be standardized. By default, \nthe standardized variables receive prefix \"s_\" in the variable names. \n\nYou can use the following centerscale-opts to specify how the center and scale are estimated: \n\n  METHOD=MOMENTS \n  specifies that the center be estimated by the variable mean and the scale be estimated by the standard deviation. \n\n  METHOD=RANGE \n  specifies that the center be estimated by the midpoint of the variable range and the scale be estimated as half the variable range.\n\n  METHOD=WMOMENTS \n  is the same as METHOD=MOMENTS except that weighted means and weighted standard deviations are used. \n\n  PREFIX=NONE | quoted-string \n  specifies the prefix that is appended to standardized variables when forming the term labels."},"StatementOptionType":"S|V","StatementOptionValues":{"@Value1":"CENTER","@Value2":"CENTERSCALE","@Value3":"NONE","@Value4":"SCALE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that variables be centered but not scaled.","@ToolTip2":"Specifies that variables be centered and scaled. This is the default if you do not  specify a standardization-opt.","@ToolTip3":"Specifies that no standardization be performed.","@ToolTip4":"Specifies that variables be scaled but not centered."}},{"StatementOptionName":"BASIS=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies a basis for the spline expansion."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BSPLINE","@Value2":"TPF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a B-spline basis for the spline expansion.","@ToolTip2":"Syntax: TPF(options)                                      Specifies a truncated power function basis for the spline expansion.   You can modify the number of columns when you request BASIS=TPF with the following options:     NOINT    excludes the intercept column.     NOPOWERS    excludes the intercept and polynomial columns."}},{"StatementOptionName":"DATABOUNDARY","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only]\n          \nSpecifies that the extremes of the data be used as boundary knots when building a B-spline basis."},"StatementOptionType":"S"},{"StatementOptionName":"KNOTMAX=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only]\n          \n[Syntax: KNOTMAX=value] \n\nSpecifies that, for each variable in the EFFECT statement, the right-side boundary \nknots be equally spaced starting at the maximum of the variable and ending at the \nspecified value. This option is ignored for variables whose maximum value is greater \nthan the specified value or if the DATABOUNDARY option is also specified."},"StatementOptionType":"V"},{"StatementOptionName":"KNOTMETHOD=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies how to construct the knots for spline effects."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EQUAL","@Value2":"LIST","@Value3":"LISTWITHBOUNDARY","@Value4":"MULTISCALE","@Value5":"PERCENTILES","@Value6":"RANGEFRACTIONS"},"StatementOptionToolTips":{"@ToolTip1":"Syntax: EQUAL<(n)>               Specifies that n equally spaced knots be positioned between the extremes of the data.  The default is n=3. For a B-spline basis, any needed boundary knots continue to be  equally spaced unless the DATABOUNDARY option has also been specified. KNOTMETHOD=EQUAL  is the default if no knot-method is specified.","@ToolTip2":"Syntax: LIST(number-list)                                      Specifies the list of internal knots to be used in forming the spline basis columns.  For a B-spline basis, the data extremes are used as boundary knots.","@ToolTip3":"Syntax: LISTWITHBOUNDARY(number-list)                                      Specifies the list of all knots that are used in forming the spline basis columns.","@ToolTip4":"Syntax: MULTISCALE<(multiscale-options)>                                      Specifies that multiple B-spline bases be generated, corresponding to sets with an  increasing number of internal knots.   You can control which scales are included with the following multiscale-options:     STARTSCALE=n    specifies the start scale, where n is a positive integer. The default is STARTSCALE=0.     ENDSCALE=n    specifies the end scale, where n is a positive integer. The default is ENDSCALE=7.","@ToolTip5":"Syntax: PERCENTILES(n)                                      Requests that internal knots be placed at n equally spaced percentiles of the variable  or variables named in the EFFECT statement.","@ToolTip6":"Syntax: RANGEFRACTIONS(fraction-list)                                      Requests that internal knots be placed at each fraction of the ranges of the variables  in the EFFECT statement."}},{"StatementOptionName":"KNOTMIN=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \n[Syntax: KNOTMIN=value] \n\nSpecifies that for each variable in the EFFECT statement, the left-side boundary knots be \nequally spaced starting at the specified value and ending at the minimum of the variable. \nThis option is ignored for variables whose minimum value is less than the specified value \nor if the DATABOUNDARY option is also specified."},"StatementOptionType":"V"},{"StatementOptionName":"NATURALCUBIC","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nUses a natural cubic spline basis for the spline expansion. Natural cubic splines, also known \nas restricted cubic splines, are cubic splines that are constrained to be linear beyond the \nextreme knots."},"StatementOptionType":"S"},{"StatementOptionName":"SEPARATE","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies that when multiple variables are specified in the EFFECT statement, \nthe spline basis for each variable be treated as a separate effect. The names \nof these separated effects are formed by appending an underscore followed by \nthe name of the variable to the name that you specify in the EFFECT statement."},"StatementOptionType":"S"},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies that each individual column in the design matrix that corresponds to the spline \neffect be treated as a separate effect that can enter or leave the model independently. \nNames for these split effects are generated by appending the variable name and an index \nfor each column to the name that you specify in the EFFECT statement."},"StatementOptionType":"S"}]}},{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable;\n\nThe variable in the FREQ statement identifies a numeric variable in the data set that contains \nthe frequency of occurrence of each observation. PROC MODELMATRIX treats each observation as if \nit appears f times, where f is the value of the variable for the observation. If f is not an \ninteger, it is truncated to an integer. If f is less than 1 or missing, all the columns of the \ndesign matrix for that observation are filled in with missing values. When the FREQ statement \nis omitted, each observation is assigned a frequency of 1."},"StatementOptions":null},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL dependent = <effects> / <model-options>;\n\nThe MODEL statement names the dependent variable and the explanatory effects, including covariates, \nmain effects, interactions, and nested effects. If you omit the explanatory effects, the procedure \nproduces a single column of ones."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"INFORMATIVE","StatementOptionHelp":{"#cdata":"Models missing values by using extra model effects. These effects consist of dummy variables that \ntake the value 1 when the value of a continuous model variable involved in the effect is missing, \nand take the value 0 otherwise. The missing value in the original model effect is replaced by the \naverage value of the effect for the nonmissing values."},"StatementOptionType":"S"},{"StatementOptionName":"NOINT","StatementOptionHelp":{"#cdata":"Suppresses the intercept term that is otherwise included in the model."},"StatementOptionType":"S"}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT OUT=CAS-libref.data-table <options>;\n\nThe OUTPUT statement creates a CAS table that contains the design matrix, which is computed after \nthe model parameters are created (and levelized when CLASS variables are included). The variables \nin the input data table are not included in the output data table, in order to avoid data duplication \nfor large data tables; however, variables that you specify in the COPYVARS= option are included."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table\n          \nNames the output data table for PROC MODELMATRIX to use. You must specify this option before any other options. \n\nCAS-libref.data-table is a two-level name, where\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to where the data table is to be stored, and\n    a session identifier, which defaults to the active session but which can be explicitly\n    defined in the LIBNAME statement. \n    \n  data-table specifies the name of the output data table."},"StatementOptionType":"V"},{"StatementOptionName":"PREFIX=","StatementOptionHelp":{"#cdata":"Syntax: PREFIX=name\n          \nEnforces the column names of the design matrix to be a user-defined prefix appended to a sequence \nof one-based indices in the OUTDESIGN= data set. The default prefix is Col and the column name is \nformed by appending the column number to the prefix, so that by default the columns are named Col1, \nCol2, and so on."},"StatementOptionType":"V"},{"StatementOptionName":"COPYVAR=|COPYVARS=","StatementOptionHelp":{"#cdata":"Syntax: COPYVAR=variable | COPYVARS=(variables) \n          \nTransfers one or more variables from the input data table to the output data table\nand appends them to the right end of the design matrix in the specified order."},"StatementOptionType":"V"}]}},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable;\n\nThe variable in the WEIGHT statement is used as a weight. Observations that have nonpositive \nor missing weights are considered missing in the produced design matrix. If a WEIGHT statement \nis not included, all observations that are used are assigned a weight of 1."},"StatementOptions":null}]}}}