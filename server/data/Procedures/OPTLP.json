{"Procedure":{"Name":"OPTLP","ProductGroup":"SAS/OR","#comment":{},"ProcedureHelp":{"#cdata":"Syntax: PROC OPTLP < options > ;\n  DECOMP < options > ;\n  DECOMPMASTER < options > ;\n  DECOMPSUBPROB < options > ;\n  PERFORMANCE < performance-options > ; \n\nThe OPTLP procedure provides three methods for solving linear programs (LPs). \n\nThe following LP solvers are available in the OPTLP procedure: \n\n  o primal simplex solver \n  o dual simplex solver \n  o interior point solver (experimental) \n\nThe simplex solvers implement the two-phase simplex method. In phase I, the solver tries to \nfind a feasible solution. If no feasible solution is found, the LP is infeasible; otherwise, \nthe solver enters phase II to solve the original LP. The interior point solver implements a \nprimal-dual predictor-corrector interior point algorithm."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ALGORITHM=|SOLVER=|SOL=","ProcedureOptionHelp":{"#cdata":"Syntax: ALGORITHM=option | SOLVER=option | SOL=option \n          \nSpecifies an LP solver."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"PRIMAL","@Value2":"DUAL","@Value3":"NETWORK","@Value4":"INTERIORPOINT","@Value5":"CONCURRENT"},"ProcedureOptionToolTips":{"@ToolTip1":"Uses primal simplex solver.","@ToolTip2":"Uses dual simplex solver.","@ToolTip3":"Uses network simplex solver.","@ToolTip4":"Uses interior point solver.","@ToolTip5":"Uses several different algorithms in parallel."}},{"ProcedureOptionName":"ALGORITHM2=|SOLVER2=","ProcedureOptionHelp":{"#cdata":"Syntax: ALGORITHM2=option | SOLVER2=option \n          \nSpecifies an LP solver if ALGORITHM=NETWORK(NS)."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"PRIMAL","@Value2":"DUAL"},"ProcedureOptionToolTips":{"@ToolTip1":"Uses primal simplex solver (after network simplex).","@ToolTip2":"Uses dual simplex solver (after network simplex)."}},{"ProcedureOptionName":"BASIS=","ProcedureOptionHelp":{"#cdata":"Syntax: BASIS=CRASH | SLACK | WARMSTART\n      \nSpecifies one of three available options for generating an initial basis."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"CRASH","@Value2":"SLACK","@Value3":"WARMSTART"},"ProcedureOptionToolTips":{"@ToolTip1":"Generate an initial basis by using crash techniques (Maros 2003). The procedure creates a triangular  basic matrix consisting of both decision variables and slack variables. This is the default setting.","@ToolTip2":"Generate an initial basis by using all slack variables.","@ToolTip3":"Start the simplex solvers with a user-specified initial basis. The PRIMALIN= and DUALIN= data sets  are required to specify an initial basis."}},{"ProcedureOptionName":"CROSSOVER=","ProcedureOptionHelp":{"#cdata":"Syntax: CROSSOVER=number | string\n\nSpecifies whether to convert the interior point solution to a basic simplex solution. If the interior point\nalgorithm terminates with a solution, the crossover algorithm uses the interior point solution to create\nan initial basic solution. After performing primal fixing and dual fixing, the crossover algorithm calls a\nsimplex algorithm to locate an optimal basic solution."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"OFF","@Value2":"ON"},"ProcedureOptionToolTips":{"@ToolTip1":"Do not convert the interior point solution to a basic simplex solution.","@ToolTip2":"Convert the interior point solution to a basic simplex solution."}},{"ProcedureOptionName":"DATA=|TABLE=|INSTANCE=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set | TABLE=SAS-data-set | INSTANCE=SAS-data-set] \n      \nSpecifies the input data set corresponding to the LP model."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DUALIN=|DIN=","ProcedureOptionHelp":{"#cdata":"[Syntax: DUALIN=SAS-data-set] \n      \nSpecifies the input data set corresponding to the dual solution that is required for warm \nstarting the simplex solvers."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DUALOUT=|DOUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: DUALOUT=SAS-data-set] \n      \nSpecifies the output data set for the dual solution. This data set contains the dual \nsolution information."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DUALIZE=","ProcedureOptionHelp":{"#cdata":"Syntax:  DUALIZE=AUTOMATIC | OFF | ON\n      \nControls the dualization of the problem."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"OFF","@Value2":"ON"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies that the presolver use a heuristic to decide whether to dualize the problem or not.","@ToolTip2":"Specifies that the presolver formulate the dual of the linear optimization problem."}},{"ProcedureOptionName":"IIS=","ProcedureOptionHelp":{"#cdata":"[Syntax: IIS=FALSE  TRUE]\n      \nSpecifies whether PROC OPTLP attempts to identify a set of constraints and variables that form \nan irreducible infeasible set (IIS)."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"FALSE","@Value2":"TRUE"},"ProcedureOptionToolTips":{"@ToolTip1":"Disables IIS detection.","@ToolTip2":"Enables IIS detection."}},{"ProcedureOptionName":"FEASTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: FEASTOL=\u03f5\n      \nSpecifies the feasibility tolerance \u03f5 \u0404 [1E\u20139, 1E\u20134] for determining the feasibility of a variable value. \nThe default value is 1E\u20136. Simplex algorithms use the absolute error and interior point algorithms use the relative error for the computation of feasibility tolerance."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LOGFREQ=|PRINTFREQ=","ProcedureOptionHelp":{"#cdata":"Syntax: LOGFREQ=k | PRINTFREQ=k \n      \nSpecifies that the printing of the solution progress to the iteration log is to occur after every k iterations.\nThe print frequency, k, is an integer between zero and the largest four-byte signed integer, which is\n2\u00b3\u00b9 - 1. \n\nThe value k = 0 disables the printing of the progress of the solution. \n\nIf the LOGFREQ= option is not specified, then PROC OPTLP displays the iteration log with a dynamic\nfrequency according to the problem size if the primal or dual simplex solver is used, with frequency\n10,000 if the network simplex solver is used, or with frequency 1 if the interior point solver is used."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LOGLEVEL=|PRINTLEVEL2=","ProcedureOptionHelp":{"#cdata":"Syntax: NONE | BASIC | MODERATE | AGGRESSIVE \nSyntax: PRINTLEVEL2=NONE | BASIC | MODERATE | AGGRESSIVE\n          \nControls the amount of information that is displayed in the SAS log by the LP solver, from a short \ndescription of presolve information and summary to details at each iteration. \n\nThe default value is MODERATE."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"NONE","@Value2":"BASIC","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"ProcedureOptionToolTips":{"@ToolTip1":"Turn off all solver-related messages in SAS log.","@ToolTip2":"Display a solver summary after stopping.","@ToolTip3":"Print a solver summary and an iteration log by using the interval dictated by the LOGFREQ= option.","@ToolTip4":"Print a detailed solver summary and an iteration log by using the interval dictated by the LOGFREQ= option."}},{"ProcedureOptionName":"MAXITER=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXITER=k] \n      \nSpecifies the maximum number of predictor-corrector iterations performed by the interior \npoint algorithm."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXTIME=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXTIME=k] \n      \nSpecifies an upper limit of k seconds of real time for reading in the data and performing the \noptimization process."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OBJSENSE=","ProcedureOptionHelp":{"#cdata":"Syntax: OBJSENSE=MIN | MAX \n      \nSpecifies whether the LP model is a minimization or a maximization problem."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"MIN","@Value2":"MAX"},"ProcedureOptionToolTips":{"@ToolTip1":"For a minimization problem.","@ToolTip2":"For a maximization problem."}},{"ProcedureOptionName":"OPTTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: OPTTOL=\u03b5] \n      \nSpecifies the optimality tolerance for declaring optimality. The default value is 1E-6."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PRESOLVER=|PRESOL=","ProcedureOptionHelp":{"#cdata":"Specifies a presolve option. The default option is AUTOMATIC (\u20131)."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"NONE","@Value2":"AUTOMATIC","@Value3":"BASIC","@Value4":"MODERATE","@Value5":"AGGRESSIVE"},"ProcedureOptionToolTips":{"@ToolTip1":"Disables presolver.","@ToolTip2":"Applies presolver by using default setting..","@ToolTip3":"Performs basic presolve like removing empty rows, columns, and fixed variables.","@ToolTip4":"Performs basic presolve and apply other inexpensive presolve techniques.","@ToolTip5":"Performs moderate presolve and apply other aggressive (but expensive) presolve techniques."}},{"ProcedureOptionName":"PRICETYPE=","ProcedureOptionHelp":{"#cdata":"Syntax: PRICETYPE=HYBRID | PARTIAL | FULL | DEVEX | STEEPESTEDGE\n      \nSpecifies one of 5 available pricing strategies for the primal and dual simplex solvers."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"HYBRID","@Value2":"PARTIAL","@Value3":"FULL","@Value4":"DEVEX","@Value5":"STEEPESTEDGE"},"ProcedureOptionToolTips":{"@ToolTip1":"Use a hybrid of Devex and steepest-edge pricing strategies. Available for the primal simplex solver only.","@ToolTip2":"Use the Dantzig's rule on a queue of decision variables. Optionally, you can specify QUEUESIZE=.  Available for the primal simplex solver only.","@ToolTip3":"Use the Dantzig's rule on all decision variables.","@ToolTip4":"Use Devex pricing strategy.","@ToolTip5":"Use steepest-edge pricing strategy."}},{"ProcedureOptionName":"PRIMALIN=|PIN=","ProcedureOptionHelp":{"#cdata":"[Syntax: PRIMALIN=SAS-data-set] \n      \nSpecifies the input data set corresponding to the primal solution that is required for warm \nstarting the simplex solvers."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"PRIMALOUT=|POUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: PRIMALOUT=SAS-data-set] \n      \nSpecifies the output data set for the primal solution."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"PRINTLEVEL=","ProcedureOptionHelp":{"#cdata":"Specifies whether a summary of the problem and solution should be printed."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"0","@Value2":"1","@Value3":"2"},"ProcedureOptionToolTips":{"@ToolTip1":"No ODS tables are produced or printed.","@ToolTip2":"If PRINTLEVEL=1, then the ODS (Output Delivery System) tables ProblemSummary, SolutionSummary, and PerformanceInfo are produced and printed.","@ToolTip3":"If PRINTLEVEL=2, then these tables are produced and printed along with an additional table called ProblemStatistics."}},{"ProcedureOptionName":"QUEUESIZE=","ProcedureOptionHelp":{"#cdata":"[Syntax: QUEUESIZE=k] \n      \nSpecifies the queue size. The default value is chosen adaptively based on the number of decision \nvariables. This option is used only when PRICETYPE=PARTIAL."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SAVE_ONLY_IF_OPTIMAL","ProcedureOptionHelp":{"#cdata":"Specifies that the PRIMALOUT= and DUALOUT= data sets be saved only if the final solution obtained \nby the solver at termination is optimal."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SCALE=","ProcedureOptionHelp":{"#cdata":"Specifies a scaling option."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"NONE","@Value2":"AUTOMATIC"},"ProcedureOptionToolTips":{"@ToolTip1":"Disable scaling.","@ToolTip2":"Automatically apply scaling procedure if necessary."}},{"ProcedureOptionName":"SOLVER=|SOL=","ProcedureOptionHelp":{"#cdata":"Specifies an LP solver."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"PRIMAL","@Value2":"DUAL","@Value3":"ITERATIVE"},"ProcedureOptionToolTips":{"@ToolTip1":"Use primal simplex solver.","@ToolTip2":"Use dual simplex solver.","@ToolTip3":"Use interior point solver."}},{"ProcedureOptionName":"SEED=","ProcedureOptionHelp":{"#cdata":"[Syntax: SEED=number]\n      \nSpecifies the initial seed for the random number generator. Because the seed affects the \nperturbation in the simplex algorithms, the result might be a different optimal solution \nand a different solver path, but the effect is usually negligible."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STOP_DG=","ProcedureOptionHelp":{"#cdata":"[Syntax: STOP_DG=delta] \n      \nSpecifies the desired relative duality gap."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STOP_DI=","ProcedureOptionHelp":{"#cdata":"[Syntax: STOP_DI=\u03b2] \n      \nSpecifies the maximum allowed relative dual constraints violation."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STOP_PI=","ProcedureOptionHelp":{"#cdata":"[Syntax: STOP_PI=\u03b1] \n      \nSpecifies the maximum allowed relative bound and primal constraints violation."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TIMETYPE=","ProcedureOptionHelp":{"#cdata":"Specifies type of the time used in a PROC OPTLP call."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"CPU","@Value2":"REAL"},"ProcedureOptionToolTips":{"@ToolTip1":"PROC OPTLP call uses CPU time. This is the default.","@ToolTip2":"PROC OPTLP call uses real time."}}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"PERFORMANCE","StatementHelp":{"#cdata":"Syntax: PERFORMANCE < performance-options > ;\n      \nThe PERFORMANCE statement defines performance parameters for multithreaded and distributed \ncomputing, passes variables about the distributed computing environment, and requests detailed \nresults about the performance characteristics of a High-Performance Analytics procedure.\n\nWith the PERFORMANCE statement, you can also control whether the HPNLIN procedure executes \nin SMP or MPP mode."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"Requests that the procedure produce the Timing ODS table. This table shows a breakdown of the time\nused in each step of the procedure."},"StatementOptionType":"S"},{"StatementOptionName":"NTHREADS=","StatementOptionHelp":{"#cdata":"Syntax: NTHREADS=number | CPUCOUNT\n          \nSpecifies the number of threads that a procedure can use. It overrides the SAS system option THREADS\n| NOTHREADS. The value of number can be any integer between 1 and 256 inclusive. The default\nvalue is CPUCOUNT, which sets the thread count to the number that is determined by the SAS system\noption CPUCOUNT=.\n\nSetting the NTHREADS= option to a number greater than the actual number of available cores might\nresult in reduced performance. Specifying a high NTHREADS= value does not guarantee shorter\nsolution time; the actual change in solution time depends on the computing hardware and the scalability\nof the underlying algorithms in the specified procedure. In some circumstances, a procedure might use\nfewer threads than the specified value of the NTHREADS= option because the procedure\u2019s internal\nalgorithms have determined that a smaller number is preferable."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<num>","@Value2":"CPUCOUNT"},"StatementOptionToolTips":{"@ToolTip1":"Replace <num> with an actual number. The value of number can be any integer between 1 and 256  inclusive. The default value is CPUCOUNT, which sets the thread count to the number that is determined  by the SAS system option CPUCOUNT=.","@ToolTip2":"The default value is CPUCOUNT, which sets the thread count to the number that is determined by the  SAS system option CPUCOUNT="}},{"StatementOptionName":"PARALLELMODE=","StatementOptionHelp":{"#cdata":"Syntax: PARALLELMODE=number | string \n          \nSpecifies the parallel processing mode. This mode determines the solution results that are obtained\nfrom running the same model with the same option values on the same platform multiple times."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DETERMINISTIC|0","@Value2":"NONDETERMINISTIC|1"},"StatementOptionToolTips":{"@ToolTip1":"Requires algorithms to produce the same results every time.","@ToolTip2":"Permits algorithms to produce different solution results. This mode requires less synchronization and might attain better performance than DETERMINISTIC mode."}}]}},{"StatementName":"DECOMP|DECOMPOSITION","StatementHelp":{"#cdata":"Syntax: DECOMP|DECOMPOSITION < options > ; \n      \nThe DECOMP|DECOMPOSITION statement controls the overall decomposition algorithm."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ABSOBJGAP=","StatementOptionHelp":{"#cdata":"Syntax: ABSOBJGAP=number \n          \nSpecifies a stopping criterion for the continuous bound of the decomposition. When the absolute\ndifference between the master objective and the best dual bound falls below the value of number, the\ndecomposition algorithm stops adding columns. The value of number can be any nonnegative number.\nThe default value is the value of the OPTTOL= main solver option."},"StatementOptionType":"V"},{"StatementOptionName":"BLOCKS=","StatementOptionHelp":{"#cdata":"Syntax: BLOCKS=SAS-data-set \n          \nSpecifies (for OPTLP and OPTMILP procedures only) the input data set that contains block definitions\nto be used by the decomposition algorithm if METHOD=USER. To specify blocks in PROC OPTMODEL, use the \n.block constraint suffix instead."},"StatementOptionType":"V"},{"StatementOptionName":"COMPRESSFREQ=","StatementOptionHelp":{"#cdata":"Syntax: COMPRESSFREQ=number \n          \nRemoves ineffective columns from the master LP after every number of iterations. The frequency,\nnumber, is an integer between 0 and the largest four-byte signed integer, which is 2\u00b3\u00b9 - 1. The default\nvalue is 0."},"StatementOptionType":"V"},{"StatementOptionName":"INITVARS=","StatementOptionHelp":{"#cdata":"Syntax: INITVARS=number | string \n          \nSpecifies whether to initialize the columns by using the original cost vector to solve each block."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"OFF","@Value2":"ON"},"StatementOptionToolTips":{"@ToolTip1":"Disables initializing the columns by using the original cost vector to solve each block.","@ToolTip2":"Enables initializing the columns by using the original cost vector to solve each block."}},{"StatementOptionName":"LOGFREQ=","StatementOptionHelp":{"#cdata":"Syntax: LOGFREQ=number \n          \nSpecifies (for MILP problems only) how often to print information in the continuous iteration log. The\nvalue of number can be any nonnegative number up to the largest four-byte signed integer, which is\n2\u00b3\u00b9 - 1. The default value of number is 10. If number is set to 0, then the iteration log is disabled. If\nnumber is positive, then an entry is made in the log at the first iteration, at the last iteration, and at\nintervals that are dictated by the value of number. An entry is also made each time a better integer\nsolution or improved bound is found."},"StatementOptionType":"V"},{"StatementOptionName":"LOGLEVEL=","StatementOptionHelp":{"#cdata":"Syntax: LOGLEVEL=number | string \n          \nControls the amount of information that is displayed in the SAS log by the decomposition algorithm. \n\nThe default is AUTOMATIC for both LPs and MILPs."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC|-1","@Value2":"NONE|0","@Value3":"BASIC|1","@Value4":"MODERATE|2","@Value5":"AGGRESSIVE|3"},"StatementOptionToolTips":{"@ToolTip1":"Prints the continuous iteration log for the root node at the interval dictated by the LOGFREQ= option  in the DECOMP statement. Prints the branch-and-bound node log at the interval dictated by the LOGFREQ=  main solver option.","@ToolTip2":"Turns off printing of all of the decomposition algorithm messages to the SAS log.","@ToolTip3":"Prints the continuous iteration log for each branch-andbound node at the interval dictated by the LOGFREQ= option in the DECOMP statement.","@ToolTip4":"Prints the continuous iteration log and summary information for each iteration of each branch-and-bound  node at the interval dictated by the LOGFREQ= option in the DECOMP statement.","@ToolTip5":"Prints the continuous iteration log and detailed information for each iteration of each branch-and-bound  node at the interval dictated by the LOGFREQ= option in the DECOMP statement."}},{"StatementOptionName":"MASTER_IP_BEG=","StatementOptionHelp":{"#cdata":"Syntax: MASTER_IP_BEG=number | string \n          \nSpecifies (for MILP problems only) whether the master problem is solved as a MILP with the current\nset of columns at the beginning of phase II."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"OFF|0","@Value2":"ON|1"},"StatementOptionToolTips":{"@ToolTip1":"Disables solving the master as a MILP at the beginning of phase II.","@ToolTip2":"Enables solving the master as a MILP at the beginning of phase II."}},{"StatementOptionName":"MASTER_IP_END=","StatementOptionHelp":{"#cdata":"Syntax: MASTER_IP_END=number | string \n          \nSpecifies (for MILP problems only) whether the master problem is solved as a MILP with the current\nset of columns at the end of phase II. \n\nThe default is ON in the root node and 0 elsewhere."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"OFF|0","@Value2":"ON|1"},"StatementOptionToolTips":{"@ToolTip1":"Disables solving the master as a MILP at the end of phase II.","@ToolTip2":"Enables solving the master as a MILP at the end of phase II."}},{"StatementOptionName":"MASTER_IP_FREQ=","StatementOptionHelp":{"#cdata":"Syntax: MASTER_IP_FREQ=number \n          \nSolves the master problem (for MILP problems only) as a MILP with the current set of columns after\nevery number iterations. The frequency, number, is an integer between 0 and the largest four-byte\nsigned integer, which is 2\u00b3\u00b9 - 1. The default is 10 in the root node and 0 elsewhere."},"StatementOptionType":"V"},{"StatementOptionName":"MAXBLOCKS=","StatementOptionHelp":{"#cdata":"Syntax: MAXBLOCKS=number \n          \nSpecifies the maximum number of blocks to allow. If the defined number of blocks exceeds number,\nthe algorithm creates superblocks using a very simple round-robin scheme. The value of number can\nbe any positive number; the default value is the positive number that has the largest absolute value that\ncan be represented in your operating environment."},"StatementOptionType":"V"},{"StatementOptionName":"MAXCOLSPASS=","StatementOptionHelp":{"#cdata":"Syntax: MAXCOLSPASS=number \n          \nSpecifies the maximum number of new columns to allow into the master at each pass. This option is\ndisabled on the initial pass if INITVARS=1. The default is 100."},"StatementOptionType":"V"},{"StatementOptionName":"MAXITER=","StatementOptionHelp":{"#cdata":"Syntax: MAXITER=number \n          \nSpecifies (for MILP problems only) the maximum number of outer iterations for the decomposition\nalgorithm. The value number can be any integer between 1 and the largest four-byte signed integer,\nwhich is 2\u00b3\u00b9 - 1. If you do not specify this option, the procedure does not stop based on the number of\niterations performed."},"StatementOptionType":"V"},{"StatementOptionName":"MAXTIME=","StatementOptionHelp":{"#cdata":"Syntax: MAXTIME=number \n          \nSpecifies an upper limit of number seconds of time for the decomposition algorithm. The value of the\nTIMETYPE= main solver option determines the type of units used. If you do not specify this option,\nthe procedure does not stop based on the amount of time elapsed. The value of number can be any\npositive number; the default value is the positive number that has the largest absolute value that can be\nrepresented in your operating environment."},"StatementOptionType":"V"},{"StatementOptionName":"METHOD=","StatementOptionHelp":{"#cdata":"Specifies the decomposition algorithm method. \n          \nThe default is USER if blocks are defined and NETWORK otherwise."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"USER","@Value2":"NETWORK","@Value3":"AUTO"},"StatementOptionToolTips":{"@ToolTip1":"The user defines which rows belong to which blocks (subproblems). In PROC OPTMODEL, use the .block  constraint suffix. In PROC OPTLP and PROC OPTMILP, use the BLOCKS= data set instead.","@ToolTip2":"The algorithm attempts to find an embedded network similar to what is described in \u201cThe Network  Simplex Algorithm\u201d. The weakly connected components of this network are used as the blocks.","@ToolTip3":"The algorithm attempts to find a block structure in the constraint matrix. For the current release,  METHOD=AUTO finds block-diagonal structure only (not block-angular structures); unless your problem  separates into completely independent problems with no linking constraints, this method finds only  one block and hence is equivalent to calling the MILP solver directly."}},{"StatementOptionName":"RELOBJGAP=","StatementOptionHelp":{"#cdata":"Syntax: RELOBJGAP=number \n          \nSpecifies the relative objective gap as a stopping criterion. The relative objective gap is based on the\nmaster objective (MasterObjective) and the best dual bound (BestBound); it is equal to \n\n  | MasterObjective - BestBound | / (1E-10 + | BestBound |)\n\nWhen this value becomes smaller than the specified gap size number, the decomposition algorithm\nstops adding columns. The value of number can be any nonnegative number. For LP, the default value\nis 0; for MILP, the default value is 1e-4."},"StatementOptionType":"V"}]}},{"StatementName":"DECOMPMASTER|DECOMPOSITIONMASTER|MASTER","StatementHelp":{"#cdata":"Syntax: DECOMPMASTER|DECOMPOSITIONMASTER|MASTER < options > ; \n      \nThe DECOMPMASTER|DECOMPOSITIONMASTER|MASTER statement controls the master problem. \n\nThe default is AUTOMATIC."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"INITPRESOLVER=|INITPRESOL=","StatementOptionHelp":{"#cdata":"Syntax: INITPRESOLVER=number | string\nINITPRESOL=number | string\n\nSpecifies, for the first master solve only, presolve conditions."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC|-1","@Value2":"NONE|0","@Value3":"BASIC|1","@Value4":"MODERATE|2","@Value5":"AGGRESSIVE|3"},"StatementOptionToolTips":{"@ToolTip1":"Applies the default level of presolve processing.","@ToolTip2":"Disables presolver.","@ToolTip3":"Performs minimal presolve processing.","@ToolTip4":"Applies a higher level of presolve processing.","@ToolTip5":"Applies the highest level of presolve processing."}},{"StatementOptionName":"ALGORITHM=|SOLVER=|SOL=","StatementOptionHelp":{"#cdata":"Syntax: ALGORITHM=option | SOLVER=option | SOL=option \n          \nSpecifies an LP solver."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"PRIMAL","@Value2":"DUAL","@Value3":"NETWORK","@Value4":"INTERIORPOINT","@Value5":"CONCURRENT"},"StatementOptionToolTips":{"@ToolTip1":"Uses primal simplex solver.","@ToolTip2":"Uses dual simplex solver.","@ToolTip3":"Uses network simplex solver.","@ToolTip4":"Uses interior point solver.","@ToolTip5":"Uses several different algorithms in parallel."}},{"StatementOptionName":"FEASTOL=","StatementOptionHelp":{"#cdata":"Syntax: FEASTOL=\u03f5 \n          \nSpecifies the feasibility tolerance \u03f5 \u0404[1E\u20139, 1E\u20134] for determining the feasibility of a variable value.\nThe default value is 1E\u20136."},"StatementOptionType":"V"},{"StatementOptionName":"LOGLEVEL=|PRINTLEVEL2=","StatementOptionHelp":{"#cdata":"Syntax: LOGLEVEL=number | string \nPRINTLEVEL2=number | string\n          \nControls the amount of information that is displayed in the SAS log by the LP solver, from a short \ndescription of presolve information and summary to details at each iteration. \n\nThe default value is MODERATE."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE|0","@Value2":"BASIC|1","@Value3":"MODERATE|2","@Value4":"AGGRESSIVE|3"},"StatementOptionToolTips":{"@ToolTip1":"Turn off all solver-related messages in SAS log.","@ToolTip2":"Display a solver summary after stopping.","@ToolTip3":"Print a solver summary and an iteration log by using the interval dictated by the LOGFREQ= option.","@ToolTip4":"Print a detailed solver summary and an iteration log by using the interval dictated by the LOGFREQ= option."}},{"StatementOptionName":"MAXITER=","StatementOptionHelp":{"#cdata":"Syntax: MAXITER=k \n          \nSpecifies the maximum number of iterations. The value k can be any integer between one and the\nlargest four-byte signed integer, which is 2\u00b3\u00b9 - 1. If you do not specify this option, the procedure\ndoes not stop based on the number of iterations performed. For network simplex, this iteration limit\ncorresponds to the solver called after network simplex (either primal or dual simplex)."},"StatementOptionType":"V"},{"StatementOptionName":"MAXTIME=","StatementOptionHelp":{"#cdata":"Syntax: MAXTIME=t \n          \nSpecifies an upper limit of t seconds of time for reading in the data and performing the optimization\nprocess. The value of the TIMETYPE= option determines the type of units used. If you do not specify\nthis option, the procedure does not stop based on the amount of time elapsed. The value of t can be\nany positive number; the default value is the positive number that has the largest absolute value that\ncan be represented in your operating environment."},"StatementOptionType":"V"},{"StatementOptionName":"OPTTOL=","StatementOptionHelp":{"#cdata":"Syntax: OPTTOL=\u03f5 \n          \nSpecifies the optimality tolerance \u03f5 \u0404[1E\u20139, 1E\u20134] for declaring optimality. The default value is 1E\u20136."},"StatementOptionType":"V"},{"StatementOptionName":"PRINTLEVEL=","StatementOptionHelp":{"#cdata":"Syntax: PRINTLEVEL=0 | 1 | 2 \n          \nSpecifies whether a summary of the problem and solution should be printed. If PRINTLEVEL=1, then\nthe ODS (Output Delivery System) tables ProblemSummary, SolutionSummary, and PerformanceInfo\nare produced and printed. If PRINTLEVEL=2, then these tables are produced and printed along with\nan additional table called ProblemStatistics. If PRINTLEVEL=0, then no ODS tables are produced or\nprinted. The default value is 1."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"0","@Value2":"1","@Value3":"2"},"StatementOptionToolTips":{"@ToolTip1":"If PRINTLEVEL=0, then no ODS tables are produced or printed.","@ToolTip2":"If PRINTLEVEL=1, then the ODS (Output Delivery System) tables ProblemSummary, SolutionSummary,  and PerformanceInfo are produced and printed.","@ToolTip3":"If PRINTLEVEL=2, then these tables are produced and printed along with an additional table  called ProblemStatistics."}},{"StatementOptionName":"TIMETYPE=","StatementOptionHelp":{"#cdata":"Syntax: TIMETYPE=number | string \n          \nSpecifies whether CPU time or real time is used for the MAXTIME= option and the _OROPTLP_\nmacro variable in a PROC OPTLP call."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CPU","@Value2":"REAL"},"StatementOptionToolTips":{"@ToolTip1":"Specifies units of CPU time.","@ToolTip2":"Specifies units of real time."}},{"StatementOptionName":"PRICETYPE=","StatementOptionHelp":{"#cdata":"Syntax: PRICETYPE=number | string \n          \nSpecifies a pricing strategy for the primal and dual simplex solvers. \n\nThe default pricing strategy for the primal simplex solver is HYBRID (0) and for the dual simplex\nsolver is STEEPESTEDGE (4). For the network simplex solver, this option applies only to the solver\nspecified by the ALGORITHM2= option."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"HYBRID","@Value2":"PARTIAL","@Value3":"FULL","@Value4":"DEVEX","@Value5":"STEEPESTEDGE"},"StatementOptionToolTips":{"@ToolTip1":"Use a hybrid of Devex and steepest-edge pricing strategies. Available for the primal simplex solver only.","@ToolTip2":"Use Dantzig\u2019s rule on a queue of decision variables. Optionally, you can specify QUEUESIZE=. Available for the primal simplex solver only.","@ToolTip3":"Use Dantzig\u2019s rule on all decision variables.","@ToolTip4":"Use Devex pricing strategy.","@ToolTip5":"Use steepest-edge pricing strategy."}},{"StatementOptionName":"QUEUESIZE=","StatementOptionHelp":{"#cdata":"Syntax: QUEUESIZE=k \n          \nSpecifies the queue size k \u0404 [\u008c1, n]\u008d, where n is the number of decision variables. This queue is used for\nfinding an entering variable in the simplex iteration. The default value is chosen adaptively based on\nthe number of decision variables. This option is used only when PRICETYPE=PARTIAL."},"StatementOptionType":"V"},{"StatementOptionName":"SCALE=","StatementOptionHelp":{"#cdata":"Syntax: SCALE=number | string \n          \nSpecifies one of the following scaling options: NONE(0), AUTOMATIC(-1). \n\nThe default option is AUTOMATIC (\u20131)."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"AUTOMATIC"},"StatementOptionToolTips":{"@ToolTip1":"Disable scaling.","@ToolTip2":"Automatically apply scaling procedure if necessary."}},{"StatementOptionName":"CROSSOVER=","StatementOptionHelp":{"#cdata":"Syntax: CROSSOVER=number | string \n          \nSpecifies whether to convert the interior point solution to a basic simplex solution. If the interior point\nalgorithm terminates with a solution, the crossover algorithm uses the interior point solution to create\nan initial basic solution. After performing primal fixing and dual fixing, the crossover algorithm calls a\nsimplex algorithm to locate an optimal basic solution."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"OFF","@Value2":"ON"},"StatementOptionToolTips":{"@ToolTip1":"Do not convert the interior point solution to a basic simplex solution.","@ToolTip2":"Convert the interior point solution to a basic simplex solution."}},{"StatementOptionName":"STOP_DG=","StatementOptionHelp":{"#cdata":"Syntax: STOP_DG=\u03b4 \n          \nSpecifies the desired relative duality gap \u03b4 \u0404[1E\u20139, 1E\u20134]. This is the relative difference between the\nprimal and dual objective function values and is the primary solution quality parameter. The default\nvalue is 1E\u20136."},"StatementOptionType":"V"},{"StatementOptionName":"STOP_DI=","StatementOptionHelp":{"#cdata":"Syntax: STOP_DI= \u03b2\n          \nSpecifies the maximum allowed relative dual constraints violation \u03b2 \u0404[1E\u20139, 1E\u20134]. The default value\nis 1E\u20136."},"StatementOptionType":"V"},{"StatementOptionName":"STOP_PI=","StatementOptionHelp":{"#cdata":"Syntax: STOP_PI= \u03b1\n          \nSpecifies the maximum allowed relative bound and primal constraints violation \u03b1 \u0404[1E\u20139, 1E\u20134]. The\ndefault value is 1E\u20136."},"StatementOptionType":"V"}],"ProcedureOption":{"ProcedureOptionName":"DUALITYGAP=","ProcedureOptionHelp":{"#cdata":"[Syntax: DUALITYGAP=\u03b4]\n      \nSpecifies the desired relative duality gap, \u03b4 \u03f5 [1E\u20139, 1E\u20134]. This is the relative difference between \nthe primal and dual objective function values and is the primary solution quality parameter. "},"ProcedureOptionType":"DV"}}},{"StatementName":"DECOMPSUBPROB|DECOMPOSITIONSUBPROB|SUBPROB","StatementHelp":{"#cdata":"Syntax: DECOMPSUBPROB|DECOMPOSITIONSUBPROB|SUBPROB < options > ; \n\nThe DECOMPSUBPROB|DECOMPOSITIONSUBPROB|SUBPROB statement controls the subproblem. \n\nThe default is AUTOMATIC."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALGORITHM=|SOLVER=|SOL=","StatementOptionHelp":{"#cdata":"Syntax: ALGORITHM=option | SOLVER=option | SOL=option \n\n[Used with LP and MILP Algorithms]\n\nSpecifies an LP solver."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"PRIMAL","@Value2":"DUAL","@Value3":"NETWORK","@Value4":"INTERIORPOINT","@Value5":"CONCURRENT"},"StatementOptionToolTips":{"@ToolTip1":"Uses primal simplex solver.","@ToolTip2":"Uses dual simplex solver.","@ToolTip3":"Uses network simplex solver.","@ToolTip4":"Uses interior point solver.","@ToolTip5":"Uses several different algorithms in parallel."}},{"StatementOptionName":"INITPRESOLVER=|INITPRESOL=","StatementOptionHelp":{"#cdata":"Syntax: INITPRESOLVER=number | string\nINITPRESOL=number | string\n\n[Used with LP and MILP Algorithms]\n\nSpecifies, for the first master solve only, presolve conditions."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC|-1","@Value2":"NONE|0","@Value3":"BASIC|1","@Value4":"MODERATE|2","@Value5":"AGGRESSIVE|3"},"StatementOptionToolTips":{"@ToolTip1":"Applies the default level of presolve processing.","@ToolTip2":"Disables presolver.","@ToolTip3":"Performs minimal presolve processing.","@ToolTip4":"Applies a higher level of presolve processing.","@ToolTip5":"Applies the highest level of presolve processing."}},{"StatementOptionName":"FEASTOL=","StatementOptionHelp":{"#cdata":"Syntax: FEASTOL=\u03f5 \n \n[Used with LP and MILP Algorithms]\n \nSpecifies the feasibility tolerance \u03f5 \u0404[1E\u20139, 1E\u20134] for determining the feasibility of a variable value.\nThe default value is 1E\u20136."},"StatementOptionType":"V"},{"StatementOptionName":"LOGLEVEL=|PRINTLEVEL2=","StatementOptionHelp":{"#cdata":"Syntax: LOGLEVEL=number | string \nPRINTLEVEL2=number | string\n\n[Used with LP and MILP Algorithms]\n\nControls the amount of information displayed in the SAS log by the solver, from a short description of\npresolve information and summary to details at each node. \n\nThe default value is MODERATE."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE|0","@Value2":"BASIC|1","@Value3":"MODERATE|2","@Value4":"AGGRESSIVE|3"},"StatementOptionToolTips":{"@ToolTip1":"Turns off all solver-related messages in the SAS log.","@ToolTip2":"Displays a solver summary after stopping.","@ToolTip3":"Prints a solver summary and a node log by using the interval dictated by the LOGFREQ= option.","@ToolTip4":"Prints a detailed solver summary and a node log by using the interval dictated by the LOGFREQ= option."}},{"StatementOptionName":"MAXITER=","StatementOptionHelp":{"#cdata":"Syntax: MAXITER=k \n\n[Used with LP Algorithm]\n\nSpecifies the maximum number of iterations. The value k can be any integer between one and the\nlargest four-byte signed integer, which is 2\u00b3\u00b9 - 1. If you do not specify this option, the procedure\ndoes not stop based on the number of iterations performed. For network simplex, this iteration limit\ncorresponds to the solver called after network simplex (either primal or dual simplex)."},"StatementOptionType":"V"},{"StatementOptionName":"MAXTIME=","StatementOptionHelp":{"#cdata":"Syntax: MAXTIME=t \n \n[Used with LP and MILP Algorithms]\n\nSpecifies an upper limit of t seconds of time for reading in the data and performing the optimization\nprocess. The value of the TIMETYPE= option determines the type of units used. If you do not specify\nthis option, the procedure does not stop based on the amount of time elapsed. The value of t can be\nany positive number; the default value is the positive number that has the largest absolute value that\ncan be represented in your operating environment."},"StatementOptionType":"V"},{"StatementOptionName":"OPTTOL=","StatementOptionHelp":{"#cdata":"Syntax: OPTTOL=\u03f5 \n\n[Used with LP and MILP Algorithms]\n\nSpecifies the optimality tolerance \u03f5 \u0404[1E\u20139, 1E\u20134] for declaring optimality. The default value is 1E\u20136."},"StatementOptionType":"V"},{"StatementOptionName":"PRINTLEVEL=","StatementOptionHelp":{"#cdata":"Syntax: PRINTLEVEL=0 | 1 | 2 \n \n[Used with LP Algorithm]\n \nSpecifies whether a summary of the problem and solution should be printed. If PRINTLEVEL=1, then\nthe ODS (Output Delivery System) tables ProblemSummary, SolutionSummary, and PerformanceInfo\nare produced and printed. If PRINTLEVEL=2, then these tables are produced and printed along with\nan additional table called ProblemStatistics. If PRINTLEVEL=0, then no ODS tables are produced or\nprinted. The default value is 1."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"0","@Value2":"1","@Value3":"2"},"StatementOptionToolTips":{"@ToolTip1":"If PRINTLEVEL=0, then no ODS tables are produced or printed.","@ToolTip2":"If PRINTLEVEL=1, then the ODS (Output Delivery System) tables ProblemSummary, SolutionSummary,  and PerformanceInfo are produced and printed.","@ToolTip3":"If PRINTLEVEL=2, then these tables are produced and printed along with an additional table  called ProblemStatistics."}},{"StatementOptionName":"TIMETYPE=","StatementOptionHelp":{"#cdata":"Syntax: TIMETYPE=number | string \n          \n[Used with LP and MILP Algorithms]\n\nSpecifies whether CPU time or real time is used for the MAXTIME= option and the _OROPTLP_\nmacro variable in a PROC OPTLP call or _OROPTMILP_ macro variable in a PROC OPTMILP call."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CPU","@Value2":"REAL"},"StatementOptionToolTips":{"@ToolTip1":"Specifies units of CPU time.","@ToolTip2":"Specifies units of real time."}},{"StatementOptionName":"BASIS=","StatementOptionHelp":{"#cdata":"Syntax: BASIS=number | string \n          \n[Used with LP Algorithm]\n          \nSpecifies the following options for generating an initial basis:\n\n0 CRASH -- Generate an initial basis by using crash techniques (Maros 2003). The procedure creates \n  a triangular basic matrix consisting of both decision variables and slack variables.\n1 SLACK -- Generate an initial basis by using all slack variables.\n2 WARMSTART -- Start the primal and dual simplex solvers with a userspecified initial basis. The \n  PRIMALIN= and DUALIN= data sets are required to specify an initial basis.\n\nThe default option for the primal simplex solver is CRASH (0). The default option for the dual simplex\nsolver is SLACK(1). For network simplex, this option has no effect."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CRASH","@Value2":"SLACK","@Value3":"WARMSTART"},"StatementOptionToolTips":{"@ToolTip1":"Generate an initial basis by using crash techniques (Maros 2003). The procedure creates  a triangular basic matrix consisting of both decision variables and slack variables.","@ToolTip2":"Generate an initial basis by using all slack variables.","@ToolTip3":"Start the primal and dual simplex solvers with a userspecified initial basis. The  PRIMALIN= and DUALIN= data sets are required to specify an initial basis."}},{"StatementOptionName":"PRICETYPE=","StatementOptionHelp":{"#cdata":"Syntax: PRICETYPE=number | string \n\n[Used with LP Algorithm]\n\nSpecifies a pricing strategy for the primal and dual simplex solvers. \n\nThe default pricing strategy for the primal simplex solver is HYBRID (0) and for the dual simplex\nsolver is STEEPESTEDGE (4). For the network simplex solver, this option applies only to the solver\nspecified by the ALGORITHM2= option."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"HYBRID","@Value2":"PARTIAL","@Value3":"FULL","@Value4":"DEVEX","@Value5":"STEEPESTEDGE"},"StatementOptionToolTips":{"@ToolTip1":"Use a hybrid of Devex and steepest-edge pricing strategies. Available for the primal simplex solver only.","@ToolTip2":"Use Dantzig\u2019s rule on a queue of decision variables. Optionally, you can specify QUEUESIZE=. Available for the primal simplex solver only.","@ToolTip3":"Use Dantzig\u2019s rule on all decision variables.","@ToolTip4":"Use Devex pricing strategy.","@ToolTip5":"Use steepest-edge pricing strategy."}},{"StatementOptionName":"QUEUESIZE=","StatementOptionHelp":{"#cdata":"Syntax: QUEUESIZE=k \n\n[Used with LP Algorithm]\n\nSpecifies the queue size k \u0404 [\u008c1, n]\u008d, where n is the number of decision variables. This queue is used for\nfinding an entering variable in the simplex iteration. The default value is chosen adaptively based on\nthe number of decision variables. This option is used only when PRICETYPE=PARTIAL."},"StatementOptionType":"V"},{"StatementOptionName":"SCALE=","StatementOptionHelp":{"#cdata":"Syntax: SCALE=number | string \n\n[Used with LP and MILP Algorithms]\n\nSpecifies one of the following scaling options: NONE(0), AUTOMATIC(-1). \n\nThe default option is AUTOMATIC (\u20131)."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"AUTOMATIC"},"StatementOptionToolTips":{"@ToolTip1":"Disable scaling.","@ToolTip2":"Automatically apply scaling procedure if necessary."}},{"StatementOptionName":"CROSSOVER=","StatementOptionHelp":{"#cdata":"Syntax: CROSSOVER=number | string \n          \n[Used with LP Algorithm]\n\nSpecifies whether to convert the interior point solution to a basic simplex solution. If the interior point\nalgorithm terminates with a solution, the crossover algorithm uses the interior point solution to create\nan initial basic solution. After performing primal fixing and dual fixing, the crossover algorithm calls a\nsimplex algorithm to locate an optimal basic solution."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"OFF","@Value2":"ON"},"StatementOptionToolTips":{"@ToolTip1":"Do not convert the interior point solution to a basic simplex solution.","@ToolTip2":"Convert the interior point solution to a basic simplex solution."}},{"StatementOptionName":"STOP_DG=","StatementOptionHelp":{"#cdata":"Syntax: STOP_DG=\u03b4 \n\n[Used with LP Algorithm]\n\nSpecifies the desired relative duality gap \u03b4 \u0404[1E\u20139, 1E\u20134]. This is the relative difference between the\nprimal and dual objective function values and is the primary solution quality parameter. The default\nvalue is 1E\u20136."},"StatementOptionType":"V"},{"StatementOptionName":"STOP_DI=","StatementOptionHelp":{"#cdata":"Syntax: STOP_DI= \u03b2\n          \n[Used with LP Algorithm]\n\nSpecifies the maximum allowed relative dual constraints violation \u03b2 \u0404[1E\u20139, 1E\u20134]. The default value\nis 1E\u20136."},"StatementOptionType":"V"},{"StatementOptionName":"STOP_PI=","StatementOptionHelp":{"#cdata":"Syntax: STOP_PI= \u03b1\n\n[Used with LP Algorithm]\n\nSpecifies the maximum allowed relative bound and primal constraints violation \u03b1 \u0404[1E\u20139, 1E\u20134]. The\ndefault value is 1E\u20136."},"StatementOptionType":"V"},{"StatementOptionName":"ABSOBJGAP=","StatementOptionHelp":{"#cdata":"Syntax: ABSOBJGAP=number \n\n[Used with MILP Algorithm]\n\nSpecifies a stopping criterion for the continuous bound of the decomposition. When the absolute\ndifference between the master objective and the best dual bound falls below the value of number, the\ndecomposition algorithm stops adding columns. The value of number can be any nonnegative number.\nThe default value is the value of the OPTTOL= main solver option."},"StatementOptionType":"V"},{"StatementOptionName":"CUTOFF=","StatementOptionHelp":{"#cdata":"Syntax: CUTOFF=number \n          \n[Used with MILP Algorithm]\n\nCuts off any nodes in a minimization (maximization) problem with an objective value above (below)\nnumber. The value of number can be any number; the default value is the positive (negative) number\nthat has the largest absolute value that can be represented in your operating environment."},"StatementOptionType":"V"},{"StatementOptionName":"EMPHASIS=","StatementOptionHelp":{"#cdata":"Syntax: EMPHASIS=number | string \n\n[Used with MILP Algorithm]\n\nSpecifies a search emphasis string or its corresponding value number:\n\n0 BALANCE -- Performs a balanced search\n1 OPTIMAL -- Emphasizes optimality over feasibility\n2 FEASIBLE -- Emphasizes feasibility over optimality\n\nThe default value is BALANCE."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BALANCE","@Value2":"OPTIMAL","@Value3":"FEASIBLE"},"StatementOptionToolTips":{"@ToolTip1":"Performs a balanced search","@ToolTip2":"Emphasizes optimality over feasibility","@ToolTip3":"Emphasizes feasibility over optimality"}},{"StatementOptionName":"INTTOL=","StatementOptionHelp":{"#cdata":"Syntax: INTTOL=number \n          \n[Used with MILP Algorithm]\n\nSpecifies the amount by which an integer variable value can differ from an integer and still be considered\ninteger feasible. The value of number can be any number between 0.0 and 1.0; the default value is\n1E\u20135. PROC OPTMILP attempts to find an optimal solution with integer infeasibility less than number.\nIf you assign a value smaller than 1E\u201310 to number and the best solution found by PROC OPTMILP\nhas integer infeasibility between number and 1E\u201310, then PROC OPTMILP ends with a solution status\nof OPTIMAL_COND."},"StatementOptionType":"V"},{"StatementOptionName":"MAXNODES=","StatementOptionHelp":{"#cdata":"Syntax: MAXNODES=number \n          \n[Used with MILP Algorithm]\n\nSpecifies the maximum number of branch-and-bound nodes to be processed. The value of number can\nbe any nonnegative integer up to the largest four-byte signed integer, which is 2\u00b3\u00b9 - 1. The default\nvalue is 2\u00b3\u00b9 - 1."},"StatementOptionType":"V"},{"StatementOptionName":"MAXSOLS=","StatementOptionHelp":{"#cdata":"Syntax: MAXSOLS=number           \n\n[Used with MILP Algorithm]\n\nSpecifies a stopping criterion. If number solutions have been found, then the procedure stops. The\nvalue of number can be any positive integer up to the largest four-byte signed integer, which is 2\u00b3\u00b9 - 1.\nThe default value is 2\u00b3\u00b9 - 1."},"StatementOptionType":"V"},{"StatementOptionName":"PROBE=","StatementOptionHelp":{"#cdata":"Syntax: PROBE=number | string \n          \n[Used with MILP Algorithm]\n\nSpecifies a probing string or its corresponding value number:\n\n\u20131 AUTOMATIC -- Uses the probing strategy determined by PROC OPTMILP\n0 NONE -- Disables probing\n1 MODERATE -- Uses the probing moderately\n2 AGGRESSIVE -- Uses the probing aggressively \n\nThe default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC|-1","@Value2":"NONE|0","@Value3":"MODERATE|1","@Value4":"AGGRESSIVE|2"},"StatementOptionToolTips":{"@ToolTip1":"Uses the probing strategy determined by PROC OPTMILP","@ToolTip2":"Disables probing","@ToolTip3":"Uses the probing moderately","@ToolTip4":"Uses the probing aggressively"}},{"StatementOptionName":"RELOBJGAP=","StatementOptionHelp":{"#cdata":"Syntax: RELOBJGAP=number \n          \n[Used with MILP Algorithm]\n\nSpecifies a stopping criterion based on the best integer objective (BestInteger) and the objective of the\nbest remaining node (BestBound). The relative objective gap is equal to \n\n  | BestInteger - BestBound | / (1E-10 + | BestBound |)\n\nWhen this value becomes smaller than the specified gap size number, the procedure stops. The value\nof number can be any nonnegative number; the default value is 1E\u20134."},"StatementOptionType":"V"},{"StatementOptionName":"TARGET=","StatementOptionHelp":{"#cdata":"Syntax: TARGET=number \n          \n[Used with MILP Algorithm]\n\nSpecifies a stopping criterion for minimization (maximization) problems. If the best integer objective\nis better than or equal to number, the procedure stops. The value of number can be any number; the\ndefault value is the negative (positive) number that has the largest absolute value representable in your\noperating environment."},"StatementOptionType":"V"},{"StatementOptionName":"HEURISTICS=","StatementOptionHelp":{"#cdata":"Syntax: HEURISTICS=number | string \n          \n[Used with MILP Algorithm]\n\nControls the level of primal heuristics applied by PROC OPTMILP. This level determines how frequently\nprimal heuristics are applied during the branch-and-bound tree search. It also affects the maximum\nnumber of iterations allowed in iterative heuristics. Some computationally expensive heuristics might\nbe disabled by the solver at less aggressive levels. \n\nSetting HEURISTICS=NONE does not disable the heuristics that repair an infeasible input solution that is\nspecified in a PRIMALIN= data set.\n\nThe default value of the HEURISTICS= option is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"BASIC","@Value4":"MODERATE","@Value5":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Apply default level of heuristics, similar to MODERATE.","@ToolTip2":"Disable all primal heuristics.","@ToolTip3":"Apply basic primal heuristics at low frequency.","@ToolTip4":"Apply most primal heuristics at moderate frequency.","@ToolTip5":"Apply all primal heuristics at high frequency."}},{"StatementOptionName":"CONFLICTSEARCH=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm]\n          \nSpecifies the level of conflict search performed by PROC OPTMILP. Conflict search is used to find\nclauses resulting from infeasible subproblems that arise in the search tree. \n\nThe default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Performs conflict search based on a strategy determined by PROC OPTMILP","@ToolTip2":"Disables conflict search","@ToolTip3":"Performs a moderate conflict search","@ToolTip4":"Performs an aggressive conflict search"}},{"StatementOptionName":"NODESEL=","StatementOptionHelp":{"#cdata":"Syntax: NODESEL=number | string \n\n[Used with MILP Algorithm]\n\nSpecifies the node selection strategy string or its corresponding value number:\n\n\u20131 AUTOMATIC -- Uses automatic node selection\n0 BESTBOUND -- Chooses the node with the best relaxed objective (best-bound-first strategy)\n1 BESTESTIMATE -- Chooses the node with the best estimate of the integer objective value (best-estimate-first strategy)\n2 DEPTH -- Chooses the most recently created node (depthfirst strategy)\n\nThe default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"BESTBOUND","@Value3":"BESTESTIMATE","@Value4":"DEPTH"},"StatementOptionToolTips":{"@ToolTip1":"Use automatic node selection.","@ToolTip2":"Choose the node with the best relaxed objective (best-bound-first strategy).","@ToolTip3":"Choose the node with the best estimate of the integer objective value (best-estimate-first strategy).","@ToolTip4":"Choose the most recently created node (depth-first strategy)."}},{"StatementOptionName":"PRIMALIN=|PIN=","StatementOptionHelp":{"#cdata":"Syntax: PRIMALIN=number | string\nPIN=number | string\n\n[Used with MILP Algorithm]\n\nSpecifies (for MILP problems only) whether the MILP solver is to use the values of the previous best\nsolution\u2019s variables as a starting solution (warm start). If the MILP solver finds that the input solution is\nfeasible, then the input solution provides an incumbent solution and a bound for the branch-and-bound\nalgorithm. If the solution is not feasible, the MILP solver tries to repair it. When it is difficult to\nfind a good integer-feasible solution for a problem, warm start can reduce solution time significantly."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"OFF","@Value2":"ON"},"StatementOptionToolTips":{"@ToolTip1":"Ignores the previous solution.","@ToolTip2":"Starts from the previous solution."}},{"StatementOptionName":"STRONGLEN=","StatementOptionHelp":{"#cdata":"Syntax: STRONGLEN=number | AUTOMATIC \n          \n[Used with MILP Algorithm]\n\nSpecifies the number of candidates used when performing the strong branching variable selection\nstrategy. The value of number can be any positive integer up to the largest four-byte signed integer,\nwhich is 2\u00b3\u00b9 - 1. If you specify the keyword AUTOMATIC or the value \u20131, PROC OPTMILP uses\nthe default value; this value is calculated automatically."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<number>","@Value2":"AUTOMATIC"},"StatementOptionToolTips":{"@ToolTip1":"Replace <number> with any positive integer up to the largest four-byte signed integer, which is 2\u00b3\u00b9 - 1.","@ToolTip2":"Tells PROC OPTMILP to use the default value; this value is calculated automatically."}},{"StatementOptionName":"VARSEL=","StatementOptionHelp":{"#cdata":"Specifies the rule for selecting the branching variable. \n          \n[Used with MILP Algorithm]\n\nThe default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"MAXINFEAS","@Value3":"MININFEAS","@Value4":"PSEUDO","@Value5":"STRONG"},"StatementOptionToolTips":{"@ToolTip1":"Use automatic branching variable selection.","@ToolTip2":"Choose the variable with maximum infeasibility.","@ToolTip3":"Choose the variable with minimum infeasibility.","@ToolTip4":"Choose a branching variable based on pseudocost.","@ToolTip5":"Use strong branching variable selection strategy."}},{"StatementOptionName":"ALLCUTS=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm]\n          \nProvides a shorthand way of setting all the cuts-related options in one setting. In other words, \nALLCUTS=num is equivalent to setting each of the individual cuts parameters to the same value num."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTCLIQUE=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm] \n          \nSpecifies the level of clique cuts generated by PROC OPTMILP. \n      \nThe CUTCLIQUE= option overrides the ALLCUTS= option. The default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTFLOWCOVER=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm] \n          \nSpecifies the level of flow cover cuts generated by PROC OPTMILP. \n      \nThe CUTFLOWCOVER= option overrides the ALLCUTS= option. The default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTFLOWPATH=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm] \n          \nSpecifies the level of flow path cuts generated by PROC OPTMILP. \n      \nThe CUTFLOWPATH= option overrides the ALLCUTS= option. The default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTGOMORY=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm] \n          \nSpecifies the level of Gomory cuts generated by PROC OPTMILP. \n      \nThe CUTGOMORY= option overrides the ALLCUTS= option. The default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTGUB=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm] \n          \nSpecifies the level of generalized upper bound (GUB) cover cuts generated by PROC OPTMILP. \n      \nThe CUTGUB= option overrides the ALLCUTS= option. The default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTIMPLIED=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm] \n          \nSpecifies the level of implied bound cuts generated by PROC OPTMILP. \n      \nThe CUTIMPLIED= option overrides the ALLCUTS= option. The default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTKNAPSACK=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm] \n          \nSpecifies the level of knapsack cover cuts generated by PROC OPTMILP. \n      \nThe CUTKNAPSACK= option overrides the ALLCUTS= option. The default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTLAP=","StatementOptionHelp":{"#cdata":" \n          \nSpecifies the level of lift-and-project (LAP) cuts generated by PROC OPTMILP."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTMILIFTED=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm] \n          \nSpecifies the level of mixed lifted 0-1 cuts that are generated by PROC OPTMILP. \\\n      \nThe CUTMILIFTED= option overrides the ALLCUTS=option. The default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTMIR=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm] \n          \nSpecifies the level of mixed integer rounding (MIR) cuts generated by PROC OPTMILP. \n      \nThe CUTMIR= option overrides the ALLCUTS= option. The default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTSFACTOR=","StatementOptionHelp":{"#cdata":"[Used with MILP Algorithm] \n      \nSpecifies a row multiplier factor for cuts. The number of cuts added is limited to num times the \noriginal number of rows. The value of num can be any nonnegative number less than or equal to 100; \nthe default value is 3.0."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTSTRATEGY=|CUTS=","StatementOptionHelp":{"#cdata":"[Syntax: CUTSTRATEGY=number | string ] \n      \n[Used with MILP Algorithm]\n\nSpecifies the overall aggressiveness of the cut generation in the solver. Setting a nondefault value\nadjusts a number of cut parameters such that the cut generation is basic, moderate, or aggressive\ncompared to the default value."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}},{"StatementOptionName":"CUTZEROHALF=","StatementOptionHelp":{"#cdata":"[Syntax: CUTZEROHALF=number | string] \n\n[Used with MILP Algorithm]      \n\nSpecifies the level of zero-half cuts that are generated by PROC OPTMILP. \n\nThe CUTZEROHALF= option overrides the ALLCUTS= option. The default value is AUTOMATIC."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AUTOMATIC","@Value2":"NONE","@Value3":"MODERATE","@Value4":"AGGRESSIVE"},"StatementOptionToolTips":{"@ToolTip1":"Generate cutting planes based on a strategy determined by PROC OPTMILP.","@ToolTip2":"Disable generation of cutting planes.","@ToolTip3":"Use a moderate cut strategy.","@ToolTip4":"Use an aggressive cut strategy."}}],"#comment":{}}}]}}}