{"Procedure":{"Name":"PCA","ProductGroup":"CAS","ProcedureHelp":{"#cdata":"Syntax: PROC PCA < options > ;\n    BY variables ;\n    CODE < options > ;\n    DISPLAY < table-list > < / options > ;\n    DISPLAYOUT table-spec-list < / options > ;\n    FREQ variable ;\n    OUTPUT OUT=CAS-libref.data-table\n      <COPYVARS=(variables) >\n      < keyword < =prefix > >. . . < keyword < =prefix > > ;\n    PARTIAL variables ;\n    VAR variables ;\n    WEIGHT variable ;\n\nThe PCA procedure performs principal component analysis in SAS Viya. Principal component analysis is\na multivariate technique for examining relationships among several quantitative variables. It provides an\noptimal way to reduce dimensionality by projecting the data onto a lower-dimensional orthogonal subspace\nthat explains as much variation in those variables as possible. The choice between using factor analysis and\nusing principal component analysis depends in part on your research objectives. You should use the PCA\nprocedure if you are interested in summarizing data and detecting linear relationships. You can use principal\ncomponent analysis to reduce the number of variables in regression, clustering, and so on."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"COVARIANCE|COV","ProcedureOptionHelp":{"#cdata":"Computes the principal components from the covariance matrix. If you omit this option, the correlation\nmatrix is analyzed. The COV option causes variables that have large variances to be more strongly\nassociated with components that have large eigenvalues, and it causes variables that have small\nvariances to be more strongly associated with components that have small eigenvalues. You should not\nspecify this option unless the units in which the variables are measured are comparable or the variables\nare standardized in some way."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table\n      \nNames the input data table to be used by PROC PCA. The default is the most recently created data\ntable. CAS-libref specifies the CAS library where the input data table resides, and data-table specifies\nthe name of the input data table."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"METHOD=","ProcedureOptionHelp":{"#cdata":"[Syntax: METHOD=EIG | ITERGS< (iter-options) > | NIPALS< (iter-options) >\n      \nSpecifies the principal component extraction method to be used.\n\nBy default, METHOD=EIG. If you specify METHOD=NIPALS or METHOD=ITERGS, the following\noptions in the PROC PCA statement are not supported: COV, NOINT, OUTSTAT=, PARPREFIX=,\nSINGULAR=, and STD."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"EIG","@Value2":"ITERGS","@Value3":"NIPALS"},"ProcedureOptionToolTips":{"@ToolTip1":"Requests eigenvalue decomposition.","@ToolTip2":"Syntax: ITERGS< (iter-options) >                                 Requests the iterative method based on Gram-Schmidt orthogonalization (ITERGS) of Andrecut (2009). You can also specify the following optional iter-options in parentheses after METHOD=ITERGS:    EPSILON=n     specifies the convergence criterion for the iterative method. By default, EPSILON=1E\u201312.   MAXITER=n     specifies the maximum number of iterations for the iterative method. By default, MAXITER=     500.   NOCENTER     suppresses centering of the numeric variables to be analyzed. This option is useful if the     analysis variables are already centered and scaled.   NOSCALE     suppresses scaling of the numeric variables to be analyzed. This option is useful if the     analysis variables are already centered and scaled.","@ToolTip3":"Syntax: NIPALS< (iter-options) > requests the nonlinear iterative partial least squares (NIPALS) method. You can also specify the optional iter-options in parentheses after METHOD=NIPALS."}},{"ProcedureOptionName":"N=","ProcedureOptionHelp":{"#cdata":"Syntax: N=number\n      \nSpecifies the number of principal components to be computed. The default is the number of variables.\nThe number must be an integer greater than or equal to 0. If N=0, the default is used."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOINT","ProcedureOptionHelp":{"#cdata":"Omits the intercept from the model. In other words, this option requests that the covariance or\ncorrelation matrix not be corrected for the mean. When you specify this option, the covariance matrix\nand, hence, the standard deviations are not corrected for the mean. If you want to obtain the standard\ndeviations corrected for the mean, you can obtain them by using a procedure such as PROC MEANS\nin Base SAS."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTSTAT=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTSTAT=CAS-libref.data-table\n      \nCreates an output data table to contain means, standard deviations, number of observations, correlations\nor covariances, eigenvalues, and eigenvectors. CAS-libref specifies the CAS library where the output\ndata table is to be created, and data-table specifies the name of the output data table. If you specify the\nCOV option, the data table\u2019s type is COV or UCOV, depending on the NOINT option, and it contains\ncovariances; otherwise, the data table\u2019s type is CORR or UCORR, depending on the NOINT option,\nand it contains correlations. If you specify the PARTIAL statement, the OUTSTAT= data table also\ncontains R-squares."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PLOTS=","ProcedureOptionHelp":{"#cdata":"Syntax: PLOTS < (global-plot-options) > < = plot-request < (options) > >\nSyntax: PLOTS < (global-plot-options) > < = (plot-request < (options) > < . . . plot-request < (options) > >) >\n\nControls the plots that are produced through ODS Graphics. When you specify only one plot-request,\nyou can omit the parentheses around it.\n\nYou can specify the following global-plot-options:\n  UNPACKPANEL\n  UNPACK\n  suppresses paneling in the scree plot."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"EIGEN","@Value3":"PATTERNPROFILE","@Value4":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"produces all appropriate plots. You can specify other options along with ALL; for example, to request all plots and unpack only the scree plot, specify PLOTS=(ALL SCREE(UNPACKPANEL)).","@ToolTip2":"Syntax: EIGEN < ( UNPACKPANEL ) > | EIGENVALUE < ( UNPACKPANEL ) > | SCREE < ( UNPACKPANEL ) >                                 Produces the scree plot of eigenvalues and proportion variance explained. By default, both plots appear in the same panel. Specify PLOTS= SCREE(UNPACKPANEL) if you want each plot to appear in a separate panel.","@ToolTip3":"Produces the pattern profile plot. Each component has its own profile. The Y-axis value represents the correlation between the variable (corresponding to the X-axis value) and the profiled principal component.","@ToolTip4":"Suppresses the display of all plots."}},{"ProcedureOptionName":"PREFIX=","ProcedureOptionHelp":{"#cdata":"Syntax: PREFIX=name\n      \nSpecifies a prefix for naming the principal components. By default, the names are Prin1, Prin2, . . . ,\nPrinn. If you specify PREFIX=Abc, the components are named Abc1, Abc2, Abc3, and so on. The\nnumber of characters in the prefix plus the number of digits required to designate the variables should\nnot exceed the current name length that is defined by the VALIDVARNAME= system option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PARPREFIX=|PPREFIX=|RPREFIX=","ProcedureOptionHelp":{"#cdata":"Syntax: PARPREFIX=name | PPREFIX=name | RPREFIX=name\n      \nSpecifies a prefix for naming the residual variables in the OUTSTAT= data table. By default, the prefix\nis R_. The number of characters in the prefix plus the maximum length of the variable names should\nnot exceed the current name length that is defined by the VALIDVARNAME= system option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SINGULAR=|SING=","ProcedureOptionHelp":{"#cdata":"Syntax: SINGULAR=p | SING=p | \n      \nSpecifies the singularity criterion, where 0 < p < 1. If a variable in a PARTIAL statement has an\nR-square as large as 1 - p when predicted from the variables listed before it in the statement, the\nvariable is assigned a standardized coefficient of 0. By default, SINGULAR=1E\u20138."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STANDARD|STD","ProcedureOptionHelp":{"#cdata":"Standardizes the principal component scores in the OUT= data table in the OUTPUT statement to unit\nvariance. If you omit this option, the scores have a variance equal to the corresponding eigenvalue.\nNote that this option has no effect on the eigenvalues themselves."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"VARDEF=","ProcedureOptionHelp":{"#cdata":"Syntax: VARDEF=DF | N | WDF | WEIGHT | WGT\n      \nSpecifies the divisor to be used to calculate variances and standard deviations. By default, VARDEF=DF."},"ProcedureOptionType":"S|V","ProcedureOptionValues":{"@Value1":"DF","@Value2":"N","@Value3":"WEIGHT","@Value4":"WDF"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies the error degrees of freedom as the divisor.","@ToolTip2":"Specifies the number of observations as the divisor.","@ToolTip3":"Specifies the sum of weights as the divisor.","@ToolTip4":"Specifies the sum of weights minus one as the divisor."}}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables ;\n      \nYou can specify a BY statement in PROC PCA to obtain separate analyses of observations in groups\nthat are defined by the BY variables. If you specify more than one BY statement, only the last one specified\nis used."},"StatementOptions":null},{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable < (options) >: : : < variable < (options) > > < / global-options > ;\n      \nThe CLASS statement names the classification variables to be used as explanatory variables in the analysis.\nYou can list the response variable for binary models in the CLASS statement, but this is not required."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sort order of the classification variable. If both the DESCENDING and ORDER= options\nare specified, the statement orders the categories according to the ORDER= option and then reverse\nthat order."},"StatementOptionType":"S"},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (\u201c.\u201d, \u201c.A\u201d, . . . , \u201c.Z\u201d for numeric variables and blanks for character variables) as\nvalid values for the CLASS variable.\n\nIf you do not specify the MISSING option, observations that have missing values for CLASS variables\nare removed from the analysis."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Syntax: ORDER=FORMATTED | FREQ | INTERNAL\n          \nSpecifies the sort order for the levels of classification variables. This ordering determines which\nparameters in the model correspond to each level in the data."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"FORMATTED","@Value2":"FREQ","@Value3":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"External formatted values, except for numeric variables that have no explicit format, which are sorted  by their unformatted (internal) values. The sort order is machine-dependent. For numeric variables for which you have supplied no explicit format, the levels are ordered by their internal values.","@ToolTip2":"Descending frequency count (levels that have more observations come earlier in the order)","@ToolTip3":"Unformatted value. The sort order is machine-dependent."}},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"Specifies the parameterization method for the classification variable or variables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EFFECT","@Value2":"GLM","@Value3":"ORDINAL|THERMOMETER","@Value4":"POLYNOMIAL|POLY","@Value5":"REFERENCE|REF","@Value6":"ORTHEFFECT","@Value7":"ORTHORDINAL|ORTHOTHERM","@Value8":"ORTHPOLY","@Value9":"ORTHREF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies effect coding.","@ToolTip2":"Specifies less-than-full-rank, reference-cell coding; this option can be used  only as a global option.","@ToolTip3":"Specifies the cumulative parameterization for an ordinal CLASS variable.","@ToolTip4":"Specifies polynomial coding.","@ToolTip5":"Specifies reference-cell coding.","@ToolTip6":"Orthogonalizes PARAM=EFFECT.","@ToolTip7":"Orthogonalizes PARAM=ORDINAL.","@ToolTip8":"Orthogonalizes PARAM=POLYNOMIAL.","@ToolTip9":"Orthogonalizes PARAM=REFERENCE."}},{"StatementOptionName":"REFERENCE=|REF=","StatementOptionHelp":{"#cdata":"Syntax: REFERENCE='level' | keyword | REF='level' | keyword  \n          \nSpecifies the reference level that is used when you specify a nonsingular parameterization."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<'level'>","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the level of the variable to use as the reference level. Replace <'level'>  with an actual value.","@ToolTip2":"Designates the first ordered level as reference. You can specify this value either for an individual variable option or for a global-option.","@ToolTip3":"Designates the last ordered level as reference. You can specify this value either for an individual variable option or for a global-option."}},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"Specifies that design matrix columns that correspond to any effect that contains a split classification\nvariable can be selected to enter or leave a model independently of the other design columns of that\neffect."},"StatementOptionType":"S"}]}},{"StatementName":"CODE","StatementHelp":{"#cdata":"Syntax: CODE < options > ;\n      \nThe CODE statement writes SAS DATA step code for computing predicted values of the fitted model either\nto a file or to a catalog entry. This code can then be included in a DATA step to score new data.\n\nThe CODE statement is not supported when you specify the PARTIAL statement. If you specify more than\none CODE statement, only the first one specified is used."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COMMENT","StatementOptionHelp":{"#cdata":"Adds comments to the generated code."},"StatementOptionType":"V"},{"StatementOptionName":"FILE=","StatementOptionHelp":{"#cdata":"Syntax: FILE=filename \n          \nNames the external file that saves the generated code. When enclosed in a quoted string (for example,\nFILE=\"c:nmydirnscorecode.sas\"), this option specifies the path and filename for writing the code to\nan external file. If you do not specify a path but your SAS client has a default path, then the code is\nwritten to an external file named filename at that location. You can also specify an unquoted filename\nof no more than eight characters. If the filename is assigned as a fileref in a Base SAS FILENAME\nstatement, the file specified in the FILENAME statement is opened; otherwise, if your SAS client has\na default path, an external file named filename is created."},"StatementOptionType":"V"},{"StatementOptionName":"FORMATWIDTH=","StatementOptionHelp":{"#cdata":"Syntax: FORMATWIDTH=width\n          \nSpecifies the width to use in formatting derived numbers such as parameter estimates. You can specify\na value in the range 4 to 32; the default is 20."},"StatementOptionType":"V"},{"StatementOptionName":"INDENTSIZE=","StatementOptionHelp":{"#cdata":"Syntax: INDENTSIZE=n\n          \nSpecifies the number of spaces to indent the generated code. You can specify a value in the range 0 to\n10; the default is 3."},"StatementOptionType":"V"},{"StatementOptionName":"LABELID=","StatementOptionHelp":{"#cdata":"Syntax: LABELID=value\n          \nSpecifies a number used to construct array names and statement labels in the generated code. You can\nspecify a value in the range 0 to 1024; the default is randomly chosen."},"StatementOptionType":"V"},{"StatementOptionName":"LINESIZE=|LS=","StatementOptionHelp":{"#cdata":"Syntax: LINESIZE=value | LS=value\n          \nSpecifies the line size for the generated code. You can specify a value in the range 64 to 254; the default\nis 120."},"StatementOptionType":"V"},{"StatementOptionName":"NOTRIM","StatementOptionHelp":{"#cdata":"Bases comparisons of formatted values on the full format width, including blank padding. By default,\nblanks at the beginning and end of strings are ignored."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAY","StatementHelp":{"#cdata":"Syntax: DISPLAY < table-list > < / options > ;\n      \nThe DISPLAY statement enables you to specify a list of ODS tables to display or exclude. This statement\nis similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY\nstatement can improve performance when a large number of tables could be generated (such as in BY-group\nprocessing). The statement processes the DISPLAY statement on a CAS server and thus sends only a subset\nof ODS tables to the SAS client. Because ODS statements are processed on a SAS client, all ODS tables\nare sent to the client and then the client creates a subset. If both DISPLAY and ODS statements are used\ntogether, the DISPLAY statement takes precedence over the ODS statements."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CASESENSITIVE","StatementOptionHelp":{"#cdata":"Performs a case-sensitive comparison of table names in the table-list to ODS table names when tables\nare subsetted for display. To preserve case, you must enclose table names in the table-list in quotation\nmarks."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDE","StatementOptionHelp":{"#cdata":"Displays all ODS tables except those specified in the table-list."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDEALL","StatementOptionHelp":{"#cdata":"Suppresses display of all tables. This option takes precedence over the other options."},"StatementOptionType":"S"},{"StatementOptionName":"TRACE","StatementOptionHelp":{"#cdata":"Displays the ODS table names, labels, and paths."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAYOUT","StatementHelp":{"#cdata":"Syntax: DISPLAYOUT table-spec-list < / options > ;\n      \nThe DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This\nstatement is similar to the ODS OUTPUT statement.\n\nThe table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a\nkey=value format:\n\n  key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the\n    CAS output table name.\n  key specifies key as the ODS table name and also as the CAS output table name.\n  \nTable names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT\nstatement does not support regular expressions."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"NOREPLACE","StatementOptionHelp":{"#cdata":"Does not replace an existing CAS output table of the same name."},"StatementOptionType":"S"},{"StatementOptionName":"REPEATED","StatementOptionHelp":{"#cdata":"Replicates the CAS output tables on all nodes."},"StatementOptionType":"S"}]}},{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable ; \n      \nThe variable in the FREQ statement identifies a numeric variable in the data set that contains the frequency of\noccurrence of each observation. PROC REGSELECT treats each observation as if it appears f times, where f\nis the value of the FREQ variable for the observation. If f is not an integer, it is truncated to an integer. If f is\nless than 1 or missing, the observation is not used in the analysis. When the FREQ statement is not specified,\neach observation is assigned a frequency of 1."},"StatementOptions":null},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT OUT=CAS-libref.data-table\n    <COPYVARS=(variables) >\n    < keyword < =prefix > >. . . < keyword < =prefix > > ;\n    \nThe OUTPUT statement creates a data table that contains observationwise statistics, which are computed\nafter PROC PCA fits the model. If you do not specify a keyword, then only the principal component scores\nare included.\n\nThe variables in the input data table are not included in the output data table, in order to avoid data duplication\nfor large data tables; however, variables that you specify in the COPYVARS= option are included."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table\n          \nnames the output data table for PROC PCA to use. CAS-libref.data-table is a two-level name, where\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to where the data table is to be stored, and\n    a session identifier, which defaults to the active session but which can be explicitly\n    defined in the LIBNAME statement.\n\n  data-table specifies the name of the output data table."},"StatementOptionType":"V"},{"StatementOptionName":"COPYVAR=|COPYVARS=","StatementOptionHelp":{"#cdata":"Syntax: COPYVAR=variable | COPYVARS=(variables)\n          \nLists one or more variables from the input data table that are transferred to the scored output data table,\nprovided that the output data table produces one or more records per input observation. By default, the\nKCLUS statement does not transfer any variables from the input data table to the output data table.\nThe COPYVARS= option accepts numeric and character variables."},"StatementOptionType":"V"},{"StatementOptionName":"HH","StatementOptionHelp":{"#cdata":"Syntax: H< =prefix >\n\nRequests the approximate leverage. The default prefix is H."},"StatementOptionType":"S|V"},{"StatementOptionName":"STD","StatementOptionHelp":{"#cdata":"Syntax: STD< =prefix >\n\nRequests standardized (centered and scaled) VAR statement variable values for each VAR statement\nvariable. The default prefix is Std."},"StatementOptionType":"S|V"},{"StatementOptionName":"STDSSE","StatementOptionHelp":{"#cdata":"Syntax: STDSSE< =prefix >\n\nRequests the sum of squares of residuals for standardized VAR statement variables. The default\nprefix is StdSSE."},"StatementOptionType":"S|V"},{"StatementOptionName":"TSQUARE|T2","StatementOptionHelp":{"#cdata":"Syntax: TSQUARE|T2< =prefix >\n\nRequests scaled sum of squares of score values. The default prefix is TSquare."},"StatementOptionType":"S|V"},{"StatementOptionName":"RESIDUAL|RESID|R","StatementOptionHelp":{"#cdata":"Syntax: RESIDUAL|RESID|R< =prefix >\n\nRequests residuals for each VAR statement variable. The default prefix is R."},"StatementOptionType":"S|V"},{"StatementOptionName":"SCORE","StatementOptionHelp":{"#cdata":"Syntax: SCORE< =prefix >\n\nRequests principal component scores for each principal component. The default prefix is Score."},"StatementOptionType":"S|V"}],"#comment":{}}},{"StatementName":"PARTIAL","StatementHelp":{"#cdata":"Syntax: PARTIAL variables ;\n      \nIf you want to analyze a partial correlation or covariance matrix, use the PARTIAL statement to specify the\nnames of the numeric variables to be partialed out. The PCA procedure computes the principal components\nof the residuals by predicting the VAR statement variables from the PARTIAL statement variables. If you\nrequest an OUTSTAT= data table, the residual variables are named by prefixing either the characters R_ (by\ndefault) or the string specified in the PARPREFIX= option to the VAR statement variable names.\n\nThe PARTIAL statement is not supported if you specify METHOD=NIPALS or METHOD=ITERGS in the\nPROC PCA statement."},"StatementOptions":null},{"StatementName":"VAR","StatementHelp":{"#cdata":"Syntax: VAR variables ;\n       \nThe VAR statement lists the numeric variables to be analyzed. If you omit the VAR statement, all numeric\nvariables that are not specified in other statements are analyzed."},"StatementOptions":null},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable ;\n      \nThe variable in the WEIGHT statement is used as a weight to perform a weighted analysis of the data.\nObservations that have nonpositive or missing weights are not included in the analysis. If a WEIGHT\nstatement is not included, all observations that are used in the analysis are assigned a weight of 1.\n\nThe WEIGHT statement is not supported if you specify METHOD=NIPALS or METHOD=ITERGS in the\nPROC PCA statement.."},"StatementOptions":null}]}}}