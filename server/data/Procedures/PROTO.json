{"Procedure":{"Name":"PROTO","ProductGroup":"BASE","ProcedureHelp":{"#cdata":"Syntax: PROC PROTO PACKAGE=catalog-entry <options>;  \nMAPMISS type1=value1 type2=value2 ...;  \nLINK load-module <NOUNLOAD>;  \n\nThe PROTO procedure enables you to register, in batch mode, external functions that \nare written in the C or C++ programming languages. You can use these functions in SAS \nas well as in C-language structures and types. After the C-language functions are \nregistered in PROC PROTO, they can be called from any SAS function or subroutine that \nis declared in the FCMP procedure, as well as from any SAS function, subroutine, or \nmethod block that is declared in the COMPILE procedure."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"PACKAGE=","ProcedureOptionHelp":{"#cdata":"[Syntax: PACKAGE=catalog-entry] \n      \nSpecifies the SAS catalog entry where the function package information is saved."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ENCRYPT|HIDE","ProcedureOptionHelp":{"#cdata":"Specifies that encoding within a database is allowed.\n      \nRestriction: This option is available for XML databases only."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"LABEL=","ProcedureOptionHelp":{"#cdata":"[Syntax: LABEL=package-label] \n      \nSpecifies a text string that is used to describe or label the package. The maximum \nlength of the label is 256 characters."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOSIGNALS","ProcedureOptionHelp":{"#cdata":"Specifies that none of the functions in a package will produce exceptions or signals."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"STDCALL","ProcedureOptionHelp":{"#cdata":"For Windows PC platforms only, indicates that all functions in the package are \ncalled using the \"_stdcall\" convention."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"STRUCTPACK|PACK","ProcedureOptionHelp":{"#cdata":"[Syntax: STRUCTPACKn | PACKn] \n      \nFor Windows PC platforms only, specifies that all structures in this package were \ncompiled with the given N-BYTE packing pragma."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"LINK","StatementHelp":{"#cdata":"Syntax: LINK load-module;\n      \nSpecifies the name, and optionally the path, of the load module that contains your functions."},"StatementOptions":{"StatementOption":{"StatementOptionName":"NOUNLOAD","StatementOptionHelp":{"#cdata":"Specifies that selected libraries remain loaded when the SAS session ends."},"StatementOptionType":"S"}}},{"StatementName":"MAPMISS","StatementHelp":{"#cdata":"Syntax: MAPMISS <POINTER=pointer-value INT=integer-value DOUBLE=double-value>\n  < LONG=long-value SHORT=short-value>;\n      \nSpecifies alternative values, by type, to pass to functions if values are missing."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"POINTER=","StatementOptionHelp":{"#cdata":"[Syntax: POINTER=pointer-value] \n          \nSpecifies the pointer value to pass to functions for pointer values that are missing. \nThe default value is NULL."},"StatementOptionType":"V"},{"StatementOptionName":"INT=","StatementOptionHelp":{"#cdata":"[Syntax: INT=integer-value] \n          \nSpecifies an integer value to pass to functions for integer values that are missing."},"StatementOptionType":"V"},{"StatementOptionName":"DOUBLE=","StatementOptionHelp":{"#cdata":"[Syntax: DOUBLE=double-value] \n          \nSpecifies a double value to pass to functions for double values that are missing."},"StatementOptionType":"V"},{"StatementOptionName":"LONG=","StatementOptionHelp":{"#cdata":"[Syntax: LONG=long-value] \n          \nSpecifies a long value to pass to functions for long values that are missing."},"StatementOptionType":"V"},{"StatementOptionName":"SHORT=","StatementOptionHelp":{"#cdata":"[Syntax: SHORT=short-value] \n          \nSpecifies a short value to pass to functions for short values that are missing."},"StatementOptionType":"V"}]}}]}}}