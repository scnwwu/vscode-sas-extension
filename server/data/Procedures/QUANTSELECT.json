{"Procedure":{"Name":"QUANTSELECT","ProductGroup":"SAS/STAT","ProcedureHelp":{"#cdata":"Syntax: PROC PROC QUANTSELECT <options> ; \n    BY variables ; \n    CLASS variable <(v-options)> <variable <(v-options \u2026)> > </ v-options> <options> ; \n    EFFECT name = effect-type (variables </ options> ) ; \n    MODEL variable = <effects> </ options> ; \n    OUTPUT <OUT=SAS-data-set> <keyword <=name> > <\u2026keyword<=name>> ; \n    PARTITION <options> ; \n    WEIGHT variable ; \n\n[SAS/STAT 12.1 Experimental Procedure]\n\nQuantile regression, which was introduced by Koenker and Bassett (1978), is a modern method that models \nthe effects of covariates on the conditional quantiles of a response variable. The QUANTSELECT procedure \nperforms effect selection in the framework of quantile regression. A variety of effect selection methods \nare available, including greedy methods and penalty methods. The QUANTSELECT procedure offers extensive \ncapabilities for customizing the effect selection processes with a variety of candidate selecting, \neffect-selection stopping, and final-model choosing criteria. PROC QUANTSELECT also provides graphical \nsummaries for the effect selection processes. \n\nThe QUANTSELECT procedure compares most closely to the GLMSELECT and QUANTREG procedures. PROC GLMSELECT \nperforms effect selection in the framework of general linear models. PROC QUANTREG supports a variety of \nestimation and inference methods for quantile regression but does not directly provide effect selection \nfacilities. The QUANTSELECT procedure, as a counterpart of PROC GLMSELECT for quantile regression, fills \nthis gap. \n\nThe QUANTSELECT procedure focuses on linear quantile models for univariate responses and offers great \nflexibility for and insight into the effect selection algorithm. The QUANTSELECT procedure inherits most \nof its syntax from PROC GLMSELECT and PROC QUANTREG. The QUANTSELECT procedure provides results that are \nsimilar to those of PROC GLMSELECT and PROC QUANTREG. These results (displayed tables, output data sets, \nand macro variables) make it easy to explore the selected models in PROC QUANTREG."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=SAS-data-set\n      \nNames the SAS data set to be used by PROC QUANTSELECT. If the DATA= option is not specified, \nPROC QUANTSELECT uses the most recently created SAS data set. If the data set contains a \nvariable named _ROLE_, then this variable is used to assign observations for training, \nvalidation, and testing roles."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"MAXMACRO=","ProcedureOptionHelp":{"#cdata":"Syntax: MAXMACRO=n \n      \nSpecifies the maximum number of macro variables with selected effects to create. By default, MAXMACRO=100. \n\nPROC QUANTSELECT saves the list of selected effects in a macro variable, &_QRSIND. For example, suppose \nyour input effect list consists of x1\u2013x10. Then &_QRSIND would be set to x1 x3 x4 x10 if the first, third, \nfourth, and tenth effects were selected for the model. This list can be used in the MODEL statement of a \nsubsequent procedure. \n\nIf you specify the OUTDESIGN= option in the PROC QUANTSELECT statement, then PROC QUANTSELECT saves the \nlist of columns in the design matrix in a macro variable named &_QRSMOD."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses all displayed output (including plots)."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTDESIGN=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTDESIGN<(options)=><SAS-data-set> \n\nCreates a data set that contains the design matrix. By default, the QUANTSELECT procedure includes \nin the OUTDESIGN data set the matrix that corresponds to all the effects in the selected models. \nTwo schemes for naming the columns of the design matrix are available: \n\n  \u2022 In the first scheme, names of the parameters are constructed from the parameter labels that \n    appear in the parameter estimates table. This naming scheme is the default when you do not \n    request BY processing; it is not available when you do use BY processing. \n\n  \u2022 In the second scheme, the design matrix column names consist of a prefix followed by an index. \n    The default name prefix is _X. This scheme is used when you specify the PREFIX= option or a BY \n    statement; otherwise the first scheme is used. \n\nYou can specify the following options in parentheses to control the contents of the OUTDESIGN= data set: \n\n  ADDINPUTVARS \n    includes all the input data set variables in the OUTDESIGN= data set. \n  ADDVALDATA \n    includes all the VALDATA= data set variables in the OUTDESIGN= data set. This option is ignored \n    if the VALDATA= data set is not specified. \n  ADDTESTDATA \n    includes all the TESTDATA= data set variables in the OUTDESIGN= data set. This option is ignored \n    if TESTDATA= data set is not specified. \n  FULLMODEL \n    includes in the OUTDESIGN= data set parameters that correspond to all effects that are specified \n    in the MODEL statement. By default, only parameters that correspond to the selected model are included. \n  NAMES \n    produces a table that associates columns in the OUTDESIGN= data set with the labels of the parameters \n    they represent. \n  PREFIX<=prefix> \n    creates the design matrix column names from a prefix followed by an index. The default prefix is _X."},"ProcedureOptionType":"S|V","SubOptionsKeywords":"ADDINPUTVARS|ADDVALDATA|ADDTESTDATA|FULLMODEL|NAMES|PREFIX|PREFIX="},{"ProcedureOptionName":"PLOTS=","ProcedureOptionHelp":{"#cdata":"Controls the plots produced through ODS Graphics.\n      \nSyntax: \n(1) PLOTS <(global-plot-options)> <= plot-request <(options)>> \n(2) PLOTS <(global-plot-options)> <= (plot-request <(options)> <... plot-request <(options)>>)> \n\nControls the plots that are produced through ODS Graphics. When you specify only one plot-request, \nyou can omit the parentheses around it.\n\nYou can specify the following global-plot-options, which apply to all plots generated by the \nQUANTSELECT procedure, unless they are altered by specific plot options:\n\n  ENDSTEP=n \n  specifies that the step ranges shown on the horizontal axes of plots terminates at specified step.\n\n  LOGP | LOGPVALUE \n  requests that the natural logarithm of the entry and removal significance levels when the SELECT=SL \n  option is specified in the MODEL statement.. \n\n  MAXSTEPLABEL=n \n  specifies the maximum number of characters beyond which labels of effects on plots are truncated. \n\n  MAXPARMLABEL= n \n  specifies the maximum number of characters beyond which parameter labels on plots are truncated. \n\n  STARTSTEP=n \n  specifies that the step ranges shown on the horizontal axes of plots start at the specified step.\n\n  STEPAXIS=EFFECT | NORMB | NUMBER \n  specifies the horizontal axis to be used on the plots, where this axis represents the sequence \n  of entering or departing effects. \n\n  UNPACK \n  suppresses paneling. By default, multiple plots can appear in some output panels."},"ProcedureOptionType":"S|V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"ACL|ACLPLOT","@Value3":"COEF|COEFFICIENTS|COEFFICIENTPANEL","@Value4":"CRIT|CRITERIA|CRITERIONPANEL","@Value5":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Displays all appropriate graphs.","@ToolTip2":"Syntax: ACL|ACLPLOT<(aclplot-option)>                                 Plots the progression of the average square error on the training data, and the test and validation  data whenever these data are provided with the TESTDATA= and VALDATA= options or are produced by  using a PARTITION statement. The following aclplot-option option is available:    STEPAXIS=EFFECT | NORMB | NUMBER    specifies the method for labeling the horizontal plot axis.","@ToolTip3":"Syntax: COEF | COEFFICIENTS | COEFFICIENTPANEL<(coefficient-panel-options)>                                  Displays a panel of two plots for each quantile level. The upper plot shows the progression of the  parameter values as the selection process proceeds. The lower plot shows the progression of the  CHOOSE= criterion. If no CHOOSE= criterion is in effect, then the AICC criterion is displayed.  You can specify the following coefficient-panel-options:     LABELGAP=percentage    specifies the percentage of the vertical axis range that forms the minimum gap between successive    parameter labels at the final step of the coefficient progression plot.    LOGPVALUE    requests that the natural logarithm of the entry and removal significance levels when the SELECT=SL    option is specified in the MODEL statement.     STEPAXIS=EFFECT | NORMB | NUMBER    specifies the horizontal axis to be used.     UNPACK | UNPACKPANEL    displays the coefficient progression and the CHOOSE= criterion progression in separate plots.","@ToolTip4":"Syntax: CRIT | CRITERIA | CRITERIONPANEL<(criterion-panel-options)>                                  Plots a panel of model fit criteria. If multiple quantile levels apply, the CRITERIA option plots  a panel of model fit criteria for each quantile level. The criteria that are displayed are AIC, AICC,  and SBC, in addition to any other criteria that are named in the CHOOSE=, SELECT=, STOP=, and STATS=  options in the MODEL statement. You can specify the following criterion-panel-options:     STEPAXIS=EFFECT | NORMB | NUMBER    specifies the horizontal axis to be used.     UNPACK | UNPACKPANEL    displays each criterion progression on a separate plot.","@ToolTip5":"Suppresses all plots."},"SubOptionsKeywords":"UNPACK|UNPACKPANEL|STEPAXIS=|LOGPVALUE|LABELGAP=|SHOW=|LOGP|LOGPVALUE"},{"ProcedureOptionName":"SEED=","ProcedureOptionHelp":{"#cdata":"Syntax: SEED=number \n      \nSpecifies an integer used to start the pseudo-random number generator for random cross validation \nand random partitioning of data for training, testing, and validation. If you do not specify a seed \nor if you specify a value less than or equal to 0, the seed is generated by reading the time of day \nfrom the computer\u2019s clock."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TESTDATA=","ProcedureOptionHelp":{"#cdata":"Syntax: TESTDATA=SAS-data-set \n      \nNames a SAS data set containing test data. This data set must contain all the variables \nspecified in the MODEL statement. Furthermore, when you also specify a BY statement and the \nTESTDATA= data set contains any of the BY variables, then the TESTDATA= data set must also \ncontain all the BY variables sorted in the order of the BY variables. In this case, only the \ntest data for a specific BY group are used with the corresponding BY group in the analysis \ndata. If the TESTDATA= data set contains none of the BY variables, then the entire TESTDATA= \ndata set is used with each BY group of the analysis data. \n\nIf you specify both a TESTDATA= data set and the PARTITION statement, then the testing \nobservations from the DATA= data set are merged with the TESTDATA= data set for testing \npurposes."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"VALDATA=","ProcedureOptionHelp":{"#cdata":"Syntax: VALDATA=SAS-data-set \n      \nNames a SAS data set containing validation data. This data set must contain all the variables \nspecified in the MODEL statement. Furthermore, when a BY statement is used and the VALDATA= \ndata set contains any of the BY variables, then the VALDATA= data set must also contain all \nthe BY variables sorted in the order of the BY variables. In this case, only the validation \ndata for a specific BY group are used with the corresponding BY group in the analysis data. \nIf the VALDATA= data set contains none of the BY variables, then the entire VALDATA= data \nset is used with each BY group of the analysis data. \n\nIf you specify both a VALDATA= data set and the PARTITION statement, then the validation \nobservations from the DATA= data set are merged with the VALDATA= data set for validation \npurposes."},"ProcedureOptionType":"DV"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"[Syntax: BY <DESCENDING> variable-1 <...<DESCENDING> variable-n> <NOTSORTED>; ]\n      \nYou can specify a BY statement with PROC QUANTSELECT to obtain separate analyses of observations \nin groups that are defined by the BY variables. When a BY statement appears, the procedure expects \nthe input data set to be sorted in order of the BY variables. If you specify more than one BY \nstatement, only the last one specified is used. \n\nIf your input data set is not sorted in ascending order, use one of the following alternatives: \n\n\u2022 Sort the data by using the SORT procedure with a similar BY statement. \n\n\u2022 Specify the NOTSORTED or DESCENDING option in the BY statement for the QUANTLIFE procedure. \n  The NOTSORTED option does not mean that the data are unsorted but rather that the data are \n  arranged in groups (according to values of the BY variables) and that these groups are not \n  necessarily in alphabetical or increasing numeric order. \n\n\u2022 Create an index on the BY variables by using the DATASETS procedure (in Base SAS software)."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING","StatementOptionHelp":{"#cdata":"Specifies that the observations are sorted in descending order by the variable that immediately \nfollows the word DESCENDING in the BY statement."},"StatementOptionType":"S"},{"StatementOptionName":"NOTSORTED","StatementOptionHelp":{"#cdata":"The NOTSORTED option does not mean that the data are unsorted but rather that the data are \narranged in groups (according to values of the BY variables) and that these groups are not \nnecessarily in alphabetical or increasing numeric order."},"StatementOptionType":"S"}]}},{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable <(v-options)> <variable <(v-options \u2026)> > </ v-options> <options> ; \n\nThe CLASS statement names the classification variables to be used in the analysis. The CLASS \nstatement must precede the MODEL statement.\n\nYou can specify various v-options for each variable by enclosing them in parentheses after the \nvariable name; these are called individual v-options. You can also specify global v-options by \nplacing them after a slash (/) at the end of the CLASS statement. Global v-options are applied \nto all the variables specified in the CLASS statement. If you specify more than one CLASS statement, \nthe global v-options specified in any one CLASS statement apply to all CLASS statements. However, \nindividual CLASS variable v-options override the global v-options."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DELIMITER=","StatementOptionHelp":{"#cdata":"Syntax: DELIMITER=\u2019c\u2019 \n          \nSpecifies the delimiter character, 'c', to be used between levels of classification variables \nwhen parameter names and lists of class level values are built. The default delimiter is a space. \nThis option is useful if the levels of a classification variable contain embedded blanks."},"StatementOptionType":"V"},{"StatementOptionName":"SHOW|SHOWCODING","StatementOptionHelp":{"#cdata":"Requests a table that shows the coding used for each classification variable."},"StatementOptionType":"S"},{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sort order of the classification variable."},"StatementOptionType":"S"},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Allows missing values, such as . for a numeric variable or a blank for a character variable, \nas valid values for the CLASS variable."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Syntax: ORDER=DATA | FORMATTED | FREQ | INTERNAL \n          \nSpecifies the sort order for the levels of classification variables. If ORDER=FORMATTED for numeric \nvariables for which you have supplied no explicit format, the levels are ordered by their internal \nvalues.\n\nBy default, ORDER=FORMATTED. For FORMATTED and INTERNAL, the sort order is machine dependent."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FORMATTED","@Value3":"FREQ","@Value4":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Order of appearance in the input data set ","@ToolTip2":"External formatted value, except for numeric variables with no explicit format, which are sorted by their unformatted (internal) value","@ToolTip3":"Descending frequency count; levels with the most observations come first in the order","@ToolTip4":"Unformatted value"}},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"Specifies the parameterization method for the classification variable or variables. \n         \nDesign matrix columns are created from CLASS variables according to the following coding schemes. \nThe default is PARAM=GLM. If PARAM=ORTHPOLY or PARAM=POLY, and the CLASS levels are numeric, then \nthe ORDER= option in the CLASS statement is ignored, and the internal, unformatted values are used. \n\nThe EFFECT, POLYNOMIAL, REFERENCE, and ORDINAL coding schemes and their orthogonal parameterizations \nare full rank. The REF= option in the CLASS statement determines the reference level for the EFFECT \nand REFERENCE schemes and their orthogonal parameterizations."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EFFECT","@Value2":"GLM","@Value3":"ORDINAL|THERMOMETER","@Value4":"POLYNOMIAL|POLY","@Value5":"REFERENCE|REF","@Value6":"ORTHEFFECT","@Value7":"ORTHORDINAL|ORTHOTHERM","@Value8":"ORTHPOLY","@Value9":"ORTHREF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies effect coding.","@ToolTip2":"Specifies less-than-full-rank coding; this option can be used only as a global V-option  (after the slash in the CLASS statement).","@ToolTip3":"Specifies the cumulative parameterization for an ordinal CLASS variable","@ToolTip4":"Specifies polynomial coding.","@ToolTip5":"Specifies reference-cell coding.","@ToolTip6":"Orthogonalizes PARAM=EFFECT.","@ToolTip7":"Orthogonalizes PARAM=ORDINAL.","@ToolTip8":"Orthogonalizes PARAM=POLYNOMIAL.","@ToolTip9":"Orthogonalizes PARAM=REFERENCE."}},{"StatementOptionName":"REF=","StatementOptionHelp":{"#cdata":"Specifies the reference level for PARAM=EFFECT, PARAM=REFERENCE, and their orthogonalizations. \n          \nFor an individual (but not a global) REF= v-option, you can specify the level of the variable \nto use as the reference level. For a global or individual REF= v-option, you can specify REF=FIRST \n(which designates the first-ordered level as reference) or REF=LAST (which designates the last-ordered \nlevel as reference). The default is REF=LAST."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<level>","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the level of the variable to use as the reference level. Replace <level>  with an actual value.","@ToolTip2":"=Designates the first ordered level as reference.","@ToolTip3":"Designates the last ordered level as reference."}},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"Enables the columns of the design matrix that correspond to any effect that contains a split \nclassification variable to be selected to enter or leave a model independently of the other \ndesign columns of that effect."},"StatementOptionType":"S"}]}},{"StatementName":"EFFECT","StatementHelp":{"#cdata":"Syntax: EFFECT name=effect-type (variables </ options >) ; \n\nThe EFFECT statement enables you to construct special collections of columns for design \nmatrices. These collections are referred to as constructed effects to distinguish them \nfrom the usual model effects that are formed from continuous or classification variables, \nas discussed in the section GLM Parameterization of Classification Variables and Effects. \n\nThe name of the effect is specified after the EFFECT keyword. This name can appear \nin only one EFFECT statement and cannot be the name of a variable in the input data \nset. The effect-type is specified after an equal sign, followed by a list of variables \nwithin parentheses which are used in constructing the effect. Effect-options that are \nspecific to an effect-type can be specified after a slash (/) following the variable list. \n\nThe EFFECT statement enables you to construct special collections of columns for design \nmatrices. These collections are referred to as constructed effects to distinguish them \nfrom the usual model effects formed from continuous or classification variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"&lt;EFFECT-NAME&gt;=","StatementOptionHelp":{"#cdata":"Replace &lt;EFFECT-NAME&gt; with the name of the effect, specified after the EFFECT keyword. \nThis name can appear in only one EFFECT statement and cannot be the name of a variable in the \ninput data set."},"StatementOptionType":"RV","StatementOptionValues":{"@Value1":"COLLECTION","@Value2":"LAG","@Value3":"MULTIMEMBER|MM","@Value4":"POLYNOMIAL|POLY","@Value5":"SPLINE"},"StatementOptionToolTips":{"@ToolTip1":"Is a collection effect that defines one or more variables as a single effect with  multiple degrees of freedom. The variables in a collection are considered as a  unit for estimation and inference.  Option(s) available (specified after a slash (/) following the variable list):   DETAILS  Displays the constituents of the collection effect","@ToolTip2":"Is a classification effect in which the level that is used for a given period  corresponds to the level in the preceding period.   Options available (specified after a slash (/) following the variable list):    DESIGNROLE=    Names a variable that controls to which lag design an observation is assigned     DETAILS    Displays the lag design of the lag effect     NLAG=    Specifies the number of periods in the lag     PERIOD=    Names the variable that defines the period     WITHIN=    Names the variable or variables that define the group within which each period is defined","@ToolTip3":"Is a multimember classification effect whose levels are determined by one or  more variables that appear in a CLASS statement.   Options available (specified after a slash (/) following the variable list):     NOEFFECT    Specifies that observations with all missing levels for the multimember variables should    have zero values in the corresponding design matrix columns     WEIGHT=    Specifies the weight variable for the contributions of each of the classification effects","@ToolTip4":"Is a multivariate polynomial effect in the specified numeric variables.                                      Options available (specified after a slash (/) following the variable list):     DEGREE=    Specifies the degree of the polynomial     MDEGREE=    Specifies the maximum degree of any variable in a term of the polynomial     STANDARDIZE=    Specifies centering and scaling suboptions for the variables that define the polynomial","@ToolTip5":"Is a regression spline effect whose columns are univariate spline expansions of  one or more variables. A spline expansion replaces the original variable with  an expanded or larger set of new variables.   Options available (specified after a slash (/) following the variable list):     BASIS=    Specifies the type of basis (B-spline basis or truncated power function basis) for the spline expansion     DEGREE=    Specifies the degree of the spline transformation     KNOTMETHOD=    Specifies how to construct the knots for spline effects"},"SubOptionsKeywords":"DETAILS|DESIGNROLE=|NLAG=|WITHIN=|NOEFFECT|WEIGHT=|DEGREE=|MDEGREE=|STANDARDIZE=|BASIS=|KNOTMETHOD="},{"StatementOptionName":"PERIOD=","StatementOptionHelp":{"#cdata":"[For the LAG effect-type only]\n          \n[Syntax: PERIOD=variable] \n          \nSpecifies the period variable of the LAG design. The number of periods is the number \nof unique formatted values of the PERIOD= variable, and the ordering of the period is \nformed by sorting these formatted values in ascending order. You must specify a PERIOD= \nvariable."},"StatementOptionType":"V"},{"StatementOptionName":"WITHIN=","StatementOptionHelp":{"#cdata":"[For the LAG effect-type only] \n          \n[Syntax: WITHIN=(variables) | WITHIN=variable] \n\nSpecifies a variable (or a list of variables within parentheses) that defines the \nsubject grouping of the lag design. If there is only one WITHIN= variable, then the \nparentheses are not required. Each subject is defined by the unique set of formatted \nvalues of the variables in the WITHIN= list. The subjects are sorted in ascending \nlexicographic order. You must specify a WITHIN= variable."},"StatementOptionType":"V"},{"StatementOptionName":"DESIGNROLE=","StatementOptionHelp":{"#cdata":"[For the LAG effect-type only] \n          \n[Syntax: DESIGNROLE=variable] \n\nSpecifies a numeric variable that is used to subset observations into a fitting group \nin which the value of the DESIGNROW= variable is nonzero and a second group in which \nthe value of the specified variable is zero. The observations in the fitting group are \nused to form the LAG design matrix that is used in fitting the model. The LAG design \nthat corresponds to the non-fitting group is used when scoring observations in the \ninput data set that do not belong to the fitting group. This option is useful when \nyou want to obtain predicted values in an output data set for observations that are \nnot used in fitting the model. If you do not specify a DESIGNROLE= variable, then all \nobservations are assigned to the fitting group."},"StatementOptionType":"V"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"[For the LAG | COLLECTION | MULTIMEMBER | POLYNOMIAL |SPLINE effect-type] \n          \nRequests a table that shows the (1) lag design matrix of the lag effect, or (2) constituents \nof the collection effect, or (3) levels of the multimember effect, or (4) details of the specified \npolynomial, or (5) knot locations and the knots associated with each spline basis function."},"StatementOptionType":"S"},{"StatementOptionName":"NLAG=","StatementOptionHelp":{"#cdata":"[For the LAG effect-type only] \n          \n[Syntax: NLAG= n] \n\nSpecifies the number of lags. By default NLAG=1."},"StatementOptionType":"V"},{"StatementOptionName":"NOEFFECT","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \nSpecifies that, for observations with all missing levels of the multimember variables, \nthe values in the corresponding design matrix columns be set to zero."},"StatementOptionType":"S"},{"StatementOptionName":"STDIZE","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \nSpecifies that for each observation, the entries in the design matrix that corresponds \nto the multimember effect be scaled to have a sum of one."},"StatementOptionType":"S"},{"StatementOptionName":"WEIGHT=","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \n[Syntax: WEIGHT=wght-list] \n\nSpecifies numeric variables used to weigh the contributions of each of the classification \neffects that define the constructed multimember effect. The number of variables in wght-list \nmust match the number of classification variables that define the effect."},"StatementOptionType":"V"},{"StatementOptionName":"DEGREE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL and SPLINE effect-type only] \n          \n[Syntax: DEGREE=n] \n\nSpecifies the (1) degree of the polynomial, or (2) degree of the spline transformation. \nThe degree must be a positive integer. The n degree is typically a small integer, such as \n1, 2, or 3. The default for polynomial effect is DEGREE=1, and DEGREE=3 for spline \ntransformation."},"StatementOptionType":"V"},{"StatementOptionName":"LABELSTYLE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: LABELSTYLE=(style-opts) | LABELSTYLE=style-opt] \n\nSpecifies how the terms in the polynomial are labeled. By default, powers are shown \nwith ^ as the exponentiation operator and * as the multiplication operator."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EXPAND","@Value2":"EXPONENT","@Value3":"INCLUDENAME","@Value4":"PRODUCTSYMBOL="},"StatementOptionToolTips":{"@ToolTip1":"Specifies that each variable with an exponent greater than 1 be written as products of that variable.","@ToolTip2":"Syntax: EXPONENT <=quoted string>                                      Specifies that each variable with an exponent greater than 1 be written using exponential  notation. By default, the symbol ^ is used as the exponentiation operator. If you supply the  optional quoted string after an equal sign, then that string is used as the exponentiation  operator.","@ToolTip3":"Specifies that the name of the effect followed by an underscore be used as a prefix  for term labels.","@ToolTip4":"Syntax: PRODUCTSYMBOL=NONE | quoted string                                      Specifies that the supplied string be used as the product symbol."}},{"StatementOptionName":"MDEGREE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: MDEGREE=n] \n\nSpecifies the maximum degree of any variable in a term of the polynomial. This degree \nmust be a positive integer. The default is the degree of the specified polynomial."},"StatementOptionType":"V"},{"StatementOptionName":"NOSEPARATE","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \nSpecifies that the polynomial be treated as a single effect with multiple degrees \nof freedom. The effect name that you specify is used as the constructed effect name, \nand the labels of the terms are used as labels of the corresponding parameters."},"StatementOptionType":"S"},{"StatementOptionName":"STANDARDIZE","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: STANDARDIZE <(centerscale-opts)> <= standardize-opt>] \n\nSpecifies that the variables that define the polynomial be standardized. By default, \nthe standardized variables receive prefix \"s_\" in the variable names. \n\nYou can use the following centerscale-opts to specify how the center and scale are estimated: \n\n  METHOD=MOMENTS \n  specifies that the center be estimated by the variable mean and the scale be estimated by the standard deviation. \n\n  METHOD=RANGE \n  specifies that the center be estimated by the midpoint of the variable range and the scale be estimated as half the variable range.\n\n  METHOD=WMOMENTS \n  is the same as METHOD=MOMENTS except that weighted means and weighted standard deviations are used. \n\n  PREFIX=NONE | quoted-string \n  specifies the prefix that is appended to standardized variables when forming the term labels."},"StatementOptionType":"S|V","StatementOptionValues":{"@Value1":"CENTER","@Value2":"CENTERSCALE","@Value3":"NONE","@Value4":"SCALE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that variables be centered but not scaled.","@ToolTip2":"Specifies that variables be centered and scaled. This is the default if you do not  specify a standardization-opt.","@ToolTip3":"Specifies that no standardization be performed.","@ToolTip4":"Specifies that variables be scaled but not centered."}},{"StatementOptionName":"BASIS=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies a basis for the spline expansion."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BSPLINE","@Value2":"TPF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a B-spline basis for the spline expansion.","@ToolTip2":"Syntax: TPF(options)                                      Specifies a truncated power function basis for the spline expansion.   You can modify the number of columns when you request BASIS=TPF with the following options:     NOINT    excludes the intercept column.     NOPOWERS    excludes the intercept and polynomial columns."}},{"StatementOptionName":"DATABOUNDARY","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only]\n          \nSpecifies that the extremes of the data be used as boundary knots when building a B-spline basis."},"StatementOptionType":"S"},{"StatementOptionName":"KNOTMAX=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only]\n          \n[Syntax: KNOTMAX=value] \n\nSpecifies that, for each variable in the EFFECT statement, the right-side boundary \nknots be equally spaced starting at the maximum of the variable and ending at the \nspecified value. This option is ignored for variables whose maximum value is greater \nthan the specified value or if the DATABOUNDARY option is also specified."},"StatementOptionType":"V"},{"StatementOptionName":"KNOTMETHOD=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies how to construct the knots for spline effects."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EQUAL","@Value2":"LIST","@Value3":"LISTWITHBOUNDARY","@Value4":"MULTISCALE","@Value5":"PERCENTILES","@Value6":"RANGEFRACTIONS"},"StatementOptionToolTips":{"@ToolTip1":"Syntax: EQUAL<(n)>               Specifies that n equally spaced knots be positioned between the extremes of the data.  The default is n=3. For a B-spline basis, any needed boundary knots continue to be  equally spaced unless the DATABOUNDARY option has also been specified. KNOTMETHOD=EQUAL  is the default if no knot-method is specified.","@ToolTip2":"Syntax: LIST(number-list)                                      Specifies the list of internal knots to be used in forming the spline basis columns.  For a B-spline basis, the data extremes are used as boundary knots.","@ToolTip3":"Syntax: LISTWITHBOUNDARY(number-list)                                      Specifies the list of all knots that are used in forming the spline basis columns.","@ToolTip4":"Syntax: MULTISCALE<(multiscale-options)>                                      Specifies that multiple B-spline bases be generated, corresponding to sets with an  increasing number of internal knots.   You can control which scales are included with the following multiscale-options:     STARTSCALE=n    specifies the start scale, where n is a positive integer. The default is STARTSCALE=0.     ENDSCALE=n    specifies the end scale, where n is a positive integer. The default is ENDSCALE=7.","@ToolTip5":"Syntax: PERCENTILES(n)                                      Requests that internal knots be placed at n equally spaced percentiles of the variable  or variables named in the EFFECT statement.","@ToolTip6":"Syntax: RANGEFRACTIONS(fraction-list)                                      Requests that internal knots be placed at each fraction of the ranges of the variables  in the EFFECT statement."}},{"StatementOptionName":"KNOTMIN=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \n[Syntax: KNOTMIN=value] \n\nSpecifies that for each variable in the EFFECT statement, the left-side boundary knots be \nequally spaced starting at the specified value and ending at the minimum of the variable. \nThis option is ignored for variables whose minimum value is less than the specified value \nor if the DATABOUNDARY option is also specified."},"StatementOptionType":"V"},{"StatementOptionName":"SEPARATE","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies that when multiple variables are specified in the EFFECT statement, \nthe spline basis for each variable be treated as a separate effect. The names \nof these separated effects are formed by appending an underscore followed by \nthe name of the variable to the name that you specify in the EFFECT statement."},"StatementOptionType":"S"},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies that each individual column in the design matrix that corresponds to the spline \neffect be treated as a separate effect that can enter or leave the model independently. \nNames for these split effects are generated by appending the variable name and an index \nfor each column to the name that you specify in the EFFECT statement."},"StatementOptionType":"S"}]}},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL dependent = <effects> / <options> ; \n\nThe MODEL statement names the dependent variable and the covariate effects, including covariates, \nmain effects, constructed effects, interactions, and nested effects. If you omit the explanatory \neffects, PROC QUANTSELECT fits an intercept-only model. \n\nAfter the keyword MODEL, specify the dependent (response) variable, followed by an equal sign, \nfollowed by the explanatory effects."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DETAILS=","StatementOptionHelp":{"#cdata":"Syntax: DETAILS=DETAILS=ALL | SUMMARY \n          \nSpecifies the level of effect selection detail that is displayed. The DETAILS=SUMMARY option \nproduces only the selection summary table. The DETAILS=ALL option produces the following: \n\n  \u2022 entry and removal statistics for each variable that is selected in the model building process \n\n  \u2022 average check loss and parameter estimates \n\n  \u2022 entry and removal statistics for the top five candidates for inclusion or exclusion at each step \n\n  \u2022 a selection summary table \n\n\nThe default is DETAILS=SUMMARY."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ALL","@Value2":"SUMMARY"},"StatementOptionToolTips":{"@ToolTip1":"Produces the following:                                      (1) entry and removal statistics for each variable selected in the model building process (2) average check loss and parameter estimates   (3) entry and removal statistics for the top five candidates for inclusion or exclusion at each step (4) a selection summary table","@ToolTip2":"Produces only the selection summary table."}},{"StatementOptionName":"HIERARCHY=|HIER=","StatementOptionHelp":{"#cdata":"Specifies whether and how the model hierarchy requirement is applied. This option also controls\nwhether a single effect or multiple effects are allowed to enter or leave the model in one \nstep. You can specify that only CLASS effects, or both CLASS and continuous effects, be \nsubject to the hierarchy requirement. This option is ignored unless you also specify one of \nthe following options: SELECTION=FORWARD, SELECTION=BACKWARD, or SELECTION=STEPWISE."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"SINGLE","@Value3":"SINGLECLASS"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that model hierarchy not be maintained. Any single effect can enter or leave the  model at any given step of the selection process.  This is the default.","@ToolTip2":"Specifies that only one effect enter or leave the model at one time, subject to the model  hierarchy requirement. For example, suppose that the model contains the main effects A  and B and the interaction A*B. In the first step of the selection process, either A or B  can enter the model. In the second step, the other main effect can enter the model. The  interaction effect can enter the model only when both main effects have already entered.  Also, before A or B can be removed from the model, the A*B interaction must first be  removed. All effects (CLASS and interval) are subject to the hierarchy requirement.","@ToolTip3":"Is the same as HIERARCHY=SINGLE except that only CLASS effects are subject to the hierarchy  requirement."}},{"StatementOptionName":"NOINT","StatementOptionHelp":{"#cdata":"Suppresses the intercept term that is otherwise included in the model."},"StatementOptionType":"S"},{"StatementOptionName":"QUANTILES=|QUANTILE=","StatementOptionHelp":{"#cdata":"Syntax: QUANTILES=<number-list  |  PROCESS <(option)>> | QUANTILE=<number-list  |  PROCESS <(option)>> \n          \nSpecifies the quantile levels for the quantile regression. You can specify any number of quantile \nlevels in (0,1). If you do not specify this option, the QUANTSELECT procedure performs median \nregression effect selection that corresponds to QUANTILES=0.5. \n\nIf you specify the QUANTILES=PROCESS option, the QUANTSELECT procedure performs effect selection for \nquantile process regression. The QUANTILES=PROCESS option cannot be used with LASSO selection methods. \nYou can specify the following option in parentheses after QUANTILES=PROCESS. \n\n  NTAU=n  |  ALL \n    specifies how many quantile levels that you expect to cover for the quantile process. If you specify \n    NTAU=ALL, the QUANTSELECT procedure performs effect selection for accurate quantile process regression. \n    If you specify NTAU=n, the QUANTSELECT procedure performs effect selection for approximate quantile \n    process regression."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"number-list","@Value2":"PROCESS"},"StatementOptionToolTips":{"@ToolTip1":"Replace number-list with any number of quantile levels in the interval (0,1).","@ToolTip2":"Specifies the QUANTSELECT procedure to perform effect selection for quantile process regression.  The QUANTILES=PROCESS option cannot be used with LASSO selection methods. You can specify the  following option in parentheses after QUANTILES=PROCESS.     NTAU=n  |  ALL      specifies how many quantile levels that you expect to cover for the quantile process. If you      specify NTAU=ALL, the QUANTSELECT procedure performs effect selection for accurate quantile      process regression. If you specify NTAU=n, the QUANTSELECT procedure performs effect selection      for approximate quantile process regression."},"SubOptionsKeywords":"NTAU="},{"StatementOptionName":"SELECTION=","StatementOptionHelp":{"#cdata":"Syntax: SELECTION=method <(method options)>\n          \nSpecifies the method used to select the model, optionally followed by method options \n(enclosed in parentheses) that apply to the specified method. The default if the SELECTION= \noption is omitted is SELECTION=STEPWISE."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"FORWARD","@Value3":"BACKWARD","@Value4":"STEPWISE","@Value5":"LASSO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies full model fitting without effect selection.","@ToolTip2":"Specifies forward selection. This method starts with no effects in the model and adds effects.","@ToolTip3":"Specifies backward elimination. This method starts with all effects in the model and deletes effects.","@ToolTip4":"Specifies stepwise regression. This is similar to the FORWARD method except that effects  already in the model do not necessarily stay there.","@ToolTip5":"Specifies a method that adds and deletes parameters based on a version of estimated check  risk where the weighted L1-norm of certain weighted regression coefficients is penalized."},"SubOptionsKeywords":"STOP=|STOPHORIZON=|CHOOSE=|MAXSTEPS=|SELECT=|INCLUDE=|SLENTRY=|SLSTAY=|ADAPTIVE"},{"StatementOptionName":"STAT=|STATS=","StatementOptionHelp":{"#cdata":"Syntax: STAT=name | (names) or STATS=name | (names) \n          \nSpecifies which model fit statistics to display in the selection summary table. To specify multiple \nmodel fit statistics, specify a list of names in parentheses. If you omit this option, the default \nset of statistics that are displayed in these tables includes all the criteria that are specified \nin any of the CHOOSE=, SELECT=, and STOP= method-options."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ADJR1","@Value2":"AIC","@Value3":"AICC","@Value4":"ACL","@Value5":"R1","@Value6":"SBC"},"StatementOptionToolTips":{"@ToolTip1":"Displays the adjusted quantile regression R statistic","@ToolTip2":"Displays the Akaike\u2019s information criterion","@ToolTip3":"Displays the corrected Akaike\u2019s information criterion","@ToolTip4":"Displays the average check losses for the training, test, and validation data. The ACL statistics  for the test and validation data are reported only if you have specified the TESTDATA= option or  the VALDATA= option in the PROC QUANTSELECT statement or if you have reserved part of the input  data for testing or validation by using either a PARTITION statement or a _ROLE_ variable in the  input data.","@ToolTip5":"Displays the quantile regression R statistic","@ToolTip6":"Displays the Schwarz Bayesian information criterion"}},{"StatementOptionName":"TEST=","StatementOptionHelp":{"#cdata":"Syntax: TEST= LR1 | LR2\n          \nSpecifies the test type for computing significance levels."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"LR1","@Value2":"LR2"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the likelihood ratio test Type I","@ToolTip2":"Specifies the likelihood ratio test Type II"}}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT <OUT=SAS-data-set>< keyword<=name>> <...keyword<=name>> ;\n      \nThe OUTPUT statement creates a new SAS data set that saves diagnostic measures that are calculated \nfor the selected model. If you do not specify a keyword, then the only diagnostic included is the \npredicted response. \n\nAll the variables in the original data set are included in the new data set, along with variables \nthat are created by the keyword options in the OUTPUT statement. These new variables contain the \nvalues of a variety of statistics and diagnostic measures that are calculated for each observation \nin the data set. \n\nThe OUTPUT data set is created in row-wise form, and the variable _QUANTILE_ is optional. For each \nappropriate keyword specified in the OUTPUT statement, one variable for each specified quantile level \nis generated. These variables appear in the sorted order of the specified quantile levels. \n\nIf you specify a BY statement, then a variable _BY_ that indexes the BY groups is included. For each \nobservation, the value of _BY_ is the index of the BY group to which this observation belongs. This \nvariable is useful for matching BY groups with macro variables that PROC QUANTSELECT creates."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=SAS-data-set\n          \nSpecifies the new data set. By default, the procedure uses the DATAn convention to name the new data set."},"StatementOptionType":"V"},{"StatementOptionName":"PREDICTED=|PRED=|P=","StatementOptionHelp":{"#cdata":"[keyword] \n          \nIncludes predicted values in the output data set. The prefix for the default name is p."},"StatementOptionType":"V"},{"StatementOptionName":"RESIDUAL=|RES=|R=","StatementOptionHelp":{"#cdata":"[keyword] \n          \nIncludes residuals, calculated as ACTUAL \u2013 PREDICTED, in the output data set. The prefix for the default name is r."},"StatementOptionType":"V"}]}},{"StatementName":"PARTITION","StatementHelp":{"#cdata":"Syntax: PARTITION <option> ;\n      \nThe PARTITION statement specifies how observations in the input data set are logically partitioned \ninto disjoint subsets for model training, validation, and testing. Either you can designate a variable \nin the input data set and a set of formatted values of that variable to determine the role of each \nobservation, or you can specify proportions to use for random assignment of observations for each role. \n\nAn alternative to using a PARTITION statement is to provide a variable named _ROLE_ in the input data \nset to define roles of observations in the input data. If you specify a PARTITION statement, then any \n_ROLE_ variable in the input data set is ignored. If you do not use a PARTITION statement and the input \ndata do not contain a variable named _ROLE_, then all observations in the input data set are assigned \nto model training. \n\nYou can specify either (but not both) of the following options: \n\n  ROLEVAR=|ROLE=variable (<TEST=value> <TRAIN=value> <VALIDATE=value>)\n    names the variable in the input data set whose values are used to assign roles to each observation.\n    \n  FRACTION (<TEST=fraction> <VALIDATE=fraction>)\n    requests that specified proportions of the observations in the input data set be randomly assigned \n    training and validation roles."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ROLEVAR=|ROLE=","StatementOptionHelp":{"#cdata":"Syntax: ROLEVAR= | ROLE=variable(<TEST=value> <TRAIN=value> <VALIDATE=value>)\n          \nNames the variable in the input data set whose values are used to assign roles to each observation. \nThe TEST=, TRAIN=, and VALIDATE= suboptions specify the formatted values of this variable that are \nused to assign observations roles. If you do not specify the TRAIN= suboption, then all observations \nwhose role is not determined by the TEST= or VALIDATE= suboptions are assigned to training. If you \nspecify a TESTDATA= data set in the PROC QUANTSELECT statement, then you cannot also specify the \nTEST= suboption in the PARTITION statement. If you specify a VALDATA= data set in the PROC QUANTSELECT \nstatement, then you cannot also specify the VALIDATE= suboption in the PARTITION statement."},"StatementOptionType":"V","SubOptionsKeywords":"TEST=|TRAIN=|VALIDATE="},{"StatementOptionName":"FRACTION","StatementOptionHelp":{"#cdata":"Syntax: FRACTION(<TEST=fraction> <VALIDATE=fraction>)\n          \nFRACTION(<TEST=fraction> <VALIDATE=fraction>) \n\nRequests that specified proportions of the observations in the input data set be randomly \nassigned training and validation roles. You specify the proportions for testing and validation \nby using the TEST= and VALIDATE= suboptions. If you specify both the TEST= and the VALIDATE= \nsuboptions, then the sum of the specified fractions must be less than 1 and the remaining \nfraction of the observations are assigned to the training role. If you specify a TESTDATA= \ndata set in the PROC QUANTSELECT statement, then you cannot also specify the TEST= suboption \nin the PARTITION statement. If you specify a VALDATA= data set in the PROC QUANTSELECT statement, \nthen you cannot also specify the VALIDATE= suboption in the PARTITION statement."},"StatementOptionType":"S","SubOptionsKeywords":"TEST=|VALIDATE="}]}},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable ; \n\nA WEIGHT statement names a variable in the input data set with values that are relative weights \nfor a weighted quantile regression fit. \n\nValues of the weight variable must be nonnegative. If an observation\u2019s weight is 0, the observation \nis deleted from the analysis. If a weight is negative or missing, it is set to 0, and the observation \nis excluded from the analysis."},"StatementOptions":null}]}}}