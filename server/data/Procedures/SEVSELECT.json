{"Procedure":{"Name":"SEVSELECT","ProductGroup":"SAS ECONOMETRICS","ProcedureHelp":{"#cdata":"Syntax: PROC SEVSELECT options; \n    BY variable-list; \n    LOSS <response-variable> </ censoring-truncation-options>; \n    WEIGHT weight-variable; \n    DIST distribution-name-or-keyword <(distribution-option)<distribution-name-or-keyword <(distribution-option)>> \u2026> </ options>; \n    CLASS variable <(options)>\u2026<variable <(options)>> </ global-options>; \n    EFFECT name=effect-type(variables </ options>); \n    SCALEMODEL regression-effect-list </ scalemodel-options>; \n    SELECTION <METHOD=method <(method-options)>><options>; \n    DISPLAY <table-list> </ options>; \n    DISPLAYOUT table-spec-list </ options>; \n    OUTPUT <OUT=CAS-libref.data-table> output-options; \n    OUTSCORELIB <OUTLIB=> fcmp-library-name options; \n    NLOPTIONS options; \n    Programming statements ; \n    \nThe SEVSELECT procedure estimates parameters of any arbitrary continuous probability distribution that \nis used to model the magnitude (severity) of a continuous-valued event of interest. Examples of such \nevents include loss amounts paid by an insurance company and demand of a product as depicted by its sales. \nPROC SEVSELECT is especially useful when the severity of an event does not follow typical distributions \n(such as the normal distribution) that are often assumed by standard statistical methods."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"COVOUT","ProcedureOptionHelp":{"#cdata":"Specifies that the OUTEST= data set contain the estimate of the covariance structure \nof the parameters. This option has no effect if you do not specify the OUTEST= option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CRITERION=|CRITERIA=|CRIT=","ProcedureOptionHelp":{"#cdata":"Syntax: CRITERION | CRITERIA | CRIT=criterion-option\n      \nSpecifies the criterion to report in the model selection table."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"AD","@Value2":"AIC","@Value3":"AICC","@Value4":"BIC","@Value5":"CUSTOM","@Value6":"CVM","@Value7":"KS","@Value8":"LOGLIKELIHOOD|LL","@Value9":"M"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies the Anderson-Darling (AD) statistic value, which is computed by using the empirical distribution function (EDF) estimate, as the selection criterion. A lower value is deemed better.","@ToolTip2":"Specifies the Akaike\u2019s information criterion (AIC) as the selection criterion. A lower value is deemed better.","@ToolTip3":"Specifies the finite-sample corrected Akaike\u2019s information criterion (AICC) as the selection criterion. A lower value is deemed better.","@ToolTip4":"Specifies Schwarz Bayesian information criterion (BIC) as the selection criterion. A lower value is deemed better.","@ToolTip5":"Specifies the custom objective function as the selection criterion. You can specify this only if you also specify the OBJECTIVE= option. A lower value is deemed better.","@ToolTip6":"Specifies the Cram\u00b4 er-von Mises (CvM) statistic value, which is computed by using the empirical distribution function (EDF) estimate, as the selection criterion. A lower value is deemed better.","@ToolTip7":"Specifies the Kolmogorov-Smirnov (KS) statistic value, which is computed by using the empirical distribution function (EDF) estimate, as the selection criterion. A lower value is deemed better.","@ToolTip8":"Specifies -2*log(L) as the selection criterion, where L is the likelihood of the data. A lower value is deemed better. This is the default.","@ToolTip9":"er\u2013von Mises (CvM) statistic value, which is computed by using the empirical distribution  function (EDF) estimate, as the selection criterion. A lower value is deemed better."}},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table \n      \nNames the input data table for PROC SEVSELECT to use. The default is the most recently created data table. \nCAS-libref.data-table is a two-level name, where\n\nCAS-libref\n  refers to a collection of information that is defined in the LIBNAME statement and includes the caslib, \n  which includes a path to the data, and a session identifier, which defaults to the active session but \n  which can be explicitly defined in the LIBNAME statement.\n  \ndata-table\nspecifies the name of the input data table."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"INEST=","ProcedureOptionHelp":{"#cdata":"Syntax: INEST=CAS-libref.data-table \n      \nNames the input data table that contains the initial values of the parameter estimates to start the \noptimization process. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib \nand session identifier, and data-table specifies the name of the input data table."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"NOCLPRINT","ProcedureOptionHelp":{"#cdata":"Syntax: NOCLPRINT< =number >\n      \nSuppresses the display of the \u201cClass Level Information\u201d table if you do not specify number. If you\nspecify number, the values of the classification variables are displayed for only those variables whose\nnumber of levels is less than number. Specifying a number helps to reduce the size of the \u201cClass Level\nInformation\u201d table if some classification variables have a large number of levels. This option has no\neffect if you do not specify the CLASS statement.\n"},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Turns off all displayed and graphical output. If you specify this option, then any value that you \nspecify for the PRINT= option is ignored."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTEST=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTEST=CAS-libref.data-table \n      \nNames the output data table to contain estimates of the parameter values and their standard errors for \neach model whose parameter estimation process converges. CAS-libref.data-table is a two-level name, \nwhere CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the \noutput data table."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUTMODELINFO=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTMODELINFO=SAS-data-set\n      \nNames  the output data table to contain the information about each candidate distribution."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUTSTAT=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTSTAT=SAS-data-set\n      \nNames the output data table to contain the values of statistics of fit for each model whose parameter \nestimation process converges."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUTSTORE=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTSTORE=store-name\n      \nNames the item store to contain the context and results of the severity model estimation process. \nThe resulting item store has a binary file format that cannot be modified. You can specify this \nitem store in a subsequent PROC CCDM step by using the SEVERITYSTORE= option.\n\nThe store-name is a usual one- or two-level SAS name, as for SAS data sets."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PRINT=","ProcedureOptionHelp":{"#cdata":"Syntax: PRINT <(global-display-option)> <=display-option> \nPSyntax: PRINT <(global-display-option)> <= (display-option \u2026display-option) > \n\nSpecifies the desired displayed output. If you specify more than one display-option, then separate \nthem with spaces and enclose them in parentheses.\n\nYou can specify the following global-display-option: \nONLY \n  turns off the default displayed output and displays only the requested output."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"ALLFITSTATS","@Value3":"CONVSTATUS","@Value4":"DESCSTATS","@Value5":"DISTINFO","@Value6":"ESTIMATES","@Value7":"ESTIMATIONDETAILS","@Value8":"INITIALVALUES","@Value9":"NLOHISTORY","@Value10":"NLOSUMMARY","@Value11":"SELECTION","@Value12":"STATISTICS","@Value13":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Displays all the output.","@ToolTip2":"Displays the comparison of all the statistics of fit for all the models in one table.","@ToolTip3":"Displays the convergence status of the parameter estimation process.","@ToolTip4":"Displays the descriptive statistics for the response variable.","@ToolTip5":"Displays the final estimates of parameters.","@ToolTip6":"Displays the details of the estimation process for all the models in one table.","@ToolTip8":"Displays the initial values and bounds used for estimating each model.","@ToolTip9":"Displays the iteration history of the nonlinear optimization process used for estimating the parameters.","@ToolTip10":"Displays the summary of the nonlinear optimization process used for estimating the parameters.","@ToolTip11":"Displays the model selection table.","@ToolTip12":"Displays the statistics of fit for each model.","@ToolTip13":"Displays none of the output."},"SubOptionsKeywords":"ONLY"},{"ProcedureOptionName":"SELECTOUT","ProcedureOptionHelp":{"#cdata":"Specifies that only the regression parameters that correspond to the selected effects be written \nto the OUTEST= data table."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"VARDEF=","ProcedureOptionHelp":{"#cdata":"Syntax: VARDEF=option\n      \nSpecifies the denominator to use for computing the covariance estimates."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"DF","@Value2":"N"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies that the number of nonmissing observations minus the model degrees of freedom (number of parameters) be used.","@ToolTip2":"Specifies that the number of nonmissing observations be used."}},{"ProcedureOptionName":"ZEROEST","ProcedureOptionHelp":{"#cdata":"Specifies that zero be written to the OUTEST= data table as an estimate of the regression parameter \nthat is not in the final model (because it is either collinear or not selected). If you omit this \noption, then the special missing value .R or .N is written for such regression parameters."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"EMPIRICALCDF=|EDF=","ProcedureOptionHelp":{"#cdata":"Syntax: EMPIRICALCDF | EDF=method \n      \nSpecifies the method to use for computing the nonparametric or empirical estimate of the cumulative\ndistribution function of the data."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"AUTOMATIC|AUTO","@Value2":"KAPLANMEIER|KM","@Value3":"MODIFIEDKM|MKM","@Value4":"NOTURNBULL","@Value5":"STANDARD|STD","@Value6":"TURNBULL|EM"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies that the method be chosen automatically based on the data specification. If you do not specify any censoring or truncation, then the standard empirical estimation method (STANDARD) is chosen. If you specify both right-censoring and left-censoring, then Turnbull\u2019s estimation method (TURNBULL) is chosen. For all other combinations of censoring and truncation, the Kaplan-Meier method (KAPLANMEIER) is chosen.","@ToolTip2":"Specifies that the product limit estimator proposed by Kaplan and Meier (1958) be used. Specification of this method has no effect when both right-censoring and left-censoring are specified.","@ToolTip3":"Syntax: MODIFIEDKM | MKM <(options)>                                     Specifies that the modified product limit estimator be used. Specification of this method has no effect when both right-censoring and left-censoring are specified.   You can modify the default by using the following options:    ALPHA | A=number     specifies the value to use for \u03b1 when the lower bound on the risk set size is defined as cx\u207f      (where the superscript n equals \u03b1). This value must satisfy 0 < \u03b1 < 1.     C=number     specifies the value to use for c when the lower bound on the risk set size is defined as cx\u207f      (where the superscript n equals \u03b1). This value must satisfy c > 0.       RSLB=number     specifies the absolute lower bound on the risk set size to be included in the estimate.","@ToolTip4":"Specifies that the method be chosen automatically based on the data specification and that Turnbull\u2019s method not be used. This is the default.","@ToolTip5":"Specifies that the standard empirical estimation method be used. This ignores any censoring or truncation information even if specified, and can thus result in estimates that are more biased than those obtained with other methods more suitable for such data. Specification of this method has no effect when both right-censoring and left-censoring are specified.","@ToolTip6":"TURNBULL | EM <(options)> (Experimental )                                  Specifies that the Turnbull\u2019s method be used. An iterative expectation-maximization (EM) algorithm proposed by Turnbull (1976) is used to compute the empirical estimates.   You can modify the default behavior of the EM algorithm by using the following options:   ENSUREMLE     specifies that the final EDF estimates be maximum likelihood estimates.    EPS=number     specifies the maximum relative error to be allowed between estimates of two consecutive     iterations.    MAXITER=number     specifies the maximum number of iterations to attempt to find the empirical estimates. If     you do not specify this option, then PROC SEVSELECT uses a default value of 500.   ZEROPROB=number     specifies the threshold below which an empirical estimate of the probability is considered     zero."}},{"ProcedureOptionName":"INITSAMPLE","ProcedureOptionHelp":{"#cdata":"Syntax: INITSAMPLE (initsample-option) | INITSAMPLE (initsample-option . . . initsample-option)\n      \nSpecifies that a sample of the input data be used for initializing the distribution parameters. If you\nspecify more than one initsample-option, then separate them with spaces.\n\nPROC SEVSELECT uses the uniform random sampling method to select the sample,\nthe size and randomness of which are controlled by the following initsample-options:\n\n  FRACTION=number\n    specifies the fraction, between 0 and 1, of the input data to be used for sampling.\n  SEED=number\n    specifies the seed to be used for the uniform random number generator. This option enables you\n    to select the same sample from the same input data across different runs of PROC SEVSELECT,\n    which can be useful for replicating the results across different runs. If you do not specify the seed\n    value, PROC SEVSELECT generates a seed that is based on the system clock.\n  SIZE=number\n    specifies the size of the sample. If the data are distributed across different nodes, then this size\n    applies to the sample that is prepared at each node."},"ProcedureOptionType":"S","SubOptionsKeywords":"FRACTION=|SEED=|SIZE="},{"ProcedureOptionName":"OBJECTIVE=","ProcedureOptionHelp":{"#cdata":"Syntax: OBJECTIVE=symbol-name   \n      \nNames the symbol that represents the objective function in the specified SAS programming statements.\nFor each model to be estimated, PROC SEVSELECT executes the programming statements to\ncompute the value of this symbol for each observation. The values are added across all observations to\nobtain the value of the objective function. The optimization algorithm estimates the model parameters\nsuch that the objective function value is minimized. A separate optimization problem is solved for each\ncandidate distribution."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SELECTNLOTECH=","ProcedureOptionHelp":{"#cdata":"Syntax: SELECTNLOTECH=CONGRA | DBLDOG | NEWRAP | NMSIMP | NRRIDG | QUANEW | TRUREG \n      \nSpecifies the nonlinear optimization technique to use for the intermediate steps of the regression \neffect selection process. "},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"CONGRA","@Value2":"DBLDOG","@Value3":"NEWRAP","@Value4":"NMSIMP","@Value5":"NRRIDG","@Value6":"QUANEW","@Value7":"TRUREG"},"ProcedureOptionToolTips":{"@ToolTip1":"Performs a conjugate-gradient optimization.","@ToolTip2":"Performs a version of double-dogleg optimization.","@ToolTip3":"Performs a Newton-Raphson optimization that combines a line-search algorithm with ridging.","@ToolTip4":"Performs a Nelder-Mead simplex optimization.","@ToolTip5":"Performs a Newton-Raphson optimization with ridging.","@ToolTip6":"Performs a quasi-Newton optimization","@ToolTip7":"Performs a trust region optimization."}}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variable-list ; \n      \nA BY statement can be used in the SEVSELECT procedure to process the input data set \nin groups of observations defined by the BY variables."},"StatementOptions":null},{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable <(options)> <variable <(options)>> </ global-options>;\n\nThe CLASS statement names the classification variables to be used as explanatory variables in the analysis. \nThe CLASS statement must precede the MODEL statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sort order of the classification variable. If both the DESCENDING and ORDER= options \nare specified, PROC BCHOICE orders the categories according to the ORDER= option and then reverses \nthat order."},"StatementOptionType":"S"},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (., ._, .A, \u2026, .Z for numeric variables and blanks for character variables) \nas valid values for the CLASS variable."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=","StatementOptionHelp":{"#cdata":"Specifies the sort order for the levels of classification variables. This ordering determines which \nparameters in the model correspond to each level in the data. By default, ORDER=FORMATTED. \nFor ORDER=FORMATTED and ORDER=INTERNAL, the sort order is machine-dependent. When ORDER=FORMATTED \nis in effect for numeric variables for which you have supplied no explicit format, the levels are \nordered by their internal values."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"FORMATTED","@Value2":"FREQ","@Value3":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Levels sorted by the external formatted value, except for numeric variables with no explicit  format, which are sorted by their unformatted (internal) value.","@ToolTip2":"Levels sorted by the descending frequency count (levels that have more observations come ealier  in the order).","@ToolTip3":"Levels sorted by the unformatted value. The sort order is machine-dependent."}},{"StatementOptionName":"PARAM=","StatementOptionHelp":{"#cdata":"Specifies the parameterization method for the classification variable or variables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EFFECT","@Value2":"GLM","@Value3":"ORDINAL|THERMOMETER","@Value4":"POLYNOMIAL|POLY","@Value5":"REFERENCE|REF","@Value6":"ORTHEFFECT","@Value7":"ORTHORDINAL|ORTHOTHERM","@Value8":"ORTHPOLY","@Value9":"ORTHREF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies effect coding.","@ToolTip2":"Specifies less-than-full-rank, reference-cell coding; this option can be used  only as a global option.","@ToolTip3":"Specifies the cumulative parameterization for an ordinal CLASS variable.","@ToolTip4":"Specifies polynomial coding.","@ToolTip5":"Specifies reference-cell coding.","@ToolTip6":"Orthogonalizes PARAM=EFFECT.","@ToolTip7":"Orthogonalizes PARAM=ORDINAL.","@ToolTip8":"Orthogonalizes PARAM=POLYNOMIAL.","@ToolTip9":"Orthogonalizes PARAM=REFERENCE."}},{"StatementOptionName":"REFERENCE=|REF=","StatementOptionHelp":{"#cdata":"Syntax: REFERENCE='level'|keyword | REF='level'|keyword \n\nSpecifies the reference level that is used when you specify a nonsingular parameterization. "},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'<level>'","@Value2":"FIRST","@Value3":"LAST"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the level of the variable to use as the reference level. Specify the formatted value of the variable  if a format is assigned. Replace <level> with an actual value.","@ToolTip2":"Designates the first ordered level as reference.","@ToolTip3":"Designates the last ordered level as reference."}},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"Specifies that design matrix columns that correspond to any effect that contains a split classification \nvariable can be selected to enter or leave a model independently of the other design columns of that \neffect."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAY","StatementHelp":{"#cdata":"Syntax: DISPLAY <table-list> </ options>;\n      \nThe DISPLAY statement enables you to specify a list of display tables to display or exclude. This statement \nis similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve \nperformance when a large number of tables could be generated (such as in BY-group processing). The procedure \nprocesses the DISPLAY statement on a CAS server and thus sends only a subset of ODS tables to the SAS client. \nBecause ODS statements are processed on a SAS client, all the display tables generated are first sent to the \nclient and then the client creates a subset. If both DISPLAY and ODS statements are used together, the DISPLAY \nstatement takes precedence over the ODS statements."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CASESENSITIVE","StatementOptionHelp":{"#cdata":"Performs a case-sensitive comparison of table names in the table-list to display table names when \ntables are subsetted for display. To preserve case, you must enclose table names in the table-list \nin quotation marks."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDE","StatementOptionHelp":{"#cdata":"Displays all display tables except those specified in the table-list."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDEALL","StatementOptionHelp":{"#cdata":"Suppresses display of all tables. This option takes precedence over the other options."},"StatementOptionType":"S"},{"StatementOptionName":"TRACE","StatementOptionHelp":{"#cdata":"Displays the display table names, labels, and paths."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAYOUT","StatementHelp":{"#cdata":"Syntax: DISPLAYOUT table-spec-list < / options > ;\n      \nThe DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This\nstatement is similar to the ODS OUTPUT statement.\n\nThe table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a\nkey=value format:\n\n  key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the\n    CAS output table name.\n  key specifies key as the ODS table name and also as the CAS output table name.\n  \nTable names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT\nstatement does not support regular expressions."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"INCLUDEALL","StatementOptionHelp":{"#cdata":"Creates output CAS tables for all display tables. The name of the created output CAS table is the \nsame as the corresponding display table name. If you specify this option, the table-spec-list specification \nis ignored."},"StatementOptionType":"S"},{"StatementOptionName":"NOREPLACE","StatementOptionHelp":{"#cdata":"Does not replace an existing CAS output table of the same name."},"StatementOptionType":"S"},{"StatementOptionName":"REPEATED","StatementOptionHelp":{"#cdata":"Replicates the CAS output tables on all nodes."},"StatementOptionType":"S"}]}},{"StatementName":"DIST","StatementHelp":{"#cdata":"Syntax: DIST distribution-name-or-keyword <(distribution-option)<distribution-name-or-keyword \n<(distribution-option)>> \u2026> </ options>;\n\nThe DIST statement specifies candidate distributions to be estimated by the SEVSELECT procedure. \nYou can specify multiple DIST statements, and each statement can contain one or more distribution \nspecifications."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Specifies all the predefined distributions and the distributions that you have defined in the libraries that\n  you specify in the CMPLIB= system option. "},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"_PREDEFINED_","StatementOptionHelp":{"#cdata":"Specifies the list of eight predefined distributions: BURR, EXP, GAMMA, GPD, IGAUSS, LOGN, \nPARETO, and WEIBULL. Although the TWEEDIE and STWEEDIE distributions are available in the\nSashelp.Svrtdist library along with these eight distributions, they are not included by this keyword. If\nyou want to fit the TWEEDIE and STWEEDIE distributions, then you must specify them explicitly or\nuse the _ALL_ keyword."},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"_USER_","StatementOptionHelp":{"#cdata":"Specifies the list of all the distributions that you have defined in the libraries that you specify in the\n  CMPLIB= system option."},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"BURR","StatementOptionHelp":{"#cdata":"Burr distribution"},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"EXP","StatementOptionHelp":{"#cdata":"Exponential distribution"},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"GAMMA","StatementOptionHelp":{"#cdata":"Gamma distribution"},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"GPD","StatementOptionHelp":{"#cdata":"Generalized Pareto distribution"},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"IGAUSS","StatementOptionHelp":{"#cdata":"Inverse Gaussian (Wald) distribution"},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"LOGN","StatementOptionHelp":{"#cdata":"Lognormal distribution"},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"PARETO","StatementOptionHelp":{"#cdata":"Pareto distribution"},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"TWEEDIE","StatementOptionHelp":{"#cdata":"Tweedie distribution"},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"STWEEDIE","StatementOptionHelp":{"#cdata":"Scaled Tweedie distribution"},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"WEIBULL","StatementOptionHelp":{"#cdata":"Weibull distribution"},"StatementOptionType":"RS","SubOptionsKeywords":"INIT="},{"StatementOptionName":"INFUNCDEF=|INTAB=","StatementOptionHelp":{"#cdata":"Syntax: INFUNCDEF=\"CAS-table-name\" | INTAB=\"CAS-table-name\" | \nINFUNCDEF=CAS-table-name<(CASLIB=\"caslib\")> | INTAB=CAS-table-name<(CASLIB=\"caslib\")> \n\nSpecifies a data table on the CAS server that contains the distribution function definitions. If you \nuse the first form to specify the data table, then PROC SEVSELECT assumes that the table is in the \ncaslib that is active in the current CAS session. To specify a different caslib, use the second form."},"StatementOptionType":"V"},{"StatementOptionName":"LISTONLY","StatementOptionHelp":{"#cdata":"Prints the list of all candidate distributions to the SAS log without doing any further processing \non them. This option is especially useful when you use a shortcut keyword to include a list of \ndistributions. It enables you to find out which distributions are included by the keyword."},"StatementOptionType":"S"},{"StatementOptionName":"OUTFUNCDEF=|OUTTAB=","StatementOptionHelp":{"#cdata":"Syntax: OUTFUNCDEF=\"CAS-table-name\" <option> | OUTTAB=\"CAS-table-name\" <option> \n\nSpecifies the output data table on the CAS server to write the distribution function definitions to. \nThe table is created in the caslib that is active for the current CAS session. \n\nThis option is useful for creating a data table that you can use to invoke the actions in the severity \naction set from the PROC CAS, Lua, or Python client."},"StatementOptionType":"V"},{"StatementOptionName":"GLOBAL|PROMOTED","StatementOptionHelp":{"#cdata":"[option for OUTFUNCDEF=|OUTTAB= only]\n          \nPromotes the data table to make it available globally."},"StatementOptionType":"S"},{"StatementOptionName":"VALIDATEONLY","StatementOptionHelp":{"#cdata":"Syntax: VALIDATEONLY | VALIDATEONLY (NOSCALEMODEL) \n          \nChecks all candidate distributions for validity without doing any further processing on them. The first \nform checks whether each distribution\u2019s first parameter is a scale parameter, which is a requirement for \nfitting a scale regression model for that distribution. You can disable that check by using the second form, \nwhich specifies the NOSCALEMODEL option; this is useful if you do not want to fit a scale regression model \nfor a distribution."},"StatementOptionType":"S","SubOptionsKeywords":"NOSCALEMODEL"}],"#comment":{}}},{"StatementName":"EFFECT","StatementHelp":{"#cdata":"Syntax: EFFECT name=effect-type (variables < / options >) ;\n      \nThe EFFECT statement enables you to construct special collections of columns for design matrices. These\ncollections are referred to as constructed effects to distinguish them from the usual model effects that are\nformed from continuous or classification variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"NAME=","StatementOptionHelp":{"#cdata":"Replace 'NAME' with the name of the effect, specified after the EFFECT keyword. \nThis name can appear in only one EFFECT statement and cannot be the name of a \nvariable in the input data set."},"StatementOptionType":"RV","StatementOptionValues":{"@Value1":"COLLECTION","@Value2":"MULTIMEMBER|MM","@Value3":"POLYNOMIAL|POLY","@Value4":"SPLINE"},"StatementOptionToolTips":{"@ToolTip1":"Is a collection effect that defines one or more variables as a single effect with  multiple degrees of freedom. The variables in a collection are considered as a  unit for estimation and inference.  Option(s) available (specified after a slash (/) following the variable list):   DETAILS  Displays the constituents of the collection effect","@ToolTip2":"Is a multimember classification effect whose levels are determined by one or  more variables that appear in a CLASS statement.   Options available (specified after a slash (/) following the variable list):    DETAILS displays the levels of the multimember effect   NOEFFECT specifies that observations with all missing levels for the multimember variables should      have zero values in the corresponding design matrix columns    STDIZE Standardizes the design matrix entries so that each observation has a sum of 1   WEIGHT= specifies the weight variable for the contributions of each of the classification effects","@ToolTip3":"Is a multivariate polynomial effect in the specified numeric variables.                                      Options available (specified after a slash (/) following the variable list):     DEGREE= specifies the degree of the polynomial    DETAILS displays details of the specified polynomial   MDEGREE= specifies the maximum degree of any variable in a term of the polynomial    NOSEPARATE treats the polynomial as a single effect with multiple degrees of freedom   STANDARDIZE= specifies centering and scaling suboptions for the variables that define the polynomial","@ToolTip4":"Is a regression spline effect whose columns are univariate spline expansions of  one or more variables. A spline expansion replaces the original variable with  an expanded or larger set of new variables.   Options available (specified after a slash (/) following the variable list):     BASIS= specifies the type of basis (B-spline basis or truncated power function basis) for the spline expansion    DATABOUNDARY uses the extremes of the data as boundary knots for a B-spline basis   DEGREE= specifies the degree of the spline transformation    DETAILS displays the knots and locations for each spline basis function   KNOTMAX= requests equally spaced right-side boundary knots starting at the variables\u2019 maximum and ending at the KNOTMAX= value   KNOTMETHOD= specifies how to construct the knots for spline effects   KNOTMIN= requests equally spaced left-side boundary knots starting at the     KNOTMAX= value and ending at the variables\u2019 minimum value"},"SubOptionsKeywords":"DETAILS|WITHIN=|NOEFFECT|WEIGHT=|DEGREE=|MDEGREE|NOSEPARATE|STANDARDIZE=|STDSIZE|KNOTMETHOD=|KNOTMAX|KNOTMIN|DATABOUNDARY|BASIS"},{"StatementOptionName":"DETAILS","StatementOptionHelp":{"#cdata":"[For the COLLECTION | MULTIMEMBER | POLYNOMIAL |SPLINE effect-type] \n          \nRequests a table that shows the: (1) constituents of the collection effect, or (2) levels of the multimember effect, \nor (3) details of the specified polynomial, or (4) knot locations and the knots associated with each spline basis function."},"StatementOptionType":"S"},{"StatementOptionName":"NOEFFECT","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \nSpecifies that observations whose levels are all missing for the multimember variables should have 0 \nvalues in the corresponding design matrix columns."},"StatementOptionType":"S"},{"StatementOptionName":"STDIZE","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \nSpecifies that for each observation, the entries in the design matrix that corresponds \nto the multimember effect be scaled to have a sum of one."},"StatementOptionType":"S"},{"StatementOptionName":"WEIGHT=","StatementOptionHelp":{"#cdata":"[For the MULTIMEMBER effect-type only] \n          \n[Syntax: WEIGHT=wght-list] \n\nSpecifies numeric variables used to weigh the contributions of each of the classification \neffects that define the constructed multimember effect. The number of variables in wght-list \nmust match the number of classification variables that define the effect."},"StatementOptionType":"V"},{"StatementOptionName":"DEGREE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL and SPLINE effect-type only] \n          \n[Syntax: DEGREE=n] \n\nSpecifies the (1) degree of the polynomial, or (2) degree of the spline transformation. \nThe degree must be a positive integer. The n degree is typically a small integer, such as \n1, 2, or 3. The default for polynomial effect is DEGREE=1, and DEGREE=3 for spline \ntransformation."},"StatementOptionType":"V"},{"StatementOptionName":"MDEGREE=","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: MDEGREE=n] \n\nSpecifies the maximum degree of any variable in a term of the polynomial. This degree \nmust be a positive integer. The default is the degree of the specified polynomial."},"StatementOptionType":"V"},{"StatementOptionName":"NOSEPARATE","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \nSpecifies that the polynomial be treated as a single effect with multiple degrees \nof freedom. The effect name that you specify is used as the constructed effect name, \nand the labels of the terms are used as labels of the corresponding parameters."},"StatementOptionType":"S"},{"StatementOptionName":"STANDARDIZE","StatementOptionHelp":{"#cdata":"[For the POLYNOMIAL effect-type only] \n          \n[Syntax: STANDARDIZE <(centerscale-opts)> <= standardize-opt>] \n\nSpecifies that the variables that define the polynomial be standardized. By default, \nthe standardized variables receive prefix \"s_\" in the variable names. \n\nYou can use the following centerscale-opts to specify how the center and scale are estimated: \n\n  METHOD=MOMENTS \n  specifies that the center be estimated by the variable mean and the scale be estimated by the standard deviation. \n\n  METHOD=RANGE \n  specifies that the center be estimated by the midpoint of the variable range and the scale be estimated as half the variable range.\n\n  METHOD=WMOMENTS \n  is the same as METHOD=MOMENTS except that weighted means and weighted standard deviations are used. \n\n  PREFIX=NONE | quoted-string \n  specifies the prefix that is appended to standardized variables when forming the term labels."},"StatementOptionType":"S|V","StatementOptionValues":{"@Value1":"CENTER","@Value2":"CENTERSCALE","@Value3":"NONE","@Value4":"SCALE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that variables be centered but not scaled.","@ToolTip2":"Specifies that variables be centered and scaled. This is the default if you do not  specify a standardization-opt.","@ToolTip3":"Specifies that no standardization be performed.","@ToolTip4":"Specifies that variables be scaled but not centered."}},{"StatementOptionName":"BASIS=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies a basis for the spline expansion."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BSPLINE","@Value2":"TPF"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a B-spline basis for the spline expansion.","@ToolTip2":"Syntax: TPF(options)                                      Specifies a truncated power function basis for the spline expansion.   You can modify the number of columns when you request BASIS=TPF with the following options:     NOINT    excludes the intercept column.     NOPOWERS    excludes the intercept and polynomial columns."}},{"StatementOptionName":"DATABOUNDARY","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only]\n          \nSpecifies that the extremes of the data be used as boundary knots when building a B-spline basis."},"StatementOptionType":"S"},{"StatementOptionName":"KNOTMAX=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only]\n          \n[Syntax: KNOTMAX=value] \n\nSpecifies that, for each variable in the EFFECT statement, the right-side boundary \nknots be equally spaced starting at the maximum of the variable and ending at the \nspecified value. This option is ignored for variables whose maximum value is greater \nthan the specified value or if the DATABOUNDARY option is also specified."},"StatementOptionType":"V"},{"StatementOptionName":"KNOTMETHOD=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies how to construct the knots for spline effects."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EQUAL","@Value2":"LIST","@Value3":"LISTWITHBOUNDARY","@Value4":"MULTISCALE","@Value5":"PERCENTILES","@Value6":"RANGEFRACTIONS"},"StatementOptionToolTips":{"@ToolTip1":"Syntax: EQUAL<(n)>               Specifies that n equally spaced knots be positioned between the extremes of the data.  The default is n=3. For a B-spline basis, any needed boundary knots continue to be  equally spaced unless the DATABOUNDARY option has also been specified. KNOTMETHOD=EQUAL  is the default if no knot-method is specified.","@ToolTip2":"Syntax: LIST(number-list)                                      Specifies the list of internal knots to be used in forming the spline basis columns.  For a B-spline basis, the data extremes are used as boundary knots.","@ToolTip3":"Syntax: LISTWITHBOUNDARY(number-list)                                      Specifies the list of all knots that are used in forming the spline basis columns.","@ToolTip4":"Syntax: MULTISCALE<(multiscale-options)>                                      Specifies that multiple B-spline bases be generated, corresponding to sets with an  increasing number of internal knots.   You can control which scales are included with the following multiscale-options:     STARTSCALE=n    specifies the start scale, where n is a positive integer. The default is STARTSCALE=0.     ENDSCALE=n    specifies the end scale, where n is a positive integer. The default is ENDSCALE=7.","@ToolTip5":"Syntax: PERCENTILES(n)                                      Requests that internal knots be placed at n equally spaced percentiles of the variable  or variables named in the EFFECT statement.","@ToolTip6":"Syntax: RANGEFRACTIONS(fraction-list)                                      Requests that internal knots be placed at each fraction of the ranges of the variables  in the EFFECT statement."}},{"StatementOptionName":"KNOTMIN=","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \n[Syntax: KNOTMIN=value] \n\nSpecifies that for each variable in the EFFECT statement, the left-side boundary knots be \nequally spaced starting at the specified value and ending at the minimum of the variable. \nThis option is ignored for variables whose minimum value is less than the specified value \nor if the DATABOUNDARY option is also specified."},"StatementOptionType":"V"},{"StatementOptionName":"NATURALCUBIC","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nUses a natural cubic spline basis for the spline expansion. Natural cubic splines, also known \nas restricted cubic splines, are cubic splines that are constrained to be linear beyond the \nextreme knots."},"StatementOptionType":"S"},{"StatementOptionName":"SEPARATE","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies that when multiple variables are specified in the EFFECT statement, \nthe spline basis for each variable be treated as a separate effect. The names \nof these separated effects are formed by appending an underscore followed by \nthe name of the variable to the name that you specify in the EFFECT statement."},"StatementOptionType":"S"},{"StatementOptionName":"SPLIT","StatementOptionHelp":{"#cdata":"[For the SPLINE effect-type only] \n          \nSpecifies that each individual column in the design matrix that corresponds to the spline \neffect be treated as a separate effect that can enter or leave the model independently. \nNames for these split effects are generated by appending the variable name and an index \nfor each column to the name that you specify in the EFFECT statement."},"StatementOptionType":"S"}]}},{"StatementName":"LOSS","StatementHelp":{"#cdata":"Syntax: LOSS < response-variable-name > < / censoring-truncation-options > ; \n      \nThe LOSS statement specifies the name of the response or loss variable whose distribution needs to be\nmodeled. You can also specify additional options to indicate any truncation or censoring of the response.\nThe specification of response variable is optional if at least one type of censoring is specified. You must\nspecify a response variable if no censoring is specified. If you specify more than one LOSS statement, then\nthe first statement is used."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"LEFTCENSORED=|LC=","StatementOptionHelp":{"#cdata":"Syntax: LEFTCENSORED | LC=variable-name \n Syntax: LEFTCENSORED | LC=number\n    \nSpecifies the left-censoring variable or a global left-censoring limit."},"StatementOptionType":"V"},{"StatementOptionName":"LEFTTRUNCATED=|LT=","StatementOptionHelp":{"#cdata":"Syntax: LEFTTRUNCATED | LT=variable-name <(left-truncation-option)> \nSyntax: LEFTTRUNCATED | LT=number <(left-truncation-option)>  \n    \nSpecifies the left-truncation variable or a global left-truncation threshold.\n\nYou can specify the following left-truncation-option for an alternative interpretation of the left-truncation threshold: \nPROBOBSERVED | POBS=number \n  specifies the probability of observability, which is defined as the probability that the underlying severity event is observed \n  (and recorded) for the specified left-threshold value. "},"StatementOptionType":"V","SubOptionsKeywords":"PROBOBSERVED=|POBS="},{"StatementOptionName":"RIGHTCENSORED=|RC=","StatementOptionHelp":{"#cdata":"Syntax: RIGHTCENSORED | RC=variable-name\nSyntax: RIGHTCENSORED | RC=number \n    \nSpecifies the right-censoring variable or a global right-censoring limit."},"StatementOptionType":"V"},{"StatementOptionName":"RIGHTTRUNCATED=|RT=","StatementOptionHelp":{"#cdata":"Syntax: RIGHTTRUNCATED | RT=variable-name\nSyntax: RIGHTTRUNCATED | RT=number \n    \nSpecifies the right-truncation variable or a global right-truncation threshold."},"StatementOptionType":"V"}]}},{"StatementName":"NLOPTIONS","StatementHelp":{"#cdata":"Syntax: NLOPTIONS options ; \n      \nThe SEVSELECT procedure uses the nonlinear optimization (NLO) subsystem to perform nonlinear \noptimization of the likelihood function to obtain the estimates of distribution and regression \nparameters. You can use the NLOPTIONS statement to control different aspects of this optimization \nprocess. If you specify more than one NLOPTIONS statement, then the first statement is used."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ABSCONV=|ABSTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSCONV= | ABSTOL=r] \n          \nSpecifies an absolute function convergence criterion. The default value of r is the negative \nsquare root of the largest double-precision value, which serves only as a protection against \noverflows. "},"StatementOptionType":"V"},{"StatementOptionName":"ABSFCONV=|ABSFTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSFCONV=r[n] | ABSFTOL=r[n]] \n          \nSpecifies an absolute function convergence criterion. The default value is r=0. The optional \ninteger value n specifies the number of successive iterations for which the criterion must be \nsatisfied before the process can be terminated."},"StatementOptionType":"V"},{"StatementOptionName":"ABSGCONV=|ABSGTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSGCONV=r[n] | ABSGTOL=r[n]] \n          \nSpecifies an absolute gradient convergence criterion. The default value is r=1E-5. \nThe optional integer value n specifies the number of successive iterations for which \nthe criterion must be satisfied before the process can be terminated."},"StatementOptionType":"V"},{"StatementOptionName":"ABSXCONV=|ABSXTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSXCONV= | ABSXTOL=r[n]] \n          \nSpecifies an absolute parameter convergence criterion. The optional integer\nvalue n specifies the number of successive iterations for which the criterion \nmust be satisfied before the process can terminate."},"StatementOptionType":"V"},{"StatementOptionName":"FCONV=|FTOL=","StatementOptionHelp":{"#cdata":"[Syntax: FCONV= | FTOL=r[n]] \n          \nSpecifies a relative function convergence criterion. \n\nThe optional integer value n specifies the number of successive iterations for which \nthe criterion must be satisfied before the process can terminate."},"StatementOptionType":"V"},{"StatementOptionName":"FCONV2=|FTOL2=","StatementOptionHelp":{"#cdata":"[Syntax: FCONV2= | FTOL2=r[n]] \n          \nSpecifies another function convergence criterion. \n\nThe optional integer value n specifies the number of successive iterations for which \nthe criterion must be satisfied before the process can terminate."},"StatementOptionType":"V"},{"StatementOptionName":"FSIZE=","StatementOptionHelp":{"#cdata":"[Syntax:FSIZE=r] \n          \nSpecifies the FSIZE parameter of the relative function and relative gradient termination \ncriteria. The default value is r=0."},"StatementOptionType":"V"},{"StatementOptionName":"GCONV=|GTOL=","StatementOptionHelp":{"#cdata":"[Syntax: GCONV=r | GTOL=r] \n          \nSpecifies a relative gradient convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"MAXFUNC=|MAXFU=","StatementOptionHelp":{"#cdata":"[Syntax: MAXFUNC= | MAXFU=i] \n          \nSpecifies the maximum number i of function calls in the optimization process. The default \nvalues are:\n\n     TRUREG, NRRIDG, NEWRAP: 125\n     QUANEW, DBLDOG: 500\n     CONGRA: 1000\n     NMSIMP: 3000 \n\nNote that the optimization can terminate only after completing a full iteration. Therefore, \nthe number of function calls that is actually performed can exceed the number that is specified \nby the MAXFUNC= option."},"StatementOptionType":"V"},{"StatementOptionName":"MAXITER=|MAXIT=","StatementOptionHelp":{"#cdata":"[Syntax: MAXITER= | MAXIT=i[n]] \n          \n Specifies the maximum number i of iterations in the optimization process. The default \n values are:\n \n   TRUREG, NRRIDG, NEWRAP: 50\n   QUANEW, DBLDOG: 200\n   CONGRA: 400\n   NMSIMP: 1000 \n  \nThese default values are also valid when i is specified as a missing value."},"StatementOptionType":"V"},{"StatementOptionName":"MAXTIME=","StatementOptionHelp":{"#cdata":"[Syntax: MAXTIME=r] \n          \nSpecifies an upper limit of r seconds of CPU time for the optimization process. The default \nvalue is the largest floating-point double representation of your computer. Note that the time \nspecified by the MAXTIME= option is checked only once at the end of each iteration. Therefore, \nthe actual running time can be much longer than that specified by the MAXTIME= option. The \nactual running time includes the rest of the time needed to finish the iteration and the time \nneeded to generate the output of the results."},"StatementOptionType":"V"},{"StatementOptionName":"MINITER=|MINIT=","StatementOptionHelp":{"#cdata":"[Syntax: MINITER= | MINIT=i] \n          \nSpecifies the minimum number of iterations. The default value is 0. If you request more \niterations than are actually needed for convergence to a stationary point, the optimization \nalgorithms can behave strangely. For example, the effect of rounding errors can prevent the \nalgorithm from continuing for the required number of iterations."},"StatementOptionType":"V"},{"StatementOptionName":"TECHNIQUE=|TECH=","StatementOptionHelp":{"#cdata":"[Syntax: TECHNIQUE= | TECH=name] \n          \nSpecifies the optimization technique."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CONGRA","@Value2":"DBLDOG","@Value3":"NMSIMP","@Value4":"NEWRAP","@Value5":"NRRIDG","@Value6":"QUANEW","@Value7":"TRUREG","@Value8":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"Performs a conjugate-gradient optimization.","@ToolTip2":"Performs a version of double-dogleg optimization.","@ToolTip3":"Performs a Nelder-Mead simplex optimization.","@ToolTip4":"Performs a Newton-Raphson optimization that combines a line-search algorithm with ridging.","@ToolTip5":"Performs a Newton-Raphson optimization with ridging.","@ToolTip6":"Performs a quasi-Newton optimization","@ToolTip7":"Performs a trust region optimization. This is the default estimation method.","@ToolTip8":"Does not perform any optimization. This option can be used as follows:                                      \u2013 to perform a grid search without optimization \u2013 to compute estimates and predictions that cannot be obtained efficiently with any of the   optimization techniques"}},{"StatementOptionName":"XCONV=|XTOL=","StatementOptionHelp":{"#cdata":"[Syntax: XCONV= | XTOL=r[n]] \n          \nSpecifies the relative parameter convergence criterion. For all techniques except NMSIMP, \ntermination requires a small relative parameter change in subsequent iterations. The default \nvalue is r=1E-8 for the NMSIMP technique and r=0 otherwise. The optional integer value n \nspecifies the number of successive iterations for which the criterion must be satisfied \nbefore the process can be terminated."},"StatementOptionType":"V"},{"StatementOptionName":"XSIZE=","StatementOptionHelp":{"#cdata":"[Syntax: XSIZE=r > 0] \n          \nSpecifies the XSIZE parameter of the relative parameter termination criterion. The default \nvalue is r=0."},"StatementOptionType":"V"}],"ProcedureOption":{"ProcedureOptionName":"GCONV2=|GTOL2=","ProcedureOptionHelp":{"#cdata":"[Syntax: GCONV2=r <n> | GTOL2=r <n>] \n          \nSpecifies another relative gradient convergence criterion. By default, GCONV2=0."},"ProcedureOptionType":"V"}}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT <OUT=CAS-libref.data-table> output-options;\n\nThe OUTPUT statement creates the output data table that contains the estimates of scoring functions \nand quantiles."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table \n          \nNames the output data table for PROC SEVSELECT to use. You must specify this option before any other options. \nCAS-libref.data-table is a two-level name, where \n\nCAS-libref\n  refers to a collection of information that is defined in the LIBNAME statement and includes the caslib, \n  which includes a path to where the data table is to be stored, and a session identifier, which defaults \n  to the active session but which can be explicitly defined in the LIBNAME statement.\n  \ndata-table\nspecifies the name of the output data table."},"StatementOptionType":"V"},{"StatementOptionName":"COPYVARS=","StatementOptionHelp":{"#cdata":"Syntax: COPYVARS=variable-list \n          \nSpecifies the names of the variables that you want to copy from the input DATA= data table to the \nOUT= data table. If you want to specify more than one name, then separate them by spaces."},"StatementOptionType":"V"},{"StatementOptionName":"FUNCTIONS=","StatementOptionHelp":{"#cdata":"Syntax: FUNCTIONS=(function<(arg)><=variable> <function<(arg)><=variable>> \u2026) \n          \nSpecifies the scoring functions that you want to estimate."},"StatementOptionType":"V"},{"StatementOptionName":"QUANTILES=","StatementOptionHelp":{"#cdata":"Syntax: QUANTILES=quantile-options \n          \nSpecifies the quantiles that you want to estimate. To use this option, for each distribution that you \nspecify in the DIST statement, the FCMP function D_QUANTILE must be defined in the search path that you \nspecify by using the CMPLIB= system option."},"StatementOptionType":"V","SubOptionsKeywords":"CDF=|POINTS=|NAMES=|NDECIMAL="}]}},{"StatementName":"OUTSCORELIB","StatementHelp":{"#cdata":"Syntax: OUTSCORELIB < OUTLIB= > fcmp-library-name options ;\n      \nThe OUTSCORELIB statement specifies the library to write scoring functions to. Scoring functions enable\nyou to easily compute a distribution function on the fitted parameters of the distribution without going\nthrough a potentially complex process of extracting the fitted parameter estimates from other output such as\nthe OUTEST= data set that is created by PROC SEVSELECT."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUTLIB=","StatementOptionHelp":{"#cdata":"Syntax: OUTLIB=fcmp-library-name\n          \nNames the FCMP library to contain the scoring functions. PROC SEVSELECT writes the scoring\nfunctions to the FCMP library named fcmp-library-name. If a library or data set named fcmp-libraryname\nalready exists, PROC SEVSELECT deletes it before proceeding"},"StatementOptionType":"RV"},{"StatementOptionName":"COMMONPACKAGE|ONEPACKAGE","StatementOptionHelp":{"#cdata":"Requests that only one common package be created to contain all the scoring functions."},"StatementOptionType":"S"},{"StatementOptionName":"OUTBYID=","StatementOptionHelp":{"#cdata":"Syntax: OUTBYID=SAS-data-set\n          \nNames the output data set to contain the unique identifier for each BY group. This unique identifier is\nused as part of the name of the package or scoring function for each distribution. This is a required\noption when you specify a BY statement in PROC SEVSELECT."},"StatementOptionType":"V"}]}},{"StatementName":"SCALEMODEL","StatementHelp":{"#cdata":"Syntax: SCALEMODEL regression-effect-list </ scalemodel-options>;\n\nThe SCALEMODEL statement specifies regression effects. A regression effect is formed from one or more \nregressor variables according to effect construction rules."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DFMIXTURE=","StatementOptionHelp":{"#cdata":"Syntax: DFMIXTURE=method-name < (method-options) >\n          \nSpecifies the method for computing representative estimates of the cumulative distribution function\n(CDF)."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"FULL","@Value2":"MEAN","@Value3":"QUANTILE","@Value4":"RANDOM"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the representative distribution be the mixture of N distributions such that each distribution has a scale value that is implied by each of the N observations that are used for estimation. This method is the slowest.","@ToolTip2":"Specifies that the representative distribution be the one-point mixture of the distribution whose scale value is the mean of the N scale values that are implied by the N observations that are used for estimation. If you do not specify the DFMIXTURE= option, then this method is used by default. This is also the fastest method.","@ToolTip3":"Syntax: QUANTILE < (K=q) > specifies that the representative distribution be the mixture of a fixed number of distributions whose scale values are the quantiles from the sample of N scale values that are implied by the N observations in the current BY group (or in the entire DATA= data set if the BY statement is not specified).   You can use the K= option to specify the number of distributions in the mixture. If you specify K=q, then the mixture contains (q - 1) distributions such that each distribution has as its scale one of the (q - 1)-quantiles.","@ToolTip4":"Syntax: RANDOM < (random-method-options) > specifies that the representative distribution be the mixture of a fixed number of distributions whose scale values are the scale values that are implied by a randomly chosen subset of the set of all observations in the current BY group (or in the entire DATA= data set if the BY statement is not specified). The same subset of observations is used for each distribution family. You can specify the following random-method-options to specify how the subset is chosen:    K=r     specifies the number of distributions to include in the mixture. If you do not specify this     option, then PROC SEVSELECT uses the default of 15.   SEED=number     specifies the seed that is used to generate the uniform random sample of observation indices.     If you do not specify this option, then PROC SEVSELECT generates a seed internally that     is based on the current value of the system clock."},"SubOptionsKeywords":"K=|SEED="},{"StatementOptionName":"INCLUDE=","StatementOptionHelp":{"#cdata":"Syntax: INCLUDE=n | INCLUDE=single-effect | INCLUDE=(effects) \n          \nForces effects to be included in all models. If you specify INCLUDE=n, then the first n effects that \nare listed in the SCALEMODEL statement are included in all models. If you specify INCLUDE=single-effect \nor INCLUDE=(single-effect), then the specified effects are forced into all models. The INCLUDE= option \nhas no effect if you do not specify the SELECTION statement."},"StatementOptionType":"V"},{"StatementOptionName":"INFORMATIVE","StatementOptionHelp":{"#cdata":"Models missing values by using extra model effects. These effects consist of dummy variables that take \nthe value 1 when the value of a continuous model variable involved in the effect is missing, and \ntake the value 0 otherwise. The missing value in the original model effect is replaced by the \naverage value of the effect for the nonmissing values."},"StatementOptionType":"S"},{"StatementOptionName":"OFFSET=","StatementOptionHelp":{"#cdata":"Syntax: OFFSET=offset-variable-name\n          \nSpecifies the name of the offset variable in the scale regression model. An offset variable is a regressor\nvariable whose regression coefficient is known to be 1."},"StatementOptionType":"V"},{"StatementOptionName":"START=","StatementOptionHelp":{"#cdata":"Syntax: START=n | START=single-effect | START=(effects) \n          \nSpecifies how to begin the selection process in the FORWARD, FORWARDSWAP, and STEPWISE selection \nmethods from the initial model that you designate. If you specify START=n, then the starting model \nconsists of the first n effects that are listed in the SCALEMODEL statement. If you specify \nSTART=single-effect or START=(single-effect), then the starting model consists of these specified \neffects."},"StatementOptionType":"V"}]}},{"StatementName":"SELECTION","StatementHelp":{"#cdata":"Syntax: SELECTION <METHOD=method<(method-options)>><options>;\n      \nThe SELECTION statement performs model selection by examining whether effects should be added to or\nremoved from the model according to rules that are defined by model selection methods."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"METHOD=|SELECTION=","StatementOptionHelp":{"#cdata":"Syntax: <METHOD=method < (method-options)\n          \nSpecifies the selection method to use."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BACKWARD","@Value2":"FORWARD","@Value3":"FORWARDSWAP","@Value4":"STEPWISE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the backward elimination method.","@ToolTip2":"Specifies the forward selection method.","@ToolTip3":"Specifies forward-swap selection, which is an extension of the forward selection method.","@ToolTip4":"specifies the stepwise regression method."},"SubOptionsKeywords":"ADAPTIVE|GAMMA=|FAST|LSCOEFFS|SLENTRY=|SLE=|SLSTAY=|SLS="},{"StatementOptionName":"ADAPTIVE","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n\nSyntax: ADAPTIVE <(GAMMA=nonnegative number)>\n\nApplies adaptive weights to each of the coefficients when METHOD=LASSO. Ordinary least squares \nestimates of the model parameters are used to form the adaptive weights. You use the GAMMA= option \nto specify the power transformation that is applied to the parameters in forming the adaptive weights. \nBy default, GAMMA=1."},"StatementOptionType":"S","SubOptionsKeywords":"GAMMA="},{"StatementOptionName":"CHOOSE=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: CHOOSE=criterion \n          \nChooses from the list of models (at each step of the selection process) the model that yields the best \nvalue of the specified criterion."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AIC","@Value2":"AICC","@Value3":"SBC"},"StatementOptionToolTips":{"@ToolTip1":"Specifies Akaike\u2019s information criterion.","@ToolTip2":"Specifies the corrected Akaike\u2019s information criterion.","@ToolTip3":"Specifies the Schwarz Bayesian information criterion."}},{"StatementOptionName":"COMPETITIVE","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nIs applicable as a method-option only when METHOD=STEPWISE. If you specify the COMPETITIVE option, \nthen the SELECT= criterion is evaluated for all models in which an effect currently in the model \nis dropped or an effect not yet in the model is added."},"StatementOptionType":"S"},{"StatementOptionName":"FAST","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nImplements the computational algorithm of Lawless and Singhal (1978) to compute a first-order \napproximation to the remaining slope estimates for each subsequent elimination of a variable \nfrom the model. When applied in backward selection, this option essentially leads to approximating \nthe selection process as the selection process of a linear regression model in which the crossproducts \nmatrix equals the Hessian matrix in the full model under consideration. This option is available only \nwhen METHOD=BACKWARD is specified. It is computationally efficient because the model is not fit after \nremoval of each effect."},"StatementOptionType":"S"},{"StatementOptionName":"LSCOEFFS","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nRequests a hybrid version of the LAR and LASSO methods, in which the sequence of models is determined \nby the LAR or LASSO algorithm but the coefficients of the parameters for the model at any step are \ndetermined by using ordinary least squares."},"StatementOptionType":"S"},{"StatementOptionName":"MAXEFFECTS=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: MAXEFFECTS=n \n\nSpecifies the maximum number of effects in any model that is considered during the selection process. \nThis option is ignored when METHOD=BACKWARD is specified."},"StatementOptionType":"V"},{"StatementOptionName":"MAXSTEPS=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: MAXSTEPS=n \n\nSpecifies the maximum number of selection steps that are performed. The default value of n is the \nnumber of effects in the SCALEMODEL or MODEL statement when METHOD=FORWARD or METHOD=BACKWARD."},"StatementOptionType":"V"},{"StatementOptionName":"MINEFFECTS=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: MINEFFECTS=n \n\nSpecifies the minimum number of effects in any model that is considered during backward selection. \nThis option is ignored unless METHOD=BACKWARD is specified."},"StatementOptionType":"V"},{"StatementOptionName":"SELECT=|CRITERION=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: SELECT=SL|criterion | CRITERION=SL|criterion\n          \nSpecifies the criterion that the procedure uses to determine the order in which effects enter or leave \nat each step of the selection method. For each step, the effect whose addition to or removal from the \ncurrent model yields the maximum improvement in the specified criterion is selected. You can use the \ntraditional significance-level approach by specifying the SL criterion; for other supported criteria, \nsee the chapter for the relevant procedure. This option is not valid when METHOD=LAR or METHOD=LASSO."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"AIC","@Value2":"AICC","@Value3":"SBC"},"StatementOptionToolTips":{"@ToolTip1":"Specifies Akaike\u2019s information criterion.","@ToolTip2":"Specifies the corrected Akaike\u2019s information criterion.","@ToolTip3":"Specifies the Schwarz Bayesian information criterion."}},{"StatementOptionName":"SLENTRY=|SLE=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: SLENTRY=value | SLE=value \n\nSpecifies the significance level for entry when STOP=SL or SELECT=SL. By default, SLENTRY=0.05."},"StatementOptionType":"V"},{"StatementOptionName":"SLSTAY=|SLS=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: SLSTAY=value | SLS=value \n\nSpecifies the significance level for staying in the model when STOP=SL or SELECT=SL. \n\nBy default, SLSTAY=0.05."},"StatementOptionType":"V"},{"StatementOptionName":"STOP=","StatementOptionHelp":{"#cdata":"[method-option to be enclosed in parenthesis]\n          \nSyntax: STOP=criterion \n          \nSpecifies a criterion that is used to stop the selection process."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"SL","@Value2":"NONE","@Value3":"<criterion>"},"StatementOptionToolTips":{"@ToolTip1":"Stops the selection process at the step where the significance level of the candidate for entry   is greater than the SLENTRY= value for addition steps when METHOD=FORWARD or METHOD=STEPWISE   and where the significance level of the candidate for removal is greater than the SLSTAY= value   when METHOD=BACKWARD or METHOD=STEPWISE.","@ToolTip2":"Stops the selection process if no suitable add or drop candidates can be found or if a size-based   limit is reached.","@ToolTip3":"Stops the selection process if the selection process produces a local extremum of this criterion   or if a size-based limit is reached. "}},{"StatementOptionName":"DETAILS=","StatementOptionHelp":{"#cdata":"Syntax: DETAILS=SUMMARY | STEPS | ALL | NONE\n          \nSpecifies the level of detail to be produced about the selection process. The default is DETAILS=\nSUMMARY."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"SUMMARY","@Value2":"STEPS","@Value3":"ALL","@Value4":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"Produces a summary table that shows the effect that is added or removed at each step along with the  criteria specified in the SELECT=, CHOOSE=, and STOP= method-options. The summary table is produced  by default if you do not specify the DETAILS= option.","@ToolTip2":"Syntax: DETAILS=STEPS<(CANDIDATES(ALL | n))>                                     Produces the preceding summary table and displays the results from fitting each model at each step. If you specify STEPS(CANDIDATES(n)), then the best n candidates are shown. If you specify  STEPS(CANDIDATES(ALL)), then all candidates are shown.","@ToolTip3":"Produces the preceding tables and a detailed listing of all candidates at each step along with their  ranking in terms of the selection criterion for addition to or removal from the model.","@ToolTip4":"Specifies that no details be produced about the selection process."},"SubOptionsKeywords":"CANDIDATES"},{"StatementOptionName":"HIERARCHY=","StatementOptionHelp":{"#cdata":"Syntax: HIERARCHY=NONE | SINGLE | SINGLECLASS\n          \nSpecifies whether and how the model hierarchy requirement is applied. You can specify that only classification\neffects, or both classification and continuous effects, be subject to the hierarchy requirement.\nThis option is ignored unless you also specify one of the following options: METHOD=FORWARD,\nMETHOD=BACKWARD, or METHOD=STEPWISE."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"SINGLE","@Value3":"SINGLECLASS"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that model hierarchy not be maintained. Any single effect can enter or leave the model at any step of the selection process.","@ToolTip2":"Specifies that only one effect enter or leave the model at one time, subject to the model  hierarchy requirement.","@ToolTip3":"Is the same as HIERARCHY=SINGLE except that only CLASS effects are subject to the hierarchy  requirement."}},{"StatementOptionName":"ORDERSELECT","StatementOptionHelp":{"#cdata":"Specifies that effects in the selected model are displayed in the order in which they first entered the\nmodel. If you do not specify the ORDERSELECT option, then effects in the selected model are\ndisplayed in the order in which they appear in the MODEL statement."},"StatementOptionType":"S"},{"StatementOptionName":"PLOT=|PLOTS=","StatementOptionHelp":{"#cdata":"Syntax: PLOT <(global-plot-options)> <= plot-request <(options)>> \nSyntax: PLOTS <(global-plot-options)> <= (plot-request <(options)> <\u2026plot-request <(options)>>)>\n\nControls the selection process plots that are produced through ODS Graphics. \n\nEach global-plot-option applies to all plots that the SELECTION statement generates, unless you \nalter the option by using a specific plot option that follows a plot-request. You can specify \nthe following global-plot-options:\n\nENDSTEP=n \nterminates the step ranges shown on the horizontal axes of plots at the specified step.\nLOGP | LOGPVALUE \nuses a logarithmic axis to display entry and removal significance levels. \nMAXPARMLABEL=n \nspecifies the maximum number of characters beyond which all parameter labels on the coefficient \nprogression panel and the coefficient progression plot are suppressed. By default, MAXPARMLABEL=20.\nMAXSTEPLABEL=n \nspecifies the maximum number of characters of effect labels to display on the horizontal axes \nof the plots. By default, MAXSTEPLABEL=20.\nSTARTSTEP=n \nspecifies that the step ranges shown on the horizontal axes of plots start at the specified step.\nSTEPAXIS=EFFECT | NORMB | NUMBER \nspecifies the horizontal axis to be used on the plots, where this axis represents the sequence \nof entering or departing effects.\nUNPACK | UNPACKPANEL suppresses paneling."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"ALL","@Value2":"COEFFICIENTS","@Value3":"CRITERIA","@Value4":"FITBYROLE ","@Value5":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"produces all relevant plots.","@ToolTip2":"Syntax: COEFFICIENTS | COEFFICIENTPANEL <(UNPACK | UNPACKPANEL)>                                       Creates a panel of two plots. The upper plot shows the progression of the parameter values as the  selection process proceeds. The lower plot shows the progression of the CHOOSE= criterion.","@ToolTip3":"Syntax: CRITERIA | CRITERIONPANEL <(UNPACK | UNPACKPANEL)>                                       Creates a panel of model fit criteria. If you specify the UNPACK option, then each criterion  progression is shown in a separate plot.","@ToolTip4":"Plots the progression of a fit statistic on the training, test, and validation data. The fit statistic  that is displayed depends on the type of model that is being fit. The fit by role plot is not  produced if you do not specify a PARTITION statement.","@ToolTip5":"Suppress all selection process plots, even if you specify other plot options."},"SubOptionsKeywords":"ENDSTEP=|LOGP|LOGPVALUE|MAXPARMLABEL=|MAXSTEPLABEL=|STARTSTEP=|STEPAXIS=|UNPACK|UNPACKPANEL"},{"StatementOptionName":"STOPHORIZON=","StatementOptionHelp":{"#cdata":"Syntax: STOPHORIZON=n\n          \nSpecifies the number of consecutive steps at which the STOP= criterion must worsen in order for a\nlocal extremum to be detected. The stop horizon value is ignored if you also specify STOP=NONE\nor STOP=SL. For example, suppose that STOP=AIC and the sequence of AIC values at steps 1 to 6\nof a selection are 10, 7, 4, 6, 5, 2. If STOPHORIZON=2, then the AIC criterion is deemed to have a\nlocal minimum at step 3 because the AIC value at the next two steps are greater than the value 4 that\noccurs at step 3. However, if STOPHORIZON=3, then the value at step 3 is not deemed to be a local\nminimum because the AIC value at step 6 is lower than the AIC value at step 3. When METHOD=LAR\nor METHOD=LASSO, n is ignored and STOPHORIZON=1 is used. By default, STOPHORIZON=3."},"StatementOptionType":"V"}],"#comment":{}}},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable-name ;\n      \nThe WEIGHT statement specifies the name of a variable whose values represent the weight of each \nobservation. PROC SEVSELECT associates a weight of w to each observation, where w is the value \nof the WEIGHT variable for the observation. If the weight value is missing or less than or equal \nto 0, then the observation is ignored and a warning is written to the SAS log. When the WEIGHT \nstatement is not specified, each observation is assigned a weight of 1. If you specify more than \none WEIGHT statement, then the last statement is used.\n\nThe weights are normalized so that they add up to the actual sample size."},"StatementOptions":null},{"StatementName":"ABORT","StatementHelp":{"#cdata":"Syntax: ABORT <ABEND | CANCEL <FILE> | RETURN | > <n> <NOLIST>; \n      \nStops executing the current DATA step, SAS job, or SAS session.\n\nn is an integer value that enables you to specify a condition code: \n    \n  o when used with the CANCEL argument, the value is placed in the SYSINFO automatic macro variable \n  o when not used with the CANCEL argument, the error code that is returned by SAS is ERROR. The value \n    of ERROR depends on the operating system. The condition code n is returned to the operating system \n    as the final SAS system exit code."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ABEND","StatementOptionHelp":{"#cdata":"Causes abnormal termination of the current SAS job or session. Results depend on the method \nof operation: \n\no batch mode and noninteractive mode \n\n  o stops processing immediately\n  o sends an error message to the SAS log that states that execution was terminated by the ABEND option \n    of the ABORT macro statement\n  o does not execute any subsequent statements or check syntax\n  o returns control to the operating environment; further action is based on how your operating environment \n    and your site treat jobs that end abnormally.\n\no windowing environment and interactive line mode \n\n  o causes your windowing environment and interactive line mode to stop processing immediately \n    and return you to your operating environment."},"StatementOptionType":"S"},{"StatementOptionName":"CANCEL","StatementOptionHelp":{"#cdata":"Causes the cancellation of the current submitted statements. The results depend on the method \nof operation:\n\no batch mode and noninteractive mode\n\n  o The entire SAS program and SAS system are terminated.\n  o The error message is written to the SAS log.\n\no windowing environment and interactive line mode \n\n  o It only clears the current submitted program.\n  o Other subsequent submitted programs are not affected.\n  o The error message is written to the SAS log.\n\no workspace server and stored process server \n\n  o It only clears currently submitted program.\n  o Other subsequent submit calls are not affected.\n  o The error message is written to the SAS log.\n\no SAS IntrNet application server \n\n  o A separate execution is created for each request. The execution submits the request code. A CANCEL \n    argument in the request code clears the current submitted code but does not terminate the execution \n    of the SAS session."},"StatementOptionType":"S"},{"StatementOptionName":"CANCEL FILE","StatementOptionHelp":{"#cdata":"Causes only the contents of the autoexec file or %INCLUDE file to be cleared by the %ABORT statement. \nOther submitted source statements will be executed after the autoexec or %INCLUDE file."},"StatementOptionType":"S"},{"StatementOptionName":"RETURN","StatementOptionHelp":{"#cdata":"Causes abnormal termination of the current SAS job or session. Results depend on the method \nof operation: \n\no batch mode and noninteractive mode \n\n  o stops processing immediately\n  o sends an error message to the SAS log that states that execution was terminated by the RETURN option \n    in the ABORT macro statement\n  o does not execute any subsequent statements or check syntax\n  o returns control to the operating environment with a condition code indicating an error.\n\no windowing environment and interactive line mode \n\n  o causes your windowing environment and interactive line mode to stop processing immediately \n    and return you to your operating environment."},"StatementOptionType":"S"},{"StatementOptionName":"&lt;n&gt;","StatementOptionHelp":{"#cdata":"Replace <n> with an actual integer value.\n        \nn is an integer value that enables you to specify a condition code: \n    \n  o when used with the CANCEL argument, the value is placed in the SYSINFO automatic macro variable \n  o when not used with the CANCEL argument, the error code that is returned by SAS is ERROR. The value \n    of ERROR depends on the operating system. The condition code n is returned to the operating system \n    as the final SAS system exit code."},"StatementOptionType":"S"},{"StatementOptionName":"NOLIST","StatementOptionHelp":{"#cdata":"Suppresses the output of all variables to the SAS log. \n    \nRequirement: NOLIST must be the last option in the ABORT statement."},"StatementOptionType":"S"}]}},{"StatementName":"ARRAY","StatementHelp":{"#cdata":"Syntax: ARRAY array-name { subscript } <$><length> \n  <array-elements> <(initial-value-list)>; \n  \nDefines the elements of an array."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Specifies all variables."},"StatementOptionType":"S"},{"StatementOptionName":"_TEMPORARY_","StatementOptionHelp":{"#cdata":"Creates a list of temporary data elements."},"StatementOptionType":"S"},{"StatementOptionName":"_NUMERIC_","StatementOptionHelp":{"#cdata":"Specifies all numeric variables."},"StatementOptionType":"S"},{"StatementOptionName":"_CHARACTER_","StatementOptionHelp":{"#cdata":"Specifies all character variables."},"StatementOptionType":"S"}]}},{"StatementName":"ATTRIB","StatementHelp":{"#cdata":"Syntax: ATTRIB variable-list(s) attribute-list(s) ; \n      \nAssociates a format, informat, label, and length with one or more variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"FORMAT=","StatementOptionHelp":{"#cdata":"[Syntax: FORMAT=format] \n          \nAssociates a format with variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"INFORMAT=","StatementOptionHelp":{"#cdata":"[Syntax: INFORMAT=informat] \n          \nAssociates an informat with variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"LABEL=","StatementOptionHelp":{"#cdata":"[Syntax: LABEL='label'] \n          \nAssociates a label with variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"LENGTH=","StatementOptionHelp":{"#cdata":"[Syntax: LENGTH=<$>length] \n          \nSpecifies the length of variables in a variable-list."},"StatementOptionType":"V"},{"StatementOptionName":"TRANSCODE=","StatementOptionHelp":{"#cdata":"Specifies whether character variables can be transcoded."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that character variables can be transcoded.","@ToolTip2":"Suppresses transcoding."}}]}},{"StatementName":"CALL","StatementHelp":{"#cdata":"Syntax: CALL routine(parameter-1<, ...parameter-n>); \n      \nInvokes a SAS CALL routine."},"StatementOptions":null},{"StatementName":"CONTINUE","StatementHelp":{"#cdata":"Syntax: CONTINUE; \n      \nStops processing the current DO-loop iteration and resumes processing the next iteration."},"StatementOptions":null},{"StatementName":"DELETE","StatementHelp":{"#cdata":"Syntax: DELETE; \n      \nStops processing the current observation."},"StatementOptions":null},{"StatementName":"DESCRIBE","StatementHelp":{"#cdata":"Syntax: DESCRIBE;\n      \nRetrieves source code from a stored compiled DATA step program or a DATA step view."},"StatementOptions":null},{"StatementName":"DO WHILE","StatementHelp":{"#cdata":"Executes statements in a DO-loop repetitively while a condition is true. \n          \nSyntax: \nDO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptions":null},{"StatementName":"DO UNTIL","StatementHelp":{"#cdata":"Executes statements in a DO loop repetitively until a condition is true.\n          \nSyntax: \nDO UNTIL (expression); \n...more SAS statements...  \nEND;"},"StatementOptions":null},{"StatementName":"DO","StatementHelp":{"#cdata":"Specifies a group of statements to be executed as a unit.\n      \nSyntax: \n(1) DO; \n...more SAS statements...  \nEND;  \n\n(2) DO index-variable=specification-1 <, ... specification-n>; \n... more SAS statements ...  \nEND;  \n\n(3) DO UNTIL (expression); \n...more SAS statements...  \nEND \n\n(4) DO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"UNTIL","StatementOptionHelp":{"#cdata":"Executes statements in a DO loop repetitively until a condition is true.\n          \nSyntax: \nDO UNTIL (expression); \n...more SAS statements...  \nEND"},"StatementOptionType":"S"},{"StatementOptionName":"WHILE","StatementOptionHelp":{"#cdata":"Executes statements in a DO-loop repetitively while a condition is true. \n          \nSyntax: \nDO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptionType":"S"},{"StatementOptionName":"OVER","StatementOptionType":"S"},{"StatementOptionName":"TO","StatementOptionHelp":{"#cdata":"Separates the start and stop integers or expressions that control the number of times the \nportion of the DATA step between the iterative DO and END statements is processed."},"StatementOptionType":"S"},{"StatementOptionName":"BY","StatementOptionHelp":{"#cdata":"Precedes an increment integer (other than 0) or an expression that generates an integer to be \nadded to the value of the index variable in each iteration of the DO loop."},"StatementOptionType":"S"}]}},{"StatementName":"DROP","StatementHelp":{"#cdata":"Syntax: DROP variable-list; \n      \nExcludes variables from output SAS data sets."},"StatementOptions":null},{"StatementName":"END","StatementHelp":{"#cdata":"Syntax: END; \n      \nEnds a DO group or SELECT group processing."},"StatementOptions":null},{"StatementName":"EXECUTE","StatementHelp":{"#cdata":"Syntax: EXECUTE;\n      \nExecutes a stored compiled DATA step program."},"StatementOptions":null},{"StatementName":"FILE","StatementHelp":{"#cdata":"Specifies the current output file for PUT statements.\n\nSyntax: \n(1) FILE file-specification <device-type> <options> <operating-environment-options>;      \n(2) FILE file-specification<ENCODING='encoding-value'><option-list> <host-option-list>; \n(3) FILE file-specification <type><ENCODING=encoding-value> <options>;  \n(4) FILE LOG | PRINT <options>;  \n\nwhere\n\nfile-specification \nidentifies an external file that the DATA step uses to write output from a PUT statement. \nFile-specification can have these forms: \n\n  'external-file' \n  specifies the physical name of an external file, which is enclosed in quotation marks. \n  The physical name is the name by which the operating environment recognizes the file.\n\n  fileref \n  specifies the fileref of an external file. \n\n  Requirement: You must have previously associated fileref with an external file in a FILENAME \n  statement or function, or in an appropriate operating environment command. There is only one \n  exception to this rule: when you use the FILEVAR= option, the fileref is simply a placeholder. \n\n  fileref(file) \n  specifies a fileref that is previously assigned to an external file that is an aggregate \n  grouping of files. Follow the fileref with the name of a file or member, which is enclosed \n  in parentheses.\n  \n  LOG \n  is a reserved fileref that directs the output that is produced by any PUT statements to the SAS log.\n  PRINT \n  is a reserved fileref that directs the output that is produced by any PUT statements to the same \n  file as the output that is produced by SAS procedures.\n\ndevice-type \nspecifies the type of device or the access method that is used if the fileref points to an input \nor output device or a location that is not a physical file: DISK, DUMMY, GTERM, PIPE, PLOTTER,\nPRINTER, TAPE, TEMP, TERMINAL, UPRINTER. type specifies the type of file in z/OS: DLI, HFS, MVS,\nPIPE, VSAM.\n\noperating-environment-options or host-options\nAdditional specifications might be required when you specify some devices. See the SAS documentation \nfor your operating environment before specifying a value other than DISK. Values in addition to the \nones listed here might be available in some operating environments."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"LOG","StatementOptionHelp":{"#cdata":"Is a reserved fileref that directs the output that is produced by any PUT statements to the SAS log."},"StatementOptionType":"S"},{"StatementOptionName":"DISK","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies that the device is a disk drive."},"StatementOptionType":"S"},{"StatementOptionName":"DUMMY","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies that the output to the file is discarded. Tip: Specifying DUMMY can be \nuseful for testing."},"StatementOptionType":"S"},{"StatementOptionName":"GTERM","StatementOptionHelp":{"#cdata":"[device-type] \n          \nIndicates that the output device type is a graphics device that will receive graphics data."},"StatementOptionType":"S"},{"StatementOptionName":"PIPE","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies an unnamed pipe. Note: Some operating environments do not support pipes."},"StatementOptionType":"S"},{"StatementOptionName":"PLOTTER","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies an unbuffered graphics output device."},"StatementOptionType":"S"},{"StatementOptionName":"PRINTER","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies a printer or printer spool file."},"StatementOptionType":"S"},{"StatementOptionName":"TAPE","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies a tape drive."},"StatementOptionType":"S"},{"StatementOptionName":"TEMP","StatementOptionHelp":{"#cdata":"[device-type] \n          \nCreates a temporary file that exists only as long as the filename is assigned. \n\nRestriction: Do not specify a physical pathname. If you do, SAS returns an error."},"StatementOptionType":"S"},{"StatementOptionName":"TERMINAL","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies the user's terminal."},"StatementOptionType":"S"},{"StatementOptionName":"UPRINTER","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies a Universal Printing printer definition name."},"StatementOptionType":"S"},{"StatementOptionName":"DLI","StatementOptionHelp":{"#cdata":"[type] \n          \nFor IMS-DL/I databases."},"StatementOptionType":"S"},{"StatementOptionName":"HFS","StatementOptionHelp":{"#cdata":"[type] \n          \nFor UNIX System Services files."},"StatementOptionType":"S"},{"StatementOptionName":"MVS","StatementOptionHelp":{"#cdata":"[type] \n          \nFor z/OS data sets."},"StatementOptionType":"S"},{"StatementOptionName":"VSAM","StatementOptionHelp":{"#cdata":"[type] \n          \nFor VSAM files."},"StatementOptionType":"S"},{"StatementOptionName":"COLUMN=|COL=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS automatically sets to the current column location of the pointer."},"StatementOptionType":"V"},{"StatementOptionName":"DELIMITER=|DLM=","StatementOptionHelp":{"#cdata":"Specifies an alternate delimiter (other than a blank) to be used for LIST output."},"StatementOptionType":"V"},{"StatementOptionName":"DLMSTR=","StatementOptionHelp":{"#cdata":"Specifies a character string as an alternate delimiter (other than a blank) to be used \nfor LIST output"},"StatementOptionType":"V"},{"StatementOptionName":"DLMSOPT=","StatementOptionHelp":{"#cdata":"Specifies a parsing option for the DLMSTR= T option that removes trailing blanks of the \nstring delimiter."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'T'"},"StatementOptionToolTips":{"@ToolTip1":"Removes trailing blanks of the string delimiter."}},{"StatementOptionName":"DROPOVER","StatementOptionHelp":{"#cdata":"Discards data items that exceed the output line length (as specified by the LINESIZE= \nor LRECL= options in the FILE statement)."},"StatementOptionType":"S"},{"StatementOptionName":"DSD","StatementOptionHelp":{"#cdata":"Specifies that data values that contain embedded delimiters, such as tabs or commas, \nbe enclosed in quotation marks."},"StatementOptionType":"S"},{"StatementOptionName":"ENCODING=","StatementOptionHelp":{"#cdata":"Specifies the encoding to use when writing to the output file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'warabic'","@Value2":"'wbaltic'","@Value3":"'wlatin2'","@Value4":"'wcyrillic'","@Value5":"'wgreek'","@Value6":"'whebrew'","@Value7":"'wturkish'","@Value8":"'wvietnamese'","@Value9":"'wlatin1'","@Value10":"'utf-8'","@Value11":"'ms-950'","@Value12":"'ms-936'","@Value13":"'ms-932'","@Value14":"'ms-949'"},"StatementOptionToolTips":{"@ToolTip1":"Arabic","@ToolTip2":"Baltic","@ToolTip3":"Central Europe","@ToolTip4":"Cyrillic","@ToolTip5":"Greek","@ToolTip6":"Hebrew","@ToolTip7":"Turkish","@ToolTip8":"Vietnamese","@ToolTip9":"Western","@ToolTip10":"Unicode encoding","@ToolTip11":"Traditional Chinese","@ToolTip12":"Simplified Chinese","@ToolTip13":"Japanese","@ToolTip14":"Korean"}},{"StatementOptionName":"FILENAME=","StatementOptionHelp":{"#cdata":"Defines a character variable, whose name you supply, that SAS sets to the value of the physical \nname of the file currently open for PUT statement output."},"StatementOptionType":"V"},{"StatementOptionName":"FILEVAR=","StatementOptionHelp":{"#cdata":"Defines a variable whose change in value causes the FILE statement to close the current output \nfile and open a new one the next time the FILE statement executes."},"StatementOptionType":"V"},{"StatementOptionName":"FLOWOVER","StatementOptionHelp":{"#cdata":"Causes data that exceeds the current line length to be written on a new line."},"StatementOptionType":"S"},{"StatementOptionName":"FOOTNOTES|FOOTNOTE","StatementOptionHelp":{"#cdata":"Specifies that the currently defined footnotes are printed."},"StatementOptionType":"S"},{"StatementOptionName":"NOFOOTNOTES|NOFOOTNOTE","StatementOptionHelp":{"#cdata":"Specifies that the currently defined footnotes are not printed."},"StatementOptionType":"S"},{"StatementOptionName":"HEADER=","StatementOptionHelp":{"#cdata":"Defines a statement label that identifies a group of SAS statements that you want to execute \neach time SAS begins a new output page"},"StatementOptionType":"V"},{"StatementOptionName":"LINE=","StatementOptionHelp":{"#cdata":"Defines a variable whose value is the current relative line number within the group of lines \navailable to the output pointer."},"StatementOptionType":"V"},{"StatementOptionName":"LINESIZE=|LS=","StatementOptionHelp":{"#cdata":"Sets the maximum number of columns per line for reports and the maximum record length for \ndata files."},"StatementOptionType":"V"},{"StatementOptionName":"LINESLEFT=|LL=","StatementOptionHelp":{"#cdata":"Defines a variable whose value is the number of lines left on the current page."},"StatementOptionType":"V"},{"StatementOptionName":"LRECL=","StatementOptionHelp":{"#cdata":"Specifies the logical record length of the output file."},"StatementOptionType":"V"},{"StatementOptionName":"MOD","StatementOptionHelp":{"#cdata":"Writes the output lines after any existing lines in the file."},"StatementOptionType":"S"},{"StatementOptionName":"N=","StatementOptionHelp":{"#cdata":"Specifies the number of lines that you want available to the output pointer in the current \niteration of the DATA step."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<n>","@Value2":"PAGESIZE|PS"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the number of lines that are available to the output pointer.  Replace n with an integer.","@ToolTip2":"Specifies that the entire page is available to the output pointer."}},{"StatementOptionName":"ODS=","StatementOptionHelp":{"#cdata":"[Syntax: ODS < = (ODS-suboptions) >] \n          \nSpecifies to use the Output Delivery System to format the output from a DATA step."},"StatementOptionType":"S|V"},{"StatementOptionName":"OLD","StatementOptionHelp":{"#cdata":"Replaces the previous contents of the file."},"StatementOptionType":"S"},{"StatementOptionName":"PAD","StatementOptionHelp":{"#cdata":"Specifies that records written to an external file are padded with blanks to the length that \nis specified in the LRECL= option."},"StatementOptionType":"S"},{"StatementOptionName":"NOPAD","StatementOptionHelp":{"#cdata":"Specifies that records written to an external file are not padded with blanks to the length \nthat is specified in the LRECL= option."},"StatementOptionType":"S"},{"StatementOptionName":"PAGESIZE=|PS=","StatementOptionHelp":{"#cdata":"[Syntax: PAGESIZE=value] \n          \nSets the number of lines per page for your reports."},"StatementOptionType":"V"},{"StatementOptionName":"PRINT","StatementOptionHelp":{"#cdata":"Either a reserved fileref that directs the output that is produced by any PUT statements to \nthe same file as the output that is produced by SAS procedures, or an option that specifies \nthat carriage-control characters are placed in the output lines."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Specifies that carriage-control characters are placed in the output lines."},"StatementOptionType":"S"},{"StatementOptionName":"STOPOVER","StatementOptionHelp":{"#cdata":"Stops processing the DATA step immediately if a PUT statement attempts to write \na data item that exceeds the current line length."},"StatementOptionType":"S"},{"StatementOptionName":"TITLES|TITLE","StatementOptionHelp":{"#cdata":"Specifies that the current title lines are printed on the pages of files."},"StatementOptionType":"S"},{"StatementOptionName":"NOTITLES|NOTITLE","StatementOptionHelp":{"#cdata":"Specifies that the current title lines are not printed on the pages of files."},"StatementOptionType":"S"},{"StatementOptionName":"_FILE_=","StatementOptionHelp":{"#cdata":"[Syntax: _FILE_=variable] \n          \nNames a character variable that references the current output buffer of this FILE statement."},"StatementOptionType":"V"},{"StatementOptionName":"BLKSIZE=|BLK=","StatementOptionHelp":{"#cdata":"[Syntax: BLKSIZE=block-size] \n          \n[Windows/UNIX Host Option]\n\nSpecifies the number of bytes that are physically read or written in an I/O operation. \nThe default is 8K. The maximum is 1M (Windows) or 1G-1(UNIX). \n\nIn UNIX, if you specify RECFM=S370VBS, then you should specify BLKSIZE=32760 in order \nto avoid errors with records longer than 255 characters."},"StatementOptionType":"V"},{"StatementOptionName":"BLOCK","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates whether the client \nis to wait if no data is currently available. BLOCK is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"NOBLOCK","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates whether the client \nis to wait if no data is currently available. BLOCK is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"BYTE","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates the type of pipe. \nBYTE is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"MESSAGE","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates the type of pipe. \nBYTE is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"COMMAND","StatementOptionHelp":{"#cdata":"[Windows Host Option]\n        \nAllows remote commands to be issued to DDE server applications that not use the \nSYSTEM topic name."},"StatementOptionType":"S"},{"StatementOptionName":"EOFCONNECT","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes and is valid only when you are defining \nthe server. This option indicates that if an end-of-file (EOF) character is \nreceived from a client, the server should try to connect to the next client."},"StatementOptionType":"S"},{"StatementOptionName":"HOTLINK","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nInstructs SAS to use the DDE HOTLINK."},"StatementOptionType":"S"},{"StatementOptionName":"NOTAB","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nInstructs SAS to ignore tab characters between variables."},"StatementOptionType":"S"},{"StatementOptionName":"IGNOREDOSEOF","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used in the context of I/O operations on variable record format files. When this \noption is specified, any occurrence of ^Z is interpreted as character data and \nnot as an end-of-file marker."},"StatementOptionType":"S"},{"StatementOptionName":"RECFM=","StatementOptionHelp":{"#cdata":"[Windows/UNIX/z/OS Host Option] \n        \nSpecifies the record format of the external file. \n\nUnder z/OS, the following values can be appended to the RECFM values: \n\n  o A specifies that the first byte of each record is an ANSI printer-control character.\n \n  o M specifies that the file is a machine control character file. SAS does not interpret \n    machine code control characters, nor does it create them in output files. \n \n  o S specifies that the file contains spanned records (V), or the file contains standard blocks (F)."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"F","@Value2":"P","@Value3":"S","@Value4":"V|D","@Value5":"N","@Value6":"s370V","@Value7":"S370VB","@Value8":"S370VBS","@Value9":"STREAMLF","@Value10":"FB","@Value11":"VB","@Value12":"U"},"StatementOptionToolTips":{"@ToolTip1":"Fixed-record format","@ToolTip2":"Print format.","@ToolTip3":"Stream-record format.","@ToolTip4":"Variable-record format (the default)","@ToolTip5":"Indicates binary format and causes the file to be treated as a byte stream. If LRECL is not specified,  by default SAS reads 256 bytes at a time from the file.","@ToolTip6":"Indicates the variable S370 record format (V).","@ToolTip7":"Indicates the variable block S370 record format (VB).","@ToolTip8":"Indicates the variable block with spanned records S370 record format (VBS).","@ToolTip9":"[For OpenVMS] Specifies StreamLF record format. Records are delimited by LF.","@ToolTip10":"Specifies fixed-length records, blocked.","@ToolTip11":"Specifies variable-length records, blocked.","@ToolTip12":"Specifies undefined-length records, unblocked."}},{"StatementOptionName":"RETRY=","StatementOptionHelp":{"#cdata":"[Syntax: RETRY=seconds] \n        \n[Windows Host Option]\n\nIs used only in the context of named pipes. This option specifies how long a named \npipe client should wait for a busy pipe. The minimum (and default) value for seconds \nis 10."},"StatementOptionType":"V"},{"StatementOptionName":"SERVER","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes. This option specifies the mode of a \nnamed pipe. The default value is SERVER."},"StatementOptionType":"S"},{"StatementOptionName":"CLIENT","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes. This option specifies the mode of a \nnamed pipe. The default value is SERVER."},"StatementOptionType":"S"},{"StatementOptionName":"TERMSTR=","StatementOptionHelp":{"#cdata":"[Windows/UNIX Host Option] \n        \nSpecifies the end-of-line character for the file. Use this option to share files \nbetween the UNIX and Windows operating environments."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CR","@Value2":"CRLF","@Value3":"LF","@Value4":"NULL","@Value5":"NONE","@Value6":"NL","@Value7":"LFCR","@Value8":"CRNL"},"StatementOptionToolTips":{"@ToolTip1":"Carriage return (CR).","@ToolTip2":"Carriage return (CR) followed by line feed (LF).","@ToolTip3":"Line feed only (the default).","@ToolTip4":"NULL character (0x00).","@ToolTip5":"Record terminators are not used. This parameter provides the same function as FILEDATA=BINARY.","@ToolTip6":"The newline character (x'15') is used as the record terminator. This parameter  provides the same function as FILEDATA=TEXT.","@ToolTip7":"The sequence LF followed by CR is used as the record terminator.","@ToolTip8":"The sequence CR followed by NL is used as the record terminator."}},{"StatementOptionName":"UNBUF","StatementOptionHelp":{"#cdata":"[UNIX Host Option] \n  \nTells SAS not to perform buffered writes to the file on any subsequent FILE statement. \nThis option applies especially when you are reading from or writing to a data collection \ndevice. As explained in SAS Language Reference: Dictionary, it also prevents buffered \nreads on INFILE statements."},"StatementOptionType":"S"},{"StatementOptionName":"ALQ=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the number of blocks initially allocated to an external file when it is created. \nThe value can range from 0 to 2,147,483,647. If the value is 0 (the default), the minimum \nnumber of blocks required for the given file format is used.\n\nThe ALQ= option (allocation quantity) is used for output and corresponds to the FAB$L_ALQ \nfield in OpenVMS Record Management Services (RMS)."},"StatementOptionType":"V"},{"StatementOptionName":"CC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option] \n  \nSpecifies the carriage-control format of the SAS log and the procedure output file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"FORTRAN","@Value2":"PRINT","@Value3":"CR"},"StatementOptionToolTips":{"@ToolTip1":"Indicates FORTRAN carriage-control format. This is the default for print files.","@ToolTip2":"Indicates OpenVMS print format.","@ToolTip3":"Indicates OpenVMS carriage-return, carriage-control format. This is the default  for nonprinting files."}},{"StatementOptionName":"DEQ=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the number of blocks added when OpenVMS RMS automatically extends an external \nfile during a write operation. The value can range from 0 to 65,535. The default value \nis 0, telling OpenVMS RMS to use the process's default value. A large value results in \nfewer file extensions over the life of the file; a small value results in numerous file \nextensions over the life of the file. A file with numerous file extensions might be \nnoncontiguous, thereby slowing record access.\n\nThe DEQ= option (default file extension quantity) is used for output and corresponds to \nthe FAB$W_DEQ field in OpenVMS RMS."},"StatementOptionType":"V"},{"StatementOptionName":"FAC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nOverrides the default file access attributes used for external files. Use this option \nto indicate the level of access you want to allow for an external file. You can allow \nREAD, WRITE, UPDATE, and DELETE access (as well as no access). By default with external \nfiles, files opened for input allow read access, files opened for output allow WRITE \naccess, and files opened for update allow READ and WRITE access. The form of the FAC= \noption is \n\nFAC=access-option-list\n\nwhere access-option-list can be one of the following: \n\nDEL specifies DELETE access.\n \nGET specifies READ access.\n \nPUT specifies WRITE access.\n \nUPD specifies UPDATE access. \n\nYou can combine these values in any order. For example, specifying the following indicates \nthat you want DELETE, READ, and WRITE access: \n\nfac=(del,get,put)"},"StatementOptionType":"V"},{"StatementOptionName":"GSFCC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option] \n  \nSpecifies the file format of graphic stream files (GSF files). When specified in \nthe FILENAME statement, it affects only the GSF files that are created using that \nfileref."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"PRINT","@Value2":"CR","@Value3":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"Creates a GSF file. It is a VFC format file with carriage control set to null. These  files can be used with most utilities with the exception of some file transfer  protocols, such as Kermit. This is the default value for this option.","@ToolTip2":"Creates a carriage return carriage control file.","@ToolTip3":"Creates a file with no carriage control. This format is useful if you plan to download  the file to a personal computer."}},{"StatementOptionName":"KEY=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies which key SAS uses to read the records in an RMS file with indexed organization. \nThe KEY= option is always used with the KEYVALUE= option. "},"StatementOptionType":"V"},{"StatementOptionName":"KEYVALUE=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the key value with which to begin reading an indexed file. "},"StatementOptionType":"V"},{"StatementOptionName":"MBC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the size of the I/O buffers that OpenVMS RMS allocates for a particular file. \nThe value can range from 0 to 127 and represents the number of blocks used for each buffer. \nBy default, this option is set to 0 and the default values for the process are used.\n\nThe MBC= option (multiblock count) is used for both input and output to control the \nallocation for a particular file. If you want to control the allocation size for all \nthe external files used during the current SAS session, you can use the MBC= option in \nevery FILE, FILENAME, or INFILE statement. You can also use the DCL SET RMS_DEFAULT \ncommand to specify a process default, and let the SAS values default to the process's \ndefault values.\n\nThe MBC= option corresponds to the RAB$B_MBC field in OpenVMS RMS or the CONNECT \nMULTIBLOCK_COUNT attribute when using FDL. This option is not supported for DECnet \noperations."},"StatementOptionType":"V"},{"StatementOptionName":"MBF=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the number of I/O buffers you want OpenVMS RMS to allocate for a particular file. \nThe value can range from 0 to 127 and represents the number of buffers used. By default, \nthis option is set to a value of 2. If a value of 0 is specified, the default value for the \nprocess is used.\n\nThe MBF= option (multibuffer count) is used for both input and output to control the number \nof buffers allocated for a particular file. If you want to control the number of buffers \nallocated for all the external files used during the SAS session, you can use the MBF= \noption in every FILE, FILENAME, or INFILE statement. The DCL SET RMS_DEFAULT command can \nbe used to specify a process default. Then, you can let the SAS values default to the \nprocess's default values.\n\nThe MBF= option corresponds to the RAB$B_MBF field in OpenVMS RMS or the CONNECT MULTIBUFFER_COUNT \nattribute when using FDL. This option is not supported for DECnet operations."},"StatementOptionType":"V"},{"StatementOptionName":"SHR=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nOverrides the default file-sharing attributes used for external files. With this option, \nyou can indicate the access level you want to give other users. You can allow READ, WRITE, \nUPDATE, and DELETE access (as well as no access). By default with external files, files \nopened for input allow shared read access, and files opened for output or UPDATE do not \nallow shared access.\n\nHowever, you can allow other users to have READ and WRITE access to a file that you are \nopening for input only. To accomplish this, use the SHR= option. The syntax of the SHR= \noption is \n\nSHR=share-option-list\n\nwhere share-option-list can be one of the following: DEL specifies DELETE access.\n\nGET specifies shared READ access.\n \nNONE specifies no shared access.\n \nPUT specifies shared WRITE access.\n \nUPD specifies UPDATE access.  \n\nYou can combine these values in any order. For example, specifying the following indicates \nthat you want shared DELETE, READ, and WRITE access: \n\nshr=(del,get,put)"},"StatementOptionType":"V"},{"StatementOptionName":"CLOSE=","StatementOptionHelp":{"#cdata":"[z/OS Host Option] \n  \nIndicates how a tape volume is positioned at the end of the DATA step."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"REREAD","@Value2":"LEAVE","@Value3":"REWIND","@Value4":"FREE","@Value5":"DISP"},"StatementOptionToolTips":{"@ToolTip1":"Positions the tape at the logical beginning of the data set.","@ToolTip2":"Positions the tape at the logical end of the data set.","@ToolTip3":"Rewinds the tape to the physical beginning of the volume.","@ToolTip4":"Dynamically deallocates the tape volume.","@ToolTip5":"Is implied by the control language."}},{"StatementOptionName":"CSRC","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies that you want to use the CSRCESRV services (available with z/OS) to compress \ndata on output. For example: \n\n  data _null_;\n     file myfile csrc;\n     put ... ;\n  run;\n\nYou cannot use this option with an external file that has a fixed-length record format."},"StatementOptionType":"S"},{"StatementOptionName":"DCB=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: DCB=fileref \n\nspecifies the fileref of an external file that was referenced in an earlier FILE or \nINFILE statement in the same DATA step. SAS uses that file's RECFM=, LRECL=, and BLKSIZE= \ninformation for the current file."},"StatementOptionType":"V"},{"StatementOptionName":"DEVTYPE=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: DEVTYPE=variable \n\nDefines a character variable (minimum length 24) that SAS sets to the device type. \nSAS obtains the device type by using the z/OS operating environment DEVTYPE macro."},"StatementOptionType":"V"},{"StatementOptionName":"DSCB=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: DSCB=variable \n\nDefines a character variable (minimum length 96) that SAS sets to the Data Set Control \nBlock (DSCB) information from a non-VSAM data set."},"StatementOptionType":"V"},{"StatementOptionName":"JFCB=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: JFCB=variable \n\nDefines a character variable (minimum length 176) that SAS sets to the Job File \nControl Block (JFCB)."},"StatementOptionType":"V"},{"StatementOptionName":"UCBNAME=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: UCBNAME=variable \n\nDefines a character variable (minimum length 3) that SAS sets to the unit name \n(device address), which is derived from information in the unit control block (UCB)."},"StatementOptionType":"V"},{"StatementOptionName":"VOLUME=|VOLUMES=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: VOLUME=variable | VOLUMES=variable \n\nDefines a character variable (with a minimum length of six characters) that SAS sets \nto the tape VOLSER or the disk volume serial number. In the case of a multivolume file, \nthe VOLUME= variable contains the concatenated volume serial numbers up to the length \nof the variable or the first 30 volumes, whichever is less. The value in the VOLUME= \nvariable contains the volume serial number of the first data set in the concatenation \nwhen the file is opened. This serial number changes if you open a subsequent data set \nin the concatenation."},"StatementOptionType":"V"},{"StatementOptionName":"BOM|BOMFILE","StatementOptionHelp":{"#cdata":"[UNIX/z/OS Host Option]\n    \nIncludes a Byte Order Mark when a UNICODE-encoded file is created."},"StatementOptionType":"S"},{"StatementOptionName":"NOBOM|NOBOMFILE","StatementOptionHelp":{"#cdata":"[UNIX/z/OS Host Option]\n    \nSpecifies that a Byte Order Mark is not included when a UNICODE-encoded file is created."},"StatementOptionType":"S"},{"StatementOptionName":"FILEDATA=","StatementOptionHelp":{"#cdata":"[UNIX/z/OS Host Option] \n    \nThe FILEDATA= option specifies that the file being processed is expected to contain \neither binary or text data."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BINARY","@Value2":"TEXT"},"StatementOptionToolTips":{"@ToolTip1":"The FILEDATA= option specifies that the file being processed is expected to contain  binary data.","@ToolTip2":"The FILEDATA= option specifies that the file being processed is expected to contain  text data."}},{"StatementOptionName":"BUFND=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: BUFND=value \n\nIndicates how many data buffers to use for the VSAM data set."},"StatementOptionType":"V"},{"StatementOptionName":"BUFNI=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: BUFNI=value \n\nIndicates how many index buffers to use for the VSAM data set."},"StatementOptionType":"V"},{"StatementOptionName":"FEEDBACK=|FDBK=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: FEEDBACK=variable | FDBK=variable \n\nDefines a numeric variable that SAS sets to the VSAM logical error code. This option \nis similar to the _FDBK_ automatic variable. When SAS sets the FEEDBACK variable, you \nmust reset it to 0 in order to continue."},"StatementOptionType":"V"},{"StatementOptionName":"KEYLEN=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: KEYLEN=variable \n\nSpecifies a numeric SAS variable that, when used with GENKEY, specifies the length \nof the key that is to be compared to the keys in the file."},"StatementOptionType":"V"},{"StatementOptionName":"KEYPOS=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: KEYPOS=variable \n\nIndicates the numeric variable that SAS sets to the position of the VSAM key field. \nThis option enables you to read keys without knowing the key position in advance. \nThis variable is set to the column number (starting from 1)."},"StatementOptionType":"V"},{"StatementOptionName":"PASSWD=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: PASSWD=value \n\nGives the appropriate password for a VSAM data set that has password protection."},"StatementOptionType":"V"},{"StatementOptionName":"RC4STOP","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nStops the DATA step from executing if a return code greater than 4 is returned by \nthe operating environment when the VSAM data set is opened."},"StatementOptionType":"S"},{"StatementOptionName":"RECORDS=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: RECORDS=variable \n\nDefines a numeric variable that SAS sets to the number of logical records in a \nVSAM data set that has been opened for input."},"StatementOptionType":"V"},{"StatementOptionName":"RECORG=","StatementOptionHelp":{"#cdata":"[z/OS Host Option] \n  \nSpecifies the organization of records in a new VSAM data set. Use this option only \nif SMS is active."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"KS","@Value2":"ES","@Value3":"RR","@Value4":"LS"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a VSAM key-sequenced data set.","@ToolTip2":"Specifies a VSAM entry-sequenced data set.","@ToolTip3":"Specifies a VSAM relative-record data set.","@ToolTip4":"Specifies a VSAM linear-space data set."}},{"StatementOptionName":"RESET","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nIndicates that the VSAM file is reset to empty (no records) when it is opened. \nThis option applies only to loading a VSAM data set that has been marked REUSE. \nYou cannot use this option if the data set contains an alternate index."},"StatementOptionType":"S"},{"StatementOptionName":"RRN=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: RRN=variable \n\nDefines a numeric variable that you set to the relative record number (RRN) of the \nrecord that you want to read or write. This option indicates that keyed direct access \nis being used; it is appropriate for RRDS only."},"StatementOptionType":"V"}],"#comment":[{},{},{}]}},{"StatementName":"FORMAT","StatementHelp":{"#cdata":"Associates formats with variables.\n      \nSyntax: \n(1) FORMAT variable-1 <... variable-n> <format> <DEFAULT=default-format>;  \n(2) FORMAT variable-1 <... variable-n> format <DEFAULT=default-format>;  \n(3) FORMAT variable-1 <... variable-n> format variable-1 <... variable-n> format;"},"StatementOptions":{"StatementOption":{"StatementOptionName":"DEFAULT=","StatementOptionHelp":{"#cdata":"[Syntax: DEFAULT=default-format] \n          \nSpecifies a temporary default format for displaying the values of variables that are \nnot listed in the FORMAT statement. These default formats apply only to the current DATA \nstep; they are not permanently associated with variables in the output data set.\n\nA DEFAULT= format specification applies to\n\n  o variables that are not named in a FORMAT or ATTRIB statement \n  o variables that are not permanently associated with a format within a SAS data set \n  o variables that are not written with the explicit use of a format. \n\nDefault: If you omit DEFAULT=, SAS uses BESTw. as the default numeric format and $w. \nas the default character format. \n\nRestriction: Use this option only in a DATA step.  \n\nTip: A DEFAULT= specification can occur anywhere in a FORMAT statement. It can specify \neither a numeric default, a character default, or both."},"StatementOptionType":"V"}}},{"StatementName":"GO TO|GOTO","StatementHelp":{"#cdata":"Syntax: GO TO label | GOTO label;\n      \nJumps to a new statement."},"StatementOptions":null},{"StatementName":"IF","StatementHelp":{"#cdata":"Executes a SAS statement for observations that meet specific conditions. \n\nSyntax: \n(1) IF expression THEN statement; \n    <ELSE statement;> \n(2) IF condition;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"THEN","StatementOptionHelp":{"#cdata":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS \nstatement for observations that are read from a SAS data set, for records in an external file, or \nfor computed values."},"StatementOptionType":"S"},{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"WHEN","StatementOptionHelp":{"#cdata":"WHEN statement in an IF-THEN-WHEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"OUTPUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"GO TO|GOTO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nSyntax: ... GO TO label; | ... GOTO label;\n      \nJumps to a new statement."},"StatementOptionType":"S"},{"StatementOptionName":"PUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"STOP","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nStops execution of the current DATA step."},"StatementOptionType":"S"},{"StatementOptionName":"RETURN","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nStops executing statements at the current point in the DATA step and returns to \na predetermined point in the step. "},"StatementOptionType":"S"},{"StatementOptionName":"CALL","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nSyntax: CALL routine(parameter-1<, ...parameter-n>); \n      \nInvokes a SAS CALL routine."},"StatementOptionType":"S"},{"StatementOptionName":"SET","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct.\n          \nSyntax: SET <SAS-data-set(s) <(data-set-options(s) )>>; \n      \nReads an observation from one or more SAS data sets."},"StatementOptionType":"S"},{"StatementOptionName":"NOT","StatementOptionType":"S"},{"StatementOptionName":"OR","StatementOptionType":"S"},{"StatementOptionName":"AND","StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"ELSE","StatementHelp":{"#cdata":"If the condition in an IF-THEN statement is false and an ELSE statement is present, \nthen the ELSE action is carried out."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"THEN","StatementOptionHelp":{"#cdata":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS \nstatement for observations that are read from a SAS data set, for records in an external file, or \nfor computed values."},"StatementOptionType":"S"},{"StatementOptionName":"IF","StatementOptionHelp":{"#cdata":"Executes a SAS statement for observations that meet specific conditions."},"StatementOptionType":"S"},{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN-ELSE construct."},"StatementOptionType":"S"},{"StatementOptionName":"OUTPUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN-ELSE construct."},"StatementOptionType":"S"},{"StatementOptionName":"NOT","StatementOptionType":"S"},{"StatementOptionName":"OR","StatementOptionType":"S"},{"StatementOptionName":"AND","StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"ERROR","StatementHelp":{"#cdata":"Syntax: ERROR <message>; \n      \nSets _ERROR_ to 1. A message written to the SAS log is optional."},"StatementOptions":null},{"StatementName":"INFILE","StatementHelp":{"#cdata":"Specifies an external file to read with an INPUT statement. \n      \nSyntax: \n(1) INFILE file-specification <device-type><ENCODING=encoding-value> <options>;  \n(2) INFILE file-specification <device-type> <options> <operating-environment-options>; \n(3) INFILE file-specification <ENCODING='encoding-value'><options> <host-options>; \n(4) INFILE DBMS-specifications; \n(5) INFILE DATALINES | CARDS <options>;  \n\nfile-specification \nidentifies a file in one of the following forms: \n\n  fileref \n  specifies the assigned fileref or the allocated ddname of the file. A fileref must \n  conform to the rules for ddnames. That is, it can consist of up to eight letters, \n  numbers, or national characters ($, @, and #) and underscores (_). The first character \n  must be either a letter or a national character.\n\n  fileref(member) \n  specifies a member of a partitioned data set, where the PDS or PDSE is specified by \n  the assigned fileref or allocated ddname.\n\n  If you specify a fileref that is not allocated, then SAS attempts to construct a data \n  set name with the following three qualifiers: \n\n    o the value of the SYSPREF= option (usually the user ID) \n    o the specified fileref \n    o DATA\n\n    If a file is found that has this constructed data set name, then SAS opens it and reads it. \n    The value of the FILEEXT= system option can affect the way SAS interprets PDS and PDSE member names. \n\n  'physical-filename' \n  specifies a physical file, which can be a member of a partitioned data set (PDS), an extended \n  partitioned data set (PDSE), or a UNIX System Services file, using the following syntax:\n\n    o a fully qualified data set name. For example: 'myid.raw.datax'\n    o a fully qualified data set name with a member in parentheses. For example: 'sas.raw.data(mem1)'\n    o a partially qualified data set name with a period preceding it. For example: '.raw.data'\n    o a partially qualified data set name with a period preceding it and a member name in parentheses. \n      For example: '.raw.data(mem1)'\n    o for PDS members, a fully or partially qualified data set name with a wildcard name in parentheses. \n      For example: '.raw.data(mem*)', '.raw.data(*mem1)', '.raw.data(*)'\n    o a UNIX System Services file. For example: '/u/userid/raw' or 'HFS:raw' or '/u/userid/data/*'"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DATALINES|CARDS","StatementOptionHelp":{"#cdata":"Specifies that the input data immediately follows the DATALINES|CARDS statement in the DATA step. \nUsing DATALINES|CARDS allows you to use the INFILE statement options to control how the INPUT \nstatement reads instream data lines."},"StatementOptionType":"S"},{"StatementOptionName":"DATALINES4|CARDS4","StatementOptionHelp":{"#cdata":"Specifies that the input data immediately follows the DATALINES4|CARDS4 statement in the DATA step. \nUsing DATALINES4|CARDS4 allows you to use the INFILE statement options to control how the INPUT \nstatement reads instream data lines."},"StatementOptionType":"S"},{"StatementOptionName":"DISK","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies that the device is a disk drive."},"StatementOptionType":"S"},{"StatementOptionName":"DUMMY","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies that the output to the file is discarded. Tip: Specifying DUMMY can be \nuseful for testing."},"StatementOptionType":"S"},{"StatementOptionName":"GTERM","StatementOptionHelp":{"#cdata":"[device-type] \n          \nIndicates that the output device type is a graphics device that will receive graphics data."},"StatementOptionType":"S"},{"StatementOptionName":"PIPE","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies an unnamed pipe. Note: Some operating environments do not support pipes."},"StatementOptionType":"S"},{"StatementOptionName":"PLOTTER","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies an unbuffered graphics output device."},"StatementOptionType":"S"},{"StatementOptionName":"PRINTER","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies a printer or printer spool file."},"StatementOptionType":"S"},{"StatementOptionName":"TAPE","StatementOptionHelp":{"#cdata":"[device-type] Specifies a tape drive."},"StatementOptionType":"S"},{"StatementOptionName":"TEMP","StatementOptionHelp":{"#cdata":"[device-type] \n          \nCreates a temporary file that exists only as long as the filename is assigned. \n\nRestriction: Do not specify a physical pathname. If you do, SAS returns an error."},"StatementOptionType":"S"},{"StatementOptionName":"TERMINAL","StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies the user's terminal."},"StatementOptionType":"S"},{"StatementOptionName":"UPRINTER","StatementOptionType":["S","S"],"StatementOptionHelp":{"#cdata":"[device-type] \n          \nSpecifies a Universal Printing printer definition StatementOptionName."}},{"StatementOptionName":"DLI","StatementOptionHelp":{"#cdata":"[type] \n          \nFor IMS-DL/I databases."},"StatementOptionType":"S"},{"StatementOptionName":"HFS","StatementOptionHelp":{"#cdata":"[type] \n          \nFor UNIX System Services files."},"StatementOptionType":"S"},{"StatementOptionName":"MVS","StatementOptionHelp":{"#cdata":"[type] \n          \nFor z/OS data sets."},"StatementOptionType":"S"},{"StatementOptionName":"VSAM","StatementOptionHelp":{"#cdata":"[type] \n          \nFor VSAM files."},"StatementOptionType":"S"},{"StatementOptionName":"IDMS","StatementOptionHelp":{"#cdata":"[type] \n          \nFor CA-IDMS files."},"StatementOptionType":"S"},{"StatementOptionName":"ISAM","StatementOptionHelp":{"#cdata":"[type] \n          \nFor ISAM files."},"StatementOptionType":"S"},{"StatementOptionName":"VTOC","StatementOptionHelp":{"#cdata":"[type] \n          \nFor a Volume Table of Contents (VTOC)."},"StatementOptionType":"S"},{"StatementOptionName":"COLUMN=|COL=","StatementOptionHelp":{"#cdata":"Names a variable that SAS uses to assign the current column location of the input pointer. \nLike automatic variables, the COLUMN= variable is not written to the data set."},"StatementOptionType":"V"},{"StatementOptionName":"DELIMITER=|DLM=","StatementOptionHelp":{"#cdata":"Specifies an alternate delimiter (other than a blank) to be used for LIST input."},"StatementOptionType":"V"},{"StatementOptionName":"DLMSTR=","StatementOptionHelp":{"#cdata":"Specifies a character string as an alternate delimiter (other than a blank) to be \nused for LIST input"},"StatementOptionType":"V"},{"StatementOptionName":"DLMSOPT=","StatementOptionHelp":{"#cdata":"Specifies whether case-insensitive comparisons will be done, or trailing blanks of the string \ndelimiter will be removed."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'I'","@Value2":"'T'"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that case-insensitive comparisons will be done.","@ToolTip2":"Specifies that trailing blanks of the string delimiter will be removed."}},{"StatementOptionName":"DSD","StatementOptionHelp":{"#cdata":"Specifies that when data values are enclosed in quotation marks, delimiters within the value \nare treated as character data. The DSD option changes how SAS treats delimiters when you use \nLIST input and sets the default delimiter to a comma. When you specify DSD, SAS treats two \nconsecutive delimiters as a missing value and removes quotation marks from character values."},"StatementOptionType":"S"},{"StatementOptionName":"ENCODING=","StatementOptionHelp":{"#cdata":"Specifies the encoding to use when reading from the external file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"'warabic'","@Value2":"'wbaltic'","@Value3":"'wlatin2'","@Value4":"'wcyrillic'","@Value5":"'wgreek'","@Value6":"'whebrew'","@Value7":"'wturkish'","@Value8":"'wvietnamese'","@Value9":"'wlatin1'","@Value10":"'utf-8'","@Value11":"'ms-950'","@Value12":"'ms-936'","@Value13":"'ms-932'","@Value14":"'ms-949'"},"StatementOptionToolTips":{"@ToolTip1":"Arabic","@ToolTip2":"Baltic","@ToolTip3":"Central Europe","@ToolTip4":"Cyrillic","@ToolTip5":"Greek","@ToolTip6":"Hebrew","@ToolTip7":"Turkish","@ToolTip8":"Vietnamese","@ToolTip9":"Western","@ToolTip10":"Unicode encoding","@ToolTip11":"Traditional Chinese","@ToolTip12":"Simplified Chinese","@ToolTip13":"Japanese","@ToolTip14":"Korean"}},{"StatementOptionName":"END=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS sets to 1 when the current input data record is the last in \n the input file. Until SAS processes the last data record, the END= variable is set to 0. \n Like automatic variables, this variable is not written to the data set. \n \n Restriction: You cannot use the END= option with UNBUFFERED option, DATALINES or DATALINES4 \n statement, and an INPUT statement that reads multiple input data records."},"StatementOptionType":"V"},{"StatementOptionName":"EOF=","StatementOptionHelp":{"#cdata":"Specifies a statement label that is the object of an implicit GO TO when the INFILE statement \nreaches end of file."},"StatementOptionType":"V"},{"StatementOptionName":"EOV=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS sets to 1 when the first record in a file in a series of \nconcatenated files is read."},"StatementOptionType":"V"},{"StatementOptionName":"EXPANDTABS","StatementOptionHelp":{"#cdata":"Specifies to expand tab characters to the standard tab setting, which is set at 8-column \nintervals that start at column 9."},"StatementOptionType":"S"},{"StatementOptionName":"NOEXPANDTABS","StatementOptionHelp":{"#cdata":"Specifies not to expand tab characters to the standard tab setting, which is set at 8-column \nintervals that start at column 9."},"StatementOptionType":"S"},{"StatementOptionName":"FILENAME=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS sets to the physical StatementOptionName of the currently opened \ninput file. Like automatic variables, the FILENAME= variable is not written to the data set."},"StatementOptionType":"V"},{"StatementOptionName":"FILEVAR=","StatementOptionHelp":{"#cdata":"Specifies a variable whose change in value causes the INFILE statement to close the current input \nfile and open a new one."},"StatementOptionType":"V"},{"StatementOptionName":"FIRSTOBS=","StatementOptionHelp":{"#cdata":"Specifies a record number that SAS uses to begin reading input data records in the input file."},"StatementOptionType":"V"},{"StatementOptionName":"FLOWOVER","StatementOptionHelp":{"#cdata":"Causes an INPUT statement to continue to read the next input data record if it does not \nfind values in the current input line for all the variables in the statement."},"StatementOptionType":"S"},{"StatementOptionName":"LENGTH=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS sets to the length of the current input line."},"StatementOptionType":"V"},{"StatementOptionName":"LINE=","StatementOptionHelp":{"#cdata":"Specifies a variable that SAS sets to the line location of the input pointer in the \ninput buffer. Like automatic variables, the LINE= variable is not written to the \ndata set."},"StatementOptionType":"V"},{"StatementOptionName":"LINESIZE=|LS=","StatementOptionHelp":{"#cdata":"Specifies the record length that is available to the INPUT statement."},"StatementOptionType":"V"},{"StatementOptionName":"LRECL=","StatementOptionHelp":{"#cdata":"Specifies the logical record length."},"StatementOptionType":"V"},{"StatementOptionName":"N=","StatementOptionHelp":{"#cdata":"Specifies the number of lines that are available to the input pointer at one time."},"StatementOptionType":"V"},{"StatementOptionName":"MISSOVER","StatementOptionHelp":{"#cdata":"Prevents an INPUT statement from reading a new input data record if it does not \nfind values in the current input line for all the variables in the statement."},"StatementOptionType":"S"},{"StatementOptionName":"MOD","StatementOptionHelp":{"#cdata":"Indicates that data written to the file should be appended to the file"},"StatementOptionType":"S"},{"StatementOptionName":"NEW","StatementOptionHelp":{"#cdata":"Indicates that a new file is to be opened for output. If the file already exists, \nthen it is deleted and re-created."},"StatementOptionType":"S"},{"StatementOptionName":"OLD","StatementOptionHelp":{"#cdata":"Indicates that a new file is to be opened for output. If the file already exists, \nthen the previous contents of the file are replaced."},"StatementOptionType":"S"},{"StatementOptionName":"NBYTE=","StatementOptionHelp":{"#cdata":"Specifies the StatementOptionName of a variable that contains the number of bytes \nto read from a file when you are reading data in stream record format (RECFM=S in \nthe FILENAME statement)."},"StatementOptionType":"V"},{"StatementOptionName":"OBS=","StatementOptionHelp":{"#cdata":"Use OBS= with FIRSTOBS= to read a range of records from the middle of a file. "},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"<record-number>","@Value2":"MAX"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the record number of the last record to read in an input file that is read sequentially.","@ToolTip2":"Specifies the maximum number of observations to process, which will be at least as large as the  largest signed, 32-bit integer."}},{"StatementOptionName":"PAD","StatementOptionHelp":{"#cdata":"SAS pads the records that are read from an external file with blanks to the length that is \nspecified in the LRECL= option."},"StatementOptionType":"S"},{"StatementOptionName":"NOPAD","StatementOptionHelp":{"#cdata":"SAS does not pad the records that are read from an external file with blanks to the length that \nis specified in the LRECL= option."},"StatementOptionType":"S"},{"StatementOptionName":"PRINT","StatementOptionHelp":{"#cdata":"Specifies that the input file contains carriage-control characters."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Specifies that the input file does not contain carriage-control characters."},"StatementOptionType":"S"},{"StatementOptionName":"SCANOVER","StatementOptionHelp":{"#cdata":"Causes the INPUT statement to scan the input data records until the character string that \nis specified in the @'character-string' expression is found."},"StatementOptionType":"S"},{"StatementOptionName":"SHAREBUFFERS|SHAREBUFS","StatementOptionHelp":{"#cdata":"Specifies that the FILE statement and the INFILE statement share the same buffer."},"StatementOptionType":"S"},{"StatementOptionName":"START=","StatementOptionHelp":{"#cdata":"Specifies a variable whose value SAS uses as the first column number of the record \nthat the PUT _INFILE_ statement writes. Like automatic variables, the START \nvariable is not written to the data set."},"StatementOptionType":"V"},{"StatementOptionName":"STOPOVER","StatementOptionHelp":{"#cdata":"Causes the DATA step to stop processing if an INPUT statement reaches the end of the \ncurrent record without finding values for all variables in the statement."},"StatementOptionType":"S"},{"StatementOptionName":"TERMSTR=","StatementOptionHelp":{"#cdata":"[Windows/UNIX Host Option] \n        \nSpecifies the end-of-line character for the file. Use this option to share files \nbetween the UNIX and Windows operating environments."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CR","@Value2":"CRLF","@Value3":"LF","@Value4":"NULL","@Value5":"NONE","@Value6":"NL","@Value7":"LFCR","@Value8":"CRNL"},"StatementOptionToolTips":{"@ToolTip1":"Carriage return (CR).","@ToolTip2":"Carriage return (CR) followed by line feed (LF).","@ToolTip3":"Line feed only (the default).","@ToolTip4":"NULL character (0x00).","@ToolTip5":"Record terminators are not used. This parameter provides the same function as FILEDATA=BINARY.","@ToolTip6":"The newline character (x'15') is used as the record terminator. This parameter  provides the same function as FILEDATA=TEXT.","@ToolTip7":"The sequence LF followed by CR is used as the record terminator.","@ToolTip8":"The sequence CR followed by NL is used as the record terminator."}},{"StatementOptionName":"TRUNCOVER","StatementOptionHelp":{"#cdata":"Overrides the default behavior of the INPUT statement when an input data record is shorter \nthan the INPUT statement expects. By default, the INPUT statement automatically reads the \nnext input data record. TRUNCOVER enables you to read variable-length records when some \nrecords are shorter than the INPUT statement expects. Variables without any values assigned \nare set to missing."},"StatementOptionType":"S"},{"StatementOptionName":"UNBUFFERED|UNBUF","StatementOptionHelp":{"#cdata":"Tells SAS not to perform a buffered (\"look ahead\") read."},"StatementOptionType":"S"},{"StatementOptionName":"_INFILE_=","StatementOptionHelp":{"#cdata":"Specifies a character variable that references the contents of the current input buffer \nfor this INFILE statement."},"StatementOptionType":"V"},{"StatementOptionName":"BLKSIZE=|BLK=","StatementOptionHelp":{"#cdata":"[Syntax: BLKSIZE=block-size] \n          \n[Windows/UNIX Host Option]\n\nSpecifies the number of bytes that are physically read or written in an I/O operation. \nThe default is 8K. The maximum is 1M (Windows) or 1G-1(UNIX). \n\nIn UNIX, if you specify RECFM=S370VBS, then you should specify BLKSIZE=32760 in order \nto avoid errors with records longer than 255 characters."},"StatementOptionType":"V"},{"StatementOptionName":"BLOCK","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates whether the client \nis to wait if no data is currently available. BLOCK is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"NOBLOCK","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates whether the client \nis to wait if no data is currently available. BLOCK is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"BYTE","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates the type of pipe. \nBYTE is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"MESSAGE","StatementOptionHelp":{"#cdata":"Is used only in the context of named pipes. This option indicates the type of pipe. \nBYTE is the default value."},"StatementOptionType":"S"},{"StatementOptionName":"EOFCONNECT","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes and is valid only when you are defining \nthe server. This option indicates that if an end-of-file (EOF) character is \nreceived from a client, the server should try to connect to the next client."},"StatementOptionType":"S"},{"StatementOptionName":"HOTLINK","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nInstructs SAS to use the DDE HOTLINK."},"StatementOptionType":"S"},{"StatementOptionName":"NOTAB","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nInstructs SAS to ignore tab characters between variables."},"StatementOptionType":"S"},{"StatementOptionName":"IGNOREDOSEOF","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used in the context of I/O operations on variable record format files. When this \noption is specified, any occurrence of ^Z is interpreted as character data and \nnot as an end-of-file marker."},"StatementOptionType":"S"},{"StatementOptionName":"RECFM=","StatementOptionHelp":{"#cdata":"[Windows/UNIX Host Option] \n        \nSpecifies the record format of the external file."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"F","@Value2":"P","@Value3":"S","@Value4":"V|D","@Value5":"N","@Value6":"s370V","@Value7":"S370VB","@Value8":"S370VBS","@Value9":"STREAMLF"},"StatementOptionToolTips":{"@ToolTip1":"Fixed-record format","@ToolTip2":"Print format.","@ToolTip3":"Stream-record format.","@ToolTip4":"Variable-record format (the default)","@ToolTip5":"Indicates binary format and causes the file to be treated as a byte stream. If LRECL is not specified,  by default SAS reads 256 bytes at a time from the file.","@ToolTip6":"Indicates the variable S370 record format (V).","@ToolTip7":"Indicates the variable block S370 record format (VB).","@ToolTip8":"Indicates the variable block with spanned records S370 record format (VBS).","@ToolTip9":"[For OpenVMS] Specifies StreamLF record format. Records are delimited by LF."}},{"StatementOptionName":"RETRY=","StatementOptionHelp":{"#cdata":"[Syntax: RETRY=seconds] \n        \n[Windows Host Option]\n\nIs used only in the context of named pipes. This option specifies how long a named \npipe client should wait for a busy pipe. The minimum (and default) value for seconds \nis 10."},"StatementOptionType":"V"},{"StatementOptionName":"SERVER","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes. This option specifies the mode of a \nnamed pipe. The default value is SERVER."},"StatementOptionType":"S"},{"StatementOptionName":"CLIENT","StatementOptionHelp":{"#cdata":"[Windows Host Option] \n        \nIs used only in the context of named pipes. This option specifies the mode of a \nnamed pipe. The default value is SERVER."},"StatementOptionType":"S"},{"StatementOptionName":"FAC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nOverrides the default file access attributes used for external files. Use this option \nto indicate the level of access you want to allow for an external file. You can allow \nREAD, WRITE, UPDATE, and DELETE access (as well as no access). By default with external \nfiles, files opened for input allow read access, files opened for output allow WRITE \naccess, and files opened for update allow READ and WRITE access. The form of the FAC= \noption is \n\nFAC=access-option-list\n\nwhere access-option-list can be one of the following: \n\nDEL specifies DELETE access.\n \nGET specifies READ access.\n \nPUT specifies WRITE access.\n \nUPD specifies UPDATE access. \n\nYou can combine these values in any order. For example, specifying the following indicates \nthat you want DELETE, READ, and WRITE access: \n\nfac=(del,get,put)"},"StatementOptionType":"V"},{"StatementOptionName":"KEY=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies which key SAS uses to read the records in an RMS file with indexed organization. \nThe KEY= option is always used with the KEYVALUE= option. "},"StatementOptionType":"V"},{"StatementOptionName":"KEYVALUE=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the key value with which to begin reading an indexed file. "},"StatementOptionType":"V"},{"StatementOptionName":"MBC=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the size of the I/O buffers that OpenVMS RMS allocates for a particular file. \nThe value can range from 0 to 127 and represents the number of blocks used for each buffer. \nBy default, this option is set to 0 and the default values for the process are used.\n\nThe MBC= option (multiblock count) is used for both input and output to control the \nallocation for a particular file. If you want to control the allocation size for all \nthe external files used during the current SAS session, you can use the MBC= option in \nevery FILE, FILENAME, or INFILE statement. You can also use the DCL SET RMS_DEFAULT \ncommand to specify a process default, and let the SAS values default to the process's \ndefault values.\n\nThe MBC= option corresponds to the RAB$B_MBC field in OpenVMS RMS or the CONNECT \nMULTIBLOCK_COUNT attribute when using FDL. This option is not supported for DECnet \noperations."},"StatementOptionType":"V"},{"StatementOptionName":"MBF=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies the number of I/O buffers you want OpenVMS RMS to allocate for a particular file. \nThe value can range from 0 to 127 and represents the number of buffers used. By default, \nthis option is set to a value of 2. If a value of 0 is specified, the default value for the \nprocess is used.\n\nThe MBF= option (multibuffer count) is used for both input and output to control the number \nof buffers allocated for a particular file. If you want to control the number of buffers \nallocated for all the external files used during the SAS session, you can use the MBF= \noption in every FILE, FILENAME, or INFILE statement. The DCL SET RMS_DEFAULT command can \nbe used to specify a process default. Then, you can let the SAS values default to the \nprocess's default values.\n\nThe MBF= option corresponds to the RAB$B_MBF field in OpenVMS RMS or the CONNECT MULTIBUFFER_COUNT \nattribute when using FDL. This option is not supported for DECnet operations."},"StatementOptionType":"V"},{"StatementOptionName":"SHR=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nOverrides the default file-sharing attributes used for external files. With this option, \nyou can indicate the access level you want to give other users. You can allow READ, WRITE, \nUPDATE, and DELETE access (as well as no access). By default with external files, files \nopened for input allow shared read access, and files opened for output or UPDATE do not \nallow shared access.\n\nHowever, you can allow other users to have READ and WRITE access to a file that you are \nopening for input only. To accomplish this, use the SHR= option. The syntax of the SHR= \noption is \n\nSHR=share-option-list\n\nwhere share-option-list can be one of the following: DEL specifies DELETE access.\n\nGET specifies shared READ access.\n \nNONE specifies no shared access.\n \nPUT specifies shared WRITE access.\n \nUPD specifies UPDATE access.  \n\nYou can combine these values in any order. For example, specifying the following indicates \nthat you want shared DELETE, READ, and WRITE access: \n\nshr=(del,get,put)"},"StatementOptionType":"V"},{"StatementOptionName":"FILEDATA=","StatementOptionHelp":{"#cdata":"[UNIX/z/OS Host Option] \n    \nThe FILEDATA= option specifies that the file being processed is expected to contain \neither binary or text data."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BINARY","@Value2":"TEXT"},"StatementOptionToolTips":{"@ToolTip1":"The FILEDATA= option specifies that the file being processed is expected to contain  binary data.","@ToolTip2":"The FILEDATA= option specifies that the file being processed is expected to contain  text data."}},{"StatementOptionName":"BACKWARD|BKWD","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nCauses SAS to read the VSAM data set backwards (INFILE only)"},"StatementOptionType":"S"},{"StatementOptionName":"BUFND=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: BUFND=value \n\nIndicates how many data buffers to use for the VSAM data set."},"StatementOptionType":"V"},{"StatementOptionName":"BUFNI=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: BUFNI=value \n\nIndicates how many index buffers to use for the VSAM data set."},"StatementOptionType":"V"},{"StatementOptionName":"CONTROLINTERVAL|CTLINTV|CNV","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nIndicates that you want to read physical VSAM control interval records rather than \nlogical records. This option is typically used for diagnostic purposes (INFILE only)."},"StatementOptionType":"S"},{"StatementOptionName":"ERASE=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: ERASE=variable \n\nDefines a numeric SAS variable that you must set to 1 when you want to erase \na VSAM record (INFILE only)."},"StatementOptionType":"V"},{"StatementOptionName":"FEEDBACK=|FDBK=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: FEEDBACK=variable | FDBK=variable \n\nDefines a numeric variable that SAS sets to the VSAM logical error code. This option \nis similar to the _FDBK_ automatic variable. When SAS sets the FEEDBACK variable, you \nmust reset it to 0 in order to continue."},"StatementOptionType":"V"},{"StatementOptionName":"GENKEY","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nCauses SAS to use the KEY= variable as the leading portion of a record's key. VSAM \nretrieves the first record whose key matches the generic key (INFILE only)."},"StatementOptionType":"S"},{"StatementOptionName":"KEYLEN=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: KEYLEN=variable \n\nSpecifies a numeric SAS variable that, when used with GENKEY, specifies the length \nof the key that is to be compared to the keys in the file."},"StatementOptionType":"V"},{"StatementOptionName":"KEYPOS=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: KEYPOS=variable \n\nIndicates the numeric variable that SAS sets to the position of the VSAM key field. \nThis option enables you to read keys without knowing the key position in advance. \nThis variable is set to the column number (starting from 1)."},"StatementOptionType":"V"},{"StatementOptionName":"NRLS","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSpecifies not to use record-level sharing (RLS) to open an RLS-eligible data set (INFILE only)."},"StatementOptionType":"S"},{"StatementOptionName":"PASSWD=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: PASSWD=value \n\nGives the appropriate password for a VSAM data set that has password protection."},"StatementOptionType":"V"},{"StatementOptionName":"RBA=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: RBA=variable \n\nSpecifies a numeric variable that you set to the relative byte address (RBA) of \nthe data record that you want to read. The RBA= option indicates that addressed \ndirect access is being used; it is appropriate for KSDS and ESDS. If you specify \nthe CONTROLINTERVAL option, you can use the RBA= option to access control records \nin an RRDS (INFILE only)."},"StatementOptionType":"V"},{"StatementOptionName":"RC4STOP","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nStops the DATA step from executing if a return code greater than 4 is returned by \nthe operating environment when the VSAM data set is opened."},"StatementOptionType":"S"},{"StatementOptionName":"RECORDS=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: RECORDS=variable \n\nDefines a numeric variable that SAS sets to the number of logical records in a \nVSAM data set that has been opened for input."},"StatementOptionType":"V"},{"StatementOptionName":"RECORG=","StatementOptionHelp":{"#cdata":"[z/OS Host Option] \n  \nSpecifies the organization of records in a new VSAM data set. Use this option only \nif SMS is active."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"KS","@Value2":"ES","@Value3":"RR","@Value4":"LS"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a VSAM key-sequenced data set.","@ToolTip2":"Specifies a VSAM entry-sequenced data set.","@ToolTip3":"Specifies a VSAM relative-record data set.","@ToolTip4":"Specifies a VSAM linear-space data set."}},{"StatementOptionName":"RESET","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nIndicates that the VSAM file is reset to empty (no records) when it is opened. \nThis option applies only to loading a VSAM data set that has been marked REUSE. \nYou cannot use this option if the data set contains an alternate index."},"StatementOptionType":"S"},{"StatementOptionName":"RRN=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: RRN=variable \n\nDefines a numeric variable that you set to the relative record number (RRN) of the \nrecord that you want to read or write. This option indicates that keyed direct access \nis being used; it is appropriate for RRDS only."},"StatementOptionType":"V"},{"StatementOptionName":"SEQUENTIAL","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSpecifies sequential VSAM record retrieval when either the RBA= (for an ESDS) or \nthe RRN= option (for an RRDS) is specified (INFILE only)."},"StatementOptionType":"S"},{"StatementOptionName":"SKIP","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nIndicates skip-sequential processing of VSAM files. Skip-sequential processing finds \nthe first record whose value is the same as the value specified by the KEY= option; \nrecords are read sequentially thereafter (INFILE only)."},"StatementOptionType":"S"},{"StatementOptionName":"UPDATE=","StatementOptionHelp":{"#cdata":"[VSAM Option]\n    \nSyntax: UPDATE=variable \n\nDefines a numeric SAS variable that indicates that not every record that it reads \nis to be updated. Use this option when you are updating records in a VSAM data set \n(INFILE only). When an INFILE and a FILE statement reference the same VSAM data set, \nrecords are retrieved for update by default."},"StatementOptionType":"V"},{"StatementOptionName":"CCHHR=","StatementOptionHelp":{"#cdata":"[VTOC Option under z/OS] \n          \nSyntax: CCHHR=variable \n\nspecifies a character variable to which the physical address (cylinder head record) \nof a record is returned. This applies to files on CKD disks only."},"StatementOptionType":"V"},{"StatementOptionName":"CLOSE=","StatementOptionHelp":{"#cdata":"[z/OS Host Option] \n  \nIndicates how a tape volume is positioned at the end of the DATA step."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"REREAD","@Value2":"LEAVE","@Value3":"REWIND","@Value4":"FREE","@Value5":"DISP"},"StatementOptionToolTips":{"@ToolTip1":"Positions the tape at the logical beginning of the data set.","@ToolTip2":"Positions the tape at the logical end of the data set.","@ToolTip3":"Rewinds the tape to the physical beginning of the volume.","@ToolTip4":"Dynamically deallocates the tape volume.","@ToolTip5":"Is implied by the control language."}},{"StatementOptionName":"CSRC","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSpecifies that you want to use the CSRCESRV services (available with z/OS) to compress \ndata on output. For example: \n\n  data _null_;\n     file myfile csrc;\n     put ... ;\n  run;\n\nYou cannot use this option with an external file that has a fixed-length record format."},"StatementOptionType":"S"},{"StatementOptionName":"DCB=","StatementOptionHelp":{"#cdata":"[OpenVMS Host Option]\n  \nSyntax: DCB=fileref \n\nspecifies the fileref of an external file that was referenced in an earlier FILE or \nINFILE statement in the same DATA step. SAS uses that file's RECFM=, LRECL=, and BLKSIZE= \ninformation for the current file."},"StatementOptionType":"V"},{"StatementOptionName":"CVAF","StatementOptionHelp":{"#cdata":"[VTOC Option under z/OS] \n  \nTells SAS to use the Common VTOC Access Facility (CVAF) of the IBM program product \nData Facility/Device Support (DF/DS) for indexed VTOCs. If the VTOC is not indexed, \nor if your installation does not have CVAF, this option is ignored."},"StatementOptionType":"S"}],"#comment":[{},{},{}]}},{"StatementName":"INFORMAT","StatementHelp":{"#cdata":"Associates informats with variables. \n      \nSyntax: \n(1) INFORMAT variable-1 <...variable-n> <informat>;  \n(2) INFORMAT <variable-1> <... variable-n> <DEFAULT=default-informat>;  \n(3) INFORMAT variable-1 <...variable-n> informat <DEFAULT=default-informat>;"},"StatementOptions":{"StatementOption":{"StatementOptionName":"DEFAULT=","StatementOptionHelp":{"#cdata":"[Syntax: DEFAULT= default-informat] \n          \nSpecifies a temporary default informat for reading values of the variables that \nare listed in the INFORMAT statement. If no variable is specified, then the DEFAULT= \ninformat specification applies a temporary default informat for reading values of all \nthe variables of that type included in the DATA step. Numeric informats are applied \nto numeric variables, and character informats are applied to character variables. \nThese default informats apply only to the current DATA step. \n\nA DEFAULT= informat specification applies to\n\n  o variables that are not named in an INFORMAT or ATTRIB statement \n  o variables that are not permanently associated with an informat within a SAS data set \n  o variables that are not read with an explicit informat in the current DATA step.\n\nDefault: If you omit DEFAULT=, SAS uses w.d as the default numeric informat and $w. \nas the default character informat. \n\nRestriction: Use this argument only in a DATA step.  \n\nTip: A DEFAULT= specification can occur anywhere in an INFORMAT statement. It can \nspecify either a numeric default, a character default, or both."},"StatementOptionType":"V"}}},{"StatementName":"INPUT","StatementHelp":{"#cdata":"Syntax: INPUT <specification(s)><@|@@>; \n      \nDescribes the arrangement of values in the input data record and assigns input values to the \ncorresponding SAS variables."},"StatementOptions":null},{"StatementName":"KEEP","StatementHelp":{"#cdata":"Syntax: KEEP variable-list; \n      \nSpecifies the variables to include in output SAS data sets."},"StatementOptions":null},{"StatementName":"LABEL","StatementHelp":{"#cdata":"Assigns descriptive labels to variables.\n      \nSyntax: \n(1) LABEL variable-1=label-1 ... <variable-n=label-n>;  \n\n(2) LABEL variable-1=' ' ... <variable-n=' '>;"},"StatementOptions":null},{"StatementName":"LEAVE","StatementHelp":{"#cdata":"Syntax: LEAVE; \n      \nStops processing the current loop and resumes with the next statement in the sequence."},"StatementOptions":null},{"StatementName":"LENGTH","StatementHelp":{"#cdata":"Syntax: LENGTH variable-specification(s)<DEFAULT=n>; \n      \nSpecifies the number of bytes for storing variables."},"StatementOptions":{"StatementOption":{"StatementOptionName":"DEFAULT=","StatementOptionHelp":{"#cdata":"[Syntax: DEFAULT=n] \n          \nChanges the default number of bytes that SAS uses to store the values of any newly created \nnumeric variables."},"StatementOptionType":"V"}}},{"StatementName":"LINK","StatementHelp":{"#cdata":"Syntax: LINK label; \n      \nDirects program execution immediately to the statement label that is specified and, if followed \nby a RETURN statement, returns execution to the statement that follows the LINK statement."},"StatementOptions":null},{"StatementName":"LIST","StatementHelp":{"#cdata":"Syntax: LIST; \n      \nWrites to the SAS log the input data record for the observation that is being processed."},"StatementOptions":null},{"StatementName":"LOCK","StatementHelp":{"#cdata":"Syntax: LOCK libref<.member-name<.member-type | .entry-name.entry-type>> <LIST | QUERY | SHOW | CLEAR> ; \n      \nAcquires and releases an exclusive lock on an existing SAS file."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"LIST|QUERY|SHOW","StatementOptionHelp":{"#cdata":"Writes to the SAS log whether you have an exclusive lock on the specified SAS file."},"StatementOptionType":"S"},{"StatementOptionName":"CLEAR","StatementOptionHelp":{"#cdata":"Releases a lock on the specified SAS file that was acquired by using the LOCK statement in your \nSAS session."},"StatementOptionType":"S"}]}},{"StatementName":"MERGE","StatementHelp":{"#cdata":"Syntax: MERGE SAS-data-set-1 <(data-set-options)> \n  SAS-data-set-2 <(data-set-options) > \n  <...SAS-data-set-n<(data-set-options)>> \n  <END=variable>; \n  \nJoins observations from two or more SAS data sets into a single observation."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"END=","StatementOptionHelp":{"#cdata":"[Syntax: END=variable] \n          \nNames and creates a temporary variable that contains an end-of-file indicator."},"StatementOptionType":"V"},{"StatementOptionName":"ALTER=","StatementOptionType":"V"},{"StatementOptionName":"BUFNO=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"hexX","@Value4":"MIN","@Value5":"MAX"}},{"StatementOptionName":"BUFSIZE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"hexX","@Value6":"MIN","@Value7":"MAX"}},{"StatementOptionName":"CNTLLEV=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"LIB","@Value2":"MEM","@Value3":"REC"}},{"StatementOptionName":"COMPRESS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"NO","@Value2":"YES","@Value3":"CHAR","@Value4":"BINARY"}},{"StatementOptionName":"DLDMGACTION=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"FAIL","@Value2":"ABORT","@Value3":"REPAIR","@Value4":"NOINDEX","@Value5":"PROMPT"}},{"StatementOptionName":"ENCRYPT=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"ENCRYPTKEY=","StatementOptionType":"V"},{"StatementOptionName":"GENMAX=","StatementOptionType":"V"},{"StatementOptionName":"GENNUM=","StatementOptionType":"V"},{"StatementOptionName":"INDEX=","StatementOptionType":"V"},{"StatementOptionName":"LABEL=","StatementOptionType":"V"},{"StatementOptionName":"OUTREP=","StatementOptionType":"V"},{"StatementOptionName":"PW=","StatementOptionType":"V"},{"StatementOptionName":"PWREQ=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"READ=","StatementOptionType":"V"},{"StatementOptionName":"REPEMPTY=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"REPLACE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"REUSE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SPILL=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SORTEDBY=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"by-clause < / collate-name>","@Value2":"_NULL_"}},{"StatementOptionName":"TOBSNO=","StatementOptionType":"V"},{"StatementOptionName":"TRANTAB=","StatementOptionType":"V"},{"StatementOptionName":"TYPE=","StatementOptionType":"V"},{"StatementOptionName":"WRITE=","StatementOptionType":"V"},{"StatementOptionName":"FILECLOSE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"DISP","@Value2":"LEAVE","@Value3":"REREAD","@Value4":"REWIND"}},{"StatementOptionName":"FIRSTOBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"hexX","@Value6":"MIN","@Value7":"MAX"}},{"StatementOptionName":"IN=","StatementOptionType":"V"},{"StatementOptionName":"OBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"nT","@Value6":"hexX","@Value7":"MIN","@Value8":"MAX"}},{"StatementOptionName":"POINTOBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"WHERE=","StatementOptionType":"V"},{"StatementOptionName":"WHEREUP=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SGIO=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"IDXNAME=","StatementOptionType":"V"},{"StatementOptionName":"IDXWHERE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"DROP=","StatementOptionType":"V"},{"StatementOptionName":"KEEP=","StatementOptionType":"V"},{"StatementOptionName":"RENAME=","StatementOptionType":"V"},{"StatementOptionName":"EXTENDOBSCOUNTER=","StatementOptionType":"V"}],"#comment":{}}},{"StatementName":"MISSING","StatementHelp":{"#cdata":"Syntax: MISSING character(s); \n      \nAssigns characters in your input data to represent special missing values for numeric data."},"StatementOptions":null},{"StatementName":"MODIFY","StatementHelp":{"#cdata":"Replaces, deletes, and appends observations in an existing SAS data set in place but does not \ncreate an additional copy.\n      \nSyntax: \n(1) MODIFY master-data-set <(data-set-option(s))> transaction-data-set <(data-set-option(s))> \n    <NOBS=variable> <END=variable> <UPDATEMODE=MISSINGCHECK| \n    NOMISSINGCHECK>; \n    BY by-variable;  \n\n(2) MODIFY master-data-set <(data-set-option(s))> KEY=index </ UNIQUE> <NOBS=variable> <END=variable> ;  \n\n(3) MODIFY master-data-set <(data-set-option(s))> <NOBS=variable> POINT=variable;  \n\n(4) MODIFY master-data-set <(data-set-option(s))> <NOBS=variable> <END=variable>; "},"StatementOptions":{"StatementOption":[{"StatementOptionName":"END=","StatementOptionHelp":{"#cdata":"[Syntax: END=variable] \n          \nCreates and names a temporary variable that contains an end-of-file indicator."},"StatementOptionType":"V"},{"StatementOptionName":"KEY=","StatementOptionHelp":{"#cdata":"[Syntax: KEY=index] \n          \nSpecifies a simple or composite index of the SAS data file that is being modified. \nThe KEY= argument retrieves observations from that SAS data file based on index \nvalues that are supplied by like-named variables in another source of information."},"StatementOptionType":"V"},{"StatementOptionName":"NOBS=","StatementOptionHelp":{"#cdata":"[Syntax: NOBS=variable] \n          \nCreates and names a temporary variable whose value is usually the total number \nof observations in the input data set. For certain SAS views, SAS cannot determine \nthe number of observations. In these cases, SAS sets the value of the NOBS= variable \nto the largest positive integer value available in the operating environment."},"StatementOptionType":"V"},{"StatementOptionName":"POINT=","StatementOptionHelp":{"#cdata":"[Syntax: POINT=variable] \n          \nReads SAS data sets using random (direct) access by observation number. variable \nnames a variable whose value is the number of the observation to read. The POINT= \nvariable is available anywhere in the DATA step, but it is not added to any SAS \ndata set."},"StatementOptionType":"V"},{"StatementOptionName":"UNIQUE","StatementOptionHelp":{"#cdata":"Causes a KEY= search always to begin at the top of the index for the data file being modified."},"StatementOptionType":"S"},{"StatementOptionName":"UPDATEMODE=","StatementOptionHelp":{"#cdata":"Specifies whether missing variable values in a transaction data set are to be allowed to replace \nexisting variable values in a master data set."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"MISSINGCHECK","@Value2":"NOMISSINGCHECK"},"StatementOptionToolTips":{"@ToolTip1":"Prevents missing variable values in a transaction data set from replacing values in a master data set.","@ToolTip2":"Allows missing variable values in a transaction data set to replace values in a master data set by  preventing the check from being performed."}},{"StatementOptionName":"CUREOBS=","StatementOptionHelp":{"#cdata":"[Syntax: CUROBS=variable]  \n          \nCreates and names a variable that contains the observation number that was just read from the data set."},"StatementOptionType":"V"},{"StatementOptionName":"KEYRESET=","StatementOptionHelp":{"#cdata":"[Syntax: KEYRESET=variable] \n          \nControls whether a KEY= search should begin at the top of the index for the data set that is being read. \nWhen the value of the KEYRESET variable is 1, the index lookup begins at the top of the index. When the \nvalue of the KEYRESET variable is 0, the index lookup is not reset and the lookup continues where the \nprior lookup ended. \n\nInteraction:\nThe KEYRESET= option is similar to the UNIQUE option, except the KEYRESET= option enables you to determine \nwhen the KEY= search should begin at the top of the index again."},"StatementOptionType":"V"}]}},{"StatementName":"PAGE","StatementHelp":{"#cdata":"Syntax: PAGE; \n      \nSkips to a new page in the SAS log."},"StatementOptions":null},{"StatementName":"PUT","StatementHelp":{"#cdata":"Syntax: PUT <specification(s)><_ODS_><@|@@>; \n      \nWrites lines to the SAS log, to the SAS output window, or to an external location that is \nspecified in the most recent FILE statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"_INFILE_","StatementOptionHelp":{"#cdata":"Writes the last input data record that is read either from the current input file or from the data \nlines that follow a DATELINES statement."},"StatementOptionType":"S"},{"StatementOptionName":"_ALL_","StatementOptionHelp":{"#cdata":"Writes the values of all variables, which includes automatic variables, that are defined in the \ncurrent DATA step by using named output."},"StatementOptionType":"S"},{"StatementOptionName":"_ODS_","StatementOptionHelp":{"#cdata":"Moves data values for all columns (as defined by the ODS option in the FILE statement) into \na special buffer, from which it is eventually written to the data component. The ODS option \nin the FILE statement defines the structure of the data component that holds the results of \nthe DATA step."},"StatementOptionType":"S"},{"StatementOptionName":"OVERPRINT","StatementOptionHelp":{"#cdata":"Causes the values that follow the keyword OVERPRINT to print on the most recently written \noutput line."},"StatementOptionType":"S"},{"StatementOptionName":"_BLANKPAGE_","StatementOptionHelp":{"#cdata":"Advances the pointer to the first line of a new page, even when the pointer is positioned \non the first line and the first column of a new page."},"StatementOptionType":"S"},{"StatementOptionName":"_PAGE_","StatementOptionHelp":{"#cdata":"Advances the pointer to the first line of a new page. SAS automatically begins a new \npage when a line exceeds the current PAGESIZE= value."},"StatementOptionType":"S"}]}},{"StatementName":"PUTLOG","StatementHelp":{"#cdata":"Syntax: PUTLOG 'message'; \n      \nWrites a message to the SAS log."},"StatementOptions":null},{"StatementName":"RENAME","StatementHelp":{"#cdata":"Syntax: RENAME old-name-1=new-name-1 ... <old-name-n=new-name-n>; \n      \nSpecifies new names for variables in output SAS data sets. "},"StatementOptions":null},{"StatementName":"REPLACE","StatementHelp":{"#cdata":"Syntax: REPLACE <data-set-name-1><...data-set-name-n>; \n      \nReplaces an observation in the same location."},"StatementOptions":null},{"StatementName":"RETAIN","StatementHelp":{"#cdata":"Syntax: RETAIN <element-list(s) <initial-value(s) | \n  (initial-value-1) | (initial-value-list-1) > \n  < ... element-list-n <initial-value-n | \n  (initial-value-n ) | (initial-value-list-n)>>>; \n  \nCauses a variable that is created by an INPUT or assignment statement to retain its value from \none iteration of the DATA step to the next."},"StatementOptions":null},{"StatementName":"RETURN","StatementHelp":{"#cdata":"Syntax: RETURN; \n      \nStops executing statements at the current point in the DATA step and returns to a predetermined \npoint in the step."},"StatementOptions":null},{"StatementName":"SELECT","StatementHelp":{"#cdata":"Executes one of several statements or groups of statements.\n      \nSyntax: \nSELECT <(select-expression)>;  \n  WHEN-1 (when-expression-1 <..., when-expression-n>) statement;  \n    <... WHEN-n (when-expression-1 <..., when-expression-n>) statement;>  \n      <OTHERWISE statement;> \nEND;"},"StatementOptions":null},{"StatementName":"WHEN","StatementHelp":{"#cdata":"SELECT groups contain WHEN statements that identify SAS statements that are executed when a particular \ncondition is true. Use at least one WHEN statement in a SELECT group.\n      \nSyntax: WHEN-1 (when-expression-1 <..., when-expression-n>) statement; "},"StatementOptions":{"StatementOption":{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement."},"StatementOptionType":"S"}}},{"StatementName":"OTHERWISE","StatementHelp":{"#cdata":"An optional OTHERWISE statement specifies a statement to be executed if no WHEN condition is met. \nAn END statement ends a SELECT group.\n\n      \nSyntax: \n  <... WHEN-n (when-expression-1 <..., when-expression-n>) statement;>  \n    <OTHERWISE statement;>"},"StatementOptions":{"StatementOption":{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement."},"StatementOptionType":"S"}}},{"StatementName":"SET","StatementHelp":{"#cdata":"Syntax: SET <SAS-data-set(s) <(data-set-options(s) )>> <options>; \n      \nReads an observation from one or more SAS data sets."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"END=","StatementOptionHelp":{"#cdata":"[Syntax: END=variable] \n          \nCreates and names a temporary variable that contains an end-of-file indicator. \nThe variable, which is initialized to zero, is set to 1 when SET reads the last \nobservation of the last data set listed. This variable is not added to any new \ndata set."},"StatementOptionType":"V"},{"StatementOptionName":"KEY=","StatementOptionHelp":{"#cdata":"[Syntax: KEY=index</UNIQUE>] \n          \nProvides nonsequential access to observations in a SAS data set, which \nare based on the value of an index variable or a key."},"StatementOptionType":"V"},{"StatementOptionName":"INDSNAME=","StatementOptionHelp":{"#cdata":"[Syntax: INDSNAME=variable] \n          \nCreates and names a variable that stores the name of the SAS data set from which \nthe current observation is read. The stored name can be a data set name or a physical \nname. The physical name is the name by which the operating environment recognizes the \nfile."},"StatementOptionType":"V"},{"StatementOptionName":"NOBS=","StatementOptionHelp":{"#cdata":"[Syntax: NOBS=variable] \n          \nCreates and names a temporary variable whose value is usually the total number \nof observations in the input data set or data sets. If more than one data set \nis listed in the SET statement, NOBS= the total number of observations in the \ndata sets that are listed. The number of observations includes those observations \nthat are marked for deletion but are not yet deleted."},"StatementOptionType":"V"},{"StatementOptionName":"OPEN=","StatementOptionHelp":{"#cdata":"Allows you to delay the opening of any concatenated SAS data sets until they are ready to be processed."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"IMMEDIATE","@Value2":"DEFER"},"StatementOptionToolTips":{"@ToolTip1":"During the compilation phase, opens all data sets that are listed in the SET statement.","@ToolTip2":"Opens the first data set during the compilation phase, and opens subsequent data  sets during the execution phase. When the DATA step reads and processes all  observations in a data set, it closes the data set and opens the next data  set in the list."}},{"StatementOptionName":"POINT=","StatementOptionHelp":{"#cdata":"[Syntax: POINT=variable] \n          \nSpecifies a temporary variable whose numeric value determines which observation \nis read. POINT= causes the SET statement to use random (direct) access to read \na SAS data set."},"StatementOptionType":"V"},{"StatementOptionName":"UNIQUE","StatementOptionType":"S"},{"StatementOptionName":"CUREOBS=","StatementOptionHelp":{"#cdata":"[Syntax: CUROBS=variable]  \n          \nCreates and names a variable that contains the observation number that was just read from the data set."},"StatementOptionType":"V"},{"StatementOptionName":"KEYRESET=","StatementOptionHelp":{"#cdata":"[Syntax: KEYRESET=variable] \n          \nControls whether a KEY= search should begin at the top of the index for the data set that is being read. \nWhen the value of the KEYRESET variable is 1, the index lookup begins at the top of the index. When the \nvalue of the KEYRESET variable is 0, the index lookup is not reset and the lookup continues where the \nprior lookup ended. \n\nInteraction:\nThe KEYRESET= option is similar to the UNIQUE option, except the KEYRESET= option enables you to determine \nwhen the KEY= search should begin at the top of the index again."},"StatementOptionType":"V"},{"StatementOptionName":"ALTER=","StatementOptionType":"V"},{"StatementOptionName":"BUFNO=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"hexX","@Value4":"MIN","@Value5":"MAX"}},{"StatementOptionName":"BUFSIZE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"hexX","@Value6":"MIN","@Value7":"MAX"}},{"StatementOptionName":"CNTLLEV=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"LIB","@Value2":"MEM","@Value3":"REC"}},{"StatementOptionName":"COMPRESS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"NO","@Value2":"YES","@Value3":"CHAR","@Value4":"BINARY"}},{"StatementOptionName":"DLDMGACTION=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"FAIL","@Value2":"ABORT","@Value3":"REPAIR","@Value4":"NOINDEX","@Value5":"PROMPT"}},{"StatementOptionName":"ENCRYPT=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"ENCRYPTKEY=","StatementOptionType":"V"},{"StatementOptionName":"GENMAX=","StatementOptionType":"V","StatementOptionHelp":{"#cdata":"Requests generations for a data set and specifies the maximum number of versions."}},{"StatementOptionName":"GENNUM=","StatementOptionType":"V"},{"StatementOptionName":"INDEX=","StatementOptionType":"V"},{"StatementOptionName":"NOMISS","StatementOptionType":"S"},{"StatementOptionName":"LABEL=","StatementOptionType":"V"},{"StatementOptionName":"OUTREP=","StatementOptionType":"V"},{"StatementOptionName":"PW=","StatementOptionType":"V"},{"StatementOptionName":"PWREQ=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"READ=","StatementOptionType":"V","StatementOptionHelp":{"#cdata":"Assigns a read password to a SAS file and enables access to a read-protected SAS file."}},{"StatementOptionName":"REPEMPTY=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"REPLACE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"REUSE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SPILL=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SORTEDBY=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"by-clause < / collate-name>","@Value2":"_NULL_"}},{"StatementOptionName":"TOBSNO=","StatementOptionType":"V"},{"StatementOptionName":"TRANTAB=","StatementOptionType":"V"},{"StatementOptionName":"TYPE=","StatementOptionType":"V"},{"StatementOptionName":"WRITE=","StatementOptionType":"V"},{"StatementOptionName":"FILECLOSE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"DISP","@Value2":"LEAVE","@Value3":"REREAD","@Value4":"REWIND"}},{"StatementOptionName":"FIRSTOBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"hexX","@Value6":"MIN","@Value7":"MAX"}},{"StatementOptionName":"IN=","StatementOptionType":"V"},{"StatementOptionName":"OBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"nT","@Value6":"hexX","@Value7":"MIN","@Value8":"MAX"}},{"StatementOptionName":"POINTOBS=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"WHERE=","StatementOptionType":"V"},{"StatementOptionName":"WHEREUP=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"SGIO=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"IDXNAME=","StatementOptionType":"V"},{"StatementOptionName":"IDXWHERE=","StatementOptionType":"V","StatementOptionValues":{"@Value1":"YES","@Value2":"NO"}},{"StatementOptionName":"DROP=","StatementOptionType":"V"},{"StatementOptionName":"KEEP=","StatementOptionType":"V"},{"StatementOptionName":"RENAME=","StatementOptionType":"V"},{"StatementOptionName":"EXTENDOBSCOUNTER=","StatementOptionType":"V"}],"#comment":{}}},{"StatementName":"SKIP","StatementHelp":{"#cdata":"Syntax: SKIP <n>; \n      \nCreates a blank line in the SAS log."},"StatementOptions":null},{"StatementName":"STOP","StatementHelp":{"#cdata":"Syntax: STOP; \n      \nStops execution of the current DATA step."},"StatementOptions":null},{"StatementName":"WHERE","StatementHelp":{"#cdata":"Syntax: WHERE where-expression-1 \n  < logical-operator where-expression-n>; \n  \nSelects observations from SAS data sets that meet a particular condition."},"StatementOptions":null},{"StatementName":"RSUBMIT","StatementHelp":{"#cdata":"Syntax: RSUBMIT <options>;  ENDRSUBMIT <CANCEL>;  \n   RDISPLAY <CONNECTREMOTE=><server-ID;>  \n   RGET <CONNECTREMOTE=><server-ID>;  \n   %SYSRPUT macro-variable=value;  \n   %SYSLPUT macro-variable=value </REMOTE=server-ID>;  \n   WAITFOR <_ANY_ | _ALL_> task1...taskn <TIMEOUT=seconds>;  \n   LISTTASK <_ALL_ | task>;  \n   KILLTASK <_ALL_ | task1...taskn>;  \n    \nMarks the beginning of a block of statements that a client session submits to a server\nsession for execution."},"StatementOptions":null},{"StatementName":"ENDRSUBMIT","StatementHelp":{"#cdata":"Marks the end of a block of statements that a client session submits to a server session \nfor execution."},"StatementOptions":null}],"#comment":{}}}}