{"Procedure":{"Name":"STATESPACE","ProductGroup":"SAS/ETS","ProcedureHelp":{"#cdata":"Syntax: PROC STATESPACE options ; \n    BY variable ... ; \n    FORM variable value ... ; \n    ID variable ; \n    INITIAL F (row,column)=value ...G(row,column)=value ... ; \n    RESTRICT F (row,column)=value ...G (row,column)=value ... ; \n    VAR variable (difference, difference, ...) ... ; \n\nThe STATESPACE procedure uses the state space model to analyze and forecast multivariate \ntime series. The STATESPACE procedure is appropriate for jointly forecasting several related \ntime series that have dynamic interactions. By taking into account the autocorrelations among \nall the variables in a set, the STATESPACE procedure can give better forecasts than methods \nthat model each series separately. \n\nBy default, the STATESPACE procedure automatically selects a state space model appropriate for \nthe time series, making the procedure a good tool for automatic forecasting of multivariate time \nseries. Alternatively, you can specify the state space model by giving the form of the state vector \nand the state transition and innovation matrices."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses all printed output."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nSpecifies the name of the SAS data set to be used by the procedure. If the DATA= option \nis omitted, the most recently created SAS data set is used."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"LAGMAX=","ProcedureOptionHelp":{"#cdata":"[Syntax: LAGMAX=k] \n      \nSpecifies the number of lags for which the sample autocovariance matrix is computed. The LAGMAX= \noption controls the number of lags printed in the schematic representation of the autocorrelations."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOCENTER","ProcedureOptionHelp":{"#cdata":"Prevents subtraction of the sample mean from the input series (after any specified differencing) \nbefore the analysis."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ARMAX=","ProcedureOptionHelp":{"#cdata":"[Syntax: ARMAX=n] \n      \nSpecifies the maximum order of the preliminary autoregressive models. The ARMAX= option \ncontrols the autoregressive orders for which information criteria are printed, and controls \nthe number of lags printed in the schematic representation of partial autocorrelations. The \ndefault is ARMAX=10."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MINIC","ProcedureOptionHelp":{"#cdata":"Writes to the OUTAR= data set only the preliminary Yule-Walker estimates for the VAR model \nthat produces the minimum AIC."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTAR=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTAR=SAS-data-set] \n      \nWrites the Yule-Walker estimates of the preliminary autoregressive models to a SAS data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"PRINTOUT=","ProcedureOptionHelp":{"#cdata":"Determines the amount of detail printed."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"SHORT","@Value2":"LONG","@Value3":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Prints the output for the preliminary autoregressive models, and rhe descriptive statistics  and state space model estimation output. This is the default.","@ToolTip2":"Prints the lagged covariance matrices, the partial autoregressive matrices, and estimates of  the residual covariance matrices from the sequence of autoregressive models.","@ToolTip3":"Suppresses the output for the preliminary autoregressive models. The descriptive statistics  and state space model estimation output are still printed."}},{"ProcedureOptionName":"CANCORR","ProcedureOptionHelp":{"#cdata":"Prints the canonical correlations and information criterion for each candidate state vector \nconsidered."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"DIMMAX=","ProcedureOptionHelp":{"#cdata":"[Syntax: DIMMAX=n] \n      \nSpecifies the upper limit to the dimension of the state vector. The DIMMAX= option can be used \nto limit the size of the model selected. The default is DIMMAX=10."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PASTMIN=","ProcedureOptionHelp":{"#cdata":"[Syntax: PASTMIN=n] \n      \nSpecifies the minimum number of lags to include in the canonical correlation analysis. \nThe default is PASTMIN=0."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SIGCORR=","ProcedureOptionHelp":{"#cdata":"[Syntax: SIGCORR=value] \n      \nSpecifies the multiplier of the degrees of freedom for the penalty term in the information \ncriterion used to select the state space form. The default is SIGCORR=2. The larger the value \nof the SIGCORR= option, the smaller the state vector tends to be. Hence, a large value causes \na simpler model to be fit."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"COVB","ProcedureOptionHelp":{"#cdata":"Prints the inverse of the observed information matrix for the parameter estimates. This matrix \nis an estimate of the covariance matrix for the parameter estimates."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"DETTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: DETTOL=value] \n      \nSpecifies the convergence criterion. The DETTOL= and PARMTOL= option values are used \ntogether to test for convergence of the estimation process. If, during an iteration, \nthe relative change of the parameter estimates is less than the PARMTOL= value and the \nrelative change of the determinant of the innovation variance matrix is less than the \nDETTOL= value, then iteration ceases and the current estimates are accepted. The default \nis DETTOL=1E\u20135."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ITPRINT","ProcedureOptionHelp":{"#cdata":"Prints the iterations during the estimation process."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"KLAG=","ProcedureOptionHelp":{"#cdata":"[Syntax: KLAG=n] \n      \nSets an upper limit for the number of lags of the sample autocovariance matrix used in \ncomputing the approximate likelihood function. If the data have a strong moving average \ncharacter, a larger KLAG= value might be necessary to obtain good estimates. The default \nis KLAG=15."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXIT=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXIT=n] \n      \nSets an upper limit to the number of iterations in the maximum likelihood or conditional \nleast squares estimation. The default is MAXIT=50."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOEST","ProcedureOptionHelp":{"#cdata":"Suppresses the final maximum likelihood estimation of the selected model."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTMODEL=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTMODEL=SAS-data-set] \n      \nWrites the parameter estimates and their standard errors to a SAS data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"PARMTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: PARMTOL=value] \n      \nSpecifies the convergence criterion. The DETTOL= and PARMTOL= option values are used \ntogether to test for convergence of the estimation process. If, during an iteration, \nthe relative change of the parameter estimates is less than the PARMTOL= value and \nthe relative change of the determinant of the innovation variance matrix is less than \nthe DETTOL= value, then iteration ceases and the current estimates are accepted. The \ndefault is PARMTOL=0.001."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"RESIDEST","ProcedureOptionHelp":{"#cdata":"Computes the final estimates by using conditional least squares on the raw data. This type \nof estimation might be more stable than the default maximum likelihood method but is \nusually more computationally expensive."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SINGULAR=","ProcedureOptionHelp":{"#cdata":"[Syntax: SINGULAR=value] \n      \nSpecifies the criterion for testing for singularity of a matrix. A matrix is declared \nsingular if a scaled pivot is less than the SINGULAR= value when sweeping the matrix. \nThe default is SINGULAR=1E\u20137."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"BACK=","ProcedureOptionHelp":{"#cdata":"[Syntax: BACK=n] \n      \nStarts forecasting n periods before the end of the input data. The BACK= option value \nmust not be greater than the number of observations. The default is BACK=0."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"INTERVAL=","ProcedureOptionHelp":{"#cdata":"[Syntax: INTERVAL=interval] \n      \nSpecifies the time interval between observations. The INTERVAL= value is used in conjunction \nwith the ID variable to check that the input data are in order and have no missing periods. \nThe INTERVAL= option is also used to extrapolate the ID values past the end of the input data."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"INTPER=","ProcedureOptionHelp":{"#cdata":"[Syntax: INTPER=n] \n      \nSpecifies that each input observation corresponds to n time periods. For example, \nthe options INTERVAL=MONTH and INTPER=2 specify bimonthly data and are equivalent \nto specifying INTERVAL=MONTH2. If the INTERVAL= option is not specified, the INTPER= \noption controls the increment used to generate ID values for the forecast observations. \nThe default is INTPER=1."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LEAD=","ProcedureOptionHelp":{"#cdata":"[Syntax: LEAD=n] \n      \nSpecifies how many forecast observations are produced. The forecasts start at the \npoint set by the BACK= option. The default is LEAD=0, which produces no forecasts."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set] \n      \nWrites the residuals, actual values, forecasts, and forecast standard errors to a SAS \ndata set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"PRINT","ProcedureOptionHelp":{"#cdata":"Prints the forecasts."},"ProcedureOptionType":"S"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variable ... ; \n\nA BY statement can be used with the STATESPACE procedure to obtain separate analyses \non observations in groups defined by the BY variables."},"StatementOptions":null},{"StatementName":"FORM","StatementHelp":{"#cdata":"Syntax: FORM variable value ... ; \n\nThe FORM statement specifies the number of times a variable is included in the state vector. \nValues can be specified for any variable listed in the VAR statement. If a value is specified\nfor each variable in the VAR statement, the state vector for the state space model is entirely\nspecified, and automatic selection of the state space model is not performed.\n\nThe following statements illustrate the use of the FORM statement: \n\n   proc statespace data=in;\n      var x y;\n      form x 3 y 2;\n   run;"},"StatementOptions":null},{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variable ; \n\nThe ID statement specifies a variable that identifies observations in the input data set. \nThe variable specified in the ID statement is included in the OUT= data set. The values \nof the ID variable are extrapolated for the forecast observations based on the values of \nthe INTERVAL= and INTPER= options."},"StatementOptions":null},{"StatementName":"INITIAL","StatementHelp":{"#cdata":"Syntax: INITIAL F(row,column)= value ...G(row, column)= value ... ; \n\nThe INITIAL statement gives initial values to the specified elements of the F and G matrices. \nThese initial values are used as starting values for the iterative estimation."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"F=","StatementOptionHelp":{"#cdata":"[Syntax: F(row,column)=value] \n      \nInitializes the specified elements of the F matrix to the specified value."},"StatementOptionType":"S|V"},{"StatementOptionName":"G=","StatementOptionHelp":{"#cdata":"[Syntax: G(row,column)=value] \n      \nInitializes the specified elements of the G matrix to the specified value."},"StatementOptionType":"S|V"}]}},{"StatementName":"RESTRICT","StatementHelp":{"#cdata":"Syntax:  RESTRICT F(row,column)= value ...G(row,column)= value ... ; \n\nThe RESTRICT statement restricts the specified elements of the F and G matrices to the \nspecified values. \n\nTo use the restrict statement, you need to know the form of the model. Either specify \nthe form of the model with the FORM statement, or do a preliminary run (perhaps with \nthe NOEST option) to find the form of the model that PROC STATESPACE selects for the data. \n\nThe following is an example of a RESTRICT statement: \n\n   restrict f(3,2)=0 g(4,1)=0 g(5,1)=0 ;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"F=","StatementOptionHelp":{"#cdata":"[Syntax: F (row,column)= value] \n      \nRestricts the specified elements of the F matrix to the specified value."},"StatementOptionType":"S|V"},{"StatementOptionName":"G=","StatementOptionHelp":{"#cdata":"[Syntax: G (row,column)= value] \n      \nRestricts the specified elements of the G matrix to the specified value."},"StatementOptionType":"S|V"}]}},{"StatementName":"VAR","StatementHelp":{"#cdata":"Syntax: VAR variable (difference, difference, ...) ... ; \n\nThe VAR statement specifies the variables in the input data set to model and forecast. \nThe VAR statement also specifies differencing of the input variables. The VAR statement \nis required. \n\nDifferencing is specified by following the variable name with a list of difference periods \nseparated by commas. \n\nThe order in which variables are listed in the VAR statement controls the order in which \nvariables are included in the state vector. Usually, potential inputs should be listed \nbefore potential outputs."},"StatementOptions":null}]}}}