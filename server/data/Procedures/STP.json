{"Procedure":{"Name":"STP","ProductGroup":"SAS STORED PROCESSES","ProcedureHelp":{"#cdata":"Syntax: PROC STP PROGRAM=\u201cmetadata-path-of-stored-process\u201d <ODSOUT=STORE | REPLAY>; \n  INPUTDATA stored-process-data-file=member-name | \u201cdata-set-path\u201d; \n  INPUTFILE stored-process-file<=local-fileref | \u201clocal-file-path\u201d> ...; \n  INPUTPARAM parameter-name<=\u201dparameter-value\u201d> <parameter-name<=\u201dparameter-value\u201d>>; \n  LIST< GROUP=level | (level1...leveln)>; \n  LOG FILE=local-fileref | local-file-path\n  OUTPUTDATA stored-process-data-file=member-name | \u201cdata-set-path\u201d; \n  OUTPUTFILE stored-process-file<=local-fileref | \u201clocal-file-path\u201d> ...; \n  OUTPUTPARAM parameter-name<=local-variable-name>; \n    \nThe STP procedure enables stored process execution from a SAS program. PROC STP \ncan be executed in an interactive, batch, or server SAS session and can also be \nexecuted by another stored process. \n\nThe stored process executes locally, and it is executed in an executive created \nfor the exclusive use of the stored process. The executive is a child of the \nPROC STP executive and so has visibility to the parent librefs and filerefs, \nbut it has its own WORK library and macro symbol table. Although PROC STP \nexecutes stored processes on the local machine, the stored processes actually \nrun within their own stored process environment. Values can be passed between \nthe SAS environment and the stored process environment via the PROC STP INPUT \nand OUTPUT statements \n\nNote: PROC STP must have access to the stored process metadata in order to locate \nthe stored process source code. PROC STP also checks input parameters against the \ninput parameters that are defined in the metadata. In order to specify the metadata \nserver and connection profile to use with PROC STP, use the following system \noptions: METASERVER, METAPORT, METAUSER, and METAPASS. Define these options before \nrunning PROC STP."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"PROGRAM=","ProcedureOptionHelp":{"#cdata":"Syntax: PROGRAM=\u201cmetadata-path-of-stored-process\u201d\n      \nSpecifies the metadata location of the stored process to be executed."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ODSOUT=","ProcedureOptionHelp":{"#cdata":"Syntax: ODSOUT=STORE | REPLAY \n\nSpecifies a destination for ODS output from the stored process. \n\nIf you specify STORE, then the ODS output is stored so that it can be used by \nsubsequent SAS statements.\n\nIf you specify REPLAY, then the ODS output is displayed in the Output window \nof the SAS windowing environment."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"STORE","@Value2":"REPLAY"},"ProcedureOptionToolTips":{"@ToolTip1":"If you specify STORE, then the ODS output is stored so that it can be used by  subsequent SAS statements.","@ToolTip2":"If you specify REPLAY, then the ODS output is displayed in the Output window  of the SAS windowing environment."}}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"INPUTDATA","StatementHelp":{"#cdata":"Syntax: INPUTDATA stored-process-data-file=member-name | \u201cdata-set-path\u201d; \n\nDefines input data files for the execution of the stored process.\n\nRequired Argument:\nstored-process-data-file \n  specifies the name of an input data file that is defined by the stored process metadata. \n  This name corresponds to an input parameter (macro variable) that is visible to the stored \n  process program. Specify the name of the input data file in one of the following ways: \n  \n  member-name -- specify a one- or two-level name of a SAS data set or view. The stored process \n  accesses the data file directly through a temporary libref.  \n  \n  \u201cdata-set-path\u201d -- provide alternate syntax for specifying a local data set. As with the \n  member-name syntax, the stored process accesses the data file directly through a temporary libref.  \n\nDetails:\nThe INPUTDATA statement passes a data file that is known within the PROC STP environment \nto the stored process environment. The stored process must be defined to use input data \nfiles in metadata before the INPUTDATA statement can be used. Multiple INPUTDATA statements \ncan be specified in a single procedure call. PROC STP prepends the INPUTDATA label with \n_SOURCE_, in order to be compliant with how data sources are handled in SAS Management Console."},"StatementOptions":null},{"StatementName":"INPUTFILE","StatementHelp":{"#cdata":"Syntax: INPUTFILE stored-process-file<=local-fileref | \u201clocal-file-path\u201d> ...; \n\nDefines input files for the execution of the stored process.\n\nRequired Argument:\nstored-process-file \n  specifies the name of an input file that is defined by the stored process metadata. \n  This name corresponds to a fileref that is visible to the stored process program. \n  You can specify the name of the input file in one of the following ways: \n  local-fileref -- specify the name of a local fileref. The contents of the fileref are \n  read and copied to a temporary fileref and then made available to the stored process. \n  The short form of the INPUTFILE statement, INPUTFILE stored-process-file;, is equivalent \n  to INPUTFILE stored-process-file=stored-process-file;.  \n  \n  \u201clocal-file-path\u201d -- specify the path of a local file. A fileref is assigned for the stored \n  process to access the file directly.  \n\nDetails:\nThe stored process must be defined to use input files in metadata before the INPUTFILE statement \ncan be used. Multiple INPUTFILE statements can be specified in a single procedure call."},"StatementOptions":null},{"StatementName":"INPUTPARAM","StatementHelp":{"#cdata":"Syntax: INPUTPARAM parameter-name<=\u201dparameter-value\u201d> \n<parameter-name<=\u201dparameter-value\u201d>>; \n\nDefines input parameters for the execution of the stored process.\n\nRequired Argument:\nparameter-name<=\u201cparameter-value\u201d> \n  specifies input parameter names, or specifies input parameters as name/value pairs \n  where the values are quoted strings. Each name or name/value pair is converted to a \n  SAS macro, which can be used in the stored process. The parameter name is the name \n  of the macro variable that contains the parameter value. The parameter name must be \n  a valid macro variable name and cannot be longer than 32 characters in length. You \n  can specify a parameter value, as follows: \n  \n  \u201cparameter-value\u201d -- specify the value for the input parameter. The parameter value \n  can be any string up to 32767 characters in length.  \n\nNote: If an input parameter is defined in metadata, then the INPUTPARAM values must \nreconcile with any limitations that have been specified for them in metadata. "},"StatementOptions":null},{"StatementName":"LIST","StatementHelp":{"#cdata":"Syntax: LIST< GROUP=level | (level1...leveln)>; \n\nLists details about the stored process that are specified by the PROGRAM= option."},"StatementOptions":{"StatementOption":{"StatementOptionName":"GROUP=","StatementOptionHelp":{"#cdata":"GROUP=level | (level1...leveln)\n          \nSpecifies the level of detail that is listed about the stored process that is specified \nby the PROGRAM= option. The stored process is not executed."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"GENERAL","@Value2":"EXECUTION","@Value3":"INPUTPARAM","@Value4":"OUTPUTPARAM","@Value5":"INPUTDATA","@Value6":"OUTPUTDATA"},"StatementOptionToolTips":{"@ToolTip1":"Specify this level in order to view a list that contains the following details:  stored process name, description, creation date, modification date, keywords,  responsible parties.","@ToolTip2":"Specify this level in order to view a list that contains the following details:  logical server, source in metadata, source code repository, result type. ","@ToolTip3":"Specify this level in order to view a list that contains a list of input parameters  for this stored process that are defined in metadata or are defined via an INPUTPARAM  statement in PROC STP. Some input parameters, such as _METAPERSON, _METAUSER, and  _CLIENT, are automatically defined in metadata without user input.","@ToolTip4":"Specify this level in order to view a list that contains details about output  parameters that are defined in metadata.","@ToolTip5":"Specify this level in order to view a list that contains details about input data  streams that are defined in metadata.","@ToolTip6":"Specify this level in order to view a list that contains details about output data  streams that are defined in metadata. "}}}},{"StatementName":"LOG","StatementHelp":{"#cdata":"Syntax: LOG FILE=local-fileref | local-file-path\n\nControls the location of the stored process log.\n\nThe LOG statement enables the user to direct the PROC STP and stored process log \nto an external file. Without the LOG statement, the PROC STP logging messages go \nto the standard SAS output location."},"StatementOptions":{"StatementOption":{"StatementOptionName":"FILE=","StatementOptionHelp":{"#cdata":"[Syntax: FILE=local-fileref | local-file-path \n\nSpecifies the filename and location for the stored process log. Specify either \nan explicit local path, ending with the filename for the log, or specify a local \nfileref."},"StatementOptionType":"V"}}},{"StatementName":"OUTPUTDATA","StatementHelp":{"#cdata":"Syntax: OUTPUTDATA stored-process-data-file=member-name | \u201cdata-set-path\u201d; \n\nDefines output data files that are produced by the execution of the stored process.\n\nRequired Argument:\nstored-process-data-file \n  specifies the name of an output data file that is defined by the stored process metadata. \n  This name corresponds to an output parameter (macro variable) that is visible to the stored \n  process program. Specify the name of the output data file in one of the following ways: \n  member-name specify a one- or two-level name of a SAS data set or view. The stored process \n  accesses the data file directly through a temporary libref.  \n  \n  \u201cdata-set-path\u201d -- provide alternate syntax for specifying a local data set. As with the \n  member-name syntax, the stored process accesses the data file directly through a temporary \n  libref.  \n\nDetails:\nThe stored process must be defined to use output data files in metadata before the OUTPUTDATA \nstatement can be used. Multiple OUTPUTDATA statements can be specified in a single procedure \ncall. PROC STP prepends the OUTPUTDATA label with _TARGET_, in order to be compliant with how \ndata targets are handled in SAS Management Console."},"StatementOptions":null},{"StatementName":"OUTPUTFILE","StatementHelp":{"#cdata":"Syntax: OUTPUTFILE stored-process-file<=local-fileref | \u201clocal-file-path\u201d> ...; \n\nDefines output files that are produced by the execution of the stored process.\n\nRequired Argument:\n  stored-process-file \n  specifies the name of an output file that is defined by the stored process metadata. \n  This name corresponds to a fileref that is visible to the stored process program. You \n  can specify the name of the output file in one of the following ways: \n  \n  local-fileref -- specify the name of a local fileref. The contents of the stored \n  process output file are copied to this fileref. The short form of the OUTPUTFILE \n  statement, OUTPUTFILE stored-process-file;, is equivalent to \n  \n  OUTPUTFILE stored-process-file=stored-process-file;.  \n  \n  \u201clocal-file-path\u201d -- specify the path of a local file. A fileref is assigned for \n  the stored process to access the file directly.  \n\nDetails:\nThe stored process must be defined to use output files in metadata before the OUTPUTFILE \nstatement can be used. Multiple OUTPUTFILE statements can be specified in a single procedure \ncall."},"StatementOptions":null},{"StatementName":"OUTPUTPARAM","StatementHelp":{"#cdata":"Syntax: OUTPUTPARAM parameter-name<=local-variable-name>; \n\nDefines output parameters that are produced by the execution of the stored process.\n\nRequired Argument:\nparameter-name \n  specifies output parameter names, or specifies output parameters as name/value pairs \n  where the values are local macro variables. Each name or name/value pair is converted \n  to a SAS macro, which can be used in the stored process. The parameter name is the name \n  of the macro variable that contains the parameter value. The parameter name must be a \n  valid macro variable name and cannot be longer than 32 characters in length. You can \n  specify the name of a local macro variable, as follows: \n  \n  local-variable-name -- specify the name of a local macro variable that contains the \n  output parameter value. The macro variable is set to the output parameter value at the \n  completion of stored process execution. If local-variable-name is omitted, the parameter \n  name is used as the local variable name. The local variable is not set if the stored \n  process fails to set an output parameter value.  \n\nDetails:\nThe OUTPUTPARAM statement identifies macros within the stored process environment to \nretrieve and use in the PROC STP SAS session. You can also create local macros within \nthe PROC STP SAS session and assign the stored process output parameter to it."},"StatementOptions":null}]}}}