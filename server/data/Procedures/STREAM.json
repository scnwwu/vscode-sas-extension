{"Procedure":{"Name":"STREAM","ProductGroup":"BASE","#comment":{},"ProcedureHelp":{"#cdata":"Syntax: PROC STREAM OUTFILE= fileref <option(s)>; \n    BEGIN \n    text-1\n    <text-n> \n    ;;;;\n    \nwhere:\ntext \n  specifies the SAS statements or macros to use with PROC STREAM.\n  \nThe STREAM procedure enables you to process an input stream that consists of arbitrary text that \ncan contain SAS macro specifications. The macros are executed and expanded while the other text \nin the input stream is preserved. The text stream is not validated as SAS syntax. The output stream \nis sent to an external file that is referenced by a fileref, and that can be defined to use any \ntraditional SAS output destination."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"OUTFILE=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTFILE=fileref] \n      \nSpecifies the file where all tokens are written. \n\nThe LRECL specification for the fileref is used. If no LRECL is given, then the default value \nfor the global LRECL= option, which is 32,767 bytes, is used. Unless you use the PRESCOL option, \nall tokens are streamed out with the proper number of intervening blanks between tokens. No token \nis broken between records. Also, no stream of tokens is broken between records unless there is at \nleast one blank within them. For example, <table>X</table> will not be broken between records,\nbut <table> X </table> can be broken where you see the blanks (before and after the X)."},"ProcedureOptionType":"RV"},{"ProcedureOptionName":"MOD","ProcedureOptionHelp":{"#cdata":"Specifies that the output file is appended to instead of being overwritten."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOABSSCMT","ProcedureOptionHelp":{"#cdata":"Specifies whether comments are written to the output stream. \n      \nIf PL/I programming language style comments appear (/* comments */), all text between the comment \ncharacters (/* and */) appears in the output stream. If this option is omitted, the PL/I-style \ncomments do not appear in the output stream. Note that if NOABSSCMT is set, it is strongly suggested \nthat QUOTING= also be set, because single quotation marks (such as in the word don't) can commonly \nappear in comments."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PRESCOL","ProcedureOptionHelp":{"#cdata":"Indicates that an attempt is made to preserve the columns of the original input file. \n      \nUsing this option is not as successful if there is macro substitution or if the record size exceeds \n32,767 bytes. In this case, macro expansion might affect column location. \n\nThe PRESCOL option improves the validity of RTF files that are included with the %INCLUDE macro."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"QUOTING=","ProcedureOptionHelp":{"#cdata":"Syntax: QUOTING = SINGLE | DOUBLE | BOTH \n      \nSpecifies how quotation marks are handled. \n\nSINGLE\n  specifies that single quotation marks are treated like any other character. If you use the \n  SINGLE option and macro references occur within single quotation marks, such as '&hello', \n  the macro references are expanded.\nDOUBLE\n  specifies that double quotation marks are treated like any other character.\nBOTH\n  specifies that both SINGLE and DOUBLE options are used."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"SINGLE","@Value2":"DOUBLE","@Value3":"BOTH"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies that single quotation marks are treated like any other character. If you use the SINGLE  option and macro references occur within single quotation marks, such as '&hello', the macro references are expanded.","@ToolTip2":"Specifies that double quotation marks are treated like any other character.","@ToolTip3":"Specifies that both SINGLE and DOUBLE options are used."}},{"ProcedureOptionName":"RESETDELIM=","ProcedureOptionHelp":{"#cdata":"[Syntax: RESETDELIM='label'] \n      \nIndicates a special marker token. \n\nThis option is used when there is a need for statements to be expanded, such as the %INCLUDE \nand the %LET statements. These statements must begin on a statement boundary. If your syntax \ndoes not allow for a statement boundary, then the given label, followed by a semicolon, can\nbe introduced in the input stream to satisfy the tokenizer requirements. The label and semicolon \nare not sent to the output file. \n\nThe specification and usage is not case-sensitive. There is no default value for RESETDELIM=. \n\nAs of the second maintenance release of SAS 9.3, PROC STREAM checks for the existence of a macro \nvariable called &STREAMDELIM. If that macro variable exists, it is used as is. If it does not exist, \nPROC STREAM verifies whether the RESETDELIM= option was given. If this is the case, the macro variable \n&STREAMDELIM is set to the value of the RESETDELIM= option. If the RESETDELIM= option is not given, \nPROC STREAM constructs a unique value for the &STREAMDELIM macro variable based on the current datetime value.\n\nWith this consideration, you can add &STREAMDELIM into the input for PROC STREAM. When this macro variable \nis seen, it is assumed that optional keywords will follow. A closing semicolon is then expected. All tokens \nfrom the &STREAMDELIM value up to and including the semicolon are not emitted to the output stream, but are \ninstead special control information items for PROC STREAM.\n\nIf you need to provide a %INCLUDE statement in your input, but a semicolon does not precede it, then you \nmust add the following statement before the %INCLUDE statement:\n\n&STREAMDELIM; \n\nThis statement forces a semicolon to be seen by the tokenizer, but it is absorbed by PROC STREAM.\n\nThe following optional keywords can follow &STREAMDELIM:\n  NEWLINE\n    specifies that a new line is emitted to the output file.\n  READFILE filename\n    specifies that the given filename is opened, and its contents are read as is and written to the output \n    file. There is no macro expansion of the contents of this file, and new lines are preserved. This differs \n    from %INCLUDE, where macro expansion occurs and new lines are ignored."},"ProcedureOptionType":"V"}]},"ProcedureStatements":null}}