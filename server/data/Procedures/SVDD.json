{"Procedure":{"Name":"SVDD","ProductGroup":"CAS|VIYA|DATA MINING AND MACHINE LEARNING","ProcedureHelp":{"#cdata":"Syntax: PROC SVDD <options>; \n    CODE FILE=filename; \n    ID variables; \n    INPUT variables </ <LEVEL=INTERVAL | NOMINAL>; \n    WEIGHT variable; \n    KERNEL kernel-type / <kernel-parameter>; \n    SOLVER solver-type / <options>; \n    SAVESTATE RSTORE=CAS-libref.data-table; \n    \nThe SVDD procedure implements the support vector data description (SVDD) algorithm (Tax and Duin 2004). \nSVDD is a one-class classification technique that is useful in applications where data that belong to \none class are abundant but data about any other class are scarce or missing. Fraud detection, equipment \nhealth monitoring, and process control are some examples of application areas where the majority of the \ndata belong to one class. You can use SVDD to model such one-class data and subsequently use the model \nto perform outlier detection."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table\n      \nNames the input data table for PROC SVDD to use. The default is the most recently created data table.\nCAS-libref.data-table is a two-level name, where\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to the data, and a session identifier, which\n    defaults to the active session but which can be explicitly defined in the LIBNAME\n    statement.\n    \n  data-table specifies the name of the input data table."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"NBINS=","ProcedureOptionHelp":{"#cdata":"Syntax: NBINS=number \n      \nSpecifies the number of bins to display, where number must be an integer greater than 2. By default, NBINS=20."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses the generation of ODS outputs. If you specify this option, no ODS tables are generated."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NTHREADS=","ProcedureOptionHelp":{"#cdata":"Syntax: NTHREADS=number-of-threads\n      \nSpecifies the number of threads to use for the computation. The default value is the number \nof CPUs available in the machine."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUTLIER_FRACTION=|FRACTION=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTLIER_FRACTION=number | FRACTION=number FRAC=number \n      \nSpecifies the expected fraction of the training data that consists of outliers, where number must \nbe a real number between 0 and 1. \n\nBy default, OUTLIER_FRACTION=1E\u20136. "},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SCORE","ProcedureOptionHelp":{"#cdata":"Scores the observations in the data table that is specified in the DATA= option and generates a frequency \ntable of _SVDDDISTANCE_ values. "},"ProcedureOptionType":"S"},{"ProcedureOptionName":"STANDARDIZE|STD","ProcedureOptionHelp":{"#cdata":"Standardizes the variables that are specified in the INPUT statement with LEVEL=INTERVAL, by subtracting \ntheir mean and dividing by their standard deviation."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"USECONSTANTCOLUMN|UCC","ProcedureOptionHelp":{"#cdata":"Uses variables that have constant values for SVDD scoring. By default, the variables that have constant \nvalues are ignored. This option is useful in scenarios where certain variables have constant value in \nthe training data, but variation in the values of those variables is expected in the scoring data. \nThis option ensures that variables with constant values are used for scoring."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"OUTSV=|SV=","ProcedureOptionHelp":{"#cdata":"Syntax: OUTSV=CAS-libref.data-table | SV=CAS-libref.data-table \n      \nSpecifies the output data to contain the training data observations that are identified as support \nvectors, the corresponding value of the Lagrange multiplier (column _SVDDALPHA_), and an indicator \n(column _SVDDOUTLIER_) that flags the position of the support vectors relative to the data boundary. \nSupport vectors whose _SVDDOUTLIER_ value is 0 fall on the data boundary, and support vectors whose \n_SVDDOUTLIER_ value is 1 fall outside the data boundary. CAS-libref.data-table is a two-level name, \nwhere CAS-libref refers to the caslib and session identifier, and data-table specifies the name of \nthe output data table."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"CODE","StatementHelp":{"#cdata":"Syntax: CODE FILE=filename; \n      \nThe CODE statement generates SAS DATA step code that mimics the computations that are performed. The\ngenerated SAS DATA step code can be used for scoring new observations. Only one CODE statement is\nprocessed. If you specify multiple CODE statements, only the first one is used. \n\nThe CODE statement is optional. If you do not include a CODE statement, no score code is generated."},"StatementOptions":{"StatementOption":{"StatementOptionName":"FILE=","StatementOptionHelp":{"#cdata":"Syntax: FILE=filename \n          \nSpecifies the filename of the file to write the SAS score code to."},"StatementOptionType":"V"}}},{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variables;\n\nThe ID statement lists one or more variables to be copied from the input data table to the output \ndata tables that are specified in the OUTSV= option in the PROC SVDD statement and the RSTORE= \noption in the SAVESTATE statement."},"StatementOptions":null},{"StatementName":"INPUT","StatementHelp":{"#cdata":"Syntax: INPUT variables </ LEVEL=NOMINAL > ;\n      \nThe INPUT statement specifies the names of variables to be used in training. Only interval, binary, \nand nominal variables are accepted. If you want to use different options for different variables, \nyou can specify multiple INPUT statements."},"StatementOptions":{"StatementOption":{"StatementOptionName":"LEVEL=","StatementOptionHelp":{"#cdata":"Syntax: LEVEL=INTERVAL | NOMINAL \n          \nSpecifies whether the specified input variables are continuous or categorical.\n\nBy default, LEVEL=INTERVAL for numeric variables and LEVEL=NOMINAL for categorical variables. \nBinary variables are considered to be categorical variables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"INTERVAL","@Value2":"NOMINAL"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the input variables are continuous.","@ToolTip2":"Specifies that the input variables are categorical."}}}},{"StatementName":"KERNEL","StatementHelp":{"#cdata":"Syntax: KERNEL kernel-type / kernel-parameter;\n\nThe KERNEL statement specifies the type of kernel and any associated parameters to be used during training. \nOnly the radial basis kernel function is supported."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"RBF","StatementOptionHelp":{"#cdata":"[kernel-type]\n          \nUses a radial basis function (also known as the Gaussian kernel function) during training."},"StatementOptionType":"RS"},{"StatementOptionName":"BW=","StatementOptionHelp":{"#cdata":"Syntax: BW=s\n          \n[kernel-parameter]\n\nSpecify the bandwidth parameter as the kernel-parameter, in the form BW=s, where s must be a positive \nnonzero real number."},"StatementOptionType":"V"}]}},{"StatementName":"SAVESTATE","StatementHelp":{"#cdata":"Syntax: SAVESTATE RSTORE=CAS-libref.data-table;  \n      \nThe SAVESTATE statement creates an analytic store for the model and saves it as a binary object \nin a data table. You can use the analytic store in the ASTORE procedure to score new data."},"StatementOptions":{"StatementOption":{"StatementOptionName":"RSTORE=","StatementOptionHelp":{"#cdata":"Syntax: RSTORE=CAS-libref.data-table \n          \nSpecifies the filename of the file in which to save the analytic store. CAS-libref.data-table \nis a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table \nspecifies the name of the output data table."},"StatementOptionType":"V"}}},{"StatementName":"SOLVER","StatementHelp":{"#cdata":"Syntax: SOLVER solver-type </options>;\n\nThe SOLVER statement specifies the type of optimization solver for SVDD training."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ACTSET","StatementOptionHelp":{"#cdata":"Uses the active-set solver for SVDD training."},"StatementOptionType":"RS"},{"StatementOptionName":"STOCHS","StatementOptionHelp":{"#cdata":"Uses a stochastic subset solver for SVDD training."},"StatementOptionType":"RS"},{"StatementOptionName":"STOL=","StatementOptionHelp":{"#cdata":"Syntax: STOL=number \n          \nSpecifies the tolerance value for the solver, where number must be a real number greater than 0. \nTo obtain a solution more quickly, specify a higher value for number. By default, STOL=1E\u20136."},"StatementOptionType":"V"},{"StatementOptionName":"MAXITER=","StatementOptionHelp":{"#cdata":"Syntax: MAXITER=number \n          \nSpecifies the maximum number of iterations of the solver, where number must be an integer greater \nthan 0. To obtain a solution more quickly, specify a lower value for number. By default, MAXITER \nis set to 25 for the active-set solver and 200 for the stochastic subset solver."},"StatementOptionType":"V"},{"StatementOptionName":"MAXSV=","StatementOptionHelp":{"#cdata":"Syntax: MAXSV=number \n          \nSpecifies the maximum number of support vectors, where number must be an integer greater than 0. \nTo obtain a solution more quickly, specify a lower value for number. By default, MAXSV=3500.\n\nNote: This option is valid only when the solver-type is STOCHS."},"StatementOptionType":"V"},{"StatementOptionName":"NSAMP=","StatementOptionHelp":{"#cdata":"Syntax: NSAMP=number \n          \nSpecifies the number of observations that are sampled in each iteration of the stochastic solver, \nwhere number must be an integer greater than 0. To obtain a solution more quickly, specify a lower \nvalue for number. By default, NSAMP=10.\n\nNote: This option is valid only when the solver-type is STOCHS."},"StatementOptionType":"V"},{"StatementOptionName":"RTOL=","StatementOptionHelp":{"#cdata":"Syntax: RTOL=number \n          \nSpecifies the tolerance value that is used to detect convergence of threshold value, where number \nmust be a real number greater than 0. To obtain a solution more quickly, specify a higher value \nfor number. By default, RTOL=1E\u20132.\n\nNote: This option is valid only when the solver-type is STOCHS."},"StatementOptionType":"V"},{"StatementOptionName":"CTOL=","StatementOptionHelp":{"#cdata":"Syntax: CTOL=number \n          \nSpecifies the tolerance value that is used for detecting convergence of the center, where number \nmust be a real number greater than 0. To obtain a solution more quickly, specify a higher value \nfor number. By default, CTOL=1E\u20132.\n\nNote: This option is valid only when the solver-type is STOCHS."},"StatementOptionType":"V"},{"StatementOptionName":"NMATCH=","StatementOptionHelp":{"#cdata":"Syntax: NMATCH=number \n          \nSpecifies a convergence criterion for the stochastic solver, where number must be an integer greater \nthan 0. If the radius and center values converge for number of consecutive iterations, then convergence \nis declared. By default, NMATCH=5. To obtain a solution more quickly, specify a lower value for number.\n\nNote: This option is valid only when the solver-type is STOCHS."},"StatementOptionType":"V"},{"StatementOptionName":"SEED=","StatementOptionHelp":{"#cdata":"Syntax: SEED=number \n          \nSpecifies a seed value that is used for selecting a random sample, where number must be an integer. \nThe default value of SEED is based on the system clock. If you want reproducible results, specify \nan integer for number.\n\nNote: This option is valid only when the solver-type is STOCHS."},"StatementOptionType":"V"}]}},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable;\n\nThe WEIGHT statement names a variable in the training data that specifies the weight to be assigned \nto each observation. The values of variable must be nonnegative. Observations that have higher weight \nhave a better chance of being designated as support vectors."},"StatementOptions":null}]}}}