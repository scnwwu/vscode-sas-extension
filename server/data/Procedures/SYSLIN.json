{"Procedure":{"Name":"SYSLIN","ProductGroup":"SAS/ETS","ProcedureHelp":{"#cdata":"Syntax: PROC SYSLIN options ; \n    BY variables ; \n    ENDOGENOUS variables ; \n    IDENTITY identities ; \n    INSTRUMENTS variables ; \n    MODEL response = regressors / options ; \n    OUTPUT PREDICTED= variable RESIDUAL= variable ; \n    RESTRICT restrictions ; \n    SRESTRICT restrictions ; \n    STEST equations ; \n    TEST equations ; \n    VAR variables ; \n    WEIGHT variable ;\n\nThe SYSLIN procedure estimates parameters in an interdependent system of linear regression equations. \n\nOrdinary least squares (OLS) estimates are biased and inconsistent when current period endogenous variables\nappear as regressors in other equations in the system. The errors of a set of related regression equations\nare often correlated, and the efficiency of the estimates can be improved by taking these correlations into\naccount. The SYSLIN procedure provides several techniques that produce consistent and asymptotically efficient\nestimates for systems of regression equations. \n\nThe SYSLIN procedure provides the following estimation methods: \n\n  ordinary least squares (OLS), two-stage least squares (2SLS), limited information maximum likelihood (LIML), \n  K-class, seemingly unrelated regressions (SUR), iterated seemingly unrelated regressions (ITSUR), \n  three-stage least squares (3SLS), iterated three-stage least squares (IT3SLS), full information maximum \n  likelihood (FIML), minimum expected loss (MELO), \n\nOther features of the SYSLIN procedure enable you to: \n\n  impose linear restrictions on the parameter estimates, test linear hypotheses about the parameters, \n  write predicted and residual values to an output SAS data set, write parameter estimates to an output \n  SAS data set, write the crossproducts matrix (SSCP) to an output SAS data set, use raw data, correlations, \n  covariances, or cross products as input"},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nSpecifies the input data set. If the DATA= option is omitted, the most recently created \nSAS data set is used. In addition to ordinary SAS data sets, PROC SYSLIN can analyze data \nsets of TYPE=CORR, TYPE=COV, TYPE=UCORR, TYPE=UCOV, and TYPE=SSCP."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set] \n      \nSpecifies an output SAS data set for residuals and predicted values. The OUT= option is used \nin conjunction with the OUTPUT statement."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTEST=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTEST=SAS-data-set] \n      \nWrites the parameter estimates to an output data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTCOV|COVOUT","ProcedureOptionHelp":{"#cdata":"Writes the covariance matrix of the parameter estimates to the OUTEST= data set in addition \nto the parameter estimates."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTCOV3|COV3OUT","ProcedureOptionHelp":{"#cdata":"Writes covariance matrices for each model in a system to the OUTEST= data set when the 3SLS, \nSUR, or FIML option is used."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTSSCP=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTSSCP=SAS-data-set] \n      \nWrites the sum-of-squares-and-crossproducts matrix to an output data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"2SLS","ProcedureOptionHelp":{"#cdata":"Specifies the two-stage least squares estimation method."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"3SLS","ProcedureOptionHelp":{"#cdata":"Specifies the three-stage least squares estimation method."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ALPHA=","ProcedureOptionHelp":{"#cdata":"[Syntax: ALPHA=value] \n      \nSpecifies Fuller\u2019s modification to the LIML estimation method."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CONVERGE=","ProcedureOptionHelp":{"#cdata":"[Syntax: CONVERGE=value] \n      \nSpecifies the convergence criterion for the iterative estimation methods IT3SLS, ITSUR, \nand FIML. The default is CONVERGE=0.0001."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"FIML","ProcedureOptionHelp":{"#cdata":"Specifies the full information maximum likelihood estimation method."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ITSUR","ProcedureOptionHelp":{"#cdata":"Specifies the iterative seemingly unrelated estimation method."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"IT3SLS","ProcedureOptionHelp":{"#cdata":"Specifies the iterative three-stage least squares estimation method."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"K=","ProcedureOptionHelp":{"#cdata":"[Syntax: K=value] \n      \nSpecifies the K-class estimation method."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LIML","ProcedureOptionHelp":{"#cdata":"Specifies the limited information maximum likelihood estimation method."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MAXITER=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXITER=n] \n      \nSpecifies the maximum number of iterations allowed for the IT3SLS, ITSUR, and FIML estimation \nmethods. The MAXITER= option can be abbreviated as MAXIT=. The default is MAXITER=30."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MELO","ProcedureOptionHelp":{"#cdata":"Specifies the minimum expected loss estimation method."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOINCLUDE","ProcedureOptionHelp":{"#cdata":"Excludes the RESTRICT statements from the final stage for the 3SLS, IT3SLS, SUR, and ITSUR \nestimation methods."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OLS","ProcedureOptionHelp":{"#cdata":"Specifies the ordinary least squares estimation method. This is the default."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SDIAG","ProcedureOptionHelp":{"#cdata":"Uses the diagonal of S instead of S to do the estimation, where S is the covariance matrix \nof equation errors."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SINGULAR=","ProcedureOptionHelp":{"#cdata":"[Syntax: SINGULAR=value] \n      \nSpecifies a criterion for testing singularity of the crossproducts matrix. This is a tuning \nparameter used to make PROC SYSLIN more or less sensitive to singularities. The value must \nbe between 0 and 1. The default is SINGULAR=1E\u20138."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SUR","ProcedureOptionHelp":{"#cdata":"Specifies the seemingly unrelated estimation method."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ALL","ProcedureOptionHelp":{"#cdata":"Specifies the CORRB, COVB, DW, I, OVERID, PLOT, STB, and XPX options for every MODEL statement."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"FIRST","ProcedureOptionHelp":{"#cdata":"Prints first-stage regression statistics for the endogenous variables regressed on the instruments. \nThis output includes sums of squares, estimates, variances, and standard deviations."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ITPRINT","ProcedureOptionHelp":{"#cdata":"Prints parameter estimates, system-weighted residual sum of squares, and at each iteration \nfor the IT3SLS and ITSUR estimation methods. For the FIML method, the ITPRINT option prints \nparameter estimates, negative of log-likelihood function, and norm of gradient vector at each \niteration."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses all printed output. Specifying NOPRINT in the PROC SYSLIN statement is equivalent \nto specifying NOPRINT in every MODEL statement."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"REDUCED","ProcedureOptionHelp":{"#cdata":"Prints the reduced form estimates. If the REDUCED option is specified, you should specify \nany IDENTITY statements needed to make the system square."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SIMPLE","ProcedureOptionHelp":{"#cdata":"Prints descriptive statistics for the dependent variables. The statistics printed include \nthe sum, mean, uncorrected sum of squares, variance, and standard deviation."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"USSCP","ProcedureOptionHelp":{"#cdata":"Prints the uncorrected sum-of-squares-and-crossproducts matrix."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"USSCP2","ProcedureOptionHelp":{"#cdata":"Prints the uncorrected sum-of-squares-and-crossproducts matrix for all variables used in the \nanalysis, including predicted values of variables generated by the procedure."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"VARDEF=","ProcedureOptionHelp":{"#cdata":"Specifies the denominator to use in calculating cross-equation error covariances and parameter \nstandard errors and covariances."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"DF","@Value2":"N","@Value3":"WEIGHT","@Value4":"WGT"},"ProcedureOptionToolTips":{"@ToolTip1":"Corrects for model degrees of freedom.","@ToolTip2":"Specifies no degrees-of-freedom correction.","@ToolTip3":"Specifies the sum of the observation weights.","@ToolTip4":"Specifies the sum of the observation weights minus the model degrees of freedom."}}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY variables ; \n\nA BY statement can be used with PROC SYSLIN to obtain separate analyses on observations \nin groups defined by the BY variables."},"StatementOptions":null},{"StatementName":"ENDOGENOUS","StatementHelp":{"#cdata":"Syntax: ENDOGENOUS variables ; \n\nThe ENDOGENOUS statement declares the jointly dependent variables that are projected \nin the first-stage regression through the instrument variables. The ENDOGENOUS statement \nis not needed for the SUR, ITSUR, or OLS estimation methods. The default ENDOGENOUS list \nconsists of all the dependent variables in the MODEL and IDENTITY statements that do not \nappear in the INSTRUMENTS statement."},"StatementOptions":null},{"StatementName":"IDENTITY|ID","StatementHelp":{"#cdata":"Syntax: IDENTITY equation ; \n\nThe IDENTITY statement specifies linear relationships among variables to write to the OUTEST= \ndata set. It provides extra information in the OUTEST= data set but does not create or compute \nvariables. The OUTEST= data set can be processed by the SIMLIN procedure in a later step. \n\nThe IDENTITY statement is also used to compute reduced form coefficients when the REDUCED \noption in the PROC SYSLIN statement is specified.\n\nThe equation given by the IDENTITY statement has the same form as equations in the MODEL \nstatement. A label can be specified for an IDENTITY statement as follows: \n\n  label: IDENTITY equation ...;"},"StatementOptions":null},{"StatementName":"INSTRUMENTS","StatementHelp":{"#cdata":"Syntax: INSTRUMENTS variables ; \n\nThe INSTRUMENTS statement declares the variables used in obtaining first-stage predicted values. \nAll the instruments specified are used in each first-stage regression. The INSTRUMENTS statement \nis required for the 2SLS, 3SLS, IT3SLS, LIML, MELO, and K-class estimation methods. The INSTRUMENTS \nstatement is not needed for the SUR, ITSUR, OLS, or FIML estimation methods."},"StatementOptions":null},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL response = regressors / options ; \n\nThe MODEL statement regresses the response variable on the left side of the equal sign against the \nregressors listed on the right side. \n\nModels can be given labels. Model labels are used in the printed output to identify the results for \ndifferent models. Model labels are also used in SRESTRICT and STEST statements to refer to parameters \nin different models. If no label is specified, the response variable name is used as the label for the \nmodel. The model label is specified as follows: \n\n  label : MODEL ...;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALL","StatementOptionHelp":{"#cdata":"Specifies the CORRB, COVB, DW, I, OVERID, PLOT, STB, and XPX options."},"StatementOptionType":"S"},{"StatementOptionName":"ALPHA=","StatementOptionHelp":{"#cdata":"[Syntax: ALPHA=value] \n          \nSpecifies the \u03b1 parameter for Fuller\u2019s modification to the LIML estimation method."},"StatementOptionType":"V"},{"StatementOptionName":"CORRB","StatementOptionHelp":{"#cdata":"Prints the matrix of estimated correlations between the parameter estimates."},"StatementOptionType":"S"},{"StatementOptionName":"COVB","StatementOptionHelp":{"#cdata":"Prints the matrix of estimated covariances between the parameter estimates."},"StatementOptionType":"S"},{"StatementOptionName":"DW","StatementOptionHelp":{"#cdata":"Prints Durbin-Watson statistics and autocorrelation coefficients for the residuals."},"StatementOptionType":"S"},{"StatementOptionName":"I","StatementOptionHelp":{"#cdata":"Prints the inverse of the crossproducts matrix for the model, (X'X)\u207b\u00b9. If restrictions are specified, the crossproducts\nmatrix printed is adjusted for the restrictions."},"StatementOptionType":"S"},{"StatementOptionName":"K=","StatementOptionHelp":{"#cdata":"[Syntax: K=value] \n          \nSpecifies K-class estimation."},"StatementOptionType":"V"},{"StatementOptionName":"NOINT","StatementOptionHelp":{"#cdata":"Suppresses the intercept parameter from the model."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Suppresses the normal printed output."},"StatementOptionType":"S"},{"StatementOptionName":"OVERID","StatementOptionHelp":{"#cdata":"Prints Basmann\u2019s (1960) test for over identifying restrictions."},"StatementOptionType":"S"},{"StatementOptionName":"PLOT","StatementOptionHelp":{"#cdata":"Plots residual values against regressors. A plot of the residuals for each regressor is printed."},"StatementOptionType":"S"},{"StatementOptionName":"STB","StatementOptionHelp":{"#cdata":"Prints standardized parameter estimates. Sometimes known as a standard partial regression \ncoefficient, a standardized parameter estimate is a parameter estimate multiplied by the \nstandard deviation of the associated regressor and divided by the standard deviation of \nthe response variable."},"StatementOptionType":"S"},{"StatementOptionName":"UNREST","StatementOptionHelp":{"#cdata":"Prints parameter estimates computed before restrictions are applied. The UNREST option is valid \nonly if a RESTRICT statement is specified."},"StatementOptionType":"S"},{"StatementOptionName":"XPX","StatementOptionHelp":{"#cdata":"Prints the model crossproducts matrix, X'X."},"StatementOptionType":"S"}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT < PREDICTED=variable > < RESIDUAL=variable > ; \n\nThe OUTPUT statement writes predicted values and residuals from the preceding model to the data set \nspecified by the OUT= option in the PROC SYSLIN statement. An OUTPUT statement must come after the \nMODEL statement to which it applies. The OUT= option must be specified in the PROC SYSLIN statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"PREDICTED=|PRED=|P=","StatementOptionHelp":{"#cdata":"[Syntax: PREDICTED=variable] \n          \n Names a new variable to contain the predicted values for the response variable."},"StatementOptionType":"V"},{"StatementOptionName":"RESIDUAL=|RESID=|R=","StatementOptionHelp":{"#cdata":"[Syntax: RESIDUAL=variable] \n          \nNames a new variable to contain the residual values for the response variable."},"StatementOptionType":"V"}]}},{"StatementName":"RESTRICT","StatementHelp":{"#cdata":"Syntax: RESTRICT equation , ..., equation ; \n\nThe RESTRICT statement places restrictions on the parameter estimates for the preceding MODEL \nstatement. Any number of RESTRICT statements can follow a MODEL statement. Each restriction is \nwritten as a linear equation. If more than one restriction is specified in a single RESTRICT \nstatement, the restrictions are separated by commas.\n\nRESTRICT statements can be given labels. The labels are used in the printed output to distinguish \nresults for different restrictions. Labels are specified as follows: \n\n  label : RESTRICT ...;\n  \nThe following is an example of the use of the RESTRICT statement, in which the coefficients \nof the regressors X1 and X2 are required to sum to 1. \n\n   proc syslin data=a;\n      model y = x1 x2;\n      restrict x1 + x2 = 1;\n   run;"},"StatementOptions":null},{"StatementName":"SRESTRICT","StatementHelp":{"#cdata":"Syntax: SRESTRICT equation , ..., equation ; \n\nThe SRESTRICT statement imposes linear restrictions that involve parameters in two or more \nMODEL statements. The SRESTRICT statement is like the RESTRICT statement but is used to impose \nrestrictions across equations, whereas the RESTRICT statement applies only to parameters in the \nimmediately preceding MODEL statement. \n\nSRESTRICT statements can be given labels. The labels are used in the printed output to distinguish \nresults for different restrictions. Labels are specified as follows: \n\n  label : SRESTRICT ...;\n\nThe following is an example of the use of the SRESTRICT statement, in which the coefficient for \nthe regressor X2 is constrained to be the same in both models. \n\n   proc syslin data=a 3sls;\n      endogenous y1 y2;\n      instruments x1 x2;\n      model y1 = y2 x1 x2;\n      model y2 = y1 x2;\n      srestrict y1.x2 = y2.x2;\n   run;"},"StatementOptions":null},{"StatementName":"STEST","StatementHelp":{"#cdata":"Syntax: STEST equation , ..., equation / options ; \n\nThe STEST statement performs an F test for the joint hypotheses specified in the statement. \nSTEST statements can be given labels. The label is used in the printed output to distinguish  \ndifferent tests. Any number of STEST statements can be specified. Labels are specified as follows: \n\n  label : STEST ...;\n\nThe following is an example of the STEST statement: \n\n   proc syslin data=a 3sls;\n      endogenous y1 y2;\n      instruments x1 x2;\n      model y1 = y2 x1 x2;\n      model y2 = y1 x2;\n      stest y1.x2 = y2.x2;\n   run;"},"StatementOptions":{"StatementOption":{"StatementOptionName":"PRINT","StatementOptionHelp":{"#cdata":"Prints intermediate calculations for the hypothesis tests."},"StatementOptionType":"S"}}},{"StatementName":"TEST","StatementHelp":{"#cdata":"Syntax: TEST equation , ..., equation / options ; \n\nThe TEST statement performs F tests of linear hypotheses about the parameters in the preceding \nMODEL statement. Each equation specifies a linear hypothesis to be tested. If more than one \nequation is specified, the equations are separated by commas.\n\nTEST statements can be given labels. The label is used in the printed output to distinguish \ndifferent tests. Any number of TEST statements can be specified. Labels are specified as follows: \n\n  label : TEST ...;\n\nThe following is an example of the use of TEST statement, which tests the hypothesis that the \ncoefficients of X1 and X2 are the same: \n\n   proc syslin data=a;\n      model y = x1 x2;\n      test x1 = x2;\n   run;"},"StatementOptions":{"StatementOption":{"StatementOptionName":"PRINT","StatementOptionHelp":{"#cdata":"Prints intermediate calculations for the hypothesis tests."},"StatementOptionType":"S"}}},{"StatementName":"VAR","StatementHelp":{"#cdata":"Syntax: VAR variables ; \n\nThe VAR statement is used to include variables in the crossproducts matrix that are not specified \nin any MODEL statement. This statement is rarely used with PROC SYSLIN and is used only with the \nOUTSSCP= option in the PROC SYSLIN statement."},"StatementOptions":null},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable ; \n\nThe WEIGHT statement is used to perform weighted regression. The WEIGHT statement names \na variable in the input data set whose values are relative weights for a weighted least \nsquares fit. If the weight value is proportional to the reciprocal of the variance for \neach observation, the weighted estimates are the best linear unbiased estimates (BLUE)."},"StatementOptions":null}]}}}