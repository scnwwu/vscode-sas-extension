{"Procedure":{"Name":"TCALIS","ProductGroup":"SAS/STAT","ProcedureHelp":{"#cdata":"Syntax: PROC TCALIS <options> ; \n    BASEMODEL model number </ options> ; \n    BOUNDS boundary constraints ; \n    BY variables ; \n    COV covariance parameters ; \n    DETERM variables <label> ; \n    EFFPART effects ; \n    FACTOR <factor options> ; \n    FITINDEX <options> ; \n    FREQ variable ; \n    GROUP group number </ group options> ; \n    LINCON linear constraints ; \n    LINEQS model equations ; \n    LISMOD variable lists ; \n    LMTESTS <options> ; \n    MATRIX matrix-name parameters-in-matrix ; \n    MEAN mean parameters ; \n    MODEL model number </ model options> ; \n    MSTRUCT variable list ; \n    NLINCON nonlinear constraints ; \n    NLOPTIONS optimization options ; \n    OUTFILES output files organization ; \n    PARAMETERS parameters ; \n    PARTIAL variables ; \n    PATH path list ; \n    PCOV partial covariance parameters ; \n    PVAR partial variance parameters ; \n    RAM ram list ; \n    REFMODEL model number </ options> ; \n    RENAMEPARM parameter renaming ; \n    SIMTEST simultaneous tests definitions ; \n    STD variance parameters ; \n    STRUCTEQ set of variables <label> ; \n    TESTFUNC parametric functions ; \n    VAR variables ; \n    WEIGHT variable ; \n    SAS Programming statements ; \n\nThe TCALIS procedure deals with structural equation modeling, an important statistical tool in social \nand behavioral sciences. Structural equations express relationships among a system of variables that \ncan be either observed variables (manifest variables) or unobserved hypothetical variables\n(latent variables)."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"ALPHAECV=","ProcedureOptionHelp":{"#cdata":"[Syntax: ALPHAECV=\u03b1] \n      \nSpecifies a (1 - \u03b1)100% confidence interval, 0 \u2264 \u03b1 \u2264 1, for the Browne and Cudeck (1993) expected \ncross validation index (ECVI). The default value is , which corresponds to a 90% confidence interval \nfor the ECVI."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ALPHARMS=","ProcedureOptionHelp":{"#cdata":"[Syntax: ALPHARMS=\u03b1] \n      \nSpecifies a (1 - \u03b1)100% confidence interval, 0 \u2264 \u03b1 \u2264 1, for the Steiger and Lind (1980) root mean \nsquared error of approximation (RMSEA) coefficient. The default value is , which corresponds to a \n90% confidence interval for the RMSEA."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ASINGULAR=|ASING=","ProcedureOptionHelp":{"#cdata":"[Syntax: ASINGULAR | ASING=r] \n      \nSpecifies an absolute singularity criterion r, r > 0, for the inversion of the information matrix, \nwhich is needed to compute the covariance matrix."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ASYCOV=|ASC=","ProcedureOptionHelp":{"#cdata":"Specifies the formula for asymptotic covariances used in the weight matrix W for WLS and DWLS \nestimation. The ASYCOV option is effective only if METHOD=WLS or METHOD=DWLS and no INWGT= \ninput data set is specified."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"BIASED","@Value2":"UNBIASED","@Value3":"CORR"},"ProcedureOptionToolTips":{"@ToolTip1":"Browne\u2019s (1984) formula (3.4) biased asymptotic covariance estimates; the resulting weight matrix is at least positive semidefinite. This is the default for analyzing a covariance matrix.","@ToolTip2":"Browne\u2019s (1984) formula (3.8) asymptotic covariance estimates corrected for bias; the resulting weight matrix can be indefinite (that is, can have negative eigenvalues), especially for small.","@ToolTip3":"Browne and Shapiro\u2019s (1986) formula (3.2), which is identical to DeLeeuw\u2019s (1983) formulas (2, 3, 4) the asymptotic variances of the diagonal elements are set to the reciprocal of the value r specified by the WPENALTY= option (default: r=100).  This formula is the default for analyzing a correlation matrix."}},{"ProcedureOptionName":"BIASKUR","ProcedureOptionHelp":{"#cdata":"Computes univariate skewness and kurtosis by formulas uncorrected for bias."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CHICORRECT=|CHICORR=","ProcedureOptionHelp":{"#cdata":"[Syntax: CHICORRECT | CHICORR= name  |  c] \n      \nSpecifies a correction factor c for the chi-square statistics for model fit."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"EQVARCOV","@Value2":"CIRCULARITY","@Value3":"EQCOVMAT"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies the correction factor due to Box (1949) for testing equal variances and equal covariances  in a covariance matrix.","@ToolTip2":"Specifies the correction factor due to Mauchly (1940) for testing circularity or Huynh and Feldt Type H matrix.","@ToolTip3":"Specifies the correction factor due to Box (1949) for testing equality of covariance matrices."}},{"ProcedureOptionName":"CLOSEFIT=","ProcedureOptionHelp":{"#cdata":"[Syntax: CLOSEFIT=p] \n      \nDefines the criterion value p for indicating a close fit. The smaller the better fit. The default \nvalue for close fit is 0.05."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CORRELATION|CORR","ProcedureOptionHelp":{"#cdata":"Analyzes the correlation matrix instead of the default covariance matrix."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"COVARIANCE|COV","ProcedureOptionHelp":{"#cdata":"Analyzes the covariance matrix."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"COVSING=","ProcedureOptionHelp":{"#cdata":"[Syntax: COVSING=r] \n      \nSpecifies a nonnegative threshold r, which determines whether the eigenvalues of the information \nmatrix are considered to be zero."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nSpecifies an input data set that can be an ordinary SAS data set or a specially structured TYPE=CORR,\nTYPE=COV, TYPE=UCORR, TYPE=UCOV, TYPE=SSCP, or TYPE=FACTOR SAS data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"DEMPHAS=|DE=","ProcedureOptionHelp":{"#cdata":"[Syntax: DEMPHAS=r | DE=r] \n      \nChanges the initial values of all variance parameters by the relationship:\n      \n    snew = r(sold|+1) \n    \nwhere snew is the new initial value and sold is the original initial value."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DFREDUCE=|DFRED=","ProcedureOptionHelp":{"#cdata":"[Syntax: DFREDUCE=i | DFRED=i] \n      \nReduces the degrees of freedom of the chi-square test by i."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"EDF=|DFE=","ProcedureOptionHelp":{"#cdata":"[Syntax: EDF=n | DFE=n] \n      \nMakes the effective number of observations n+i, where i is 0 if the NOINT, UCORR, or UCOV option\nis specified without the AUGMENT option or where i is 1 otherwise."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"EFFPART|PARTEFF|TOTEFF|TE","ProcedureOptionHelp":{"#cdata":"[Syntax: EFFPART | PARTEFF | TOTEFF | TE] \n      \nComputes and displays total, direct, and indirect effects for the unstandardized and standardized \nestimation results."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"FCONV=|FTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: FCONV=r | FTOL=r] \n      \nSpecifies the relative function convergence criterion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"G4=","ProcedureOptionHelp":{"#cdata":"[Syntax: G4=i] \n      \nSpecifies the algorithm to compute the approximate covariance matrix of parameter estimates used \nfor computing the approximate standard errors and modification indices when the information matrix \nis singular."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"GCONV=|GTOL=","ProcedureOptionHelp":{"#cdata":"[Syntax: GCONV=r | GTOL=r] \n      \nSpecifies the relative gradient convergence criterion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"INEST=|INVAR=|ESTDATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: INEST | INVAR | ESTDATA=SAS-data-set] \n      \nSpecifies an input data set that contains initial estimates for the parameters used in the \noptimization process and can also contain boundary and general linear constraints on the \nparameters."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"INMODEL=|INRAM=","ProcedureOptionHelp":{"#cdata":"[Syntax: INMODEL | INRAM=SAS-data-set] \n      \nSpecifies an input data set that contains in RAM list form all information needed to specify an \nanalysis model."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"INSTEP=","ProcedureOptionHelp":{"#cdata":"[Syntax: INSTEP=r] \n      \nFor highly nonlinear objective functions, such as the EXP function, the default initial radius of \nthe trust-region algorithms TRUREG, DBLDOG, and LEVMAR or the default step length of the line-search \nalgorithms can produce arithmetic overflows. If this occurs, specify decreasing values of 0 < r < 1 \nsuch as INSTEP=1E-1, INSTEP=1E-2, INSTEP=1E-4, ..., until the iteration starts successfully."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"INWGT=","ProcedureOptionHelp":{"#cdata":"[Syntax: INWGT<(INV)>=SAS-data-set] \n      \nSpecifies an input data set that contains the weight matrix W used in generalized least squares (GLS), \nweighted least squares (WLS, ADF), or diagonally weighted least squares (DWLS) estimation, if you do not \nspecify the INV option at the same time. The weight matrix must be positive definite because its inverse \nmust be defined in the computation of the objective function. If the weight matrix W defined by an INWGT= \ndata set is not positive definite, it can be ridged using the WRIDGE= option. If you specify the INWGT(INV)= \noption, the INWGT= data set contains the inverse of the weight matrix, rather than the weight matrix itself. \nSpecifying the INWGT(INV)= option is equivalent to specifying the INWGT= and INWGTINV options simultaneously. \nWith the INWGT(INV)= specification, the input matrix is not required to be positive definite."},"ProcedureOptionType":"DV","SubOptionsKeywords":"INV"},{"ProcedureOptionName":"INWGTINV","ProcedureOptionHelp":{"#cdata":"Specifies that the INWGT= data set contains the inverse of the weight matrix, rather than the \nweight matrix itself."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"KURTOSIS|KU","ProcedureOptionHelp":{"#cdata":"Computes and displays univariate kurtosis and skewness, various coefficients of multivariate kurtosis,  \nand the numbers of observations that contribute most to the normalized multivariate kurtosis."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"LINESEARCH=|LIS=|SMETHOD=|SM=","ProcedureOptionHelp":{"#cdata":"[Syntax: LINESEARCH | LIS | SMETHOD | SM=i] \n      \nSpecifies the line-search method for the CONGRA, QUANEW, and NEWRAP optimization techniques."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"1","@Value2":"2","@Value3":"3","@Value4":"4","@Value5":"5","@Value6":"6","@Value7":"7","@Value8":"8"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies a line-search method that needs the same number of function and gradient calls for cubic  interpolation and cubic extrapolation;  this method is similar to one used by the Harwell subroutine library.","@ToolTip2":"Specifies a line-search method that needs more function calls than gradient calls for quadratic and  cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987)  and can be modified to an exact line search by using the LSPRECISION= option.","@ToolTip3":"Specifies a line-search method that needs the same number of function and gradient calls for cubic  interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and  can be modified to an exact line search by using the LSPRECISION= option.","@ToolTip4":"Specifies a line-search method that needs the same number of function and gradient calls for stepwise  extrapolation and cubic interpolation","@ToolTip5":"Specifies a line-search method that is a modified version of LIS=4.","@ToolTip6":"Specifies golden section line search (Polak 1971), which uses only function values for linear approximation.","@ToolTip7":"Specifies bisection line search (Polak 1971), which uses only function values for linear approximation.","@ToolTip8":"Specifies Armijo line-search technique (Polak 1971), which uses only function values for linear approximation."}},{"ProcedureOptionName":"LSPRECISION=|LSP=|SPRECISION=|SP=","ProcedureOptionHelp":{"#cdata":"[Syntax: LSPRECISION=r | LSP=r | SPRECISION=r | SP=r] \n      \nSpecifies the degree of accuracy that should be obtained by the line-search algorithms LIS=2 and \nLIS=3. The default LSPRECISION= values are:\n\n  o For TECH=QUANEW UPDATE=DBFGS, BFGS: r = 0.4\n  o For TECH=QUANEW UPDATE=DDFP, DFP: r = 0.06 \n  o For TECH=CONGRA UPDATE=all r = 0.1\n  o For TECH=NEWRAP NO UPDATE: r = 0.9"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXFUNC=|MAXFU=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXFUNC=i | MAXFU=i] \n      \nSpecifies the maximum number i of function calls in the optimization process. The default values are:\n\n  o For TECH= LEVMAR, NEWRAP, NRRIDG, TRUREG: i=125 \n  o For TECH= DBLDOG, QUANEW: i=500 \n  o For TECH= CONGRA: i=1000"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXITER=|MAXIT=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXITER= | MAXIT=i <n>] \n      \nSpecifies the maximum number i of iterations in the optimization process. The default values are:\n\n  o For TECH= LEVMAR, NEWRAP, NRRIDG, TRUREG: i=50 \n  o For TECH= DBLDOG, QUANEW: i=200 \n  o For TECH= CONGRA: i=400"},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MEANSTR","ProcedureOptionHelp":{"#cdata":"Invokes the analysis of mean structures."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"METHOD=|MET=|M=","ProcedureOptionHelp":{"#cdata":"[Syntax: METHOD= | MET= | M= name] \n      \nSpecifies the method of parameter estimation."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"ML|M|MAX","@Value2":"GLS|G","@Value3":"WLS|W|ADF","@Value4":"DWLS|D","@Value5":"ULS|LS|U","@Value6":"LSML|LSM|LSMAX","@Value7":"LSGLS|LSG","@Value8":"LSWLS|LSW|LSADF","@Value9":"LSDWLS|LSD","@Value10":"NONE|NO"},"ProcedureOptionToolTips":{"@ToolTip1":"Performs normal-theory maximum likelihood parameter estimation. The ML method requires a nonsingular covariance or correlation matrix. This is the default method.","@ToolTip2":"Performs generalized least squares parameter estimation. If no INWGT= data set is specified, the GLS method uses the inverse sample covariance or correlation matrix as weight matrix W. Therefore, METHOD=GLS requires a nonsingular covariance or correlation matrix.","@ToolTip3":"Performs weighted least squares parameter estimation. If no INWGT= data set is specified,  the WLS method uses the inverse matrix of estimated asymptotic covariances of the sample covariance  or correlation matrix as the weight matrix W.","@ToolTip4":"Performs diagonally weighted least squares parameter estimation. If no INWGT= data set is specified, the DWLS method uses the inverse diagonal matrix of asymptotic variances of the input sample covariance or correlation matrix as the weight matrix W.","@ToolTip5":"Performs unweighted least squares parameter estimation.","@ToolTip6":"Performs unweighted least squares followed by normal-theory maximum likelihood parameter estimation.","@ToolTip7":"Performs unweighted least squares followed by generalized least squares parameter estimation.","@ToolTip8":"Performs unweighted least squares followed by weighted least squares parameter estimation.","@ToolTip9":"Performs unweighted least squares followed by diagonally weighted least squares parameter estimation.","@ToolTip10":"Uses no estimation method. This option is suitable for checking the validity of the input information  and for displaying the model matrices and initial values."}},{"ProcedureOptionName":"MODIFICATION|MOD","ProcedureOptionHelp":{"#cdata":"Computes and displays Lagrange multiplier test indices for constant parameter constraints, equality \nparameter constraints, and active boundary constraints, as well as univariate and multivariate Wald \ntest indices."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MSINGULAR=|MSING=","ProcedureOptionHelp":{"#cdata":"[Syntax: MSINGULAR= | MSING=r] \n      \nSpecifies a relative singularity criterion r, r > 0, for the inversion of the information matrix, \nwhich is needed to compute the covariance matrix."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOADJDF","ProcedureOptionHelp":{"#cdata":"Turns off the automatic adjustment of degrees of freedom when there are active constraints in the analysis."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOBS=","ProcedureOptionHelp":{"#cdata":"[Syntax: NOBS= nobs] \n      \nSpecifies the number of observations."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOINDEXTYPE","ProcedureOptionHelp":{"#cdata":"Disables the display of index types in the fit summary table."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOMOD","ProcedureOptionHelp":{"#cdata":"Suppresses the computation of modification indices. The NOMOD option is useful in connection with \nthe PALL option because it saves computing time."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOORDERSPEC","ProcedureOptionHelp":{"#cdata":"Prints the model results in the order they appear in the input specifcations."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPARMNAME","ProcedureOptionHelp":{"#cdata":"Suppresses the printing of parameter names in the model results."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPRINT|NOP","ProcedureOptionHelp":{"#cdata":"Suppresses the displayed output. Note that this option temporarily disables the Output Delivery System (ODS)."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOSTAND","ProcedureOptionHelp":{"#cdata":"Suppresses the printing of standardized results. The default is to print the standardized results."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOSTDERR|NOSE","ProcedureOptionHelp":{"#cdata":"Specifies that standard errors should not be computed. Standard errors are not computed for unweighted least squares (ULS)\nor diagonally weighted least squares (DWLS) estimation."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OMETHOD=|OM=|TECHNIQUE=|TECH=","ProcedureOptionHelp":{"#cdata":"[Syntax: OMETHOD= | OM=name |TECHNIQUE=  | TECH=name] \n      \nSpecifies the optimization method."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"CONGRA","@Value2":"DBLDOG","@Value3":"LEVMAR","@Value4":"NEWRAP","@Value5":"NRRIDG","@Value6":"QUANEW","@Value7":"TRUREG","@Value8":"NONE"},"ProcedureOptionToolTips":{"@ToolTip1":"Chooses one of four different conjugate-gradient optimization algorithms, which can be more precisely  defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip2":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation  of the Cholesky factor of the Hessian.","@ToolTip3":"Performs a highly stable but, for large problems, memory- and time-consuming Levenberg-Marquardt  optimization technique, a slightly improved variant of the Mor\u00e9 (1978) implementation. This is the default optimization technique if there are fewer than 40 parameters to estimate.","@ToolTip4":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization  technique. The algorithm combines a line-search algorithm with ridging, and it can be modified with the  LINESEARCH= option.","@ToolTip5":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization  technique. This algorithm does not perform a line search.","@ToolTip6":"Chooses one of four different quasi-Newton optimization algorithms that can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip7":"Performs a usually very stable but, for large problems, memory- and time-consuming trust-region optimization  technique. The algorithm is implemented similar to Gay (1983) and Mor\u00e9 and Sorensen (1983).","@ToolTip8":"Does not perform any optimization. This option is similar to METHOD=NONE, but TECH=NONE also computes and displays residuals and goodness of fit statistics."}},{"ProcedureOptionName":"ORDERALL","ProcedureOptionHelp":{"#cdata":"Prints the model and group results in the order of the model or group numbers, starting from the smallest number."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ORDERGROUPS|ORDERG","ProcedureOptionHelp":{"#cdata":"Prints the group results in the order of the group numbers, starting from the smallest number."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ORDERMODELS|ORDERMO","ProcedureOptionHelp":{"#cdata":"Prints the model results in the order of the model numbers, starting from the smallest number."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ORDERSPEC","ProcedureOptionHelp":{"#cdata":"Arranges some model results by the types of parameters."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTEST=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTEST=SAS-data-set] \n      \nCreates an output data set containing the parameter estimates, their gradient, Hessian matrix, and \nboundary and linear constraints."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTFIT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTFIT=SAS-data-set] \n      \nCreates an output data set that contains the values of the fit indices."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTMODEL=|OUTRAM=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTMODEL= | OUTRAM=SAS-data-set] \n      \nCreates an output data set that contains the model information for the analysis, the parameter \nestimates, and their standard errors."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTSTAT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTSTAT=SAS-data-set] \n      \nCreates an output data set containing the BY-group variables, the analyzed covariance or correlation \nmatrices, and the predicted and residual covariance or correlation matrices of the analysis."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTWGT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTWGT=SAS-data-set] \n      \nCreates an output data set containing the weight matrix W (or its inverse) used in the estimation \nprocess."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"PALL|ALL","ProcedureOptionHelp":{"#cdata":"Displays all optional output except the output generated by the PCOVES and PDETERM options.\n      \nCaution: The PALL option includes the very expensive computation of the modification indices."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PARMNAME","ProcedureOptionHelp":{"#cdata":"Prints the parameter names in the model results."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PCORR|CORR","ProcedureOptionHelp":{"#cdata":"Displays the covariance or correlation matrix that is analyzed and the predicted model covariance\nor correlation matrix."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PCOVES|PCE","ProcedureOptionHelp":{"#cdata":"Displays the following: \n\n  o the information matrix \n\n  o the approximate covariance matrix of the parameter estimates (generalized inverse of the information matrix) \n\n  o the approximate correlation matrix of the parameter estimates"},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PDETERM|PDE","ProcedureOptionHelp":{"#cdata":"Displays three coefficients of determination: the determination of all equations (DETAE), the \ndetermination of the structural equations (DETSE), and the determination of the manifest \nvariable equations (DETMV)."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PESTIM|PES","ProcedureOptionHelp":{"#cdata":"Displays the parameter estimates. In some cases, this includes displaying the standard errors \nand t values."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PINITIAL|PIN","ProcedureOptionHelp":{"#cdata":"Displays the model specification with initial estimates and the vector of initial values."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PLATCOV|PLC","ProcedureOptionHelp":{"#cdata":"Displays the following: \n\n  o the estimates of the covariances among the latent variables \n\n  o the estimates of the covariances between latent and manifest variables \n\n  o the latent variable score regression coefficients"},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PLOTS=|PLOT=","ProcedureOptionHelp":{"#cdata":"Syntax: PLOTS | PLOT <= plot-request> \nPLOTS | PLOT <= ( plot-request < ...plot-request> ) >\n\nSpecifies the ODS graphical plots."},"ProcedureOptionType":"S|V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"NONE","@Value3":"RESIDUALS"},"ProcedureOptionToolTips":{"@ToolTip1":"All available plots","@ToolTip2":"No ODS graphical plots","@ToolTip3":"Distribution of residuals"}},{"ProcedureOptionName":"PRIMAT|PMAT","ProcedureOptionHelp":{"#cdata":"Displays parameter estimates, approximate standard errors, and t values in matrix form if you specify \nthe analysis model in the RAM or LINEQS statement."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PRINT|PRI","ProcedureOptionHelp":{"#cdata":"Adds the options KURTOSIS, RESIDUAL, PLATCOV, and TOTEFF to the default output."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PSHORT|SHORT|PSH","ProcedureOptionHelp":{"#cdata":"Excludes the output produced by the PINITIAL, SIMPLE, and STDERR options from the default output."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PSUMMARY|SUMMARY|PSUM","ProcedureOptionHelp":{"#cdata":"Displays the fit assessment table only."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PWEIGHT|PW","ProcedureOptionHelp":{"#cdata":"Displays the weight matrix W used in the estimation. The weight matrix is displayed after the WRIDGE= \nand WPENALTY= options are applied to it."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"RADIUS=","ProcedureOptionHelp":{"#cdata":"[Syntax: RADIUS=r] \n      \nIs an alias for the INSTEP= option for Levenberg-Marquardt minimization."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"RANDOM=","ProcedureOptionHelp":{"#cdata":"[Syntax: RANDOM=i] \n      \nSpecifies a positive integer as a seed value for the pseudo-random number generator to generate \ninitial values for the parameter estimates for which no other initial value assignments in the \nmodel definitions are made."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"RDF=|DFR=","ProcedureOptionHelp":{"#cdata":"[Syntax: RDF= | DFR=n] \n      \nMakes the effective number of observations the actual number of observations minus the RDF= value."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"RESIDUAL=|RES=","ProcedureOptionHelp":{"#cdata":"Displays the raw and normalized residual covariance matrices, the rank order of the largest residuals, \nand the bar charts of residual tallies. This information is displayed by default when you specify the \nPRINT option. Use the RESIDUAL(TALLY) or RESIDUAL(TALLY)= option if you don't want SAS to replace bar \ncharts of residual tallies with graphical histograms showing residual distributions."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"NORM","@Value2":"VARSTAND","@Value3":"ASYSTAND"},"ProcedureOptionToolTips":{"@ToolTip1":"Normalized residuals","@ToolTip2":"Variance standardized residuals","@ToolTip3":"Asymptotically standardized residuals"}},{"ProcedureOptionName":"RIDGE=","ProcedureOptionHelp":{"#cdata":"[Syntax: RIDGE<=r>] \n      \nDefines a ridge factor r for the diagonal of the correlation matrix S that is analyzed."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"SALPHA=","ProcedureOptionHelp":{"#cdata":"[Syntax: SALPHA=r] \n      \nIs an alias for the INSTEP= option for line-search algorithms."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SIMPLE|S","ProcedureOptionHelp":{"#cdata":"Displays means, standard deviations, skewness, and univariate kurtosis if available."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SINGULAR=|SING=","ProcedureOptionHelp":{"#cdata":"[Syntax: SINGULAR= | SING=r] \n      \nSpecifies the singularity criterion r, 0 < r < 1, used, for example, for matrix inversion."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SLMW=","ProcedureOptionHelp":{"#cdata":"[Syntax: SLMW=r] \n      \nSpecifies the probability limit used for computing the stepwise multivariate Wald test. The process \nstops when the univariate probability is smaller than r. The default value is r=0.05. "},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SPRECISION=|SP=","ProcedureOptionHelp":{"#cdata":"[Syntax: SPRECISION= | SP=r] \n      \nIs an alias for the LSPRECISION= option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"START=","ProcedureOptionHelp":{"#cdata":"[Syntax: START=r] \n      \nSpecifies initial estimates for parameters as multiples of the r value."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"STDERR|SE","ProcedureOptionHelp":{"#cdata":"Displays approximate standard errors if estimation methods other than unweighted least squares (ULS) \nor diagonally weighted least squares (DWLS) are used (and the NOSTDERR option is not specified)."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"UPDATE=|UPD=","ProcedureOptionHelp":{"#cdata":"Specifies the update method for the quasi-Newton or conjugate-gradient optimization technique."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"PB","@Value2":"FR","@Value3":"PR","@Value4":"CD","@Value5":"DBFGS","@Value6":"DDFP","@Value7":"BFGS","@Value8":"DFP"},"ProcedureOptionToolTips":{"@ToolTip1":"[For TECHNIQUE=CONGRA]--Performs the automatic restart update method of Powell (1977) and Beale (1972). This is the default.","@ToolTip2":"[For TECHNIQUE=CONGRA]--Performs the Fletcher-Reeves update (Fletcher 1980, p. 63).","@ToolTip3":"[For TECHNIQUE=CONGRA]--Performs the Polak-Ribiere update (Fletcher 1980, p. 66).","@ToolTip4":"[For TECHNIQUE=CONGRA]--Performs a conjugate-descent update of Fletcher (1987).","@ToolTip5":"[For TECHNIQUE=DBLDOG|QUANEW]--Performs the dual Broyden-Fletcher-Goldfarb-Shanno (BFGS) update of the Cholesky factor of the Hessian matrix. This is the default.","@ToolTip6":"[For TECHNIQUE=DBLDOG|QUANEW]--Performs the dual Davidon-Fletcher-Powell (DFP) update of the Cholesky factor of the Hessian matrix.","@ToolTip7":"[For TECHNIQUE=QUANEW]--Performs original BFGS update of the inverse Hessian matrix. This is the default for earlier releases.","@ToolTip8":"[For TECHNIQUE=QUANEW]--Performs the original DFP update of the inverse Hessian matrix."}},{"ProcedureOptionName":"VARDEF=","ProcedureOptionHelp":{"#cdata":"Specifies the divisor to use in the calculation of covariances and standard deviations."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"DF","@Value2":"N","@Value3":"WDF","@Value4":"WEIGHT"},"ProcedureOptionToolTips":{"@ToolTip1":"Degrees of freedom","@ToolTip2":"Number of observations","@ToolTip3":"Sum of weights minus one","@ToolTip4":"Sum of weights"}},{"ProcedureOptionName":"VSINGULAR=|VSING=","ProcedureOptionHelp":{"#cdata":"[Syntax: VSINGULAR= | VSING=r] \n      \nSpecifies a relative singularity criterion r, r > 0, for the inversion of the information matrix, \nwhich is needed to compute the covariance matrix."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"WPENALTY=|WPEN=","ProcedureOptionHelp":{"#cdata":"[Syntax: WPENALTY= | WPEN=r] \n      \nSpecifies the penalty weight r \u2265 0 for the WLS and DWLS fit of the diagonal elements of a correlation \nmatrix (constant 1s)."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"WRIDGE=","ProcedureOptionHelp":{"#cdata":"[Syntax: WRIDGE=r] \n      \nDefines a ridge factor r for the diagonal of the weight matrix W used in GLS, WLS, or DWLS estimation."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BASEMODEL","StatementHelp":{"#cdata":"Syntax: BASEMODEL | REFMODEL model_number </ options> ; \n      \nwhere model_number represents a model number between 1 and 9999.\n\nThe REFMODEL statement is not a modeling language itself. It is a tool for referencing and modifying models. \nIt is classified into one of the modeling languages because its role is similar to other modeling languages."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALLNEWPARMS","StatementOptionHelp":{"#cdata":"Appends to the parameter names in the reference model with _mdl and then an integer suffix denoting the model\nnumber of the current model."},"StatementOptionType":"S"},{"StatementOptionName":"PARM_PREFIX=","StatementOptionHelp":{"#cdata":"[Syntax: PARM_PREFIX=prefix] \n          \nInserts to all parameter names in the reference model with the prefix provided."},"StatementOptionType":"V"},{"StatementOptionName":"PARM_SUFFIX=","StatementOptionHelp":{"#cdata":"[Syntax: PARM_SUFFIX=suffix] \n          \nAppends to all parameter names in the reference model with the suffix provided."},"StatementOptionType":"V"}]}},{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY <DESCENDING> variable-1 <...<DESCENDING> variable-n> <NOTSORTED>; \n      \nObtains separate analyses on observations in groups defined by the BY variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING","StatementOptionHelp":{"#cdata":"Specifies that the observations are sorted in descending order by the variable that \nimmediately follows the word DESCENDING in the BY statement."},"StatementOptionType":"S"},{"StatementOptionName":"NOTSORTED","StatementOptionHelp":{"#cdata":"Specifies that observations are not necessarily sorted in alphabetic or numeric order."},"StatementOptionType":"S"}]}},{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable;\n      \nIf one variable in your data set represents the frequency of occurrence for the other values in \nthe observation, specify the variable\u2019s name in a FREQ statement. PROC TCALIS then treats the data \nset as if each observation appears ni times, where ni is the value of the FREQ variable for observation i."},"StatementOptions":null},{"StatementName":"VAR","StatementHelp":{"#cdata":"VAR variable(s);\n    \nSpecifies the numeric variables to be analyzed. You can use the VAR statement no more than once\nwithin the scope of each GROUP or the PROC TCALIS statement."},"StatementOptions":null},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable;\n      \nThe WEIGHT statement specifies the weight variable for the observations. You can use the WEIGHT \nstatement no more than once within the scope of each GROUP statement or the PROC TCALIS statement."},"StatementOptions":null},{"StatementName":"LINEQS","StatementHelp":{"#cdata":"Syntax: LINEQS equation <, equation ...> ;\n      \n  where equation represents \n  dependent = term < + term ...> \n  and each term represents one of the following: \n    o coefficient-name < (number) > variable-name \n    o prefix-name < (number) > variable-name \n    o < number > variable-name"},"StatementOptions":null},{"StatementName":"STD","StatementHelp":{"#cdata":"Syntax: STD assignment <, assignment ...> ;\n      \nwhere assignment represents variables = pattern-definition\n\nThe STD statement defines the variance parameters in the LINEQS models. STD, instead of VAR, is used\nas the statement name for defining variance parameters because it avoids conflicts with the VAR\nstatement for specifying variables for analysis. You can specify no more than one STD statement\nwith each LINEQS statement."},"StatementOptions":null},{"StatementName":"COV","StatementHelp":{"#cdata":"Syntax: COV assignment <, assignment ...> ;\n\nwhere assignment represents variables <  variables2 >> = pattern-definition \n\nThe COV statement is a subsidiary model specification statement for the FACTOR and LINEQS models. \nIn the LINEQS model, the COV statement defines the covariances among the exogenous variables, \nincluding errors and disturbances. In the FACTOR model, the COV statement defines the factor covariances."},"StatementOptions":null},{"StatementName":"RAM","StatementHelp":{"#cdata":"Syntax: RAM list-entry <, list-entry ...> ;\n      \nwhere list-entry represents: \nparameter-type variable1 <direction> <variable2> parameter-spec\nand direction can be one of the following: \u2013>, >, <\u2013, <\n\nRAM stands for the reticular action model, developed by McArdle(1980). In the RAM statement, \nyou specify various kinds of parameters in the model."},"StatementOptions":null},{"StatementName":"FACTOR","StatementHelp":{"#cdata":"Syntax: FACTOR <EFA_options | CFA_spec> ; \n      \nwhere EFA_options are exploratory factor analysis options, CFA_spec is confirmatory factor analysis \nspecification defined as: \n\n  factor-variables-relation < , factor-variables-relation > ... \n\nand each factor-variables-relation is defined as: \n  \n  factor \u2013> variables = parameter-spec"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"COMPONENT|COMP","StatementOptionHelp":{"#cdata":"Computes a component analysis instead of a factor analysis (the diagonal matrix U in the model is set to 0)."},"StatementOptionType":"S"},{"StatementOptionName":"N=","StatementOptionHelp":{"#cdata":"[Syntax: N=n] \n          \nSpecifies the number of first-order factors or components. The number of factors (n) should not \nexceed the number of manifest variables (p) in the analysis."},"StatementOptionType":"V"},{"StatementOptionName":"HEYWOOD","StatementOptionHelp":{"#cdata":"Constrains the diagonal elements of U to be nonnegative. Equivalently, you can constrain these \nelements to positive values by the BOUNDS statement."},"StatementOptionType":"S"},{"StatementOptionName":"GAMMA=","StatementOptionHelp":{"#cdata":"[Syntax: GAMMA=p] \n          \nSpecifies the orthomax weight used with the option ROTATE=ORTHOMAX."},"StatementOptionType":"V"},{"StatementOptionName":"NORM=","StatementOptionHelp":{"#cdata":"[Syntax: RM <= KAISER  |  NONE>] \n          \nKaiser-normalizes the rows of the factor pattern for rotation."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"KAISER","@Value2":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"Has exactly the same effect as the NORM option.","@ToolTip2":"Turns off the normalization"}},{"StatementOptionName":"RCONVERGE=","StatementOptionHelp":{"#cdata":"[Syntax: RCONVERGE=p] \n          \nSpecifies the convergence criterion for rotation cycles."},"StatementOptionType":"V"},{"StatementOptionName":"RITER=","StatementOptionHelp":{"#cdata":"[Syntax: RITER=i] \n          \nSpecifies the maximum number of cycles i for factor rotation. The default i is the greater of 10 times \nthe number of variables and 100."},"StatementOptionType":"V"},{"StatementOptionName":"ROTATE=","StatementOptionHelp":{"#cdata":"Specifies an orthogonal or oblique rotation of the initial factor solution. By default, ROTATE=NONE."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BIQUARTIMAX","@Value2":"EQUAMAX","@Value3":"FACTORPARSIMAX","@Value4":"NONE","@Value5":"ORTHCF(p1,p2)","@Value6":"ORTHGENCF(p1,p2,p3,p4)","@Value7":"ORTHOMAX<(p1)>","@Value8":"PARSIMAX","@Value9":"PRINCIPAL","@Value10":"QUARTIMAX","@Value11":"VARIMAX","@Value12":"BIQUARTIMIN","@Value13":"COVARIMIN","@Value14":"OBBIQUARTIMAX","@Value15":"OBEQUAMAX","@Value16":"OBFACTORPARSIMAX","@Value17":"OBLICF(p1,p2)","@Value18":"OBLIGENCF(p1,p2,p3,p4)","@Value19":"OBLIMIN<(p1)>","@Value20":"OBPARSIMAX","@Value21":"OBQUARTIMAX","@Value22":"OBVARIMAX","@Value23":"QUARTIMIN|QMIN"},"StatementOptionToolTips":{"@ToolTip1":"Specifies orthogonal biquartimax rotation.","@ToolTip2":"Specifies orthogonal equamax rotation.","@ToolTip3":"Specifies orthogonal factor parsimax rotation.","@ToolTip4":"Specifies that no rotation be performed,","@ToolTip5":"Specifies the orthogonal Crawford-Ferguson rotation with the weights p1 and p2 for variable parsimony  and factor parsimony, respectively.","@ToolTip6":"Specifies the orthogonal generalized Crawford-Ferguson rotation with the four weights p1, p2, p3, and p4.","@ToolTip7":"Specifies the orthomax rotation with orthomax weight p1.","@ToolTip8":"Specifies orthogonal parsimax rotation.","@ToolTip9":"Specifies a principal axis rotation.","@ToolTip10":"Specifies orthogonal quartimax rotation.","@ToolTip11":"Specifies orthogonal varimax rotation.","@ToolTip12":"Specifies biquartimin rotation.","@ToolTip13":"Specifies covarimin rotation.","@ToolTip14":"Specifies oblique biquartimax rotation.","@ToolTip15":"Specifies oblique equamax rotation.","@ToolTip16":"Specifies oblique factor parsimax rotation.","@ToolTip17":"Specifies the oblique Crawford-Ferguson rotation (Crawford and Ferguson 1970) with the weights p1  and p2 for variable parsimony and factor parsimony, respectively.","@ToolTip18":"Specifies the oblique generalized Crawford-Ferguson rotation with the four weights p1, p2, p3, and p4.","@ToolTip19":"Specifies the oblimin rotation with oblimin weight p1.","@ToolTip20":"Specifies oblique parsimax rotation.","@ToolTip21":"Specifies oblique quartimax rotation.","@ToolTip22":"Specifies oblique varimax rotation.","@ToolTip23":"Specifies quartimin rotation. It is the same as the oblique quartimax method."}},{"StatementOptionName":"TAU=","StatementOptionHelp":{"#cdata":"[Syntax: TAU=p] \n          \nSpecifies the oblimin weight used with the option ROTATE=OBLIMIN."},"StatementOptionType":"V"}]}},{"StatementName":"MATRIX","StatementHelp":{"#cdata":"Syntax: MATRIX matrix-name <location> = parameter-spec <, location = parameter-spec ...> ; \n      \nIn MATRIX statements, you specify fixed constants or free parameters for the elements of the model matrix\nreferred by the matrix-name. The location indicates the starting row and column numbers of the matrix being\nspecified and the parameter-spec is a list of free or fixed parameters for the elements in the matrix."},"StatementOptions":null},{"StatementName":"PARAMETERS|PARMS","StatementHelp":{"#cdata":"Syntax: PARAMETERS | PARMS parameter(s) << = > number(s) > \n      << , > parameter(s) << = > number(s) > ...> ;\n      \nThe PARAMETERS statement defines additional parameters that are not specified in your models. \nYou can specify more than one PARAMETERS statement."},"StatementOptions":null},{"StatementName":"STRUCTEQ","StatementHelp":{"#cdata":"Syntax: STRUCTEQ variables < / label> ; \n\nwhere label represents:  \nLABEL | NAME = name\n      \nThe STRUCTEQ statement functions exactly the same as the DETERM statement."},"StatementOptions":{"StatementOption":{"StatementOptionName":"LABEL=|NAME=","StatementOptionHelp":{"#cdata":"[Syntax: LABEL= | NAME = name] \n          \nSpecifies to label each set of dependent variables."},"StatementOptionType":"V"}}},{"StatementName":"BOUNDS","StatementHelp":{"#cdata":"Syntax: BOUNDS constraint <, constraint ...> ;\n      \nwhere constraint represents: < number operator > parameter-list < operator number >\n\nYou can use the BOUNDS statement to define boundary constraints for any independent parameter that has\nits name specified in the main or subsidiary model specification statements, the PARAMETERS statement,\nor the INMODEL= data set."},"StatementOptions":null},{"StatementName":"LINCON","StatementHelp":{"#cdata":"Syntax: LINCON constraint <, constraint ...> ;\n      \nwhere constraint represents one of the following: \n\n  o number operator linear-term\n  o linear-term operator number \n  and linear-term is \n  <+|-><coefficient*> parameter <<+|-><coefficient*> parameter ...> \n  \nThe LINCON statement specifies a set of linear equality or inequality constraints, which must be separated by commas."},"StatementOptions":null},{"StatementName":"NLINCON","StatementHelp":{"#cdata":"Syntax: NLINCON | NLC constraint <, constraint ...> ;\n      \nwhere constraint represents one of the following: \n\n  o number operator variable-list number operator \n  o variable-list operator number \n  o number operator variable-list \n  \nYou can specify nonlinear equality and inequality constraints with the NLINCON or NLC statement. \nThe QUANEW optimization subroutine is used when you specify nonlinear constraints by using the \nNLINCON statement."},"StatementOptions":null},{"StatementName":"NLOPTIONS","StatementHelp":{"#cdata":"Syntax: NLOPTIONS option(s) ;\n      \nMany options that are available in PROC NLP can now be specified for the optimization subroutines in PROC TCALIS\nby using the NLOPTIONS statement. The NLOPTIONS statement provides more displayed and file output on the results\nof the optimization process, and it permits the same set of termination criteria as in PROC NLP."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"FCONV=|FTOL=","StatementOptionHelp":{"#cdata":"[Syntax: FCONV=r | FTOL=r] \n          \nSpecifies the relative function convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"G4=","StatementOptionHelp":{"#cdata":"[Syntax: G4=i] \n          \nSpecifies the algorithm to compute the approximate covariance matrix of parameter estimates used \nfor computing the approximate standard errors and modification indices when the information matrix \nis singular."},"StatementOptionType":"V"},{"StatementOptionName":"GCONV=|GTOL=","StatementOptionHelp":{"#cdata":"[Syntax: GCONV=r | GTOL=r] \n          \nSpecifies the relative gradient convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"GCONV2=|GTOL2=","StatementOptionHelp":{"#cdata":"[Syntax: GCONV2=r | GTOL2=r] \n          \nSpecifies another relative gradient convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"INSTEP=|SALPHA=|RADIUS=","StatementOptionHelp":{"#cdata":"[Syntax: INSTEP=r] \n          \nRestricts the step length of an optimization algorithm during the first iterations."},"StatementOptionType":"V"},{"StatementOptionName":"LINESEARCH=|LIS=|SMETHOD=|SM=","StatementOptionHelp":{"#cdata":"[Syntax: LINESEARCH | LIS | SMETHOD | SM=i] \n          \nSpecifies the line-search method for the CONGRA, QUANEW, and NEWRAP optimization techniques."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"1","@Value2":"2","@Value3":"3","@Value4":"4","@Value5":"5","@Value6":"6","@Value7":"7","@Value8":"8"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a line-search method that needs the same number of function and gradient calls for cubic  interpolation and cubic extrapolation; this method is similar to one used by the Harwell subroutine  library.","@ToolTip2":"Specifies a line-search method that needs more function calls than gradient calls for quadratic and  cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987)  and can be modified to an exact line search by using the LSPRECISION= option.","@ToolTip3":"Specifies a line-search method that needs the same number of function and gradient calls for cubic  interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and  can be modified to an exact line search by using the LSPRECISION= option.","@ToolTip4":"Specifies a line-search method that needs the same number of function and gradient calls for stepwise  extrapolation and cubic interpolation","@ToolTip5":"Specifies a line-search method that is a modified version of LIS=4.","@ToolTip6":"Specifies golden section line search (Polak 1971), which uses only function values for linear approximation.","@ToolTip7":"Specifies bisection line search (Polak 1971), which uses only function values for linear approximation.","@ToolTip8":"Specifies Armijo line-search technique (Polak 1971), which uses only function values for linear approximation."}},{"StatementOptionName":"LSPRECISION=|LSP=|SPRECISION=|SP=","StatementOptionHelp":{"#cdata":"[Syntax: LSPRECISION=r | LSP=r | SPRECISION=r | SP=r] \n          \nSpecifies the degree of accuracy that should be obtained by the line-search algorithms LIS=2 and LIS=3. \n\nThe default LSPRECISION= values are:\n\n  o For TECH=QUANEW UPDATE=DBFGS, BFGS: r = 0.4\n  o For TECH=QUANEW UPDATE=DDFP, DFP: r = 0.06 \n  o For TECH=CONGRA UPDATE=all r = 0.1\n  o For TECH=NEWRAP NO UPDATE: r = 0.9"},"StatementOptionType":"V"},{"StatementOptionName":"MAXFUNC=|MAXFU=","StatementOptionHelp":{"#cdata":"[Syntax: MAXFUNC=i | MAXFU=i]\n          \nRequires the number of function calls to be no larger than i. The default values are:\n\n  o For TECH= LEVMAR, NEWRAP, NRRIDG, TRUREG: i=125 \n  o For TECH= DBLDOG, QUANEW: i=500 \n  o For TECH= CONGRA: i=1000"},"StatementOptionType":"V"},{"StatementOptionName":"MAXITER=|MAXIT=","StatementOptionHelp":{"#cdata":"[Syntax: MAXITER= | MAXIT=i <n>] \n          \nRequires the number of iterations to be no larger than i. The default values are:\n\n  o For TECH= LEVMAR, NEWRAP, NRRIDG, TRUREG: i=50 \n  o For TECH= DBLDOG, QUANEW: i=200 \n  o For TECH= CONGRA: i=400"},"StatementOptionType":"V"},{"StatementOptionName":"MSINGULAR=|MSING=","StatementOptionHelp":{"#cdata":"[Syntax: MSINGULAR= | MSING=r] \n          \nSpecifies a relative singularity criterion r, r > 0, for the inversion of the information matrix, \nwhich is needed to compute the covariance matrix."},"StatementOptionType":"V"},{"StatementOptionName":"SINGULAR=|SING=","StatementOptionHelp":{"#cdata":"[Syntax: SINGULAR= | SING=r] \n          \nSpecifies the singularity criterion r, 0 < r < 1, used, for example, for matrix inversion."},"StatementOptionType":"V"},{"StatementOptionName":"TECHNIQUE=|TECH=|OMETHOD=|OM=","StatementOptionHelp":{"#cdata":"[Syntax: TECHNIQUE= | TECH=name | OMETHOD= | OM=name] \n          \nSpecifies the optimization technique."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CONGRA","@Value2":"DBLDOG","@Value3":"LEVMAR","@Value4":"NEWRAP","@Value5":"NRRIDG","@Value6":"QUANEW","@Value7":"TRUREG","@Value8":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"Chooses one of four different conjugate-gradient optimization algorithms, which can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip2":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation  of the Cholesky factor of the Hessian.","@ToolTip3":"Performs a highly stable but, for large problems, memory- and time-consuming Levenberg-Marquardt  optimization technique, a slightly improved variant of the Mor\u00e9 (1978) implementation. This is  the default optimization technique if there are fewer than 40 parameters to estimate.","@ToolTip4":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization  technique. The algorithm combines a line-search algorithm with ridging, and it can be modified with the  LINESEARCH= option.","@ToolTip5":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization  technique. This algorithm does not perform a line search.","@ToolTip6":"Chooses one of four different quasi-Newton optimization algorithms that can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip7":"Performs a usually very stable but, for large problems, memory- and time-consuming trust-region optimization  technique. The algorithm is implemented similar to Gay (1983) and Mor\u00e9 and Sorensen (1983).","@ToolTip8":"Does not perform any optimization. This option is similar to METHOD=NONE, but TECH=NONE also computes and displays residuals and goodness of fit statistics."}},{"StatementOptionName":"ASINGULAR=|ASING=","StatementOptionHelp":{"#cdata":"[Syntax: ASINGULAR | ASING=r] \n          \nSpecifies an absolute singularity criterion r, r > 0, for the inversion of the information matrix, \nwhich is needed to compute the covariance matrix."},"StatementOptionType":"V"},{"StatementOptionName":"COVSING=","StatementOptionHelp":{"#cdata":"[Syntax: COVSING=r] \n          \nSpecifies a nonnegative threshold r, which determines whether the eigenvalues of the information \nmatrix are considered to be zero."},"StatementOptionType":"V"},{"StatementOptionName":"VSINGULAR=|VSING=","StatementOptionHelp":{"#cdata":"[Syntax: VSINGULAR= | VSING=r] \n          \nSpecifies a relative singularity criterion r, r > 0, for the inversion of the information matrix, \nwhich is needed to compute the covariance matrix."},"StatementOptionType":"V"},{"StatementOptionName":"ABSCONV=|ABSTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSCONV= | ABSTOL=r] \n          \nSpecifies an absolute function convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"MAXTIME=","StatementOptionHelp":{"#cdata":"[Syntax: MAXTIME=r] \n          \nRequires the CPU time to be no larger than r. The default value of the MAXTIME= option is the \nlargest double floating-point number on your computer."},"StatementOptionType":"V"},{"StatementOptionName":"MINITER=|MINIT=","StatementOptionHelp":{"#cdata":"[Syntax: MINITER= | MINIT=i] \n          \nSpecifies the minimum number of iterations. The default value is 0."},"StatementOptionType":"V"},{"StatementOptionName":"ABSGCONV=|ABSGTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSGCONV= | ABSGTOL=r <n>] \n          \nSpecifies an absolute gradient convergence criterion. Termination requires the maximum absolute \ngradient element to be small."},"StatementOptionType":"V"},{"StatementOptionName":"ABSXCONV=|ABSXTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSXCONV= | ABSXTOL=r <n>] \n          \nSpecifies the absolute parameter convergence criterion. Termination requires a small Euclidean \ndistance between successive parameter vectors."},"StatementOptionType":"V"},{"StatementOptionName":"FCONV2=|FTOL2=","StatementOptionHelp":{"#cdata":"[Syntax: FCONV2= | FTOL2=r <n>] \n          \nSpecifies another function convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"FDIGITS=","StatementOptionHelp":{"#cdata":"[Syntax: FDIGITS=r] \n          \nSpecifies the number of accurate digits in evaluations of the objective function. Fractional values \nsuch as FDIGITS=4.7 are allowed. The default value is r=-(log10)e, where e is the machine precision."},"StatementOptionType":"V"},{"StatementOptionName":"FSIZE=","StatementOptionHelp":{"#cdata":"[Syntax:FSIZE=r] \n          \nSpecifies the FSIZE parameter of the relative function and relative gradient termination criteria. \nThe default value is r=0."},"StatementOptionType":"V"},{"StatementOptionName":"XCONV=|XTOL=","StatementOptionHelp":{"#cdata":"[Syntax: XCONV= | XTOL=r <n>] \n          \nSpecifies the relative parameter convergence criterion. Termination requires a small relative \nparameter change in subsequent iterations."},"StatementOptionType":"V"},{"StatementOptionName":"XSIZE=","StatementOptionHelp":{"#cdata":"[Syntax: XSIZE=r] \n          \nSpecifies the XSIZE parameter of the relative function and relative gradient termination criteria. \nThe default value is r=0."},"StatementOptionType":"V"},{"StatementOptionName":"CFACTOR=","StatementOptionHelp":{"#cdata":"[Syntax: CFACTOR=r] \n          \nSpecifies the scalar factor for the covariance matrix of parameter estimates."},"StatementOptionType":"V"},{"StatementOptionName":"NOHLF","StatementOptionHelp":{"#cdata":"Specifies that the Hessian matrix of the objective function (rather than the Hessian matrix of the \nLagrange function) be used for computing the approximate covariance matrix of parameter estimates \nand, therefore, the approximate standard errors."},"StatementOptionType":"S"},{"StatementOptionName":"PALL|ALL","StatementOptionHelp":{"#cdata":"Displays information about the starting values and final values of the optimization process."},"StatementOptionType":"S"},{"StatementOptionName":"PCRPJAC|PJTJ","StatementOptionHelp":{"#cdata":"Displays the approximate Hessian matrix. If general linear or nonlinear constraints are active at \nthe solution, the projected approximate Hessian matrix is also displayed."},"StatementOptionType":"S"},{"StatementOptionName":"PHESSIAN","StatementOptionHelp":{"#cdata":"Displays the Hessian matrix. If general linear or nonlinear constraints are active at the solution, \nthe projected Hessian matrix is also displayed."},"StatementOptionType":"S"},{"StatementOptionName":"PHISTORY|PHIS","StatementOptionHelp":{"#cdata":"Displays the optimization history. The PHISTORY option is set automatically if the PALL or PRINT \noption is set."},"StatementOptionType":"S"},{"StatementOptionName":"PINIT|PIN","StatementOptionHelp":{"#cdata":"Displays the initial values and derivatives (if available). The PINIT option is set automatically \nif the PALL option is set."},"StatementOptionType":"S"},{"StatementOptionName":"PNLCJAC","StatementOptionHelp":{"#cdata":"Displays the initial values and derivatives (if available). The PINIT option is set automatically if \nthe PALL option is set."},"StatementOptionType":"S"},{"StatementOptionName":"PRINT|PRI","StatementOptionHelp":{"#cdata":"Displays the results of the optimization process, such as parameter estimates and constraints."},"StatementOptionType":"S"},{"StatementOptionName":"DAMPSTEP=|DS=","StatementOptionHelp":{"#cdata":"[Syntax: DAMPSTEP | DS  <=r>] \n          \nSpecifies that the initial step-size value a\u2070 for each line search (used by the QUANEW, CONGRA, \nor NEWRAP technique) cannot be larger than r times the step-size value used in the former iteration."},"StatementOptionType":"S|V"},{"StatementOptionName":"HESCAL=|HS=","StatementOptionHelp":{"#cdata":"Specifies the scaling version of the Hessian or crossproduct Jacobian matrix used in NRRIDG, TRUREG, \nLEVMAR, NEWRAP, or DBLDOG optimization."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"0","@Value2":"1","@Value3":"2","@Value4":"3"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that no scaling is done.","@ToolTip2":"Specifies the Mor\u00e9 (1978) scaling update","@ToolTip3":"Specifies the Dennis, Gay, and Welsch (1981) scaling update","@ToolTip4":"Specifies that di is reset in each iteration"}},{"StatementOptionName":"LCDEACT=|LCD=","StatementOptionHelp":{"#cdata":"[Syntax: LCDEACT= | LCD=r] \n          \nSpecifies a threshold r for the Lagrange multiplier that decides whether an active inequality \nconstraint remains active or can be deactivated."},"StatementOptionType":"V"},{"StatementOptionName":"LCEPSILON=|LCEPS=|LCE=","StatementOptionHelp":{"#cdata":"[Syntax: LCEPSILON= | LCEPS= | LCE=r] \n          \nSpecifies the range r, r \u2265 0, for active and violated boundary and linear constraints."},"StatementOptionType":"V"},{"StatementOptionName":"LCSINGULAR=|LCSING=|LCS=","StatementOptionHelp":{"#cdata":"[Syntax: LCSINGULAR= | LCSING= | LCS=r] \n          \nSpecifies a criterion r, r \u2265 0, used in the update of the QR decomposition that decides\nwhether an active constraint is linearly dependent on a set of other active constraints. "},"StatementOptionType":"V"},{"StatementOptionName":"NOEIGNUM","StatementOptionHelp":{"#cdata":"Suppresses the computation and displayed output of the determinant and the inertia of the Hessian, \ncrossproduct Jacobian, and covariance matrices."},"StatementOptionType":"S"},{"StatementOptionName":"RESTART=|REST=","StatementOptionHelp":{"#cdata":"[Syntax: RESTART= | REST=i] \n          \nSpecifies that the QUANEW or CONGRA algorithm is restarted with a steepest descent/ascent search \ndirection after at most i iterations, i > 0."},"StatementOptionType":"V"},{"StatementOptionName":"VERSION=|VS=","StatementOptionHelp":{"#cdata":"Specifies the version of the quasi-Newton optimization technique with nonlinear constraints."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"1","@Value2":"2"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the update of the \u03bc vector as in Powell (1978a, 1978b) (update like VF02AD).","@ToolTip2":"Specifies the update of the \u03bc vector as in Powell (1982a, 1982b) (update like VMCWD)."}}]}},{"StatementName":"PARTIAL","StatementHelp":{"#cdata":"Syntax: PARTIAL variables ;\n      \nIf you want the analysis to be based on a partial correlation or covariance matrix, use the PARTIAL statement\nto list the variables used to partial out the variables in the analysis. You can specify only one PARTIAL statement\nwith each PROC CALIS statement."},"StatementOptions":null},{"StatementName":"DETERM|STRUCTEQ","StatementHelp":{"#cdata":"Syntax: DETERM | STRUCTEQ variables < / option > ; \n\nwhere option represents: \nLABEL | NAME = name\n\nThe DETERM statement is used to compute the determination coefficient of the listed dependent variables\nin the model. The precursor of the DETERM statement is the STRUCTEQ statement, which enables you to define\nthe list of the dependent variables of the structural equations."},"StatementOptions":{"StatementOption":{"StatementOptionName":"LABEL=|NAME=","StatementOptionHelp":{"#cdata":"[Syntax: LABEL | NAME = name] \n          \nSpecifies to label each set of dependent variables."},"StatementOptionType":"V"}}},{"StatementName":"EFFPART","StatementHelp":{"#cdata":"Syntax: EFFPART effect < , effect> ;\n      \nwhere effect represents:\nvariables < direction variables2 > \nand direction is the direction of the effect, as indicated by one of the following: \u2013>, >, <\u2013, or <. \n\n\nIn the EFFPART statement, you select those effects you want to analyze by partitioning the total effects\ninto direct and indirect effects, with estimated standard errors."},"StatementOptions":null},{"StatementName":"FITINDEX","StatementHelp":{"#cdata":"Syntax: FITINDEX option <option ...> ;\n      \nYou can use the FITINDEX statement to set the options for computing and displaying the fit indices, \nor to output the fit indices."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALPHAECV=","StatementOptionHelp":{"#cdata":"[Syntax: ALPHAECV=\u03b1] \n          \nSpecifies a (1 - \u03b1)100% confidence interval, 0 \u2264 \u03b1 \u2264 1, for the Browne and Cudeck (1993) expected \ncross validation index (ECVI). The default value is , which corresponds to a 90% confidence interval \nfor the ECVI."},"StatementOptionType":"V"},{"StatementOptionName":"ALPHARMS=","StatementOptionHelp":{"#cdata":"[Syntax: ALPHARMS=\u03b1] \n          \nSpecifies a (1 - \u03b1)100% confidence interval, 0 \u2264 \u03b1 \u2264 1, for the Steiger and Lind (1980) root mean \nsquared error of approximation (RMSEA) coefficient. The default value is , which corresponds to \n a 90% confidence interval for the RMSEA."},"StatementOptionType":"V"},{"StatementOptionName":"CHICORRECT=|CHICORR=","StatementOptionHelp":{"#cdata":"[Syntax: CHICORRECT | CHICORR= name  |  c] \n          \nSpecifies a correction factor c for the chi-square statistics for model fit."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"EQVARCOV","@Value2":"CIRCULARITY","@Value3":"EQCOVMAT"},"StatementOptionToolTips":{"@ToolTip1":"Specifies the correction factor due to Box (1949) for testing equal variances and equal covariances  in a covariance matrix.","@ToolTip2":"Specifies the correction factor due to Mauchly (1940) for testing circularity or Huynh and Feldt  Type H matrix.","@ToolTip3":"Specifies the correction factor due to Box (1949) for testing equality of covariance matrices."}},{"StatementOptionName":"CLOSEFIT=","StatementOptionHelp":{"#cdata":"[Syntax: CLOSEFIT=p] \n          \nDefines the criterion value p for indicating a close fit. The smaller the better fit. The default \nvalue for close fit is 0.05."},"StatementOptionType":"V"},{"StatementOptionName":"DFREDUCE=|DFRED=","StatementOptionHelp":{"#cdata":"[Syntax: DFREDUCE=i | DFRED=i] \n          \nReduces the degrees of freedom of the chi-square test by i."},"StatementOptionType":"V"},{"StatementOptionName":"NOADJDF","StatementOptionHelp":{"#cdata":"Turns off the automatic adjustment of degrees of freedom when there are active constraints in \nthe analysis."},"StatementOptionType":"S"},{"StatementOptionName":"NOINDEXTYPE","StatementOptionHelp":{"#cdata":"Disables the display of index types in the fit summary table."},"StatementOptionType":"S"},{"StatementOptionName":"OUTFIT=","StatementOptionHelp":{"#cdata":"[Syntax: OUTFIT=SAS-data-set] \n          \nCreates an output data set that contains the values of the fit indices."},"StatementOptionType":"V"},{"StatementOptionName":"OFFLIST=|OFF=","StatementOptionHelp":{"#cdata":"[Syntax: OFF | OFFLIST= [names]  |  {names}] \n          \nTurns off the printing of one or more fit indices or modeling information as indicated by names, \nwhere a name represents a fit index, a group of fit indices, or modeling information."},"StatementOptionType":"V"},{"StatementOptionName":"ONLIST=|ON=","StatementOptionHelp":{"#cdata":"[Syntax: ON | ONLIST < (ONLY) > = [names] | {names}] \n          \nTurns on the printing of one or more fit indices or modeling information as indicated by names, \nwhere a name represents a fit index, a group of fit indices, or modeling information."},"StatementOptionType":"V"}]}},{"StatementName":"GROUP","StatementHelp":{"#cdata":"Syntax: GROUP i </ options> ;\n      \nwhere i is an assigned group number between 1 and 9999, inclusively. \n\nThe GROUP statement signifies the beginning of a group specification block and designates a group number for the group."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"LABEL=","StatementOptionHelp":{"#cdata":"[Syntax: LABEL= | NAME=name] \n          \nSpecifies a label for the current group."},"StatementOptionType":"V"},{"StatementOptionName":"DATA=","StatementOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n          \nSpecifies an input data set that can be an ordinary SAS data set or a specially structured TYPE=CORR,\nTYPE=COV, TYPE=UCORR, TYPE=UCOV, TYPE=SSCP, or TYPE=FACTOR SAS data set."},"StatementOptionType":"V"},{"StatementOptionName":"INWGT=","StatementOptionHelp":{"#cdata":"[Syntax: INWGT<(INV)>=SAS-data-set] \n          \nSpecifies an input data set that contains the weight matrix W used in generalized least squares (GLS), \nweighted least squares (WLS, ADF), or diagonally weighted least squares (DWLS) estimation, if the INV\noption is specified."},"StatementOptionType":"DV"},{"StatementOptionName":"OUTSTAT=","StatementOptionHelp":{"#cdata":"[Syntax: OUTSTAT=SAS-data-set] \n          \nCreates an output data set containing the BY-group variables, the analyzed covariance or correlation \nmatrices, and the predicted and residual covariance or correlation matrices of the analysis."},"StatementOptionType":"DV"},{"StatementOptionName":"OUTWGT=","StatementOptionHelp":{"#cdata":"[Syntax: OUTWGT=SAS-data-set] \n          \nCreates an output data set containing the weight matrix W (or its inverse) used in the \nestimation process."},"StatementOptionType":"DV"},{"StatementOptionName":"BIASKUR","StatementOptionHelp":{"#cdata":"Computes univariate skewness and kurtosis by formulas uncorrected for bias."},"StatementOptionType":"S"},{"StatementOptionName":"EDF=|DFE=","StatementOptionHelp":{"#cdata":"[Syntax: EDF=n | DFE=n] \n          \nMakes the effective number of observations n+i, where i is 0 if the NOINT, UCORR, or UCOV option \nis specified without the AUGMENT option or where i is 1 otherwise."},"StatementOptionType":"V"},{"StatementOptionName":"KURTOSIS|KU","StatementOptionHelp":{"#cdata":"Computes and displays univariate kurtosis and skewness, various coefficients of multivariate kurtosis, \nand the numbers of observations that contribute most to the normalized multivariate kurtosis."},"StatementOptionType":"S"},{"StatementOptionName":"NOBS=","StatementOptionHelp":{"#cdata":"[Syntax: NOBS= nobs] \n          \nSpecifies the number of observations."},"StatementOptionType":"V"},{"StatementOptionName":"PCORR","StatementOptionHelp":{"#cdata":"Displays the covariance or correlation matrix that is analyzed and the predicted model covariance\nor correlation matrix."},"StatementOptionType":"S"},{"StatementOptionName":"PLOTS=|PLOT=","StatementOptionHelp":{"#cdata":"Syntax: PLOTS | PLOT <= plot-request> \nPLOTS | PLOT <= ( plot-request < ...plot-request> ) >\n\nSpecifies the ODS graphical plots."},"StatementOptionType":"S|V","StatementOptionValues":{"@Value1":"ALL","@Value2":"NONE","@Value3":"RESIDUALS"},"StatementOptionToolTips":{"@ToolTip1":"All available plots","@ToolTip2":"No ODS graphical plots","@ToolTip3":"Distribution of residuals"}},{"StatementOptionName":"PWEIGHT","StatementOptionHelp":{"#cdata":"Displays the weight matrix W used in the estimation. The weight matrix is displayed after the WRIDGE= \nand WPENALTY= options are applied to it."},"StatementOptionType":"S"},{"StatementOptionName":"RDF=|DFR=","StatementOptionHelp":{"#cdata":"[Syntax: RDF= | DFR=n] \n          \nMakes the effective number of observations the actual number of observations minus the RDF= value."},"StatementOptionType":"V"},{"StatementOptionName":"RESIDUAL=|RES=","StatementOptionHelp":{"#cdata":"Displays the raw and normalized residual covariance matrices, the rank order of the largest residuals, \nand the bar charts of residual tallies. This information is displayed by default when you specify the \nPRINT option. Use the RESIDUAL(TALLY) or RESIDUAL(TALLY)= option if you don't want SAS to replace bar \ncharts of residual tallies with graphical histograms showing residual distributions."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NORM","@Value2":"VARSTAND","@Value3":"ASYSTAND"},"StatementOptionToolTips":{"@ToolTip1":"Normalized residuals","@ToolTip2":"Variance standardized residuals","@ToolTip3":"Asymptotically standardized residuals"}},{"StatementOptionName":"RIDGE=","StatementOptionHelp":{"#cdata":"[Syntax: RIDGE<=r>] \n          \nDefines a ridge factor r for the diagonal of the correlation matrix S that is analyzed."},"StatementOptionType":"S|V"},{"StatementOptionName":"SIMPLE|S","StatementOptionHelp":{"#cdata":"Displays means, standard deviations, skewness, and univariate kurtosis if available."},"StatementOptionType":"S"},{"StatementOptionName":"VARDEF=","StatementOptionHelp":{"#cdata":"Specifies the divisor to use in the calculation of covariances and standard deviations."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DF","@Value2":"N","@Value3":"WDF","@Value4":"WEIGHT"},"StatementOptionToolTips":{"@ToolTip1":"Degrees of freedom","@ToolTip2":"Number of observations","@ToolTip3":"Sum of weights minus one","@ToolTip4":"Sum of weights"}},{"StatementOptionName":"WPENALTY=|WPEN=","StatementOptionHelp":{"#cdata":"[Syntax: WPENALTY= | WPEN=r] \n          \nSpecifies the penalty weight r \u2265 0 for the WLS and DWLS fit of the diagonal elements of a correlation \nmatrix (constant 1s)."},"StatementOptionType":"V"},{"StatementOptionName":"WRIDGE=","StatementOptionHelp":{"#cdata":"[Syntax: WRIDGE=r] \n          \nDefines a ridge factor r for the diagonal of the weight matrix W used in GLS, WLS, or DWLS estimation."},"StatementOptionType":"V"}]}},{"StatementName":"LISMOD","StatementHelp":{"#cdata":"Syntax: LISMOD <var_lists> ; \n        \nwhere var_lists represent one or more of the following: \n\n YVAR  |  YV  |  Y = variables \n XVAR  |  XV  |  X = variables \n ETAVAR  |  ETAV  |  ETA = variables \n XIVAR  |  XIV  |  XI  |  KSIVAR  |  KSIV  |  KSI = variables \n\n\nLISMOD stands for LISrel MODeling, where LISREL is the program developed by J\u00f6reskog and S\u00f6rbom (1988). \nLike the original implementation of LISREL, LISMOD uses a matrix specification interface."},"StatementOptions":null},{"StatementName":"LMTESTS","StatementHelp":{"#cdata":"Syntax: LMTESTS option <option ...> ;\n      \nwhere option represents one of the following: \n  display-option \n  test-set\n\nand test-set represents one of the following:\n  set-name =  regions  \n  set-name =  regions  \n\nwhere set-name is the name of the set of Lagrange multiplier (LM) tests defined by the regions that \nfollow after the equal sign and regions are keywords denoting specific sets of parameters in the model. \n\nYou can use the LMTESTS statement to set display-options or to customize the test-sets for the LM tests."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DEFAULT","StatementOptionHelp":{"#cdata":"Conducts the default sets of LM tests for freeing fixed parameters in the model."},"StatementOptionType":"S"},{"StatementOptionName":"MAXRANK","StatementOptionHelp":{"#cdata":"Sets the maximum number of rankings within a set of LM tests."},"StatementOptionType":"S"},{"StatementOptionName":"NODEFAULT","StatementOptionHelp":{"#cdata":"Turns off the default sets of LM tests for freeing fixed parameters in the model."},"StatementOptionType":"S"},{"StatementOptionName":"NORANK","StatementOptionHelp":{"#cdata":"Turns off the ranking of the LM tests."},"StatementOptionType":"S"},{"StatementOptionName":"LMMAT","StatementOptionHelp":{"#cdata":"Prints the sets of LM tests in matrix form, in addition to the normal LM test results."},"StatementOptionType":"S"}]}},{"StatementName":"MEAN","StatementHelp":{"#cdata":"Syntax: MEAN assignment <, assignment ...> ; \n      \nwhere assignment represents: variables = parameter-spec \n\nThe MEAN statement invokes the fitting of the mean structures of the model."},"StatementOptions":null},{"StatementName":"OUTFILES|OUTFILE","StatementHelp":{"#cdata":"Syntax: OUTFILES | OUTFILE file_option <file_option ...> ; \n      \nwhere file_option represents one of the following: \n  OUTMODEL  |  OUTRAM= file_name [ MODEL= int_list < , int_list > ] \n  OUTSTAT= file_name [ GROUP= int_list < , int_list > ]\n  OUTWGT= file_name [ GROUP= int_list < , int_list > ] \n  \nwith file_name representing an output file name and int_list representing list of model or group numbers \n\nUse the OUTFILES statement when you need to output multiple-group or multiple-model information to output\nfiles in a complex way. In each OUTFILES statement, each possible file_option should appear no more than \nonce. However, as needed, you can use the OUTFILES statement more than once."},"StatementOptions":null},{"StatementName":"PATH","StatementHelp":{"#cdata":"Syntax: PATH path < , path ...> ; \n      \nwhere path represents: \nvariable direction variable parameter-spec \nand direction represents one of the following: \u2013>, >, <\u2013, < \n\nIn the PATH statement, you specify the paths in your model. You can specify at most one PATH statement\nin a model, within the scope of either the PROC TCALIS statement or a MODEL statement."},"StatementOptions":null},{"StatementName":"PCOV","StatementHelp":{"#cdata":"Syntax: PCOV assignment <, assignment ...> ; \n\nwhere assignment represents: \nvariables <  variables2 > = parameter-spec \n\nThe PCOV statement defines the covariance or partial covariance parameters in the PATH model. \nYou can use the PCOV statement with the PATH modeling language only."},"StatementOptions":null},{"StatementName":"PVAR","StatementHelp":{"#cdata":"Syntax: PVAR assignment < , assignment ...> ;\n        \nwhere assignment represents: variables = parameter-spec \n\nThe PVAR statement defines the variance or partial variance parameters in FACTOR and PATH models.\nThe assignments in the PVAR statement must be separated by commas. The variables listed on the\nleft-hand side of the equal sign are any variables defined in the model."},"StatementOptions":null},{"StatementName":"REFMODEL","StatementHelp":{"#cdata":"Syntax: REFMODEL | BASEMODEL model_number </ options> ; \n      \nwhere model_number represents a model number between 1 and 9999, inclusively, \nand options are for renaming parameters. \n\nThe REFMODEL statement is not a modeling language itself. It is a tool for referencing and modifying models. \nIt is classified into one of the modeling languages because its role is similar to other modeling languages."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALLNEWPARMS","StatementOptionHelp":{"#cdata":"Appends to the parameter names in the reference model with _mdl and then an integer suffix denoting the model\nnumber of the current model."},"StatementOptionType":"S"},{"StatementOptionName":"PARM_PREFIX=","StatementOptionHelp":{"#cdata":"[Syntax: PARM_PREFIX=prefix] \n          \nInserts to all parameter names in the reference model with the prefix provided."},"StatementOptionType":"V"},{"StatementOptionName":"PARM_SUFFIX=","StatementOptionHelp":{"#cdata":"[Syntax: PARM_SUFFIX=suffix] \n          \nAppends to all parameter names in the reference model with the suffix provided."},"StatementOptionType":"V"}]}},{"StatementName":"RENAMEPARM","StatementHelp":{"#cdata":"Syntax: RENAMEPARM assignment <, assignment ...> ; \n        \nwhere assignment represents: old_parameters = parameter-spec \n\nYou can use the RENAMEPARM statement to rename parameters or to change the types of parameters\nof a reference model so that new parameters are transferred to the new model in question."},"StatementOptions":null},{"StatementName":"SIMTEST","StatementHelp":{"#cdata":"Syntax: SIMTEST sim_test <sim_test ...> ; \n        \nwhere sim_test represents one of the following: \n test_name = [ functions ] \n test_name = { functions } \n \nand functions are either parameters in the model or parametric functions computed in the\nSAS programming statements. \n\nWhen the estimates in a model are asymptotically multivariate-normal, continuous and differentiable\nfunctions of the estimates are also multivariate-normally distributed. In the SIMTEST statement, \nyou can test these parametric functions simultaneously."},"StatementOptions":null},{"StatementName":"MSTRUCT","StatementHelp":{"#cdata":"Syntax: MSTRUCT VAR = variables ;\n\nMSTRUCT stands for matrix structures. As opposed to other modeling languages, in which the mean and\ncovariance structures are implied from paths, equations, or complicated model matrix computations, \nthe MSTRUCT language is for direct structured mean and covariance models. \n\nIn the MSTRUCT statement, you define the list of variables. To complete the specification, you must \nuse additional MATRIX statements to specify the parameters: \n\n  MSTRUCT variables ; \n  MATRIX _COV_ parameters-in-matrix ; \n  MATRIX _MEAN_ parameters-in-matrix ; \n  \nYou use the MATRIX _COV_ statement to specify the covariance and variance parameters in the structured \ncovariance matrix. When applicable, you use the MATRIX _MEAN_ statement to specify the parameters in the \nstructured mean vector. Each of these matrices can be specified no more than once within a model."},"StatementOptions":{"StatementOption":{"StatementOptionName":"VAR=","StatementOptionHelp":{"#cdata":"Defines a list of variables."},"StatementOptionType":"V"}}},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL i </ options> ; \n\nwhere i is an assigned model number between 1 and 9999, inclusively.\n\nA MODEL statement signifies the beginning of a model specification block and designates a model \nnumber for the model."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"LABEL=|NAME=","StatementOptionHelp":{"#cdata":"[Syntax: LABEL= | NAME=name] \n          \nSpecifies a label for the model. You can use any valid SAS names up to 256 characters for labels. \nYou can also use quote strings for labels."},"StatementOptionType":"V"},{"StatementOptionName":"GROUP=|GROUPS=","StatementOptionHelp":{"#cdata":"[Syntax: GROUP= | GROUPS=int-list] \n          \nSpecifies a list of integers int-list of group numbers representing the groups to be fitted by \nthe model."},"StatementOptionType":"V"},{"StatementOptionName":"CORRELATION|CORR","StatementOptionHelp":{"#cdata":"Analyzes the correlation matrix instead of the default covariance matrix."},"StatementOptionType":"S"},{"StatementOptionName":"COVARIANCE|COV","StatementOptionHelp":{"#cdata":"Analyzes the covariance matrix."},"StatementOptionType":"S"},{"StatementOptionName":"DEMPHAS=|DE=","StatementOptionHelp":{"#cdata":"[Syntax: DEMPHAS=r | DE=r] \n          \nChanges the initial values of all variance parameters by the relationship:\n      \n    snew = r(sold|+1) \n    \nwhere snew is the new initial value and sold is the original initial value."},"StatementOptionType":"V"},{"StatementOptionName":"EFFPART|PARTEFF|TOTEFF|TE","StatementOptionHelp":{"#cdata":"[Syntax: EFFPART | PARTEFF | TOTEFF | TE] \n          \nComputes and displays total, direct, and indirect effects for the unstandardized and standardized \nestimation results."},"StatementOptionType":"S"},{"StatementOptionName":"INEST=","StatementOptionHelp":{"#cdata":"[Syntax: INEST | INVAR | ESTDATA=SAS-data-set] \n          \nSpecifies an input data set that contains initial estimates for the parameters used in the optimization \nprocess and can also contain boundary and general linear constraints on the parameters."},"StatementOptionType":"V"},{"StatementOptionName":"INMODEL=|INRAM=","StatementOptionHelp":{"#cdata":"[Syntax: INMODEL | INRAM=SAS-data-set] \n          \nSpecifies an input data set that contains in RAM list form all information needed to specify an \nanalysis model."},"StatementOptionType":"V"},{"StatementOptionName":"MEANSTR","StatementOptionHelp":{"#cdata":"Invokes the analysis of mean structures."},"StatementOptionType":"S"},{"StatementOptionName":"MODIFICATION|MOD","StatementOptionHelp":{"#cdata":"Computes and displays Lagrange multiplier test indices for constant parameter constraints, equality parameter constraints, \nand active boundary constraints, as well as univariate and multivariate Wald test indices."},"StatementOptionType":"S"},{"StatementOptionName":"NOMOD","StatementOptionHelp":{"#cdata":"Suppresses the computation of modification indices. The NOMOD option is useful in connection with the PALL option because it saves computing time."},"StatementOptionType":"S"},{"StatementOptionName":"NOORDERSPEC","StatementOptionHelp":{"#cdata":"Prints the model results in the order they appear in the input specifcations."},"StatementOptionType":"S"},{"StatementOptionName":"NOPARMNAME","StatementOptionHelp":{"#cdata":"Suppresses the printing of parameter names in the model results."},"StatementOptionType":"S"},{"StatementOptionName":"NOSTAND","StatementOptionHelp":{"#cdata":"Suppresses the printing of standardized results. The default is to print the standardized results."},"StatementOptionType":"S"},{"StatementOptionName":"NOSTDERR","StatementOptionHelp":{"#cdata":"Specifies that standard errors should not be computed. Standard errors are not computed for unweighted least squares (ULS)\nor diagonally weighted least squares (DWLS) estimation."},"StatementOptionType":"S"},{"StatementOptionName":"ORDERSPEC","StatementOptionHelp":{"#cdata":"Arranges some model results by the types of parameters."},"StatementOptionType":"S"},{"StatementOptionName":"OUTEST=","StatementOptionHelp":{"#cdata":"[Syntax: OUTEST=SAS-data-set] \n          \nCreates an output data set containing the parameter estimates, their gradient, Hessian matrix, \nand boundary and linear constraints."},"StatementOptionType":"DV"},{"StatementOptionName":"OUTMODEL=|OUTRAM=","StatementOptionHelp":{"#cdata":"[Syntax: OUTMODEL= | OUTRAM=SAS-data-set] \n          \nCreates an output data set that contains the model information for the analysis, the parameter \nestimates, and their standard errors."},"StatementOptionType":"DV"},{"StatementOptionName":"PARMNAME","StatementOptionHelp":{"#cdata":"Prints the parameter names in the model results."},"StatementOptionType":"S"},{"StatementOptionName":"PDETERM","StatementOptionHelp":{"#cdata":"Displays three coefficients of determination: the determination of all equations (DETAE), the \ndetermination of the structural equations (DETSE), and the determination of the manifest \nvariable equations (DETMV)."},"StatementOptionType":"S"},{"StatementOptionName":"PESTIM","StatementOptionHelp":{"#cdata":"Displays the parameter estimates. In some cases, this includes displaying the standard errors and \nt values."},"StatementOptionType":"S"},{"StatementOptionName":"PINITIAL","StatementOptionHelp":{"#cdata":"Displays the model specification with initial estimates and the vector of initial values."},"StatementOptionType":"S"},{"StatementOptionName":"PLATCOV","StatementOptionHelp":{"#cdata":"Displays the following: \n\n  o the estimates of the covariances among the latent variables \n\n  o the estimates of the covariances between latent and manifest variables \n\n  o the latent variable score regression coefficients"},"StatementOptionType":"S"},{"StatementOptionName":"PRIMAT","StatementOptionHelp":{"#cdata":"Displays parameter estimates, approximate standard errors, and t values in matrix form \nif you specify the analysis model in the RAM or LINEQS statement."},"StatementOptionType":"S"},{"StatementOptionName":"STDERR","StatementOptionHelp":{"#cdata":"Displays approximate standard errors if estimation methods other than unweighted least squares (ULS) \nor diagonally weighted least squares (DWLS) are used (and the NOSTDERR option is not specified)."},"StatementOptionType":"S"},{"StatementOptionName":"BIASKUR","StatementOptionHelp":{"#cdata":"Computes univariate skewness and kurtosis by formulas uncorrected for bias."},"StatementOptionType":"S"},{"StatementOptionName":"EDF=|DFE=","StatementOptionHelp":{"#cdata":"[Syntax: EDF=n | DFE=n] \n          \nMakes the effective number of observations n+i, where i is 0 if the NOINT, UCORR, or UCOV option \nis specified without the AUGMENT option or where i is 1 otherwise."},"StatementOptionType":"V"},{"StatementOptionName":"KURTOSIS|KU","StatementOptionHelp":{"#cdata":"Computes and displays univariate kurtosis and skewness, various coefficients of multivariate kurtosis, \nand the numbers of observations that contribute most to the normalized multivariate kurtosis."},"StatementOptionType":"S"},{"StatementOptionName":"NOBS=","StatementOptionHelp":{"#cdata":"[Syntax: NOBS= nobs] \n          \nSpecifies the number of observations."},"StatementOptionType":"V"},{"StatementOptionName":"PCORR","StatementOptionHelp":{"#cdata":"Displays the covariance or correlation matrix that is analyzed and the predicted model covariance\nor correlation matrix."},"StatementOptionType":"S"},{"StatementOptionName":"PLOTS=|PLOT=","StatementOptionHelp":{"#cdata":"Syntax: PLOTS | PLOT <= plot-request> \nPLOTS | PLOT <= ( plot-request < ...plot-request> ) >\n\nSpecifies the ODS graphical plots."},"StatementOptionType":"S|V","StatementOptionValues":{"@Value1":"ALL","@Value2":"NONE","@Value3":"RESIDUALS"},"StatementOptionToolTips":{"@ToolTip1":"All available plots","@ToolTip2":"No ODS graphical plots","@ToolTip3":"Distribution of residuals"}},{"StatementOptionName":"PWEIGHT","StatementOptionHelp":{"#cdata":"Displays the weight matrix W used in the estimation. The weight matrix is displayed after the WRIDGE= \nand WPENALTY= options are applied to it."},"StatementOptionType":"S"},{"StatementOptionName":"RDF=|DFR=","StatementOptionHelp":{"#cdata":"[Syntax: RDF= | DFR=n] \n          \nMakes the effective number of observations the actual number of observations minus the RDF= value."},"StatementOptionType":"V"},{"StatementOptionName":"RESIDUAL=|RES=","StatementOptionHelp":{"#cdata":"Displays the raw and normalized residual covariance matrices, the rank order of the largest residuals, \nand the bar charts of residual tallies. This information is displayed by default when you specify the \nPRINT option. Use the RESIDUAL(TALLY) or RESIDUAL(TALLY)= option if you don't want SAS to replace bar \ncharts of residual tallies with graphical histograms showing residual distributions."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NORM","@Value2":"VARSTAND","@Value3":"ASYSTAND"},"StatementOptionToolTips":{"@ToolTip1":"Normalized residuals","@ToolTip2":"Variance standardized residuals","@ToolTip3":"Asymptotically standardized residuals"}},{"StatementOptionName":"RIDGE=","StatementOptionHelp":{"#cdata":"[Syntax: RIDGE<=r>] \n          \nDefines a ridge factor r for the diagonal of the correlation matrix S that is analyzed."},"StatementOptionType":"S|V"},{"StatementOptionName":"SIMPLE|S","StatementOptionHelp":{"#cdata":"Displays means, standard deviations, skewness, and univariate kurtosis if available."},"StatementOptionType":"S"},{"StatementOptionName":"VARDEF=","StatementOptionHelp":{"#cdata":"Specifies the divisor to use in the calculation of covariances and standard deviations."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DF","@Value2":"N","@Value3":"WDF","@Value4":"WEIGHT"},"StatementOptionToolTips":{"@ToolTip1":"Degrees of freedom","@ToolTip2":"Number of observations","@ToolTip3":"Sum of weights minus one","@ToolTip4":"Sum of weights"}},{"StatementOptionName":"WPENALTY=|WPEN=","StatementOptionHelp":{"#cdata":"[Syntax: WPENALTY= | WPEN=r] \n          \nSpecifies the penalty weight r \u2265 0 for the WLS and DWLS fit of the diagonal elements of a correlation \nmatrix (constant 1s)."},"StatementOptionType":"V"},{"StatementOptionName":"WRIDGE=","StatementOptionHelp":{"#cdata":"[Syntax: WRIDGE=r] \n          \nDefines a ridge factor r for the diagonal of the weight matrix W used in GLS, WLS, or DWLS estimation."},"StatementOptionType":"V"}],"#comment":{}}},{"StatementName":"ABORT","StatementHelp":{"#cdata":"Syntax: ABORT <ABEND | CANCEL <FILE> | RETURN | > <n> <NOLIST>; \n      \nStops executing the current DATA step, SAS job, or SAS session."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ABEND","StatementOptionHelp":{"#cdata":"Causes abnormal termination of the current SAS job or session. Results depend on the method \nof operation: \n\no batch mode and noninteractive mode \n\n  o stops processing immediately\n  o sends an error message to the SAS log that states that execution was terminated by the ABEND option \n    of the ABORT macro statement\n  o does not execute any subsequent statements or check syntax\n  o returns control to the operating environment; further action is based on how your operating environment \n    and your site treat jobs that end abnormally.\n\no windowing environment and interactive line mode \n\n  o causes your windowing environment and interactive line mode to stop processing immediately \n    and return you to your operating environment."},"StatementOptionType":"S"},{"StatementOptionName":"CANCEL","StatementOptionHelp":{"#cdata":"Causes the cancellation of the current submitted statements. The results depend on the method \nof operation:\n\no batch mode and noninteractive mode\n\n  o The entire SAS program and SAS system are terminated.\n  o The error message is written to the SAS log.\n\no windowing environment and interactive line mode \n\n  o It only clears the current submitted program.\n  o Other subsequent submitted programs are not affected.\n  o The error message is written to the SAS log.\n\no workspace server and stored process server \n\n  o It only clears currently submitted program.\n  o Other subsequent submit calls are not affected.\n  o The error message is written to the SAS log.\n\no SAS IntrNet application server \n\n  o A separate execution is created for each request. The execution submits the request code. A CANCEL \n    argument in the request code clears the current submitted code but does not terminate the execution \n    of the SAS session."},"StatementOptionType":"S"},{"StatementOptionName":"CANCEL FILE","StatementOptionHelp":{"#cdata":"Causes only the contents of the autoexec file or %INCLUDE file to be cleared by the %ABORT statement. \nOther submitted source statements will be executed after the autoexec or %INCLUDE file."},"StatementOptionType":"S"},{"StatementOptionName":"RETURN","StatementOptionHelp":{"#cdata":"Causes abnormal termination of the current SAS job or session. Results depend on the method \nof operation: \n\no batch mode and noninteractive mode \n\n  o stops processing immediately\n  o sends an error message to the SAS log that states that execution was terminated by the RETURN option \n    in the ABORT macro statement\n  o does not execute any subsequent statements or check syntax\n  o returns control to the operating environment with a condition code indicating an error.\n\no windowing environment and interactive line mode \n\n  o causes your windowing environment and interactive line mode to stop processing immediately \n    and return you to your operating environment."},"StatementOptionType":"S"},{"StatementOptionName":"NOLIST","StatementOptionHelp":{"#cdata":"suppresses the output of all variables to the SAS log."},"StatementOptionType":"S"}]}},{"StatementName":"CALL","StatementHelp":{"#cdata":"Syntax: CALL routine(parameter-1<, ...parameter-n>);  \n      \nInvokes a SAS CALL routine."},"StatementOptions":null},{"StatementName":"DELETE","StatementHelp":{"#cdata":"Syntax: DELETE; \n      \nStops processing the current observation."},"StatementOptions":null},{"StatementName":"DO","StatementHelp":{"#cdata":"Specifies a group of statements to be executed as a unit.\n      \nSyntax: \n(1) DO; \n...more SAS statements...  \nEND;  \n\n(2) DO index-variable=specification-1 <, ... specification-n>; \n... more SAS statements ...  \nEND;  \n\n(3) DO UNTIL (expression); \n...more SAS statements...  \nEND \n\n(4) DO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"UNTIL","StatementOptionHelp":{"#cdata":"Executes statements in a DO loop repetitively until a condition is true.\n          \nSyntax: \nDO UNTIL (expression); \n...more SAS statements...  \nEND"},"StatementOptionType":"S"},{"StatementOptionName":"WHILE","StatementOptionHelp":{"#cdata":"Executes statements in a DO-loop repetitively while a condition is true. \n          \nSyntax: \nDO WHILE (expression); \n...more SAS statements...  \nEND;"},"StatementOptionType":"S"},{"StatementOptionName":"OVER","StatementOptionType":"S"},{"StatementOptionName":"TO","StatementOptionHelp":{"#cdata":"Separates the start and stop integers or expressions that control the number of times the \nportion of the DATA step between the iterative DO and END statements is processed."},"StatementOptionType":"S"},{"StatementOptionName":"BY","StatementOptionHelp":{"#cdata":"Precedes an increment integer (other than 0) or an expression that generates an integer to be \nadded to the value of the index variable in each iteration of the DO loop."},"StatementOptionType":"S"}]}},{"StatementName":"END","StatementHelp":{"#cdata":"Syntax: END; \n      \nEnds a DO group or SELECT group processing."},"StatementOptions":null},{"StatementName":"GOTO","StatementHelp":{"#cdata":"Syntax: GOTO label;\n      \nJumps to a new statement."},"StatementOptions":null},{"StatementName":"IF","StatementHelp":{"#cdata":"Executes a SAS statement for observations that meet specific conditions. \n\nSyntax: \n(1) IF expression THEN statement; \n    <ELSE statement;> \n(2) IF condition;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"THEN","StatementOptionHelp":{"#cdata":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS \nstatement for observations that are read from a SAS data set, for records in an external file, or \nfor computed values."},"StatementOptionType":"S"},{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"WHEN","StatementOptionHelp":{"#cdata":"WHEN statement in an IF-THEN-WHEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"OUTPUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"GO TO|GOTO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nSyntax: ... GO TO label; | ... GOTO label;\n      \nJumps to a new statement."},"StatementOptionType":"S"},{"StatementOptionName":"PUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct."},"StatementOptionType":"S"},{"StatementOptionName":"STOP","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct. \n          \nStops execution of the current DATA step."},"StatementOptionType":"S"},{"StatementOptionName":"SET","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN construct.\n          \nSyntax: SET <SAS-data-set(s) <(data-set-options(s) )>>; \n      \nReads an observation from one or more SAS data sets."},"StatementOptionType":"S"},{"StatementOptionName":"NOT","StatementOptionType":"S"},{"StatementOptionName":"OR","StatementOptionType":"S"},{"StatementOptionName":"AND","StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"ELSE","StatementHelp":{"#cdata":"If the condition in a IF-THEN statement is false and an ELSE statement is present, then the ELSE \naction is carried out."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"THEN","StatementOptionHelp":{"#cdata":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS \nstatement for observations that are read from a SAS data set, for records in an external file, or \nfor computed values."},"StatementOptionType":"S"},{"StatementOptionName":"IF","StatementOptionHelp":{"#cdata":"Executes a SAS statement for observations that meet specific conditions."},"StatementOptionType":"S"},{"StatementOptionName":"DO","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN-ELSE construct."},"StatementOptionType":"S"},{"StatementOptionName":"OUTPUT","StatementOptionHelp":{"#cdata":"Action statement in an IF-THEN-ELSE construct."},"StatementOptionType":"S"},{"StatementOptionName":"NOT","StatementOptionType":"S"},{"StatementOptionName":"OR","StatementOptionType":"S"},{"StatementOptionName":"AND","StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"LINK","StatementHelp":{"#cdata":"Syntax: LINK statement-label; \n      \nDirects program execution immediately to the statement label that is specified and, if followed \nby a RETURN statement, returns execution to the statement that follows the LINK statement."},"StatementOptions":null},{"StatementName":"RETURN","StatementHelp":{"#cdata":"Syntax: RETURN; \n      \nStops executing statements at the current point in the DATA step and returns to a predetermined \npoint in the step."},"StatementOptions":null},{"StatementName":"SELECT","StatementHelp":{"#cdata":"Executes one of several statements or groups of statements.\n      \nSyntax: \nSELECT <(select-expression)>;  \n  WHEN-1 (when-expression-1 <..., when-expression-n>) statement;  \n    <... WHEN-n (when-expression-1 <..., when-expression-n>) statement;>  \n      <OTHERWISE statement;> \nEND;"},"StatementOptions":null},{"StatementName":"WHEN","StatementHelp":{"#cdata":"SELECT groups contain WHEN statements that identify SAS statements that are executed when a particular \ncondition is true. Use at least one WHEN statement in a SELECT group.\n      \nSyntax: WHEN-1 (when-expression-1 <..., when-expression-n>) statement; "},"StatementOptions":{"StatementOption":{"StatementOptionName":"DO","StatementOptionType":"S"}}},{"StatementName":"OTHERWISE","StatementHelp":{"#cdata":"An optional OTHERWISE statement specifies a statement to be executed if no WHEN condition is met. \nAn END statement ends a SELECT group.\n\n      \nSyntax: \n  <... WHEN-n (when-expression-1 <..., when-expression-n>) statement;>  \n    <OTHERWISE statement;>"},"StatementOptions":null},{"StatementName":"STOP","StatementHelp":{"#cdata":"Syntax: STOP ;\n\nThe STOP statement halts the execution of all statements that contain it, including \nDO statements and other control or looping statements. Execution continues with the \nnext top-level source statement."},"StatementOptions":null},{"StatementName":"PUT","StatementHelp":{"#cdata":"Syntax: PUT print-item ...< @ > < @@ > ;\n\nThe PUT statement writes text data to the current output file."},"StatementOptions":{"StatementOption":{"StatementOptionName":"_PAGE_","StatementOptionHelp":{"#cdata":"Outputs any pending line data and moves to the top of the next page."},"StatementOptionType":"S"}}}],"#comment":{}}}}