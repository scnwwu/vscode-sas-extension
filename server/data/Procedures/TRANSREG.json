{"Procedure":{"Name":"TRANSREG","ProductGroup":"SAS/STAT","ProcedureHelp":{"#cdata":"Syntax: PROC TRANSREG <DATA=SAS-data-set>\n    <PLOTS=(plot-requests)> <OUTTEST=SAS-data-set> <a-options> <o-options> ; \n    MODEL <transform(dependents </ t-options>)>\n    <transform(dependents </ t-options>) ...=>\n    transform(independents </ t-options>)\n    <transform(independents </ t-options>) ...> </ a-options> ; \n    OUTPUT <OUT=SAS-data-set> <o-options> ; \n    ID variables ; \n    FREQ variable ; \n    WEIGHT variable ; \n    BY variables ; \n\nThe TRANSREG (transformation regression) procedure fits linear models, optionally \nwith smooth, spline, Box-Cox, and other nonlinear transformations of the variables. \nYou can use PROC TRANSREG to fit a curve through a scatter plot or fit multiple \ncurves, one for each level of a classification variable. You can also constrain the \nfunctions to be parallel or monotone or have the same intercept. PROC TRANSREG can \nbe used to code experimental designs and classification variables prior to their use \nin other analyses."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nSpecifies the SAS data set to be analyzed. If you do not specify the DATA= option, \nPROC TRANSREG uses the most recently created SAS data set. The data set must be an \nordinary SAS data set; it cannot be a special TYPE= data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTTEST=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTTEST=SAS-data-set] \n      \nSpecifies an output data set to contain hypothesis tests results. When you specify \nthe OUTTEST= option, the data set contains ANOVA results. When you specify the SS2 \na-option, regression tables are also output. When you specify the UTILITIES o-option, \nconjoint analysis part-worth utilities are also output."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"PLOTS=","ProcedureOptionHelp":{"#cdata":"Controls the plots produced through ODS Graphics. When you specify only one plot \nrequest, you can omit the parentheses around the plot request.\n\nSyntax:\nPLOTS <(global-plot-options)> <= plot-request <(options)>> \nPLOTS <(global-plot-options)> <= (plot-request <(options)> <... plot-request <(options)>>)> \n\nThe global plot options include the following: \n\n  INTERPOLATE |INT \n  uses observations that are excluded from the analysis for interpolation in the fit \n  and transformation plots. By default, observations with zero weight are excluded \n  from all plots. These include observations with a zero, negative, or missing weight \n  or frequency and observations excluded due to missing and invalid values.\n\n  ONLY | ONL \n  suppresses the default plots. Only plots specifically requested are displayed. \n\n  UNPACKPANEL | UNPACK | UNP \n  suppresses paneling. By default, multiple plots can appear in some output panels. \n  Specify UNPACKPANEL to get each plot in a separate panel. "},"ProcedureOptionType":"S|V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"BOXCOX|BOX","@Value3":"FIT","@Value4":"NONE","@Value5":"OBSERVEDBYPREDICTED|OBP|OBS","@Value6":"PBSPLINE|PBS","@Value7":"PREFMAP|PRE","@Value8":"RESIDUALS|RES","@Value9":"SCATTER|SCA","@Value10":"TRANSFORMATION|TRA"},"ProcedureOptionToolTips":{"@ToolTip1":"Produces all appropriate plots.","@ToolTip2":"[Syntax: BOXCOX <( options )> ]                                  Requests a display of the results of the Box-Cox transformation. These results are displayed by  default when there is a Box-Cox transformation. The BOXCOX plot request has the following options:     P=n   adds t or T=t\u00b2 curves to the legend for the functions where p(t) < n, where t is the t statistic    corresponding to the optimal lambda. You can specify P=0 to suppress the legend and P=1 to see all    curves in the legend. The default value comes from the BOXCOX(variable / ALPHA=p) specification,    which by default is 0.05.     RMSE | RMS    plots the root mean square error as a function of lambda.     T    plots t statistics rather than F=t\u00b2 statistics.     UNPACKPANEL | UNPACK |UNP    plots the t or F=t\u00b2 and log-likelihood plots in separate panels.","@ToolTip3":"[Syntax: FIT <( options )> ]                                  Requests a regression fit plot. This plot is produced by default whenever it is appropriate. It is  produced when the dependent variable is specified with the IDENTITY transform, and when there is one  quantitative independent variable (for example, IDENTITY for linear fit or SPLINE or one of the other  transformations for a nonlinear fit) and at most one CLASS variable. When there is a CLASS variable,  separate fits are produced within levels based on your model. You would specify the FIT plot request  only to specify a FIT option or with the ONLY global plot option. The FIT plot request has the following  options:     NOCLM    suppresses the confidence limits in regression fit plots.     NOCLI    suppresses the individual prediction limits in regression fit plots.     NOOBS    suppresses the observations showing only the fit function and optionally the confidence and prediction limits.","@ToolTip4":"Suppresses all plots.","@ToolTip5":"Plots the transformed dependent variable as a function of the regression predicted values.","@ToolTip6":"[Syntax: PBSPLINE <( UNPACKPANEL )>   PBS <( UNPACK )>   Requests the penalized B-spline criterion plots. You would specify the PBSPLINE plot request only  to specify a PBSPLINE option or with the ONLY global plot option. The PBSPLINE plot request has the  following option:      UNPACKPANEL | UNPACK |UNP    plots each criterion plot in a separate panel.","@ToolTip7":"Plots ideal point or vector preference mapping results when either two IDENTITY or two POINT  independent variables are specified along with the COORDINATES option.","@ToolTip8":"[Syntax: RESIDUALS <( options )>  RES <( options )>  Plots the residuals as a function of each of the transformed independent variables, except coded  CLASS variables. The RESIDUALS plot request has the following options:     CLASS | CLA    plots the residuals as a function of each of the transformed independent variables, including coded    CLASS variables. Note that the ALL plot request, which you use to request all plots, specifies the    RESIDUALS plot request without the CLASS option.     UNPACKPANEL | UNPACK | UNP    plots the residuals in separate plots, not several per panel.     SMOOTH | SMO    adds a LOESS smooth function to the residuals plots.","@ToolTip9":"Plots the scatter plot of observed data, before the transformations, for models with a single  quantitative dependent variable, a single quantitative independent variable, and at most one  CLASS independent variable.","@ToolTip10":"Syntax: TRANSFORMATION <( options )>  TRA <( options )>  Plots the variable transformations. The TRANSFORMATION plot request has the following options:     DEPENDENTS | DEP    plots only the dependent variable transformations.     INDEPENDENTS | IND    plots only the independent variable transformations.     UNPACKPANEL | UNPACK | UNP    plots the transformations in separate plots, not several per panel."}},{"ProcedureOptionName":"ADPREFIX=|ADP=","ProcedureOptionHelp":{"#cdata":"[Syntax: ADPREFIX=name] \n          \nSpecifies a prefix for naming the dependent variable predicted values. The default \nis ADPREFIX=P when you specify the PREDICTED o-option; otherwise, it is ADPREFIX=A. \nWhen you specify the ADPREFIX= o-option, the PREDICTED o-option is automatically \nspecified for you. The ADPREFIX= o-option is the same as the PPREFIX= o-option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"AIPREFIX=|AIP=","ProcedureOptionHelp":{"#cdata":"[Syntax: AIPREFIX=name] \n          \nSpecifies a prefix for naming the independent variable approximations. The default \nis AIPREFIX=A. When you specify the AIPREFIX= o-option, the IAPPROXIMATIONS o-option \nis automatically specified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"APPROXIMATIONS|APPROX|APP","ProcedureOptionHelp":{"#cdata":"Is equivalent to specifying both the DAPPROXIMATIONS and the IAPPROXIMATIONS o-options. \nIf you specify METHOD=UNIVARIATE, then the APPROXIMATIONS o-option specifies only the \nDAPPROXIMATIONS o-option."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CANONICAL|CAN","ProcedureOptionHelp":{"#cdata":"Outputs canonical variables to the OUT= data set. When you specify METHOD=CANALS, the \nCANONICAL o-option is automatically specified for you. The CDPREFIX= o-option specifies \na prefix for naming the dependent canonical variables (default Cand), and the CIPREFIX= \no-option specifies a prefix for naming the independent canonical variables (default Cani)."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CCC","ProcedureOptionHelp":{"#cdata":"Outputs canonical correlation coefficients to the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CDPREFIX=|CDP=","ProcedureOptionHelp":{"#cdata":"[Syntax: CDPREFIX=name] \n          \nProvides a prefix for naming the canonical dependent variables. The default is CDPREFIX=Cand. When \nyou specify the CDPREFIX= o-option, the CANONICAL o-option is automatically specified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CEC","ProcedureOptionHelp":{"#cdata":"Outputs canonical elliptical point model coordinates to the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CILPREFIX=|CIL=","ProcedureOptionHelp":{"#cdata":"[Syntax: CILPREFIX=name] \n          \nSpecifies a prefix for naming the conservative-individual-lower confidence limits. The default \nprefix is CIL. When you specify the CILPREFIX= o-option, the CLI o-option is automatically \nspecified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CIPREFIX=|CIP=","ProcedureOptionHelp":{"#cdata":"[Syntax: CIPREFIX=name] \n          \nProvides a prefix for naming the canonical independent variables. The default \nis CIPREFIX=Cani. When you specify the CIPREFIX= o-option, the CANONICAL o-option \nis automatically specified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CIUPREFIX=|CIU=","ProcedureOptionHelp":{"#cdata":"[Syntax: CIUPREFIX=name] \n          \nSpecifies a prefix for naming the conservative-individual-upper confidence limits. \nThe default prefix is CIU. When you specify the CIUPREFIX= o-option, the CLI o-option \nis automatically specified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CLI","ProcedureOptionHelp":{"#cdata":"Outputs individual confidence limits to the OUT= data set. The names of the confidence \nlimits variables are constructed from the original dependent variable names and the \nprefixes specified in the following o-options: LILPREFIX= (default LIL for liberal \nindividual lower), CILPREFIX= (default CIL for conservative individual lower), LIUPREFIX= \n(default LIU for liberal individual upper), and CIUPREFIX= (default CIU for conservative \nindividual upper). When there are no monotonicity constraints, the liberal and conservative \nlimits are the same."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CLM","ProcedureOptionHelp":{"#cdata":"Outputs mean confidence limits to the OUT= data set. The names of the confidence limits \nvariables are constructed from the original dependent variable names and the prefixes \nspecified in the following o-options: LMLPREFIX= (default LML for liberal mean lower), \nCMLPREFIX= (default CML for conservative mean lower), LMUPREFIX= (default LMU for \nliberal mean upper), and CMUPREFIX= (default CMU for conservative mean upper). When \nthere are no monotonicity constraints, the liberal and conservative limits are the \nsame."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CMLPREFIX=|CML=","ProcedureOptionHelp":{"#cdata":"[Syntax: CMLPREFIX=name] \n          \nSpecifies a prefix for naming the conservative-mean-lower confidence limits. The default \nprefix is CML. When you specify the CMLPREFIX= o-option, the CLM o-option is automatically \nspecified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CMUPREFIX=","ProcedureOptionHelp":{"#cdata":"[Syntax: CMUPREFIX=name] \n          \nSpecifies a prefix for naming the conservative-mean-upper confidence limits. The default \nprefix is CMU. When you specify the CMUPREFIX= o-option, the CLM o-option is automatically \nspecified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"COEFFICIENTS|COE","ProcedureOptionHelp":{"#cdata":"Outputs either multiple regression coefficients or raw canonical coefficients to the \nOUT= data set. If you specify METHOD=CANALS (in the MODEL or PROC TRANSREG statement), \nthen the COEFFICIENTS o-option outputs the first n canonical variables, where n is the \nvalue of the NCAN= a-option (specified in the MODEL or PROC TRANSREG statement). \nOtherwise, the COEFFICIENTS o-option includes multiple regression coefficients in \nthe OUT= data set. In addition, when you specify the CLASS expansion for any \nindependent variable, the COEFFICIENTS o-option also outputs marginal means."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"COORDINATES=|COO=","ProcedureOptionHelp":{"#cdata":"[Syntax: COORDINATES<=n>] \n          \nOutputs either ideal point or vector model coordinates for preference mapping \nto the OUT= data set. When METHOD=CANALS, these coordinates are computed from \ncanonical coefficients; otherwise, the coordinates are computed from multiple \nregression coefficients. For details, see the section Point Models. \n\nWhen ODS Graphics is enabled and vector model coordinates are requested, a plot \nis produced with points for each row and vectors for each column. If the vectors \nare plotted based on the actual computed coordinates, then often the vectors are \nshort. A better graphical display is produced when the vectors are stretched. \nThe absolute lengths of each vector can optionally be changed by specifying \nCOORDINATES=n. Then the vector coordinates are all multiplied by n. Usually, \nn is a value such as 2, 2.5, or 3. The default is 2.5. Specify COORDINATES=1 \nif you want to see the vectors without any stretching. The relative lengths of \nthe different vectors are important and interpretable, and these are preserved \nby the stretching."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"CPC","ProcedureOptionHelp":{"#cdata":"Outputs canonical point model coordinates to the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CQC","ProcedureOptionHelp":{"#cdata":"Outputs canonical quadratic point model coordinates to the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"DAPPROXIMATIONS|DAP","ProcedureOptionHelp":{"#cdata":"Outputs the approximations of the transformed dependent variables to the OUT= data set. \nThese are the target values for the optimal transformations. With METHOD=UNIVARIATE and \nMETHOD=MORALS, the dependent variable approximations are the ordinary predicted values \nfrom the linear model. The names of the approximation variables are constructed from the \nADPREFIX= o-option (default A) and the original dependent variable names. For ordinary \npredicted values, use the PREDICTED o-option instead of the DAPPROXIMATIONS o-option, \nsince the PREDICTED o-option uses a more relevant prefix (\"P\" instead of \"A\") and a \nmore relevant variable label suffix (\"Predicted Values\" instead of \"Approximations\")."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"DESIGN=|DES=","ProcedureOptionHelp":{"#cdata":"[Syntax: DESIGN<=n>] \n          \nSpecifies that your primary goal is design matrix coding, not analysis. Specifying the \nDESIGN o-option makes the procedure run faster. The DESIGN o-option sets the default \nmethod to UNIVARIATE and the default MAXITER= value to zero. It suppresses computing \nthe regression coefficients, unless they are needed for some other option. Furthermore, \nwhen the DESIGN o-option is specified, the MODEL statement is not required to have an \nequal sign. When no MODEL statement equal sign is specified, all variables are considered \nindependent variables, all options that require dependent variables are ignored, and the \nIREPLACE o-option is automatically specified for you. \n\nYou can use DESIGN=n for coding very large data sets, where n is the number of observations \nto code at one time. For example, to code a data set with a large number of observations, \nyou can specify DESIGN=100 or DESIGN=1000 to process the data set in blocks of 100 or 1000 \nobservations. If you specify the DESIGN o-option rather than DESIGN=n, PROC TRANSREG tries \nto process all observations at once, which might not work with very large data sets. Specify \nthe NOZEROCONSTANT a-option with DESIGN=n to ensure that constant variables within blocks \nare not zeroed."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"DEPENDENT=|DEP=","ProcedureOptionHelp":{"#cdata":"[Syntax: DEPENDENT=name] \n          \nSpecifies the untransformed dependent variable for OUT= data sets with METHOD=MORALS \nwhen there is more than one dependent variable. The default is DEPENDENT=_DEPEND_. "},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DREPLACE|DRE","ProcedureOptionHelp":{"#cdata":"Replaces the original dependent variables with the transformed dependent variables \nin the OUT= data set. The names of the transformed variables in the OUT= data set \ncorrespond to the names of the original dependent variables in the input data set. \nBy default, both the original dependent variables and the transformed dependent \nvariables (with names constructed from the TDPREFIX= (default T) o-option and the \noriginal dependent variable names) are included in the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"IAPPROXIMATIONS|IAP","ProcedureOptionHelp":{"#cdata":"Outputs the approximations of the transformed independent variables to the OUT= data \nset. These are the target values for the optimal transformations. The names of the \napproximation variables are constructed from the AIPREFIX= o-option (default A) and \nthe original independent variable names. When you specify the AIPREFIX= o-option, the \nIAPPROXIMATIONS o-option is automatically specified for you. The IAPPROXIMATIONS \no-option is not valid when METHOD=UNIVARIATE."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"IREPLACE|IRE","ProcedureOptionHelp":{"#cdata":"Replaces the original independent variables with the transformed independent variables \nin the OUT= data set. The names of the transformed variables in the OUT= data set \ncorrespond to the names of the original independent variables in the input data set. \nBy default, both the original independent variables and the transformed independent \nvariables (with names constructed from the TIPREFIX= o-option (default T) and the \noriginal independent variable names) are included in the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"LEVERAGE=|LEV=","ProcedureOptionHelp":{"#cdata":"[Syntax: LEVERAGE<=name>] \n          \nCreates a variable with the specified name in the OUT= data set that contains leverages. \nSpecifying the LEVERAGE o-option is equivalent to specifying LEVERAGE=Leverage."},"ProcedureOptionType":"S|V"},{"ProcedureOptionName":"LILPREFIX=|LIL=","ProcedureOptionHelp":{"#cdata":"[Syntax: LILPREFIX=name] \n          \nSpecifies a prefix for naming the liberal-individual-lower confidence limits. The \ndefault prefix is LIL. When you specify the LILPREFIX= o-option, the CLI o-option \nis automatically specified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LIUPREFIX=|LIU=","ProcedureOptionHelp":{"#cdata":"[Syntax: LIUPREFIX=name] \n          \nSpecifies a prefix for naming the liberal-individual-upper confidence limits. The \ndefault prefix is LIU. When you specify the LIUPREFIX= o-option, the CLI o-option \nis automatically specified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LMLPREFIX=|LML=","ProcedureOptionHelp":{"#cdata":"[Syntax: LMLPREFIX=name] \n          \nSpecifies a prefix for naming the liberal-mean-lower confidence limits. The default \nprefix is LML. When you specify the LMLPREFIX= o-option, the CLM o-option is automatically \nspecified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"LMUPREFIX=|LMU=","ProcedureOptionHelp":{"#cdata":"[Syntax: LMUPREFIX=name] \n          \nSpecifies a prefix for naming the liberal-mean-upper confidence limits. The default \nprefix is LMU. When you specify the LMUPREFIX= o-option, the CLM o-option is automatically \nspecified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MACRO|MAC","ProcedureOptionHelp":{"#cdata":"[Syntax: MACRO(keyword=name...)] \n          \nCreates macro variables. Most of the options available within the MACRO o-option are rarely needed. \nBy default, PROC TRANSREG creates a macro variable named _TrgInd with a complete list of independent\nvariables created by the procedure. PROC TRANSREG, also by default, creates a macro variable named \n_TrgIndN, which contains the number of variables in the _TrgInd list. \n\nThe available keywords are as follows. \n\n  DN=name -- specifies the name of a macro variable that contains the number of dependent variables. \n  By default, a macro variable named _TrgDepN is created. This is the number of variables in the DL= \n  list and the number of macro variables created by the DV= and DE= specifications. \n\n  IN=name -- specifies the name of a macro variable that contains the number of independent variables. \n  By default, a macro variable named _TrgIndN is created. This is the number of variables in the IL= \n  list and the number of macro variables created by the IV= and IE= specifications. \n\n  DL=name -- specifies the name of a macro variable that contains the list of the dependent variables. \n  By default, a macro variable named _TrgDep is created. These are the variable names of the final \n  transformed variables in the OUT= data set. For example, if there are three dependent variables, \n  y1\u2013y3, then _TrgDep contains, by default, Ty1 Ty2 Ty3 (or y1 y2 y3 if you specify the REPLACE o-option). \n\n  IL=name -- specifies the name of a macro variable that contains the list of the independent variables. \n  By default, a macro variable named _TrgInd is created. These are the variable names of the final transformed \n  variables in the OUT= data set. For example, if there are three independent variables, x1\u2013x3, then _TrgInd \n  contains, by default, Tx1 Tx2 Tx3 (or x1 x2 x3 if you specify the REPLACE o-option). \n\n  DV=prefix -- specifies a prefix for creating a list of macro variables, each of which contains one dependent \n  variable name. For example, if there are three dependent variables, y1\u2013y3, and you specify macro(dv=Dep), then \n  three macro variables, Dep1, Dep2, and Dep3, are created, containing Ty1, Ty2, and Ty3, respectively \n  (or y1, y2, and y3 if you specify the REPLACE o-option). By default, no list is created. \n\n  IV=prefix -- specifies a prefix for creating a list of macro variables, each of which contains one independent \n  variable name. For example, if there are three independent variables, x1\u2013x3, and you specify macro(iv=Ind), \n  then three macro variables, Ind1, Ind2, and Ind3, are created, containing Tx1, Tx2, and TX3, respectively \n  (or x1, x2, and x3 if you specify the REPLACE o-option). By default, no list is created. \n\n  DE=prefix -- specifies a prefix for creating a list of macro variables, each of which contains one dependent \n  variable effect. This list shows the origin of each model term. Each effect consists of two or \n  more parts, and each part consists of a value in 32 columns followed by a blank. For example, \n  if you specify macro(de=d), then a macro variable d1 is created for identity(y). \n\n  IE=prefix -- specifies a prefix for creating a list of macro variables, each of which contains one independent \n  variable effect."},"ProcedureOptionType":"S","SubOptionsKeywords":"IE=|DE=|IV=|DV=|IL=|DL=|IN=|DN="},{"ProcedureOptionName":"MEANS|MEA","ProcedureOptionHelp":{"#cdata":"Outputs marginal means for CLASS variable expansions to the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MEC","ProcedureOptionHelp":{"#cdata":"Outputs multiple regression elliptical point model coordinates to the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MPC","ProcedureOptionHelp":{"#cdata":"Outputs multiple regression point model coordinates to the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MQC","ProcedureOptionHelp":{"#cdata":"Outputs multiple regression quadratic point model coordinates to the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MRC","ProcedureOptionHelp":{"#cdata":"Outputs multiple regression coefficients to the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"MREDUNDANCY|MRE","ProcedureOptionHelp":{"#cdata":"Outputs multiple redundancy analysis coefficients to the OUT= data set."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NORESTOREMISSING|NORESTORE|NOR","ProcedureOptionHelp":{"#cdata":"Specifies that missing values should not be restored when the OUT= data set is created. \nBy default, the coded CLASS variable contains a row of missing values for observations \nin which the CLASS variable is missing. When you specify the NORESTOREMISSING o-option, \nthese observations contain a row of zeros instead. This is useful when PROC TRANSREG is \nused to code experimental designs for discrete choice models and there is a constant \nalternative indicated by a missing value."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOSCORES|NOS","ProcedureOptionHelp":{"#cdata":"Excludes original variables, transformed variables, predicted values, residuals, and \nscores from the OUT= data set. You can use the NOSCORES o-option with various other \noptions to create an OUT= data set that contains only a coefficient partition (for \nexample, a data set consisting entirely of coefficients and coordinates)."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PREDICTED|PRE|P","ProcedureOptionHelp":{"#cdata":"Outputs predicted values, which for METHOD=UNIVARIATE and METHOD=MORALS are the \nordinary predicted values from the linear model, to the OUT= data set. The names \nof the predicted values\u2019 variables are constructed from the PPREFIX= o-option \n(default P) and the original dependent variable names. When you specify the \nPPREFIX= o-option, the PREDICTED o-option is automatically specified for you."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"PPREFIX=|PDPREFIX=|PDP=","ProcedureOptionHelp":{"#cdata":"[Syntax: PPREFIX=name] \n          \nSpecifies a prefix for naming the dependent variable predicted values. The default \nis PPREFIX=P when you specify the PREDICTED o-option; otherwise, it is PPREFIX=A. \nWhen you specify the PPREFIX= o-option, the PREDICTED o-option is automatically \nspecified for you. The PPREFIX= o-option is the same as the ADPREFIX= o-option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"RDPREFIX=|RPD=","ProcedureOptionHelp":{"#cdata":"[Syntax: RDPREFIX=name] \n          \nSpecifies a prefix for naming the residual (dependent) variables to the OUT= data set. \nThe default is RDPREFIX=R. When you specify the RDPREFIX= o-option, the RESIDUALS o-option \nis automatically specified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"REDUNDANCY=|RED=","ProcedureOptionHelp":{"#cdata":"Outputs redundancy variables to the OUT= data set, either standardized or unstandardized. \nSpecifying the REDUNDANCY o-option is the same as specifying REDUNDANCY=STANDARDIZE. The \nresults of the REDUNDANCY o-option depends on the TSTANDARD= option. You must specify \nTSTANDARD=Z to get results based on standardized data. The TSTANDARD= option controls how \nthe data that go into the redundancy analysis are scaled, and REDUNDANCY=STANDARDIZE|\nUNSTANDARDIZE controls how the redundancy variables are scaled. The REDUNDANCY o-option \nis automatically specified for you when you specify the METHOD=REDUNDANCY a-option. The \nRPREFIX= o-option specifies a prefix (default Red) for naming the redundancy variables."},"ProcedureOptionType":"S|V","ProcedureOptionValues":{"@Value1":"STANDARDIZE","@Value2":"UNSTANDARDIZE"},"ProcedureOptionToolTips":{"@ToolTip1":"Outputs redundancy variables to the OUT= data set, standardized.","@ToolTip2":"Outputs redundancy variables to the OUT= data set, unstandardized."}},{"ProcedureOptionName":"REFERENCE=","ProcedureOptionHelp":{"#cdata":"Specifies how reference levels of CLASS variables are to be treated. You can specify \nthe REFERENCE= option in the PROC TRANSREG, MODEL, or OUTPUT statement, and you can \nspecify it independently for the OUT= data set and the displayed output. When you \nspecify it in only one statement, it sets the option for both the displayed output \nand the OUT= data set."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"NONE","@Value2":"MISSING","@Value3":"ZERO"},"ProcedureOptionToolTips":{"@ToolTip1":"Reference levels are suppressed. This is the default.","@ToolTip2":"Reference levels are displayed and output with missing values.","@ToolTip3":"Reference levels are displayed and output with zeros."}},{"ProcedureOptionName":"REPLACE|REP","ProcedureOptionHelp":{"#cdata":"Is equivalent to specifying both the DREPLACE and the IREPLACE o-options."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"RESIDUALS|RES|R","ProcedureOptionHelp":{"#cdata":"Outputs the differences between the transformed dependent variables and their predicted values. \nThe names of the residual variables are constructed from the RDPREFIX= o-option (default R) \nand the original dependent variable names."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"RPREFIX=|RPR=","ProcedureOptionHelp":{"#cdata":"[Syntax: RPREFIX=name] \n          \nProvides a prefix for naming the redundancy variables. The default is RPREFIX=Red. \nWhen you specify the RPREFIX= o-option, the REDUNDANCY o-option is automatically \nspecified for you."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TDPREFIX=|TDP=","ProcedureOptionHelp":{"#cdata":"[Syntax: TDPREFIX=name] \n          \nSpecifies a prefix for naming the transformed dependent variables. By default, \nTDPREFIX=T. The TDPREFIX= o-option is ignored when you specify the DREPLACE \no-option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TIPREFIX=|TIP=","ProcedureOptionHelp":{"#cdata":"[Syntax: TIPREFIX=name] \n          \nSpecifies a prefix for naming the transformed independent variables. By default, \nTIPREFIX=T. The TIPREFIX= o-option is ignored when you specify the IREPLACE \no-option."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"ADDITIVE|ADD","ProcedureOptionHelp":{"#cdata":"Creates an additive model by multiplying the values of each independent variable \n(after the TSTANDARD= standardization) by that variable\u2019s corresponding multiple \nregression coefficient. This process scales the independent variables so that the \npredicted-values variable for the final dependent variable is simply the sum of the \nfinal independent variables. An additive model is a univariate multiple regression \nmodel. As a result, the ADDITIVE a-option is not valid if METHOD=CANALS, or if \nMETHOD=REDUNDANCY or METHOD=UNIVARIATE with more than one dependent variable."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ALPHA=|ALP=","ProcedureOptionHelp":{"#cdata":"[Syntax: ALPHA=number] \n          \nSpecifies the level of significance for all of the confidence limits. By default, \nALPHA=0.05."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CCONVERGE=|CCO=","ProcedureOptionHelp":{"#cdata":"[Syntax: CCONVERGE=n] \n          \nSpecifies the minimum change in the criterion being optimized (squared multiple \ncorrelation for METHOD=MORALS and METHOD=UNIVARIATE, average squared multiple \ncorrelation for METHOD=REDUNDANCY, average squared canonical correlation for \nMETHOD=CANALS) that is required to continue iterating. By default, CCONVERGE=0.0."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CL","ProcedureOptionHelp":{"#cdata":"Requests confidence limits on the parameter estimates in the displayed output."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"CONVERGE=|CON=","ProcedureOptionHelp":{"#cdata":"[Syntax: CONVERGE=n] \n          \nSpecifies the minimum average absolute change in standardized variable scores that \nis required to continue iterating. By default, CONVERGE=0.00001. Average change is \ncomputed over only those variables that can be transformed by the iterations; that \nis, all LINEAR, OPSCORE, MONOTONE, UNTIE, SPLINE, MSPLINE, and SSPLINE variables and \nnonoptimal transformation variables with missing values."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"CPREFIX=|CPR=","ProcedureOptionHelp":{"#cdata":"[Syntax: CPREFIX=n] \n          \nSpecifies the number of first characters of a CLASS expansion variable\u2019s name to use \nin constructing names for coded variables. Coded variable names are constructed from \nthe first n characters of the CLASS expansion variable\u2019s name and the first 32 - n \ncharacters of the formatted CLASS expansion variable\u2019s value. For example, if the \nvariable ClassVariable has values 1, 2, and 3, then, by default, the coded variables \nare named ClassVariable1, ClassVariable2, and ClassVariable3. However, with CPREFIX=5, \nthe coded variables are named Class1, Class2, and Class3. When CPREFIX=0, coded variable \nnames are created entirely from the CLASS expansion variable\u2019s formatted values. Valid \nvalues range from \u20131 to 31, where \u20131 indicates the default calculation and 0 to 31 are \nthe number of prefix characters to use. The default, \u20131, sets n to 32 \u2013 min(32, max(2, fl)), \nwhere fl is the format length. When you specify CPREFIX= as an a-option or an o-option, \nit specifies the default for all CLASS variables. When you specify CPREFIX= as a t-option, \nit overrides the default only for selected variables. "},"ProcedureOptionType":"V"},{"ProcedureOptionName":"DETAIL|DET","ProcedureOptionHelp":{"#cdata":"Reports on details of the model specification. For example, it reports the knots and \ncoefficients for splines, reference levels for CLASS variables, Box-Cox results, the \nsmoothing parameter, and so on. The DETAIL option can take two optional suboptions, \nNOCOEFFICIENTS and NOKNOTS (or NOC and NOK). To suppress knots from the details listing, \nspecify DETAIL(NOKNOTS). To suppress coefficients from the details listing, specify \nDETAIL(NOCOEFFICIENTS). To suppress both knots and coefficients from the details listing, \nspecify DETAIL(NOKNOTS NOCOEFFICIENTS)."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SOLVE|SOL|DUMMY|DUM","ProcedureOptionHelp":{"#cdata":"Provides a canonical initialization. When there are no monotonicity constraints, \nwhen there is at most one canonical variable in each set, and when there is \nenough available memory, PROC TRANSREG (with the SOLVE a-option) can usually \ndirectly solve for the optimal solution in only one iteration. The initialization \niteration is number 0, which is slower and uses more memory than other iterations. \nHowever, for some models, specifying the SOLVE a-option can greatly decrease the \namount of time required to find the optimal transformations. During iteration 0, \neach variable is replaced by an expanded variable and the model is fit to the \nlarger, expanded set of variables. For example, an OPSCORE variable is expanded \ninto coded (or \"dummy\") variables, as if CLASS were specified, and a SPLINE variable \nis expanded into a B-spline basis, as if BSPLINE were specified. Then for each \nexpanded variable, the results of iteration zero are constructed by multiplying \nthe expanded basis times the \u03b2 subvector to get the optimal transformation. This \na-option can be useful even in models where a direct solution is not possible, \nbecause it provides good initial transformations of all the variables."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"HISTORY|HIS","ProcedureOptionHelp":{"#cdata":"Displays the iteration histories even when the NOPRINT a-option is specified."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"INDIVIDUAL|IND","ProcedureOptionHelp":{"#cdata":"Fits each model for each dependent variable individually. This means, for example, \nthat when INDIVIDUAL is specified, missing values in one dependent variable will \nnot cause that observation to be deleted for the other models with the other dependent \nvariables. In contrast, by default, missing values in any variable in any model can \ncause the observation to be deleted for all models. The INDIVIDUAL a-option can be \nspecified only with METHOD=MORALS. \n\nThis a-option also affects the order of the output. By default, the number of \nobservations table is printed once at the beginning of the output. With INDIVIDUAL, \na number of observations table appears for each model."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"LPREFIX=|LPR=","ProcedureOptionHelp":{"#cdata":"[Syntax: LPREFIX=n] \n          \nSpecifies the number of first characters of a CLASS expansion variable\u2019s label (or \nname if no label is specified) to use in constructing labels for coded variables. \nCoded variable labels are constructed from the first n characters of the CLASS \nexpansion variable\u2019s name and the first 127 - n characters of the formatted CLASS \nexpansion variable\u2019s value. Valid values range from \u20131 to 127. Values of 0 to 127 \nspecify the number of name or label characters to use. The default is \u20131, which \nspecifies that PROC TRANSREG should pick a value depending on the length of the \nprefix and the formatted class value. When you specify LPREFIX= as an a-option or \nan o-option, it determines the default for all CLASS variables. When you specify \nLPREFIX= as a t-option, it overrides the default only for selected variables."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXITER=|MAX=","ProcedureOptionHelp":{"#cdata":"[Syntax: MAXITER=n] \n          \nSpecifies the maximum number of iterations (see the section Controlling the Number \nof Iterations). By default, MAXITER=30. You can specify MAXITER=0 to save time when \nno transformations are requested."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"METHOD=","ProcedureOptionHelp":{"#cdata":"Specifies the iterative algorithm. By default, METHOD=UNIVARIATE, unless you specify \noptions that cannot be handled by the UNIVARIATE algorithm. Specifically, the default \nis METHOD=MORALS for the following situations: \n\n  o if you specify LINEAR, OPSCORE, MONOTONE, UNTIE, SPLINE, MSPLINE, or SSPLINE \n    transformations for the independent variables \n\n  o if you specify the ADDITIVE a-option with more than one dependent variable \n\n  o if you specify the IAPPROXIMATIONS o-option \n\n  o if you specify the INDIVIDUAL a-option \n\n  o if ODS Graphics is enabled, regression plots are produced, and there is more than \n    one dependent variable"},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"CANALS","@Value2":"MORALS","@Value3":"REDUNDANCY","@Value4":"UNIVARIATE"},"ProcedureOptionToolTips":{"@ToolTip1":"Specifies canonical correlation with alternating least squares. This jointly transforms all dependent  and independent variables to maximize the average of the first n squared canonical correlations,  where n is the value of the NCAN= a-option.","@ToolTip2":"Specifies multiple optimal regression with alternating least squares. This transforms each dependent  variable, along with the set of independent variables, to maximize the squared multiple correlation.","@ToolTip3":"Jointly transforms all dependent and independent variables to maximize the average of the squared  multiple correlations.","@ToolTip4":"Transforms each dependent variable to maximize the squared multiple correlation, while the independent  variables are not transformed."}},{"ProcedureOptionName":"MONOTONE=|MON=","ProcedureOptionHelp":{"#cdata":"[Syntax: MONOTONE=two-letters] \n          \nSpecifies the first and last special missing value in the list of those special \nmissing values to be estimated with within-variable order and category constraints. \nBy default, there are no order constraints on missing value estimates. The two-letters \nvalue must consist of two letters in alphabetical order. For example, MONOTONE=DF \nmeans that the estimate of .D must be less than or equal to the estimate of .E, \nwhich must be less than or equal to the estimate of .F; no order constraints are \nplaced on estimates of ._, .A through .C, and .G through .Z."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NCAN=|NCA=","ProcedureOptionHelp":{"#cdata":"[Syntax: NCAN=n] \n          \nSpecifies the number of canonical variables to use in the METHOD=CANALS algorithm. \nBy default, NCAN=1. The value of the NCAN= a-option must be \u2265 1. \n\nWhen canonical coefficients and coordinates are included in the OUT= data set, the \nNCAN= a-option also controls the number of rows of the canonical coefficient matrices \nin the data set. If you specify an NCAN= value larger than the minimum of the number \nof dependent variables and the number of independent variables, PROC TRANSREG displays \na warning and sets the NCAN= a-option to the maximum value."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOINT|NOI","ProcedureOptionHelp":{"#cdata":"Omits the intercept from the OUT= data set and suppresses centering of data. You \ncannot specify the NOINT a-option with iterative transformations since there is \nno provision for optimal scaling without an intercept. The NOINT a-option can be \nspecified only when there is no implicit intercept and when all of the data in a \nBY group absolutely will not change during the iterations."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOMISS|NOM","ProcedureOptionHelp":{"#cdata":"Excludes all observations with missing values from the analysis, but does not exclude \nthem from the OUT= data set. If you omit the NOMISS a-option, PROC TRANSREG \nsimultaneously computes the optimal transformations of the nonmissing values \nand estimates the missing values that minimize squared error.  \n\nCasewise deletion of observations with missing values occurs when the NOMISS \na-option is specified, when there are missing values in expansions, when there \nare missing values in METHOD=UNIVARIATE independent variables, when there are \nweights less than or equal to 0, or when there are frequencies less than 1. \nExcluded observations are output with a blank value for the _TYPE_ variable, \nand they have a weight of 0. They do not contribute to the analysis but are \nscored and transformed as supplementary or passive observations."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOPRINT|NOP","ProcedureOptionHelp":{"#cdata":"Suppresses the display of all output unless you specify the HISTORY a-option. The \nNOPRINT a-option without the HISTORY a-option disables the Output Delivery System \n(ODS), including ODS Graphics, for the duration of the procedure run. The NOPRINT \na-option with the HISTORY a-option disables all output except the iteration history, \nagain including ODS Graphics, for the duration of the procedure run."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NOZEROCONSTANT|NOZERO|NOZ","ProcedureOptionHelp":{"#cdata":"Specifies that constant variables are expected and should not be zeroed. By default, \nconstant variables are zeroed. This option is useful when PROC TRANSREG is used to \ncode experimental designs for discrete choice models. When these designs are very \nlarge, it might be more efficient to use the DESIGN= a-option. It might be that \nattributes are constant within a block of n observations, so you need to specify the\nNOZEROCONSTANT a-option to get the correct results. You can specify this option in \nthe PROC TRANSREG, MODEL, and OUTPUT statements."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NSR","ProcedureOptionHelp":{"#cdata":"Specifies that no restrictions are placed on the use of SMOOTH and SSPLINE and the \nordinary least squares is used to find the coefficients and predicted values. By \ndefault, only certain types of models can be specified with SMOOTH and ordinary \nleast squares is not used to find the coefficients and predicted values."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"ORDER=|ORD=","ProcedureOptionHelp":{"#cdata":"Specifies the order in which the CLASS variable levels are to be reported. The default \nis ORDER=INTERNAL. For ORDER=FORMATTED and ORDER=INTERNAL, the sort order is machine \ndependent. When you specify ORDER= as an a-option or an o-option, it determines the \ndefault ordering for all CLASS variables. When you specify ORDER= as a t-option, it \noverrides the default ordering only for selected variables."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"DATA","@Value2":"FREQ","@Value3":"FORMATTED","@Value4":"INTERNAL"},"ProcedureOptionToolTips":{"@ToolTip1":"Sorts by order of appearance in the input data set.","@ToolTip2":"Sorts by formatted value.","@ToolTip3":"Sorts by descending frequency count; levels with the most observations appear first.","@ToolTip4":"Sorts by unformatted value."}},{"ProcedureOptionName":"PBOXCOXTABLE|PBO","ProcedureOptionHelp":{"#cdata":"Prints the Box-Cox table with the log likelihood displayed as a function of lambda. \nThe important information in this table is displayed in the Box-Cox plot, so when \nODS Graphics is in effect and the plot is produced, the table is not produced by \ndefault. When ODS Graphics is not in effect or when the plot is not produced, the \ntable is produced by default. Specify the PBOXCOXTABLE option if you want to see \nthe table in addition to the plot."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"REITERATE|REI","ProcedureOptionHelp":{"#cdata":"Enables PROC TRANSREG to use previous transformations as starting points. The REITERATE \na-option affects only variables that are iteratively transformed (specified as LINEAR, \nOPSCORE, MONOTONE, UNTIE, SPLINE, MSPLINE, and SSPLINE). For iterative transformations, \nthe REITERATE a-option requests a search in the input data set for a variable that \nconsists of the value of the TDPREFIX= or TIPREFIX= o-option followed by the original \nvariable name. If such a variable is found, it is used to provide the initial values \nfor the first iteration. The final transformation is a member of the transformation \nfamily defined by the original variable, not the transformation family defined by the \ninitialization variable."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"RSQUARE|RSQ","ProcedureOptionHelp":{"#cdata":"Prints a table with only the model R square."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SEPARATORS=|SEP=","ProcedureOptionHelp":{"#cdata":"[Syntax: SEPARATORS=\u2019string-1\u2019 <\u2019string-2\u2019>] \n          \nSpecifies separators for creating CLASS expansion variable labels. By default, \nSEPARATORS=\u2019 \u2019 \u2019 * \u2019 (\"blank\" and \"blank asterisk blank\"). The first value is \nused to separate variable names and values in interactions. The second value is \nused to separate interaction components. For example, the label for the coded \nvariable for the A=1 and B=2 cell is, by default, \u2019A 1 * B 2\u2019. If SEPARATORS=\u2019=\u2019 \u2019x\u2019 \nis specified, then the label is \u2019A=1xB=2\u2019. When you specify SEPARATORS= as an \na-option or an o-option, it determines the default separators for all CLASS \nvariables. When you specify SEPARATORS= as a t-option, it overrides the default \nonly for selected variables."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SHORT|SHO","ProcedureOptionHelp":{"#cdata":"Suppresses the iteration histories."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"SINGULAR=|SIN=","ProcedureOptionHelp":{"#cdata":"[Syntax: SINGULAR=n] \n          \nSpecifies the largest value within rounding error of zero. By default, SINGULAR=1E\u201312. \nPROC TRANSREG uses the value of the SINGULAR= a-option for checking 1 - R\u00b2 when constructing \nfull-rank matrices of predictor variables, checking denominators before dividing, and so on. \nPROC TRANSREG computes the regression coefficients by sweeping with rational pivoting."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SS2","ProcedureOptionHelp":{"#cdata":"Produces a regression table based on Type II sums of squares. Tests of the contribution \nof each transformation to the overall model are displayed and output to the OUTTEST= \ndata set when you specify the OUTTEST= option. When you specify the SS2 a-option, the \nTEST a-option is automatically specified for you."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"TEST|TES","ProcedureOptionHelp":{"#cdata":"Generates an ANOVA table. PROC TRANSREG tests the null hypothesis that the vector of \nscoring coefficients for all of the transformations is zero."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"TSUFFIX=|TSU=","ProcedureOptionHelp":{"#cdata":"[Syntax: TSUFFIX=n] \n          \nSpecifies the number of characters in \"Transformation\" to append to variable labels \nfor transformed variables. By default, all characters are used."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"TSTANDARD=","ProcedureOptionHelp":{"#cdata":"Specifies the standardization of the transformed variables for the hypothesis tests \nand in the OUT= data set. By default, TSTANDARD=ORIGINAL. When you specify TSTANDARD= \nas an a-option or an o-option, it determines the default standardization for all variables. \nWhen you specify TSTANDARD= as a t-option, it overrides the default standardization only \nfor selected variables."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"CENTER","@Value2":"NOMISS","@Value3":"ORIGINAL","@Value4":"Z"},"ProcedureOptionToolTips":{"@ToolTip1":"Centers the output variables to mean zero, but the variances are the same as the variances of the  input variables.","@ToolTip2":"Sets the means and variances of the transformed variables in the OUT= data set,  computed over all output values that correspond to nonmissing values in the  input data set, to the means and variances computed from the nonmissing  observations of the original variables. The TSTANDARD=NOMISS specification  is useful with missing data. When a variable is linearly transformed, the  final variable contains the original nonmissing values and the missing value  estimates. In other words, the nonmissing values are unchanged. If your data  have no missing values, TSTANDARD=NOMISS and TSTANDARD=ORIGINAL produce the same results.","@ToolTip3":"Sets the means and variances of the transformed variables to the means and variances  of the original variables. This is the default.","@ToolTip4":"Standardizes the variables to mean zero, variance one."}},{"ProcedureOptionName":"TYPE=|TYP=","ProcedureOptionHelp":{"#cdata":"[Syntax: TYPE=\u2019text\u2019|name] \n          \nSpecifies the valid value for the _TYPE_ variable in the input data set. If PROC TRANSREG \nfinds an input _TYPE_ variable, it uses only observations with a _TYPE_ value that matches \nthe TYPE= value. This enables a PROC TRANSREG OUT= data set containing coefficients to be used \nas input to PROC TRANSREG without requiring a WHERE statement to exclude the coefficients. If  \na _TYPE_ variable is not in the data set, all observations are used. The default is TYPE=\u2019SCORE\u2019, \nso if you do not specify the TYPE= a-option, only observations with _TYPE_=\u2019SCORE\u2019 are used. \nDo not confuse this a-option with the data set TYPE= option. The DATA= data set must \nbe an ordinary SAS data set. \n\nPROC TRANSREG displays a note when it reads observations with blank values of _TYPE_, but it \ndoes not automatically exclude those observations. Data sets created by the TRANSREG and PRINQUAL \nprocedures have blank _TYPE_ values for those observations that were excluded from the analysis \ndue to nonpositive weights, nonpositive frequencies, or missing data. When these observations are \nread again, they are excluded for the same reason that they were excluded from their original \nanalysis, not because their _TYPE_ value is blank."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"UNTIE=|UNT=","ProcedureOptionHelp":{"#cdata":"[Syntax: UNTIE=two-letters] \n          \nSpecifies the first and last special missing values in the list of those special \nmissing values that are to be estimated with within-variable order constraints but \nno category constraints. The two-letters value must consist of two letters in \nalphabetical order. By default, there are category constraints but no order \nconstraints on special missing value estimates."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"UTILITIES|UTI","ProcedureOptionHelp":{"#cdata":"Produces a table of the part-worth utilities from a conjoint analysis. Utilities, \ntheir standard errors, and the relative importance of each factor are displayed \nand output to the OUTTEST= data set when you specify the OUTTEST= option. When \nyou specify the UTILITIES a-option, the TEST a-option is automatically specified \nfor you."},"ProcedureOptionType":"S"}],"#comment":[{},{}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY <DESCENDING> variable-1 <...<DESCENDING> variable-n> <NOTSORTED>; \n      \nYou can specify a BY statement with PROC TRANSREG to obtain separate analyses on \nobservations in groups defined by the BY variables. When a BY statement appears, \nthe procedure expects the input data set to be sorted in order of the BY variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING","StatementOptionHelp":{"#cdata":"Specifies that the observations are sorted in descending order by the variable that \nimmediately follows the word DESCENDING in the BY statement."},"StatementOptionType":"S"},{"StatementOptionName":"NOTSORTED","StatementOptionHelp":{"#cdata":"Specifies that observations are not necessarily sorted in alphabetic or numeric order."},"StatementOptionType":"S"}]}},{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variables ; \n    \nThe ID statement includes additional character or numeric variables in the OUT= data \nset. The variables must be contained in the input data set. The first variable is used \nto label points in PREFMAP plots. These variables are also used in some plots as tip \nvariables."},"StatementOptions":null},{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable ;\n      \nIf one variable in your input data set represents the frequency of occurrence for \nother values in the observation, specify the variable\u2019s name in a FREQ statement. \nPROC TRANSREG treats the data as if each observation appears n times, where n is \nthe value of the FREQ variable for the observation. Noninteger values of the FREQ \nvariable are truncated to the largest integer less than the FREQ value. The observation \nis used in the analysis only if the value of the FREQ statement variable is greater \nthan or equal to 1."},"StatementOptions":null},{"StatementName":"WEIGHT","StatementHelp":{"#cdata":"Syntax: WEIGHT variable;\n      \nWhen you use a WEIGHT statement, a weighted residual sum of squares is minimized. \nThe WEIGHT statement has no effect on degrees of freedom or number of observations, \nbut the weights affect most other calculations. The observation is used in the \nanalysis only if the value of the WEIGHT statement variable is greater than 0."},"StatementOptions":null},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL <transform(dependents </ t-options>)>\n  <transform(dependents </ t-options>) ...=>\n  transform(independents </ t-options>)\n  <transform(independents </ t-options>) ...> </ a-options> ; \n\nThe MODEL statement specifies the dependent and independent variables (dependents \nand independents, respectively) and specifies the transformation (transform) to \napply to each variable. Only one MODEL statement can appear in PROC TRANSREG. The \nt-options are transformation options, and the a-options are algorithm options. The \nt-options provide details for the transformation; these depend on the transform \nchosen. The t-options are listed after a slash in the parentheses that enclose the \nvariable list (either 'dependents or independents). The a-options control the algorithm \nused, details of iteration, details of how the intercept and coded variables are \ngenerated, and displayed output details. The a-options are listed after the entire \nmodel specification (the dependents, independents, transformations, and t-options) \nand after a slash. You can also specify the algorithm options in the PROC TRANSREG \nstatement. When you specify the DESIGN o-option, dependents and an equal sign are \nnot required. The operators *, |, and @ from the GLM procedure are available for \ninteractions with the CLASS expansion and the IDENTITY transformation. They are \nused as follows: \n\n      Class(a * b ...\n            c | d ...\n            e | f ... @ n)\n   Identity(a * b ...\n            c | d ...\n            e | f ... @ n)\n\nIn addition, transformations and spline expansions can be crossed with classification variables as follows: \n\ntransform(var) * class(group)\ntransform(var) | class(group)"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"BSPLINE|BSP","StatementOptionHelp":{"#cdata":"Expands each variable to a B-spline basis. You can specify the DEGREE=, KNOTS=, \nNKNOTS=, and EVENLY= t-options with the BSPLINE expansion. When DEGREE=n (3 by \ndefault) with k knots (0 by default), n+k+l variables are created. In addition, \nthe original variable appears in the OUT= data set before the ID variables. For \nexample, bspline(x) expands x into x_0 x_1 x_2 x_3 and outputs x as well. The x_: \nvariables contain the B-spline basis vectors (which are the same basis vectors \nthat the SPLINE and MSPLINE transformations use internally). The columns of the \nBSPLINE expansion sum to a column of ones, so an implicit intercept model is fit \nwhen the BSPLINE expansion is specified. If you specify the BSPLINE expansion for \nmore than one variable, the model is less than full rank. Variables specified \nin a BSPLINE expansion must be numeric, and they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"CLASS|CLA","StatementOptionHelp":{"#cdata":"Expands the variables to a set of coded or \"dummy\" variables. PROC TRANSREG uses \nthe values of the formatted variables to determine class membership. The \nspecification class(x1 x2) fits a simple main-effects model, class(x1 | x2) \nfits a main-effects and interactions model, and class(x1|x2|x3|x4@2 x1*x2*x3) \nfits a model with all main effects, all two-way interactions, and one three-way \ninteraction. Variables specified with the CLASS expansion can be either character \nor numeric; numeric variables should be discrete."},"StatementOptionType":"RS"},{"StatementOptionName":"EPOINT|EPO","StatementOptionHelp":{"#cdata":"Expands the variables for an elliptical response surface regression or for an elliptical \nideal point regression. Specify the COORDINATES o-option to output PREFMAP ideal elliptical \npoint model coordinates to the OUT= data set. Each axis of the ellipse (or ellipsoid) is \noriented in the same direction as one of the variables. The EPOINT expansion creates a new \nvariable for each original variable. The value of each new variable is the square of each \nobserved value for the corresponding original variable. The regression analysis then uses \nboth sets of variables (original and squared). Variables specified with the EPOINT expansion \nmust be numeric, and they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"POINT|POI","StatementOptionHelp":{"#cdata":"Expands the variables for a circular response surface regression or for a circular \nideal point regression. Specify the COORDINATES o-option to output PREFMAP ideal \npoint model coordinates to the OUT= data set. The POINT expansion creates a new \nvariable having a value for each observation that is the sum of squares of all \nthe POINT variables. This new variable is added to the set of variables and is \nused in the regression analysis."},"StatementOptionType":"RS"},{"StatementOptionName":"PSPLINE|PSP","StatementOptionHelp":{"#cdata":"Expands each variable to a piecewise polynomial basis. You can specify the DEGREE=, \nKNOTS=, NKNOTS=, and EVENLY t-options with PSPLINE. When DEGREE= (3 by default) \nwith k knots (0 by default), n + k variables are created. In addition, the original \nvariable appears in the OUT= data set before the ID variables. For example, pspline \n(x / nknots=1) expands x into x_1 x_2 x_3 x_4 and outputs x as well. Unlike BSPLINE, \nan intercept is not implicit in the columns of PSPLINE. Variables specified with the \nPSPLINE expansion must be numeric, and they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"QPOINT|QPO","StatementOptionHelp":{"#cdata":"Expands the variables for a quadratic response surface regression or for a quadratic \nideal point regression. Specify the COORDINATES o-option to output PREFMAP quadratic \nideal point model coordinates to the OUT= data set. For m QPOINT variables, m(m+1)/2 \nnew variables are created containing the squares and crossproducts of the original \nvariables. The regression analysis uses both sets (original and crossed). Variables \nspecified with the QPOINT expansion must be numeric, and they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"ARSIN|ARS","StatementOptionHelp":{"#cdata":"Finds an inverse trigonometric sine transformation. Variables specified in the ARSIN \ntransform must be numeric and in the interval (-1.0 \u2264 x \u2264 1.0), and they are typically \ncontinuous."},"StatementOptionType":"RS"},{"StatementOptionName":"EXP","StatementOptionHelp":{"#cdata":"Exponentiates variables (x is transformed to a^x). To specify the value of a, use \nthe PARAMETER= t-option. By default, a is the mathematical constant e=2.718... \nVariables specified with the EXP transform must be numeric, and they are typically \ncontinuous."},"StatementOptionType":"RS"},{"StatementOptionName":"LOG","StatementOptionHelp":{"#cdata":"Transforms variables to logarithms (x is transformed to LOGa(x)). To specify the base \nof the logarithm, use the PARAMETER= t-option. The default is a natural logarithm \nwith base e=2.718... Variables specified with the LOG transform must be numeric and \npositive, and they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"LOGIT","StatementOptionHelp":{"#cdata":"Finds a logit transformation on the variables. The logit of x is LOG(x/(1-x)). \nUnlike other transformations, LOGIT does not have a three-letter abbreviation. \nVariables specified with the LOGIT transform must be numeric and in the interval \n(0.0 < x < 1.0), and they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"POWER|POW","StatementOptionHelp":{"#cdata":"Raises variables to a specified power (x is transformed to x^a). You must specify \nthe power parameter, a, by specifying the PARAMETER= t-option following the \nvariables. Here is an example: \n\n   power(variable / parameter=number)\n\nYou can use POWER for squaring variables (PARAMETER=2), reciprocal transformations (PARAMETER=\u20131), \nsquare roots (PARAMETER=0.5), and so on. Variables specified with the POWER transform must be numeric,\nand they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"RANK|RAN","StatementOptionHelp":{"#cdata":"Transforms variables to ranks. Ranks are averaged within ties. The smallest input \nvalue is assigned the smallest rank. Variables specified in the RANK transform \nmust be numeric."},"StatementOptionType":"RS"},{"StatementOptionName":"BOXCOX|BOX","StatementOptionHelp":{"#cdata":"Finds a Box-Cox (1964) transformation of the specified variables. The BOXCOX transformation \ncan be used only with dependent variables. The ALPHA=, CLL=, CONVENIENT, GEOMETRICMEAN, \nLAMBDA=, and PARAMETER= t-options can be used with the BOXCOX transformation. Variables \nspecified in the BOXCOX transform must be numeric, and they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"PBSPLINE|PBS","StatementOptionHelp":{"#cdata":"Is a noniterative penalized B-spline transformation (Eilers and Marx; 1996). The PBSPLINE \ntransformation can be used only with independent variables. By default with PBSPLINE, a \ncubic spline is fit with 100 evenly spaced knots, three evenly spaced exterior knots, and \na difference matrix of order three (DEGREE=3 NKNOTS=100 EVENLY=3 PARAMETER=3). Variables \nspecified in the PBSPLINE transform must be numeric, and they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"SMOOTH|SMO","StatementOptionHelp":{"#cdata":"Is a noniterative smoothing spline transformation (Reinsch; 1967). You can specify \nthe smoothing parameter with either the SM= or the PARAMETER= t-option. The default \nsmoothing parameter is SM=0. The SMOOTH transformation can be used only with independent \nvariables. Variables specified with the SMOOTH transform must be numeric, and they are \ntypically continuous. How the results of the SMOOTH transformation are used in PROC \nTRANSREG has changed with this release. In particular, some aspects of the syntax along \nthe coefficients and predicted values have changed."},"StatementOptionType":"RS"},{"StatementOptionName":"LINEAR|LIN","StatementOptionHelp":{"#cdata":"Finds an optimal linear transformation of each variable. For variables with no missing \nvalues, the transformed variable is the same as the original variable. For variables \nwith missing values, the transformed nonmissing values have a different scale and origin \nthan the original values. Variables specified in the LINEAR transform must be numeric."},"StatementOptionType":"RS"},{"StatementOptionName":"MONOTONE|MON","StatementOptionHelp":{"#cdata":"Finds a monotonic transformation of each variable, with the restriction that ties \nare preserved. The Kruskal (1964) secondary least-squares monotonic transformation \nis used. This transformation weakly preserves order and category membership (ties). \nVariables specified with the MONOTONE transform must be numeric, and they are typically \ndiscrete."},"StatementOptionType":"RS"},{"StatementOptionName":"MSPLINE|MSP","StatementOptionHelp":{"#cdata":"Finds a monotonically increasing B-spline transformation with monotonic coefficients \n(de Boor; 1978; de Leeuw; 1986) of each variable. You can specify the DEGREE=, KNOTS=, \nNKNOTS=, and EVENLY= t-options with MSPLINE. By default, PROC TRANSREG fits a quadratic \nspline with no knots. Variables specified with the MSPLINE transform must be numeric, \nand they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"OPSCORE|OPS","StatementOptionHelp":{"#cdata":"Finds an optimal scoring of each variable. The OPSCORE transformation assigns scores \nto each class (level) of the variable. The Fisher (1938) optimal scoring method is \nused. Variables specified with the OPSCORE transform can be either character or \nnumeric; numeric variables should be discrete."},"StatementOptionType":"RS"},{"StatementOptionName":"SPLINE|SPL","StatementOptionHelp":{"#cdata":"Finds a B-spline transformation (de Boor; 1978) of each variable. By default, PROC \nTRANSREG fits a cubic spline with no knots. You can specify the DEGREE=, KNOTS=, \nNKNOTS=, and EVENLY= t-options with SPLINE. Variables specified with the SPLINE \ntransform must be numeric, and they are typically continuous."},"StatementOptionType":"RS"},{"StatementOptionName":"UNTIE|UNT","StatementOptionHelp":{"#cdata":"Finds a monotonic transformation of each variable without the restriction that ties \nare preserved. PROC TRANSREG uses the Kruskal (1964) primary least-squares monotonic \ntransformation method. This transformation weakly preserves order but not category \nmembership (it might untie some previously tied values). Variables specified with \nthe UNTIE transform must be numeric, and they are typically discrete."},"StatementOptionType":"RS"},{"StatementOptionName":"IDENTITY|IDE","StatementOptionHelp":{"#cdata":"Specifies variables that are not changed by the iterations. Typically, the IDENTITY \ntransformation is used with a simple variable list, such as identity(x1-x5). However, \nyou can also specify interaction terms. For example, identity(x1 | x2) creates x1, \nx2, and the product x1*x2; and identity(x1 | x2 | x3) creates x1, x2, x1*x2, x3, \nx1*x3, x2*x3, and x1*x2*x3. Variables specified in the IDENTITY transform must be \nnumeric. \n\nThe IDENTITY transformation is used for variables when no transformation and no \nmissing data estimation are desired. However, the REFLECT t-option, the ADDITIVE \na-option, and the TSTANDARD=Z, and TSTANDARD=CENTER options can linearly transform \nall variables, including IDENTITY variables, after the iterations. Observations \nwith missing values in IDENTITY variables are excluded from the analysis, and no \noptimal scores are computed for missing values in IDENTITY variables."},"StatementOptionType":"RS"},{"StatementOptionName":"SSPLINE|SSP","StatementOptionHelp":{"#cdata":"Finds an iterative smoothing spline transformation of each variable. The SSPLINE \ntransformation does not generally minimize squared error. You can specify the \nsmoothing parameter with either the SM= t-option or the PARAMETER= t-option. \nThe default smoothing parameter is SM=0. Variables specified with the SSPLINE \ntransform must be numeric, and they are typically continuous. How the results \nof the SSPLINE transformation are used in PROC TRANSREG has changed with this \nrelease to be consistent with the changes to SMOOTH. In particular, some aspects \nof the syntax along the coefficients and predicted values have changed."},"StatementOptionType":"RS"},{"StatementOptionName":"ADDITIVE|ADD","StatementOptionHelp":{"#cdata":"Creates an additive model by multiplying the values of each independent variable \n(after the TSTANDARD= standardization) by that variable\u2019s corresponding multiple \nregression coefficient. This process scales the independent variables so that the \npredicted-values variable for the final dependent variable is simply the sum of the \nfinal independent variables. An additive model is a univariate multiple regression \nmodel. As a result, the ADDITIVE a-option is not valid if METHOD=CANALS, or if \nMETHOD=REDUNDANCY or METHOD=UNIVARIATE with more than one dependent variable."},"StatementOptionType":"S"},{"StatementOptionName":"ALPHA=|ALP=","StatementOptionHelp":{"#cdata":"[Syntax: ALPHA=number] \n          \nSpecifies the level of significance for all of the confidence limits. By default, \nALPHA=0.05."},"StatementOptionType":"V"},{"StatementOptionName":"CCONVERGE=|CCO=","StatementOptionHelp":{"#cdata":"[Syntax: CCONVERGE=n] \n          \nSpecifies the minimum change in the criterion being optimized (squared multiple \ncorrelation for METHOD=MORALS and METHOD=UNIVARIATE, average squared multiple \ncorrelation for METHOD=REDUNDANCY, average squared canonical correlation for \nMETHOD=CANALS) that is required to continue iterating. By default, CCONVERGE=0.0."},"StatementOptionType":"V"},{"StatementOptionName":"CL","StatementOptionHelp":{"#cdata":"Requests confidence limits on the parameter estimates in the displayed output."},"StatementOptionType":"S"},{"StatementOptionName":"CONVERGE=|CON=","StatementOptionHelp":{"#cdata":"[Syntax: CONVERGE=n] \n          \nSpecifies the minimum average absolute change in standardized variable scores that \nis required to continue iterating. By default, CONVERGE=0.00001. Average change is \ncomputed over only those variables that can be transformed by the iterations; that \nis, all LINEAR, OPSCORE, MONOTONE, UNTIE, SPLINE, MSPLINE, and SSPLINE variables \nand nonoptimal transformation variables with missing values."},"StatementOptionType":"V"},{"StatementOptionName":"CPREFIX=|CPR=","StatementOptionHelp":{"#cdata":"[Syntax: CPREFIX=n] \n          \nSpecifies the number of first characters of a CLASS expansion variable\u2019s name to use \nin constructing names for coded variables. Coded variable names are constructed from \nthe first n characters of the CLASS expansion variable\u2019s name and the first 32 - n \ncharacters of the formatted CLASS expansion variable\u2019s value. For example, if the \nvariable ClassVariable has values 1, 2, and 3, then, by default, the coded variables \nare named ClassVariable1, ClassVariable2, and ClassVariable3. However, with CPREFIX=5, \nthe coded variables are named Class1, Class2, and Class3. When CPREFIX=0, coded variable \nnames are created entirely from the CLASS expansion variable\u2019s formatted values. Valid \nvalues range from \u20131 to 31, where \u20131 indicates the default calculation and 0 to 31 are \nthe number of prefix characters to use. The default, \u20131, sets n to 32 \u2013 min(32, max(2, fl)), \nwhere fl is the format length. When you specify CPREFIX= as an a-option or an o-option, \nit specifies the default for all CLASS variables. When you specify CPREFIX= as a t-option, \nit overrides the default only for selected variables."},"StatementOptionType":"V"},{"StatementOptionName":"DETAIL|DET","StatementOptionHelp":{"#cdata":"Reports on details of the model specification. For example, it reports the knots \nand coefficients for splines, reference levels for CLASS variables, Box-Cox \nresults, the smoothing parameter, and so on. The DETAIL option can take two \noptional suboptions, NOCOEFFICIENTS and NOKNOTS (or NOC and NOK). To suppress \nknots from the details listing, specify DETAIL(NOKNOTS). To suppress coefficients \nfrom the details listing, specify DETAIL(NOCOEFFICIENTS). To suppress both knots \nand coefficients from the details listing, specify DETAIL(NOKNOTS NOCOEFFICIENTS)."},"StatementOptionType":"S"},{"StatementOptionName":"SOLVE|SOL|DUMMY|DUM","StatementOptionHelp":{"#cdata":"Provides a canonical initialization. When there are no monotonicity constraints, \nwhen there is at most one canonical variable in each set, and when there is \nenough available memory, PROC TRANSREG (with the SOLVE a-option) can usually \ndirectly solve for the optimal solution in only one iteration. The initialization \niteration is number 0, which is slower and uses more memory than other iterations. \nHowever, for some models, specifying the SOLVE a-option can greatly decrease the \namount of time required to find the optimal transformations. During iteration 0, \neach variable is replaced by an expanded variable and the model is fit to the \nlarger, expanded set of variables. For example, an OPSCORE variable is expanded \ninto coded (or \"dummy\") variables, as if CLASS were specified, and a SPLINE \nvariable is expanded into a B-spline basis, as if BSPLINE were specified. Then \nfor each expanded variable, the results of iteration zero are constructed by \nmultiplying the expanded basis times the \u03b2 subvector to get the optimal \ntransformation. This a-option can be useful even in models where a direct \nsolution is not possible, because it provides good initial transformations \nof all the variables."},"StatementOptionType":"S"},{"StatementOptionName":"HISTORY|HIS","StatementOptionHelp":{"#cdata":"Displays the iteration histories even when the NOPRINT a-option is specified."},"StatementOptionType":"S"},{"StatementOptionName":"INDIVIDUAL|IND","StatementOptionHelp":{"#cdata":"Fits each model for each dependent variable individually. This means, for example, \nthat when INDIVIDUAL is specified, missing values in one dependent variable will \nnot cause that observation to be deleted for the other models with the other \ndependent variables. In contrast, by default, missing values in any variable in \nany model can cause the observation to be deleted for all models. The INDIVIDUAL \na-option can be specified only with METHOD=MORALS. \n\nThis a-option also affects the order of the output. By default, the number of \nobservations table is printed once at the beginning of the output. With INDIVIDUAL, \na number of observations table appears for each model."},"StatementOptionType":"S"},{"StatementOptionName":"LPREFIX=|LPR=","StatementOptionHelp":{"#cdata":"[Syntax: LPREFIX=n] \n          \nSpecifies the number of first characters of a CLASS expansion variable\u2019s label \n(or name if no label is specified) to use in constructing labels for coded variables. \nCoded variable labels are constructed from the first n characters of the CLASS expansion \nvariable\u2019s name and the first 127 - n characters of the formatted CLASS expansion \nvariable\u2019s value. Valid values range from \u20131 to 127. Values of 0 to 127 specify the \nnumber of name or label characters to use. The default is \u20131, which specifies that \nPROC TRANSREG should pick a value depending on the length of the prefix and the \nformatted class value. When you specify LPREFIX= as an a-option or an o-option, it \ndetermines the default for all CLASS variables. When you specify LPREFIX= as a \nt-option, it overrides the default only for selected variables."},"StatementOptionType":"V"},{"StatementOptionName":"MAXITER=|MAX=","StatementOptionHelp":{"#cdata":"[Syntax: MAXITER=n] \n          \nSpecifies the maximum number of iterations (see the section Controlling the Number \nof Iterations). By default, MAXITER=30. You can specify MAXITER=0 to save time when \nno transformations are requested."},"StatementOptionType":"V"},{"StatementOptionName":"METHOD=","StatementOptionHelp":{"#cdata":"Specifies the iterative algorithm. By default, METHOD=UNIVARIATE, unless you specify \noptions that cannot be handled by the UNIVARIATE algorithm. Specifically, the default \nis METHOD=MORALS for the following situations: \n\n  o if you specify LINEAR, OPSCORE, MONOTONE, UNTIE, SPLINE, MSPLINE, or SSPLINE transformations \n    for the independent variables \n\n  o if you specify the ADDITIVE a-option with more than one dependent variable \n\n  o if you specify the IAPPROXIMATIONS o-option \n\n  o if you specify the INDIVIDUAL a-option \n\n  o if ODS Graphics is enabled, regression plots are produced, and there is more than one \n    dependent variable"},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CANALS","@Value2":"MORALS","@Value3":"REDUNDANCY","@Value4":"UNIVARIATE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies canonical correlation with alternating least squares. This jointly transforms all dependent  and independent variables to maximize the average of the first n squared canonical correlations,  where n is the value of the NCAN= a-option.","@ToolTip2":"Specifies multiple optimal regression with alternating least squares. This transforms each dependent  variable, along with the set of independent variables, to maximize the squared multiple correlation.","@ToolTip3":"Jointly transforms all dependent and independent variables to maximize the average of the squared  multiple correlations.","@ToolTip4":"Transforms each dependent variable to maximize the squared multiple correlation, while the independent  variables are not transformed."}},{"StatementOptionName":"MONOTONE=|MON=","StatementOptionHelp":{"#cdata":"[Syntax: MONOTONE=two-letters] \n          \nSpecifies the first and last special missing value in the list of those special \nmissing values to be estimated with within-variable order and category constraints. \nBy default, there are no order constraints on missing value estimates. The two-letters \nvalue must consist of two letters in alphabetical order. For example, MONOTONE=DF \nmeans that the estimate of .D must be less than or equal to the estimate of .E, \nwhich must be less than or equal to the estimate of .F; no order constraints are \nplaced on estimates of ._, .A through .C, and .G through .Z."},"StatementOptionType":"V"},{"StatementOptionName":"NCAN=|NCA=","StatementOptionHelp":{"#cdata":"[Syntax: NCAN=n] \n          \nSpecifies the number of canonical variables to use in the METHOD=CANALS algorithm. \nBy default, NCAN=1. The value of the NCAN= a-option must be \u2265 1. \n\nWhen canonical coefficients and coordinates are included in the OUT= data set, the \nNCAN= a-option also controls the number of rows of the canonical coefficient matrices \nin the data set. If you specify an NCAN= value larger than the minimum of the number \nof dependent variables and the number of independent variables, PROC TRANSREG displays \na warning and sets the NCAN= a-option to the maximum value."},"StatementOptionType":"V"},{"StatementOptionName":"NOINT|NOI","StatementOptionHelp":{"#cdata":"Omits the intercept from the OUT= data set and suppresses centering of data. You \ncannot specify the NOINT a-option with iterative transformations since there is \nno provision for optimal scaling without an intercept. The NOINT a-option can be \nspecified only when there is no implicit intercept and when all of the data in a \nBY group absolutely will not change during the iterations."},"StatementOptionType":"S"},{"StatementOptionName":"NOMISS|NOM","StatementOptionHelp":{"#cdata":"Excludes all observations with missing values from the analysis, but does not \nexclude them from the OUT= data set. If you omit the NOMISS a-option, PROC \nTRANSREG simultaneously computes the optimal transformations of the nonmissing \nvalues and estimates the missing values that minimize squared \nerror.  \n\nCasewise deletion of observations with missing values occurs when the NOMISS \na-option is specified, when there are missing values in expansions, when there \nare missing values in METHOD=UNIVARIATE independent variables, when there are \nweights less than or equal to 0, or when there are frequencies less than 1. \nExcluded observations are output with a blank value for the _TYPE_ variable, \nand they have a weight of 0. They do not contribute to the analysis but are \nscored and transformed as supplementary or passive observations."},"StatementOptionType":"S"},{"StatementOptionName":"NOPRINT|NOP","StatementOptionHelp":{"#cdata":"Suppresses the display of all output unless you specify the HISTORY a-option. The \nNOPRINT a-option without the HISTORY a-option disables the Output Delivery \nSystem (ODS), including ODS Graphics, for the duration of the procedure run. \nThe NOPRINT a-option with the HISTORY a-option disables all output except the \niteration history, again including ODS Graphics, for the duration of the \nprocedure run."},"StatementOptionType":"S"},{"StatementOptionName":"NOZEROCONSTANT|NOZERO|NOZ","StatementOptionHelp":{"#cdata":"Specifies that constant variables are expected and should not be zeroed. By default, \nconstant variables are zeroed. This option is useful when PROC TRANSREG is used to \ncode experimental designs for discrete choice models. When these designs are very \nlarge, it might be more efficient to use the DESIGN= a-option. It might be that \nattributes are constant within a block of n observations, so you need to specify \nthe NOZEROCONSTANT a-option to get the correct results. You can specify this option \nin the PROC TRANSREG, MODEL, and OUTPUT statements."},"StatementOptionType":"S"},{"StatementOptionName":"NSR","StatementOptionHelp":{"#cdata":"Specifies that no restrictions are placed on the use of SMOOTH and SSPLINE and the \nordinary least squares is used to find the coefficients and predicted values. By \ndefault, only certain types of models can be specified with SMOOTH and ordinary \nleast squares is not used to find the coefficients and predicted values."},"StatementOptionType":"S"},{"StatementOptionName":"ORDER=|ORD=","StatementOptionHelp":{"#cdata":"Specifies the order in which the CLASS variable levels are to be reported. The \ndefault is ORDER=INTERNAL. For ORDER=FORMATTED and ORDER=INTERNAL, the sort \norder is machine dependent. When you specify ORDER= as an a-option or an \no-option, it determines the default ordering for all CLASS variables. When \nyou specify ORDER= as a t-option, it overrides the default ordering only for \nselected variables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DATA","@Value2":"FREQ","@Value3":"FORMATTED","@Value4":"INTERNAL"},"StatementOptionToolTips":{"@ToolTip1":"Sorts by order of appearance in the input data set.","@ToolTip2":"Sorts by formatted value.","@ToolTip3":"Sorts by descending frequency count; levels with the most observations appear first.","@ToolTip4":"Sorts by unformatted value."}},{"StatementOptionName":"PBOXCOXTABLE|PBO","StatementOptionHelp":{"#cdata":"Prints the Box-Cox table with the log likelihood displayed as a function of lambda. \nThe important information in this table is displayed in the Box-Cox plot, so when \nODS Graphics is in effect and the plot is produced, the table is not produced by \ndefault. When ODS Graphics is not in effect or when the plot is not produced, the \ntable is produced by default. Specify the PBOXCOXTABLE option if you want to see \nthe table in addition to the plot."},"StatementOptionType":"S"},{"StatementOptionName":"REFERENCE=","StatementOptionHelp":{"#cdata":"Specifies how reference levels of CLASS variables are to be treated. You can specify \nthe REFERENCE= option in the PROC TRANSREG, MODEL, or OUTPUT statement, and you can \nspecify it independently for the OUT= data set and the displayed output. When you \nspecify it in only one statement, it sets the option for both the displayed output \nand the OUT= data set."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"MISSING","@Value3":"ZERO"},"StatementOptionToolTips":{"@ToolTip1":"Reference levels are suppressed. This is the default.","@ToolTip2":"Reference levels are displayed and output with missing values.","@ToolTip3":"Reference levels are displayed and output with zeros."}},{"StatementOptionName":"REITERATE|REI","StatementOptionHelp":{"#cdata":"Enables PROC TRANSREG to use previous transformations as starting points. The REITERATE \na-option affects only variables that are iteratively transformed (specified as LINEAR, \nOPSCORE, MONOTONE, UNTIE, SPLINE, MSPLINE, and SSPLINE). For iterative transformations, \nthe REITERATE a-option requests a search in the input data set for a variable that \nconsists of the value of the TDPREFIX= or TIPREFIX= o-option followed by the original \nvariable name. If such a variable is found, it is used to provide the initial values \nfor the first iteration. The final transformation is a member of the transformation \nfamily defined by the original variable, not the transformation family defined by the \ninitialization variable."},"StatementOptionType":"S"},{"StatementOptionName":"RSQUARE|RSQ","StatementOptionHelp":{"#cdata":"Prints a table with only the model R square."},"StatementOptionType":"S"},{"StatementOptionName":"SEPARATORS=|SEP=","StatementOptionHelp":{"#cdata":"[Syntax: SEPARATORS=\u2019string-1\u2019 <\u2019string-2\u2019>] \n          \nSpecifies separators for creating CLASS expansion variable labels. By default, \nSEPARATORS=\u2019 \u2019 \u2019 * \u2019 (\"blank\" and \"blank asterisk blank\"). The first value is \nused to separate variable names and values in interactions. The second value \nis used to separate interaction components. For example, the label for the \ncoded variable for the A=1 and B=2 cell is, by default, \u2019A 1 * B 2\u2019. If \nSEPARATORS=\u2019=\u2019 \u2019x\u2019 is specified, then the label is \u2019A=1xB=2\u2019. When you \nspecify SEPARATORS= as an a-option or an o-option, it determines the default \nseparators for all CLASS variables. When you specify SEPARATORS= as a t-option, \nit overrides the default only for selected variables."},"StatementOptionType":"V"},{"StatementOptionName":"SHORT|SHO","StatementOptionHelp":{"#cdata":"Suppresses the iteration histories."},"StatementOptionType":"S"},{"StatementOptionName":"SINGULAR=|SIN=","StatementOptionHelp":{"#cdata":"[Syntax: SINGULAR=n] \n          \nSpecifies the largest value within rounding error of zero. By default, SINGULAR=1E\u201312. \nPROC TRANSREG uses the value of the SINGULAR= a-option for checking 1 - R\u00b2 when \nconstructing full-rank matrices of predictor variables, checking denominators before \ndividing, and so on. PROC TRANSREG computes the regression coefficients by sweeping \nwith rational pivoting."},"StatementOptionType":"V"},{"StatementOptionName":"SS2","StatementOptionHelp":{"#cdata":"Produces a regression table based on Type II sums of squares. Tests of the contribution \nof each transformation to the overall model are displayed and output to the OUTTEST= \ndata set when you specify the OUTTEST= option. When you specify the SS2 a-option, the \nTEST a-option is automatically specified for you."},"StatementOptionType":"S"},{"StatementOptionName":"TEST|TES","StatementOptionHelp":{"#cdata":"Generates an ANOVA table. PROC TRANSREG tests the null hypothesis that the vector of scoring \ncoefficients for all of the transformations is zero."},"StatementOptionType":"S"},{"StatementOptionName":"TSUFFIX=|TSU=","StatementOptionHelp":{"#cdata":"[Syntax: TSUFFIX=n] \n          \nSpecifies the number of characters in \"Transformation\" to append to variable labels for \ntransformed variables. By default, all characters are used."},"StatementOptionType":"V"},{"StatementOptionName":"TSTANDARD=","StatementOptionHelp":{"#cdata":"Specifies the standardization of the transformed variables for the hypothesis tests \nand in the OUT= data set. By default, TSTANDARD=ORIGINAL. When you specify TSTANDARD= \nas an a-option or an o-option, it determines the default standardization for all \nvariables. When you specify TSTANDARD= as a t-option, it overrides the default \nstandardization only for selected variables."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CENTER","@Value2":"NOMISS","@Value3":"ORIGINAL","@Value4":"Z"},"StatementOptionToolTips":{"@ToolTip1":"Centers the output variables to mean zero, but the variances are the same as the variances of the  input variables.","@ToolTip2":"Sets the means and variances of the transformed variables in the OUT= data set, computed over all  output values that correspond to nonmissing values in the input data set, to the means and variances  computed from the nonmissing observations of the original variables. The TSTANDARD=NOMISS specification  is useful with missing data. When a variable is linearly transformed, the final variable contains the  original nonmissing values and the missing value estimates. In other words, the nonmissing values are  unchanged. If your data have no missing values, TSTANDARD=NOMISS and TSTANDARD=ORIGINAL produce the same results.","@ToolTip3":"Sets the means and variances of the transformed variables to the means and variances of the original  variables. This is the default.","@ToolTip4":"Standardizes the variables to mean zero, variance one."}},{"StatementOptionName":"TYPE=|TYP=","StatementOptionHelp":{"#cdata":"[Syntax: TYPE=\u2019text\u2019|name] \n          \nSpecifies the valid value for the _TYPE_ variable in the input data set. If PROC TRANSREG finds an \ninput _TYPE_ variable, it uses only observations with a _TYPE_ value that matches the TYPE= value. \nThis enables a PROC TRANSREG OUT= data set containing coefficients to be used as input to PROC TRANSREG \nwithout requiring a WHERE statement to exclude the coefficients. If a _TYPE_ variable is not in the \ndata set, all observations are used. The default is TYPE=\u2019SCORE\u2019, so if you do not specify the TYPE= \na-option, only observations with _TYPE_=\u2019SCORE\u2019 are used. Do not confuse this a-option with the data \nset TYPE= option. The DATA= data set must be an ordinary SAS data set. \n\nPROC TRANSREG displays a note when it reads observations with blank values of _TYPE_, but it does not \nautomatically exclude those observations. Data sets created by the TRANSREG and PRINQUAL procedures have \nblank _TYPE_ values for those observations that were excluded from the analysis due to nonpositive weights, \nnonpositive frequencies, or missing data. When these observations are read again, they are excluded for the \nsame reason that they were excluded from their original analysis, not because their _TYPE_ value is blank."},"StatementOptionType":"V"},{"StatementOptionName":"UNTIE=|UNT=","StatementOptionHelp":{"#cdata":"[Syntax: UNTIE=two-letters] \n          \nSpecifies the first and last special missing values in the list of those special \nmissing values that are to be estimated with within-variable order constraints \nbut no category constraints. The two-letters value must consist of two letters \nin alphabetical order. By default, there are category constraints but no order \nconstraints on special missing value estimates."},"StatementOptionType":"V"},{"StatementOptionName":"UTILITIES|UTI","StatementOptionHelp":{"#cdata":"Produces a table of the part-worth utilities \nfrom a conjoint analysis. Utilities, their standard errors, and the relative importance \nof each factor are displayed and output to the OUTTEST= data set when you specify the \nOUTTEST= option. When you specify the UTILITIES a-option, the TEST a-option is automatically \nspecified for you."},"StatementOptionType":"S"}],"#comment":{}}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT OUT=SAS-data-set <o-options> ; \n      \nThe OUTPUT statement creates a new SAS data set that contains coefficients, marginal \nmeans, and information about the original and transformed variables. The information \nabout original and transformed variables composes the score partition of the data set; \nobservations have _TYPE_=\u2019SCORE\u2019. The coefficients and marginal means compose the \ncoefficient partition of the data set; observations have _TYPE_=\u2019M COEFFI\u2019 or \n_TYPE_=\u2019MEAN\u2019."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set] \n          \nSpecifies the output data set for the data, transformed data, predicted values, \nresiduals, scores, coefficients, and so on. When you use an OUTPUT statement but \ndo not use the OUT= specification, PROC TRANSREG creates a data set and uses the \nDATA convention. If you want to create a permanent SAS data set, you must specify \na two-level name."},"StatementOptionType":"V"},{"StatementOptionName":"ADPREFIX=|ADP=","StatementOptionHelp":{"#cdata":"[Syntax: ADPREFIX=name] \n          \nSpecifies a prefix for naming the dependent variable predicted values. The default \nis ADPREFIX=P when you specify the PREDICTED o-option; otherwise, it is ADPREFIX=A. \nWhen you specify the ADPREFIX= o-option, the PREDICTED o-option is automatically \nspecified for you. The ADPREFIX= o-option is the same as the PPREFIX= o-option."},"StatementOptionType":"V"},{"StatementOptionName":"AIPREFIX=|AIP=","StatementOptionHelp":{"#cdata":"[Syntax: AIPREFIX=name] \n          \nSpecifies a prefix for naming the independent variable approximations. The default \nis AIPREFIX=A. When you specify the AIPREFIX= o-option, the IAPPROXIMATIONS o-option \nis automatically specified for you."},"StatementOptionType":"V"},{"StatementOptionName":"APPROXIMATIONS|APPROX|APP","StatementOptionHelp":{"#cdata":"Is equivalent to specifying both the DAPPROXIMATIONS and the IAPPROXIMATIONS o-options. \nIf you specify METHOD=UNIVARIATE, then the APPROXIMATIONS o-option specifies only the \nDAPPROXIMATIONS o-option."},"StatementOptionType":"S"},{"StatementOptionName":"CANONICAL|CAN","StatementOptionHelp":{"#cdata":"Outputs canonical variables to the OUT= data set. When you specify METHOD=CANALS, \nthe CANONICAL o-option is automatically specified for you. The CDPREFIX= o-option \nspecifies a prefix for naming the dependent canonical variables (default Cand), \nand the CIPREFIX= o-option specifies a prefix for naming the independent canonical \nvariables (default Cani)."},"StatementOptionType":"S"},{"StatementOptionName":"CCC","StatementOptionHelp":{"#cdata":"Outputs canonical correlation coefficients to the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"CDPREFIX=|CDP=","StatementOptionHelp":{"#cdata":"[Syntax: CDPREFIX=name] \n          \nProvides a prefix for naming the canonical dependent variables. The default is \nCDPREFIX=Cand. When you specify the CDPREFIX= o-option, the CANONICAL o-option \nis automatically specified for you."},"StatementOptionType":"V"},{"StatementOptionName":"CEC","StatementOptionHelp":{"#cdata":"Outputs canonical elliptical point model coordinates to the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"CILPREFIX=|CIL=","StatementOptionHelp":{"#cdata":"[Syntax: CILPREFIX=name] \n          \nSpecifies a prefix for naming the conservative-individual-lower confidence limits. \nThe default prefix is CIL. When you specify the CILPREFIX= o-option, the CLI o-option \nis automatically specified for you."},"StatementOptionType":"V"},{"StatementOptionName":"CIPREFIX=|CIP=","StatementOptionHelp":{"#cdata":"[Syntax: CIPREFIX=name] \n          \nProvides a prefix for naming the canonical independent variables. The default is \nCIPREFIX=Cani. When you specify the CIPREFIX= o-option, the CANONICAL o-option is \nautomatically specified for you."},"StatementOptionType":"V"},{"StatementOptionName":"CIUPREFIX=|CIU=","StatementOptionHelp":{"#cdata":"[Syntax: CIUPREFIX=name] \n          \nSpecifies a prefix for naming the conservative-individual-upper confidence limits. \nThe default prefix is CIU. When you specify the CIUPREFIX= o-option, the CLI o-option \nis automatically specified for you."},"StatementOptionType":"V"},{"StatementOptionName":"CLI","StatementOptionHelp":{"#cdata":"Outputs individual confidence limits to the OUT= data set. The names of the confidence \nlimits variables are constructed from the original dependent variable names and the \nprefixes specified in the following o-options: LILPREFIX= (default LIL for liberal \nindividual lower), CILPREFIX= (default CIL for conservative individual lower), LIUPREFIX= \n(default LIU for liberal individual upper), and CIUPREFIX= (default CIU for conservative \nindividual upper). When there are no monotonicity constraints, the liberal and conservative \nlimits are the same."},"StatementOptionType":"S"},{"StatementOptionName":"CLM","StatementOptionHelp":{"#cdata":"Outputs mean confidence limits to the OUT= data set. The names of the confidence \nlimits variables are constructed from the original dependent variable names and \nthe prefixes specified in the following o-options: LMLPREFIX= (default LML for \nliberal mean lower), CMLPREFIX= (default CML for conservative mean lower), \nLMUPREFIX= (default LMU for liberal mean upper), and CMUPREFIX= (default CMU \nfor conservative mean upper). When there are no monotonicity constraints, the \nliberal and conservative limits are the same."},"StatementOptionType":"S"},{"StatementOptionName":"CMLPREFIX=|CML=","StatementOptionHelp":{"#cdata":"[Syntax: CMLPREFIX=name] \n          \nSpecifies a prefix for naming the conservative-mean-lower confidence limits. The \ndefault prefix is CML. When you specify the CMLPREFIX= o-option, the CLM o-option \nis automatically specified for you."},"StatementOptionType":"V"},{"StatementOptionName":"CMUPREFIX=","StatementOptionHelp":{"#cdata":"[Syntax: CMUPREFIX=name] \n          \nSpecifies a prefix for naming the conservative-mean-upper confidence limits. The \ndefault prefix is CMU. When you specify the CMUPREFIX= o-option, the CLM o-option \nis automatically specified for you."},"StatementOptionType":"V"},{"StatementOptionName":"COEFFICIENTS|COE","StatementOptionHelp":{"#cdata":"Outputs either multiple regression coefficients or raw canonical coefficients to the \nOUT= data set. If you specify METHOD=CANALS (in the MODEL or PROC TRANSREG statement), \nthen the COEFFICIENTS o-option outputs the first n canonical variables, where n is the \nvalue of the NCAN= a-option (specified in the MODEL or PROC TRANSREG statement). Otherwise, \nthe COEFFICIENTS o-option includes multiple regression coefficients in the OUT= data set. \nIn addition, when you specify the CLASS expansion for any independent variable, the \nCOEFFICIENTS o-option also outputs marginal means."},"StatementOptionType":"S"},{"StatementOptionName":"COORDINATES=|COO=","StatementOptionHelp":{"#cdata":"[Syntax: COORDINATES<=n>] \n          \nOutputs either ideal point or vector model coordinates for preference mapping to \nthe OUT= data set. When METHOD=CANALS, these coordinates are computed from canonical \ncoefficients; otherwise, the coordinates are computed from multiple regression \ncoefficients. For details, see the section Point Models. \n\nWhen ODS Graphics is enabled and vector model coordinates are requested, a plot is \nproduced with points for each row and vectors for each column. If the vectors are \nplotted based on the actual computed coordinates, then often the vectors are short. \nA better graphical display is produced when the vectors are stretched. The absolute \nlengths of each vector can optionally be changed by specifying COORDINATES=n. Then \nthe vector coordinates are all multiplied by n. Usually, n is a value such as 2, 2.5, \nor 3. The default is 2.5. Specify COORDINATES=1 if you want to see the vectors without \nany stretching. The relative lengths of the different vectors are important and \ninterpretable, and these are preserved by the stretching."},"StatementOptionType":"S|V"},{"StatementOptionName":"CPC","StatementOptionHelp":{"#cdata":"Outputs canonical point model coordinates to the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"CQC","StatementOptionHelp":{"#cdata":"Outputs canonical quadratic point model coordinates to the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"DAPPROXIMATIONS|DAP","StatementOptionHelp":{"#cdata":"Outputs the approximations of the transformed dependent variables to the OUT= data set. \nThese are the target values for the optimal transformations. With METHOD=UNIVARIATE \nand METHOD=MORALS, the dependent variable approximations are the ordinary predicted \nvalues from the linear model. The names of the approximation variables are constructed \nfrom the ADPREFIX= o-option (default A) and the original dependent variable names. For \nordinary predicted values, use the PREDICTED o-option instead of the DAPPROXIMATIONS \no-option, since the PREDICTED o-option uses a more relevant prefix (\"P\" instead of \"A\") \nand a more relevant variable label suffix (\"Predicted Values\" instead of \"Approximations\")."},"StatementOptionType":"S"},{"StatementOptionName":"DESIGN=|DES=","StatementOptionHelp":{"#cdata":"[Syntax: DESIGN<=n>] \n          \nSpecifies that your primary goal is design matrix coding, not analysis. Specifying \nthe DESIGN o-option makes the procedure run faster. The DESIGN o-option sets the \ndefault method to UNIVARIATE and the default MAXITER= value to zero. It suppresses \ncomputing the regression coefficients, unless they are needed for some other option. \nFurthermore, when the DESIGN o-option is specified, the MODEL statement is not required \nto have an equal sign. When no MODEL statement equal sign is specified, all variables \nare considered independent variables, all options that require dependent variables are \nignored, and the IREPLACE o-option is automatically specified for you. \n\nYou can use DESIGN=n for coding very large data sets, where n is the number of observations \nto code at one time. For example, to code a data set with a large number of observations, \nyou can specify DESIGN=100 or DESIGN=1000 to process the data set in blocks of 100 or \n1000 observations. If you specify the DESIGN o-option rather than DESIGN=n, PROC TRANSREG \ntries to process all observations at once, which might not work with very large data sets. \nSpecify the NOZEROCONSTANT a-option with DESIGN=n to ensure that constant variables within \nblocks are not zeroed."},"StatementOptionType":"S|V"},{"StatementOptionName":"DEPENDENT=|DEP=","StatementOptionHelp":{"#cdata":"[Syntax: DEPENDENT=name] \n          \nSpecifies the untransformed dependent variable for OUT= data sets with METHOD=MORALS \nwhen there is more than one dependent variable. The default is DEPENDENT=_DEPEND_. "},"StatementOptionType":"V"},{"StatementOptionName":"DREPLACE|DRE","StatementOptionHelp":{"#cdata":"Replaces the original dependent variables with the transformed dependent variables \nin the OUT= data set. The names of the transformed variables in the OUT= data set \ncorrespond to the names of the original dependent variables in the input data set. \nBy default, both the original dependent variables and the transformed dependent \nvariables (with names constructed from the TDPREFIX= (default T) o-option and the \noriginal dependent variable names) are included in the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"IAPPROXIMATIONS|IAP","StatementOptionHelp":{"#cdata":"Outputs the approximations of the transformed independent variables to the OUT= data \nset. These are the target values for the optimal transformations. The names of the \napproximation variables are constructed from the AIPREFIX= o-option (default A) and \nthe original independent variable names. When you specify the AIPREFIX= o-option, \nthe IAPPROXIMATIONS o-option is automatically specified for you. The IAPPROXIMATIONS \no-option is not valid when METHOD=UNIVARIATE."},"StatementOptionType":"S"},{"StatementOptionName":"IREPLACE|IRE","StatementOptionHelp":{"#cdata":"Replaces the original independent variables with the transformed independent variables \nin the OUT= data set. The names of the transformed variables in the OUT= data set \ncorrespond to the names of the original independent variables in the input data set. \nBy default, both the original independent variables and the transformed independent \nvariables (with names constructed from the TIPREFIX= o-option (default T) and the \noriginal independent variable names) are included in the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"LEVERAGE=|LEV=","StatementOptionHelp":{"#cdata":"[Syntax: LEVERAGE<=name>] \n          \nCreates a variable with the specified name in the OUT= data set that contains leverages. \nSpecifying the LEVERAGE o-option is equivalent to specifying LEVERAGE=Leverage."},"StatementOptionType":"S|V"},{"StatementOptionName":"LILPREFIX=|LIL=","StatementOptionHelp":{"#cdata":"[Syntax: LILPREFIX=name] \n          \nSpecifies a prefix for naming the liberal-individual-lower confidence limits. The \ndefault prefix is LIL. When you specify the LILPREFIX= o-option, the CLI o-option \nis automatically specified for you."},"StatementOptionType":"V"},{"StatementOptionName":"LIUPREFIX=|LIU=","StatementOptionHelp":{"#cdata":"[Syntax: LIUPREFIX=name] \n          \nSpecifies a prefix for naming the liberal-individual-upper confidence limits. The \ndefault prefix is LIU. When you specify the LIUPREFIX= o-option, the CLI o-option \nis automatically specified for you."},"StatementOptionType":"V"},{"StatementOptionName":"LMLPREFIX=|LML=","StatementOptionHelp":{"#cdata":"[Syntax: LMLPREFIX=name] \n          \nSpecifies a prefix for naming the liberal-mean-lower confidence limits. The default \nprefix is LML. When you specify the LMLPREFIX= o-option, the CLM o-option is automatically \nspecified for you."},"StatementOptionType":"V"},{"StatementOptionName":"LMUPREFIX=|LMU=","StatementOptionHelp":{"#cdata":"[Syntax: LMUPREFIX=name] \n          \nSpecifies a prefix for naming the liberal-mean-upper confidence limits. The default \nprefix is LMU. When you specify the LMUPREFIX= o-option, the CLM o-option is automatically \nspecified for you."},"StatementOptionType":"V"},{"StatementOptionName":"MACRO|MAC","StatementOptionHelp":{"#cdata":"[Syntax: MACRO(keyword=name...)] \n          \nCreates macro variables. Most of the options available within the MACRO o-option are rarely needed. \nBy default, PROC TRANSREG creates a macro variable named _TrgInd with a complete list of independent\nvariables created by the procedure. PROC TRANSREG, also by default, creates a macro variable named \n_TrgIndN, which contains the number of variables in the _TrgInd list. \n\nThe available keywords are as follows. \n\n  DN=name -- specifies the name of a macro variable that contains the number of dependent variables. \n  By default, a macro variable named _TrgDepN is created. This is the number of variables in the DL= \n  list and the number of macro variables created by the DV= and DE= specifications. \n\n  IN=name -- specifies the name of a macro variable that contains the number of independent variables. \n  By default, a macro variable named _TrgIndN is created. This is the number of variables in the IL= \n  list and the number of macro variables created by the IV= and IE= specifications. \n\n  DL=name -- specifies the name of a macro variable that contains the list of the dependent variables. \n  By default, a macro variable named _TrgDep is created. These are the variable names of the final \n  transformed variables in the OUT= data set. For example, if there are three dependent variables, \n  y1\u2013y3, then _TrgDep contains, by default, Ty1 Ty2 Ty3 (or y1 y2 y3 if you specify the REPLACE o-option). \n\n  IL=name -- specifies the name of a macro variable that contains the list of the independent variables. \n  By default, a macro variable named _TrgInd is created. These are the variable names of the final transformed \n  variables in the OUT= data set. For example, if there are three independent variables, x1\u2013x3, then _TrgInd \n  contains, by default, Tx1 Tx2 Tx3 (or x1 x2 x3 if you specify the REPLACE o-option). \n\n  DV=prefix -- specifies a prefix for creating a list of macro variables, each of which contains one dependent \n  variable name. For example, if there are three dependent variables, y1\u2013y3, and you specify macro(dv=Dep), then \n  three macro variables, Dep1, Dep2, and Dep3, are created, containing Ty1, Ty2, and Ty3, respectively \n  (or y1, y2, and y3 if you specify the REPLACE o-option). By default, no list is created. \n\n  IV=prefix -- specifies a prefix for creating a list of macro variables, each of which contains one independent \n  variable name. For example, if there are three independent variables, x1\u2013x3, and you specify macro(iv=Ind), \n  then three macro variables, Ind1, Ind2, and Ind3, are created, containing Tx1, Tx2, and TX3, respectively \n  (or x1, x2, and x3 if you specify the REPLACE o-option). By default, no list is created. \n\n  DE=prefix -- specifies a prefix for creating a list of macro variables, each of which contains one dependent \n  variable effect. This list shows the origin of each model term. Each effect consists of two or \n  more parts, and each part consists of a value in 32 columns followed by a blank. For example, \n  if you specify macro(de=d), then a macro variable d1 is created for identity(y). \n\n  IE=prefix -- specifies a prefix for creating a list of macro variables, each of which contains one independent \n  variable effect."},"StatementOptionType":"S","SubOptionsKeywords":"IE=|DE=|IV=|DV=|IL=|DL=|IN=|DN="},{"StatementOptionName":"MEANS|MEA","StatementOptionHelp":{"#cdata":"Outputs marginal means for CLASS variable expansions to the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"MEC","StatementOptionHelp":{"#cdata":"Outputs multiple regression elliptical point model coordinates to the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"MPC","StatementOptionHelp":{"#cdata":"Outputs multiple regression point model coordinates to the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"MQC","StatementOptionHelp":{"#cdata":"Outputs multiple regression quadratic point model coordinates to the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"MRC","StatementOptionHelp":{"#cdata":"Outputs multiple regression coefficients to the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"MREDUNDANCY|MRE","StatementOptionHelp":{"#cdata":"Outputs multiple redundancy analysis coefficients to the OUT= data set."},"StatementOptionType":"S"},{"StatementOptionName":"NORESTOREMISSING|NORESTORE|NOR","StatementOptionHelp":{"#cdata":"Specifies that missing values should not be restored when the OUT= data set is created. \nBy default, the coded CLASS variable contains a row of missing values for observations \nin which the CLASS variable is missing. When you specify the NORESTOREMISSING o-option, \nthese observations contain a row of zeros instead. This is useful when PROC TRANSREG is \nused to code experimental designs for discrete choice models and there is a constant \nalternative indicated by a missing value."},"StatementOptionType":"S"},{"StatementOptionName":"NOSCORES|NOS","StatementOptionHelp":{"#cdata":"Excludes original variables, transformed variables, predicted values, residuals, \nand scores from the OUT= data set. You can use the NOSCORES o-option with various \nother options to create an OUT= data set that contains only a coefficient partition \n(for example, a data set consisting entirely of coefficients and coordinates)."},"StatementOptionType":"S"},{"StatementOptionName":"PREDICTED|PRE|P","StatementOptionHelp":{"#cdata":"Outputs predicted values, which for METHOD=UNIVARIATE and METHOD=MORALS are the \nordinary predicted values from the linear model, to the OUT= data set. The names \nof the predicted values\u2019 variables are constructed from the PPREFIX= o-option \n(default P) and the original dependent variable names. When you specify the \nPPREFIX= o-option, the PREDICTED o-option is automatically specified for you."},"StatementOptionType":"S"},{"StatementOptionName":"PPREFIX=|PDPREFIX=|PDP=","StatementOptionHelp":{"#cdata":"[Syntax: PPREFIX=name] \n          \nSpecifies a prefix for naming the dependent variable predicted values. The default \nis PPREFIX=P when you specify the PREDICTED o-option; otherwise, it is PPREFIX=A. \nWhen you specify the PPREFIX= o-option, the PREDICTED o-option is automatically \nspecified for you. The PPREFIX= o-option is the same as the ADPREFIX= o-option."},"StatementOptionType":"V"},{"StatementOptionName":"RDPREFIX=|RPD=","StatementOptionHelp":{"#cdata":"[Syntax: RDPREFIX=name] \n          \nSpecifies a prefix for naming the residual (dependent) variables to the OUT= data set. \nThe default is RDPREFIX=R. When you specify the RDPREFIX= o-option, the RESIDUALS \no-option is automatically specified for you."},"StatementOptionType":"V"},{"StatementOptionName":"REDUNDANCY=|RED=","StatementOptionHelp":{"#cdata":"Outputs redundancy variables to the OUT= data set, either standardized or unstandardized. \nSpecifying the REDUNDANCY o-option is the same as specifying REDUNDANCY=STANDARDIZE. \nThe results of the REDUNDANCY o-option depends on the TSTANDARD= option. You must \nspecify TSTANDARD=Z to get results based on standardized data. The TSTANDARD= option \ncontrols how the data that go into the redundancy analysis are scaled, and REDUNDANCY=\nSTANDARDIZE|UNSTANDARDIZE controls how the redundancy variables are scaled. The REDUNDANCY \no-option is automatically specified for you when you specify the METHOD=REDUNDANCY \na-option. The RPREFIX= o-option specifies a prefix (default Red) for naming the \nredundancy variables."},"StatementOptionType":"S|V","StatementOptionValues":{"@Value1":"STANDARDIZE","@Value2":"UNSTANDARDIZE"},"StatementOptionToolTips":{"@ToolTip1":"Outputs redundancy variables to the OUT= data set, standardized.","@ToolTip2":"Outputs redundancy variables to the OUT= data set, unstandardized."}},{"StatementOptionName":"REFERENCE=","StatementOptionHelp":{"#cdata":"Specifies how reference levels of CLASS variables are to be treated. You can specify \nthe REFERENCE= option in the PROC TRANSREG, MODEL, or OUTPUT statement, and you can \nspecify it independently for the OUT= data set and the displayed output. When you \nspecify it in only one statement, it sets the option for both the displayed output \nand the OUT= data set."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"NONE","@Value2":"MISSING","@Value3":"ZERO"},"StatementOptionToolTips":{"@ToolTip1":"Reference levels are suppressed. This is the default.","@ToolTip2":"Reference levels are displayed and output with missing values.","@ToolTip3":"Reference levels are displayed and output with zeros."}},{"StatementOptionName":"REPLACE|REP","StatementOptionHelp":{"#cdata":"Is equivalent to specifying both the DREPLACE and the IREPLACE o-options."},"StatementOptionType":"S"},{"StatementOptionName":"RESIDUALS|RES|R","StatementOptionHelp":{"#cdata":"Outputs the differences between the transformed dependent variables and their predicted values. \nThe names of the residual variables are constructed from the RDPREFIX= o-option (default R) \nand the original dependent variable names."},"StatementOptionType":"S"},{"StatementOptionName":"RPREFIX=|RPR=","StatementOptionHelp":{"#cdata":"[Syntax: RPREFIX=name] \n          \nProvides a prefix for naming the redundancy variables. The default is RPREFIX=Red. \nWhen you specify the RPREFIX= o-option, the REDUNDANCY o-option is automatically \nspecified for you."},"StatementOptionType":"V"},{"StatementOptionName":"TDPREFIX=|TDP=","StatementOptionHelp":{"#cdata":"[Syntax: TDPREFIX=name] \n          \nSpecifies a prefix for naming the transformed dependent variables. By default, \nTDPREFIX=T. The TDPREFIX= o-option is ignored when you specify the DREPLACE \no-option."},"StatementOptionType":"V"},{"StatementOptionName":"TIPREFIX=|TIP=","StatementOptionHelp":{"#cdata":"[Syntax: TIPREFIX=name] \n          \nSpecifies a prefix for naming the transformed independent variables. By default, \nTIPREFIX=T. The TIPREFIX= o-option is ignored when you specify the IREPLACE \no-option."},"StatementOptionType":"V"}],"#comment":{}}}]}}}