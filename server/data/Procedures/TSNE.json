{"Procedure":{"Name":"TSNE","ProductGroup":"CAS|VIYA|DATA MINING AND MACHINE LEARNING","ProcedureHelp":{"#cdata":"Syntax: PROC TSNE <options>;\n    DISPLAY <table-list> </ options>;\n    DISPLAYOUT table-spec-list </ options>;\n    INPUT variables;\n    OUTPUT OUT=CAS-libref.data-table <options>;\n    \nThe TSNE procedure implements the t-distributed stochastic neighbor embedding (t-SNE) dimension \nreduction method in SAS Viya. The t-SNE method is well suited for visualization of high-dimensional \ndata, as well as for feature engineering and preprocessing for subsequent clustering and modeling. \nPROC TSNE computes a low-dimensional representation, also called an embedding, of high-dimensional \ndata into two or three dimensions. Unlike other dimension reduction methods, such as principal \ncomponent analysis, t-SNE is appropriate for nonlinear data and emphasizes existing groupings in \nthe data. The method is named t-SNE because it models the pairwise distances in low dimensions \naccording to Student\u2019s t-distribution."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table \n\nNames the input data table for PROC TSNE to use. The default is the most recently created data \ntable. CAS-libref.data-table is a two-level name, where \n\nCAS-libref\n  refers to a collection of information that is defined in the LIBNAME statement and includes \n  the caslib, which includes a path to the data, and a session identifier, which defaults to \n  the active session but which can be explicitly defined in the LIBNAME statement.\n  \ndata-table\n  specifies the name of the input data table."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"LEARNINGRATE=","ProcedureOptionHelp":{"#cdata":"Syntax: LEARNINGRATE=number\n      \nSpecifies the learning rate for the gradient descent optimization, where number is a positive \nreal number. The learning rate controls the amount by which the embeddings are updated at each \niteration.\n\nBy default, LEARNINGRATE=100."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"MAXITERS=","ProcedureOptionHelp":{"#cdata":"Syntax: MAXITERS=number\n      \nSpecifies the maximum number of iterations for the algorithm to perform, where number is an integer \ngreater than or equal to 1.\n\nBy default, MAXITERS=1000."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NDIMENSIONS=","ProcedureOptionHelp":{"#cdata":"Syntax: NDIMENSIONS=number\n      \nSpecifies the number of dimensions to return, where number is either 2 or 3.\n\nBy default, NDIMENSIONS=2."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"NOPRINT","ProcedureOptionHelp":{"#cdata":"Suppresses ODS output."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"NTHREADS=","ProcedureOptionHelp":{"#cdata":"Syntax: NTHREADS=number-of-threads\n      \nSpecifies the number of threads to use for the computation, where number-of-threads is an integer. \nThe default value is the maximum number of available threads per computer."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"PERPLEXITY=","ProcedureOptionHelp":{"#cdata":"Syntax: PERPLEXITY=number\n      \nSpecifies the perplexity value to use for the computation, where number is a real number greater \nthan zero.\n\nBy default, PERPLEXITY=30."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"DISPLAY","StatementHelp":{"#cdata":"Syntax: DISPLAY <table-list> </ options>;\n      \nThe DISPLAY statement enables you to specify a list of display tables to display or exclude. This statement \nis similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve \nperformance when a large number of tables could be generated (such as in BY-group processing). The procedure \nprocesses the DISPLAY statement on a CAS server and thus sends only a subset of ODS tables to the SAS client. \nBecause ODS statements are processed on a SAS client, all the display tables generated are first sent to the \nclient and then the client creates a subset. If both DISPLAY and ODS statements are used together, the DISPLAY \nstatement takes precedence over the ODS statements."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CASESENSITIVE","StatementOptionHelp":{"#cdata":"Performs a case-sensitive comparison of table names in the table-list to display table names when \ntables are subsetted for display. To preserve case, you must enclose table names in the table-list \nin quotation marks."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDE","StatementOptionHelp":{"#cdata":"Displays all display tables except those specified in the table-list."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDEALL","StatementOptionHelp":{"#cdata":"Suppresses display of all tables. This option takes precedence over the other options."},"StatementOptionType":"S"},{"StatementOptionName":"TRACE","StatementOptionHelp":{"#cdata":"Displays the display table names, labels, and paths."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAYOUT","StatementHelp":{"#cdata":"Syntax: DISPLAYOUT table-spec-list < / options > ;\n      \nThe DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This\nstatement is similar to the ODS OUTPUT statement.\n\nThe table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a\nkey=value format:\n\n  key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the\n    CAS output table name.\n  key specifies key as the ODS table name and also as the CAS output table name.\n  \nTable names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT\nstatement does not support regular expressions."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"INCLUDEALL","StatementOptionHelp":{"#cdata":"Creates output CAS tables for all display tables. The name of the created output CAS table is the same \nas the corresponding display table name. If you specify this option, the table-spec-list specification \nis ignored."},"StatementOptionType":"S"},{"StatementOptionName":"NOREPLACE","StatementOptionHelp":{"#cdata":"Does not replace an existing CAS output table of the same name."},"StatementOptionType":"S"},{"StatementOptionName":"REPEATED","StatementOptionHelp":{"#cdata":"Replicates all CAS output tables on all nodes."},"StatementOptionType":"S"}]}},{"StatementName":"INPUT","StatementHelp":{"#cdata":"Syntax: INPUT variables;\n\nThe INPUT statement specifies the variables to use in the t-SNE analysis. The variables must be \nof interval type. You must specify at least one input variable."},"StatementOptions":null},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT OUT=CAS-libref.data-table < options > ;\n      \nThe OUTPUT statement creates an embedding data table to contain the results of the procedure run."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table\n          \nNames the output data table for PROC TSNE to use. You must specify this option before any other options. \n\nCAS-libref.data-table is a two-level name, where\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to where the data table is to be stored, and\n    a session identifier, which defaults to the active session but which can be explicitly\n    defined in the LIBNAME statement. \n    \n  data-table specifies the name of the output data table."},"StatementOptionType":"V"},{"StatementOptionName":"COPYVAR=|COPYVARS=","StatementOptionHelp":{"#cdata":"Syntax: COPYVAR=variable | COPYVARS=(variables) \n          \nLists one or more variables from the input data table to be transferred to the output data table."},"StatementOptionType":"V"}]}}]}}}