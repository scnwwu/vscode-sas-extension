{"Procedure":{"Name":"VARIMPUTE","ProductGroup":"CAS","ProcedureHelp":{"#cdata":"Syntax: PROC VARIMPUTE DATA=CAS-libref.data-table < options > ;\n    CODE FILE=filename ;\n    FREQ variable ;\n    INPUT variables < /option > ;\n    OUTPUT OUT=CAS-libref.data-table < option > ;\n    \nThe VARIMPUTE procedure executes high-performance numeric variable imputation. Imputation is a\ncommon step in data preparation. The VARIMPUTE procedure takes only numeric variables.\n\nThe VARIMPUTE procedure can replace numeric missing values with a specified value. It can also replace\nnumeric missing values with the mean, median, or some random value between the minimum value and the\nmaximum value of the nonmissing values. \n\nWhen PROC VARIMPUTE calculates the mean, median, or a random value, it ignores any observation that\nhas a FREQ variable whose value is less than or equal to 0."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table\n      \nNames the input data table for PROC VARIMPUTE to use. The default is the most recently created\ndata table. CAS-libref.data-table is a two-level name, where\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to the data, and a session identifier, which\n    defaults to the active session but which can be explicitly defined in the LIBNAME\n    statement.\n    \n  data-table specifies the name of the input data table."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"NTHREADS=","ProcedureOptionHelp":{"#cdata":"Syntax: NTHREADS=number-of-threads\n      \nspecifies the number of threads to be used. The default is the CPU count on each node."},"ProcedureOptionType":"V"},{"ProcedureOptionName":"SEED=","ProcedureOptionHelp":{"#cdata":"Syntax: SEED=random-seed\n      \nSpecifies an integer that is used to start the pseudorandom number generator. If you do not specify a\nseed or you specify a value less than or equal to 0, the seed is generated from reading the time of day\nfrom the computer\u2019s clock. The SEED option enables you to reproduce the same sample output."},"ProcedureOptionType":"V"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"CODE","StatementHelp":{"#cdata":"Syntax: CODE < FILE=filename > ;   \n\nThe CODE statement generates SAS DATA step code that mimics the computations that are performed. Only\none CODE statement is processed. If you specify multiple CODE statements, only the first one is used. You\ncan specify the following option:\n\nFILE=filename\n  specifies the name of the file to write the SAS score code to."},"StatementOptions":{"StatementOption":{"StatementOptionName":"FILE=","StatementOptionHelp":{"#cdata":"Syntax: FILE= filename \n          \nSpecifies the filename of the file to write the SAS score code to."},"StatementOptionType":"V"}}},{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable ; \n\nThe variable in the FREQ statement identifies a numeric variable in the data set that contains the frequency of\noccurrence of each observation. PROC VARIMPUTE treats each observation as if it appears f times, where f is the \nvalue of the FREQ variable for the observation. If f is not an integer, it is truncated to an integer. If f is\nless than 1 or missing, the observation is not used in the analysis. When the FREQ statement is not specified,\neach observation is assigned a frequency of 1."},"StatementOptions":null},{"StatementName":"INPUT","StatementHelp":{"#cdata":"Syntax: INPUT variables < / option > ; \n      \nThe INPUT statement names one or more input variables and specifies the method that is used to impute\nmissing values."},"StatementOptions":{"StatementOption":{"StatementOptionName":"CONTINUOUSTECH=|CTECH=","StatementOptionHelp":{"#cdata":"Syntax: CONTINUOUSTECH=imputation-method | CTECH=imputation-method\n          \nSpecifies the imputation method. You can choose from the following methods:\n\n  MEAN specifies the mean imputation method.\n  MEDIAN specifies the median imputation method.\n  RANDOM specifies the random imputation method.\n  VALUE < suboption > specifies the imputation method with the specific value.\n    CVALUES=double-list specifies the imputation values."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"MEAN","@Value2":"MEDIAN","@Value3":"RANDOM","@Value4":"VALUE"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that missing values of each variable are replaced by the algebraic mean of the nonmissing values of that variable.","@ToolTip2":"Specifies that missing values of each variable are replaced by the algebraic median of the nonmissing values of that variable.","@ToolTip3":"Specifies that missing values of each variable are replaced by a random value that is drawn between the minimum value and the maximum values of the nonmissing values of that variable.","@ToolTip4":"Syntax: VALUE CVALUES=double-list                                      Specifies that missing values are replaced by the values in double-list, where double-list indicates  a list of numbers where the data type is double."}}}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT OUT=CAS-libref.data-table < option > ;\n      \nThe OUTPUT statement creates an output data table to contain the results of PROC VARIMPUTE."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"Syntax: OUT=CAS-libref.data-table\n          \nNames the output data table for PROC VARIMPUTE to use. CAS-libref.data-table is a two-level name,\nwhere\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to where the data table is to be stored, and\n    a session identifier, which defaults to the active session but which can be explicitly\n    defined in the LIBNAME statement.\n    \n  data-table specifies the name of the output data table."},"StatementOptionType":"V"},{"StatementOptionName":"COPYVAR=|COPYVARS=","StatementOptionHelp":{"#cdata":"Syntax: COPYVAR=variable |COPYVARS=(variables)\n          \nLists one or more variables from the input data table to be transferred to the output data table."},"StatementOptionType":"V"}]}}]}}}