{"Procedure":{"Name":"VARMAX","ProductGroup":"SAS/ETS","ProcedureHelp":{"#cdata":"Syntax: PROC VARMAX options ; \n    BY variables ; \n    CAUSAL group1=(variables) group2=(variables) ; \n    COINTEG rank=number <options> ; \n    ID variable interval=value <option> ; \n    MODEL dependent variables <=regressors> <, dependent variables < =regressors> ...> </ options> ; \n    GARCH options ; \n    NLOPTIONS options ; \n    OUTPUT <options> ; \n    RESTRICT restrictions ; \n    TEST restrictions ; \n\nGiven a multivariate time series, the VARMAX procedure estimates the model parameters \nand generates forecasts associated with vector autoregressive moving-average processes \nwith exogenous regressors (VARMAX) models. Often, economic or financial variables are \nnot only contemporaneously correlated to each other, they are also correlated to each \nother\u2019s past values. The VARMAX procedure can be used to model these types of time \nrelationships. In many economic and financial applications, the variables of interest \n(dependent, response, or endogenous variables) are influenced by variables external to \nthe system under consideration (independent, input, predictor, regressor, or exogenous \nvariables). The VARMAX procedure enables you to model the dynamic relationship both \nbetween the dependent variables and also between the dependent and independent variables."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"[Syntax: DATA=SAS-data-set] \n      \nSpecifies the input SAS data set. If the DATA= option is not specified, the PROC VARMAX \nstatement uses the most recently created SAS data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"OUTEST=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTEST=SAS-data-set] \n      \nWrites the parameter estimates to the output data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"COVOUT","ProcedureOptionHelp":{"#cdata":"Writes the covariance matrix for the parameter estimates to the OUTEST= data set. This option \nis valid only if the OUTEST= option is specified."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTCOV","ProcedureOptionHelp":{"#cdata":"Writes the covariance matrix for the parameter estimates to the OUTEST= data set. This option \nis valid only if the OUTEST= option is specified."},"ProcedureOptionType":"S"},{"ProcedureOptionName":"OUTSTAT=","ProcedureOptionHelp":{"#cdata":"[Syntax: OUTSTAT=SAS-data-set] \n      \nWrites residual diagnostic results to an output data set. If the COINTTEST=(JOHANSEN) option \nis specified, the results of this option are also written to the output data set."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"PLOTS=","ProcedureOptionHelp":{"#cdata":"Syntax: PLOTS<(global-plot-option)> = plot-request-option <(options)> \n  | PLOTS<(global-plot-option)> = ( plot-request-option <(options)> ... plot-request-option <(options)> ) \n  \nControls the plots produced through ODS Graphics. When you specify only one plot, you can omit the \nparentheses around the plot request. The global-plot-option applies to the impulse and prediction \nerror analysis plots generated by the VARMAX procedure. The following global-plot-option is available: \n\n  UNPACK \n  breaks a graphic that is otherwise paneled into individual component plots."},"ProcedureOptionType":"S|V","ProcedureOptionValues":{"@Value1":"ALL","@Value2":"FORECASTS<(forecasts-plot-options)>","@Value3":"IMPULSE<(impulse-plot-options)>","@Value4":"MODEL","@Value5":"NONE","@Value6":"RESIDUAL<(residual-plot-options)>"},"ProcedureOptionToolTips":{"@ToolTip1":"Produces all plots appropriate for the particular analysis.","@ToolTip2":"Produces plots of the forecasts. The forecasts-only plot that shows the multistep forecasts in the forecast region is produced by default. The following forecasts-plot-options are available:   ALL  produces the FORECASTSONLY and the FORECASTS plots. This is the default.   FORECASTS  produces a plot that shows the one-step-ahead as well as the multistep forecasts.   FORECASTSONLY  produces a plot that shows only the multistep forecasts.","@ToolTip3":"Produces the plots of impulse response function and the impulse response of the transfer function.  The following impulse-plot-options are available:                                 ALL  produces all impulse plots. This is the default.   ACCUM  produces the accumulated impulse plot.   ORTH  produces the orthogonalized impulse plot.   SIMPLE  produces the simple impulse plot.","@ToolTip4":"Produces plots of dependent variables listed in the MODEL statement and plots of the one-step-ahead predicted values for each dependent variables.","@ToolTip5":"Produces prediction error plot.","@ToolTip6":"Produces plots associated with the prediction errors obtained after modeling the data. The following residual-plot-options are available:   ALL  produces all plots associated with the analysis of the prediction errors. This is the default.   RESIDUAL  produces prediction error plot.   DIAGNOSTICS  produces a panel of plots useful in assessing the autocorrelations and white-noise of the prediction errors. The panel consists of the following:     o the autocorrelation plot of the prediction errors   o the partial autocorrelation plot of the prediction errors   o the inverse autocorrelation plot of the prediction errors   o the log scaled white noise plot of the prediction errors   NORMAL  produces a panel of plots useful in assessing normality of the prediction errors. The panel consists of the following:     o distribution of the prediction errors with overlaid the normal curve   o normal quantile plot of the prediction errors"},"SubOptionsKeywords":"UNPACK"}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"BY","StatementHelp":{"#cdata":"Syntax: BY <DESCENDING> variable-1 <...<DESCENDING> variable-n> <NOTSORTED>; \n      \nA BY statement can be used with PROC VARMAX to obtain separate analyses on observations \nin groups defined by the BY variables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING","StatementOptionHelp":{"#cdata":"Specifies that the observations are sorted in descending order by the variable that immediately \nfollows the word DESCENDING in the BY statement."},"StatementOptionType":"S"},{"StatementOptionName":"NOTSORTED","StatementOptionHelp":{"#cdata":"Specifies that observations are not necessarily sorted in alphabetic or numeric order."},"StatementOptionType":"S"}]}},{"StatementName":"CAUSAL","StatementHelp":{"#cdata":"Syntax: CAUSAL GROUP1=(variables) GROUP2=(variables) ; \n\nA CAUSAL statement prints the Granger causality test by fitting the VAR(p) model \nby using all variables defined in GROUP1 and GROUP2. Any number of CAUSAL statements \ncan be specified. The CAUSAL statement proceeds with the MODEL statement and uses the \nvariables and the autoregressive order, p, specified in the MODEL statement. Variables \nin the GROUP1= and GROUP2= options should be defined in the MODEL statement.If the P=0 \noption is specified in the MODEL statement, the CAUSAL statement is not applicable."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"GROUP1=","StatementOptionHelp":{"#cdata":"[Syntax: GROUP1=(variables)] \n          \nGROUP1 variables defined in the MODEL statement."},"StatementOptionType":"V"},{"StatementOptionName":"GROUP2=","StatementOptionHelp":{"#cdata":"[Syntax: GROUP2=(variables)] \n          \nGROUP2 variables defined in the MODEL statement."},"StatementOptionType":"V"}]}},{"StatementName":"COINTEG","StatementHelp":{"#cdata":"Syntax: COINTEG RANK=number < H=(matrix) > < J=(matrix) > \n    < EXOGENEITY > < NORMALIZE=variable > ; \n\nThe COINTEG statement fits the vector error correction model to the data, tests the \nrestrictions of the long-run parameters and the adjustment parameters, and tests for \nthe weak exogeneity in the long-run parameters. The cointegrated system uses the maximum \nlikelihood analysis proposed by Johansen and Juselius (1990) and Johansen (1995a, 1995b). \nOnly one COINTEG statement is allowed."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"EXOGENEITY","StatementOptionHelp":{"#cdata":"Formulates the likelihood ratio tests for testing weak exogeneity in the long-run parameters. \nThe null hypothesis is that one variable is weakly exogenous for the others."},"StatementOptionType":"S"},{"StatementOptionName":"H=","StatementOptionHelp":{"#cdata":"[Syntax: H=(matrix)] \n          \nSpecifies the restrictions H on the k x r or (k+1) x r cointegrated coefficient matrix \u03b2 \nsuch that \u03b2 = H(\u03a6), where H is known and \u03a6 is unknown."},"StatementOptionType":"V"},{"StatementOptionName":"J=","StatementOptionHelp":{"#cdata":"[Syntax: J=(matrix)] \n          \nSpecifies the restrictions J on the k x r adjustment matrix \u03b1 such that \u03b1=J(\u03c8), where J \nis known and \u03c8 is unknown."},"StatementOptionType":"V"},{"StatementOptionName":"NORMALIZE=","StatementOptionHelp":{"#cdata":"[Syntax: NORMALIZE=variable] \n          \nSpecifies a single dependent (endogenous) variable name whose cointegrating vectors \nare normalized. If the variable name is different from that specified in the COINTTEST=\n(JOHANSEN=) or ECM= option in the MODEL statement, the variable name specified in the \nCOINTEG statement is used. If the normalized variable is not specified, cointegrating \nvectors are not normalized."},"StatementOptionType":"V"},{"StatementOptionName":"RANK=","StatementOptionHelp":{"#cdata":"[Syntax: RANK=number] \n          \nSpecifies the cointegration rank of the cointegrated system. This option is required \nin the COINTEG statement. The rank of cointegration should be greater than zero and \nless than the number of dependent (endogenous) variables. If the value of the RANK= \noption in the COINTEG statement is different from that specified in the ECM= option, \nthe rank specified in the COINTEG statement is used."},"StatementOptionType":"V"}]}},{"StatementName":"ID","StatementHelp":{"#cdata":"Syntax: ID variable INTERVAL=value < ALIGN=value> ; \n\nThe ID statement specifies a variable that identifies observations in the input data set. \nThe datetime variable specified in the ID statement is included in the OUT= data set if the \nOUTPUT statement is specified. Note that the ID variable is usually a SAS datetime variable. \nThe values of the ID variable are extrapolated for the forecast observations based on the \nvalue of the INTERVAL= option."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALIGN=","StatementOptionHelp":{"#cdata":"Controls the alignment of SAS dates used to identify output observations."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BEGINNING","@Value2":"MIDDLE","@Value3":"ENDING"},"StatementOptionToolTips":{"@ToolTip1":"SAS dates aligned in the BEGINNING.","@ToolTip2":"SAS dates aligned in the MIDDLE.","@ToolTip3":"SAS dates aligned in the ENDING."}},{"StatementOptionName":"INTERVAL=","StatementOptionHelp":{"#cdata":"Specifies the time interval between observations. This option is required in the ID statement. \nThe INTERVAL= option is used in conjunction with the ID variable to check that the input data \nare in order and have no missing periods. The INTERVAL= option is also used to extrapolate the \nID values past the end of the input data when the OUTPUT statement is specified."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DAY","@Value2":"HOUR","@Value3":"MINUTE","@Value4":"SECOND","@Value5":"WEEK","@Value6":"MONTH","@Value7":"YEAR","@Value8":"QTR","@Value9":"TENDAY","@Value10":"SEMIMONTH","@Value11":"SEMIYEAR"},"StatementOptionToolTips":{"@ToolTip1":"DAY interval","@ToolTip2":"HOUR interval","@ToolTip3":"MINUTE interval","@ToolTip4":"SECOND interval","@ToolTip5":"WEEK interval","@ToolTip6":"MONTH interval","@ToolTip7":"YEAR interval","@ToolTip8":"QTR interval","@ToolTip9":"TENDAY interval","@ToolTip10":"SEMIMONTH interval","@ToolTip11":"SEMIYEAR interval"}}]}},{"StatementName":"MODEL","StatementHelp":{"#cdata":"Syntax: MODEL dependents < = regressors > \n    <, dependents < = regressors > ...> < / options > ; \n\nThe MODEL statement specifies dependent (endogenous) variables and independent (exogenous) variables \nfor the VARMAX model. The multivariate model can have the same or different independent variables \ncorresponding to the dependent variables. As a special case, the VARMAX procedure allows you to\nanalyze one dependent variable. Only one MODEL statement is allowed."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CENTER","StatementOptionHelp":{"#cdata":"Centers the dependent (endogenous) variables by subtracting their means."},"StatementOptionType":"S"},{"StatementOptionName":"DIF=","StatementOptionHelp":{"#cdata":"Syntax: DIF(variable (number-list) <... variable (number-list)>) \n    |DIF=(variable (number-list) <... variable (number-list)>) \n\nSpecifies the degrees of differencing to be applied to the specified dependent or independent \nvariables. The number-list must contain one or more numbers, each of which should be greater  \nthan zero. The differencing can be the same for all variables, or it can vary among variables."},"StatementOptionType":"S|V"},{"StatementOptionName":"DIFX=(number-list)","StatementOptionHelp":{"#cdata":"[Syntax: DIFX(number-list) | DIFX=(number-list)] \n          \nSpecifies the degrees of differencing to be applied to all independent variables. The number-list \nmust contain one or more numbers, each of which should be greater than zero."},"StatementOptionType":"S|V"},{"StatementOptionName":"DIFY=","StatementOptionHelp":{"#cdata":"[Syntax: DIFY(number-list) | DIFY=(number-list)] \n          \nSpecifies the degrees of differencing to be applied to all dependent (endogenous) variables. \nThe number-list must contain one or more numbers, each of which should be greater than zero."},"StatementOptionType":"S|V"},{"StatementOptionName":"METHOD=","StatementOptionHelp":{"#cdata":"Requests the type of estimates to be computed."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"LS","@Value2":"ML"},"StatementOptionToolTips":{"@ToolTip1":"Specifies least squares estimates.","@ToolTip2":"Specifies maximum likelihood estimates."}},{"StatementOptionName":"NOCURRENTX","StatementOptionHelp":{"#cdata":"Suppresses the current values xt of the independent variables."},"StatementOptionType":"S"},{"StatementOptionName":"NOINT","StatementOptionHelp":{"#cdata":"Suppresses the intercept parameter, delta."},"StatementOptionType":"S"},{"StatementOptionName":"NSEASON=","StatementOptionHelp":{"#cdata":"[Syntax: NSEASON=number] \n          \nSpecifies the number of seasonal periods. When the NSEASON=number option is specified, \n(number \u20131) seasonal dummies are added to the regressors. If the NOINT option is specified, \nthe NSEASON= option is not applicable."},"StatementOptionType":"V"},{"StatementOptionName":"SCENTER","StatementOptionHelp":{"#cdata":"Centers seasonal dummies specified by the NSEASON= option. The centered seasonal dummies \nare generated by c-(1/s), where c is a seasonal dummy generated by the NSEASON=s option."},"StatementOptionType":"S"},{"StatementOptionName":"TREND=","StatementOptionHelp":{"#cdata":"Specifies the degree of deterministic time trend included in the model."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"LINEAR","@Value2":"QUAD"},"StatementOptionToolTips":{"@ToolTip1":"Includes a linear time trend as a regressor.","@ToolTip2":"Includes linear and quadratic time trends as regressors."}},{"StatementOptionName":"VARDEF=","StatementOptionHelp":{"#cdata":"Corrects for the degrees of freedom of the denominator for computing an error covariance \nmatrix for the METHOD=LS option."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"DF","@Value2":"N"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that the number of nonmissing observation minus the number of regressors be used.","@ToolTip2":"Specifies that the number of nonmissing observation be used."}},{"StatementOptionName":"LAGMAX=","StatementOptionHelp":{"#cdata":"[Syntax: LAGMAX=number] \n          \nSpecifies the maximum number of lags for which results are computed and displayed by \nthe PRINT=(CORRX CORRY COVX COVY IARR IMPULSE= IMPULSX= PARCOEF PCANCORR PCORR) options. \nThis option is also used to limit the printed results for the cross covariances and cross-\ncorrelations of residuals. The default is LAGMAX=min(12, T-2), where T is the number of \nnonmissing observations."},"StatementOptionType":"V"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Suppresses all printed output."},"StatementOptionType":"S"},{"StatementOptionName":"PRINTALL","StatementOptionHelp":{"#cdata":"Requests all printing control options."},"StatementOptionType":"S"},{"StatementOptionName":"PRINTFORM=","StatementOptionHelp":{"#cdata":"Requests the printing format of the output generated by the PRINT= option and cross covariances \nand cross-correlations of residuals."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"MATRIX","@Value2":"UNIVARIATE","@Value3":"BOTH"},"StatementOptionToolTips":{"@ToolTip1":"Prints output in matrix form. This is the default.","@ToolTip2":"Prints output by variables.","@ToolTip3":"Prints output in both MATRIX and UNIVARIATE forms."}},{"StatementOptionName":"PRINT=","StatementOptionHelp":{"#cdata":"[Syntax: PRINT=(options)] \n          \nThe following options can be used in the PRINT=( ) option. The options are listed within parentheses:\n          \nCORRB \nprints the estimated correlations of the parameter estimates.\n\nCORRX | CORRX(number) \nprints the cross-correlation matrices of exogenous (independent) variables. The number should be greater than zero. \n\nCORRY | CORRY(number) \nprints the cross-correlation matrices of dependent (endogenous) variables. The number should be greater than zero. \n\nCOVB\nprints the estimated covariances of the parameter estimates.\n\nCOVPE | COVPE(number) \nprints the covariance matrices of number-ahead prediction errors for the VARMAX(p,q,s) model. The number \nshould be greater than zero.\n \nCOVX | COVX(number) \nprints the cross-covariance matrices of exogenous (independent) variables. The number should be greater than zero. \n\nCOVY | COVY(number) \nprints the cross-covariance matrices of dependent (endogenous) variables. The number should be greater than zero. \n\nDECOMPOSE | DECOMPOSE(number) \nprints the decomposition of the prediction error covariances using up to the number of lags specified by\nnumber in parentheses for the VARMA(,) model.\n\nDIAGNOSE \nprints the residual diagnostics and model diagnostics. \n\nDYNAMIC \nprints the contemporaneous relationships among the components of the vector time series. \n\n\nESTIMATES \nprints the coefficient estimates and a schematic representation of the significance and sign of the \nparameter estimates. \n\nIARR | IARR(number) \nprints the infinite order AR representation of a VARMA process. The number should be greater than zero. \nIf the ECM= option and the COINTEG statement are specified, then the reparameterized AR coefficient \nmatrices are printed. \n\nIMPULSE |IMPULSE(number) \nIMPULSE=(SIMPLE ACCUM ORTH STDERR ALL) \nIMPULSE(number)=(SIMPLE ACCUM ORTH STDERR ALL) \nprints the impulse response function. The number should be greater than zero. The following options\ncan be used in the IMPULSE=( ) option. The options are specified within parentheses:\n\n    ACCUM \n    prints the accumulated impulse response function. \n\n    ALL \n    is equivalent to specifying all of SIMPLE, ACCUM, ORTH, and STDERR. \n\n    ORTH \n    prints the orthogonalized impulse response function. \n\n    SIMPLE \n    prints the impulse response function. This is the default. \n\n    STDERR \n    prints the standard errors of the impulse response function, the accumulated impulse response function,\n    or the orthogonalized impulse response function.\n\nIMPULSX |IMPULSX(number) \nIMPULSX=(SIMPLE ACCUM ALL) \nIMPULSX(number)=(SIMPLE ACCUM ALL) \nprints the impulse response function related to exogenous (independent) variables.\nThe following options can be used in the IMPULSX=( ) option. The options are specified within parentheses:\n\n    ACCUM \n    prints the accumulated impulse response matrices for the transfer function. \n\n    ALL \n    is equivalent to specifying both SIMPLE and ACCUM. \n\n    SIMPLE \n    prints the impulse response matrices for the transfer function. This is the default. \n\nPARCOEF | PARCOEF(number) \nprints the partial autoregression coefficient matrices.\n\nPCANCORR | PCANCORR(number) \nprints the partial canonical correlations.\n\nPCORR | PCORR(number) \nprints the partial correlation matrices. The number should be greater than zero.\n\nROOTS \nprints the eigenvalues of the kp x kp companion matrix associated with the AR characteristic function \u03a6(\u03b2),\nwhere kp is the number of dependent (endogenous) variables.\n\nYW \nprints Yule-Walker estimates of the preliminary autoregressive model for the dependent (endogenous) variables."},"StatementOptionType":"V"},{"StatementOptionName":"P=","StatementOptionHelp":{"#cdata":"[Syntax: P=number | P=(number-list)] \n          \nSpecifies the order of the vector autoregressive process. Subset models of vector\nautoregressive orders can be specified by listing the desired set of lags. For example, \nyou can specify the P=(1,3,4) option. The P=3 option is equivalent to the P=(1,2,3) option. \nThe default is P=0."},"StatementOptionType":"V"},{"StatementOptionName":"Q=","StatementOptionHelp":{"#cdata":"[Syntax: Q=number | Q=(number-list)] \n          \nSpecifies the order of the moving-average error process. Subset models of moving-average \norders can be specified by listing the desired set of lags. For example, you can specify \nthe Q=(1,5) option. The default is Q=0."},"StatementOptionType":"V"},{"StatementOptionName":"XLAG=","StatementOptionHelp":{"#cdata":"[Syntax: XLAG=number | XLAG=(number-list)] \n          \nSpecifies the lags of exogenous (independent) variables. Subset models of distributed\nlags can be specified by listing the desired set of lags. For example, XLAG=(2) selects \nonly a lag 2 of the exogenous variables. The default is XLAG=0. To exclude the present \nvalues of exogenous variables from the model, the NOCURRENTX option must be used."},"StatementOptionType":"V"},{"StatementOptionName":"MINIC=","StatementOptionHelp":{"#cdata":"[Syntax: MINIC | MINIC=(TYPE=value P=number Q=number PERROR=number)] \n          \nPrints the information criterion for the appropriate AR and MA tentative order selection \nand for the diagnostic checks of the fitted model. \n\nThe following options can be used in the MINIC=() option. The options are specified \nwithin parentheses: \n\nP=number |P=(pmin:pmax) \nspecifies the range of AR orders to be considered in the tentative order selection. The default is P=(0:5). \nThe P=3 option is equivalent to the P=(0:3) option. \n\nPERROR=number | PERROR=(pe,min:pe,max) \nspecifies the range of AR orders for obtaining the error series. The default is PERROR=(pmax:pmax+qmax). \n\nQ=number Q=(qmin:qmax) \nspecifies the range of MA orders to be considered in the tentative order selection. The default is Q=(0:5). \n\n    TYPE=value \n    specifies the criterion for the model order selection. Valid criteria are as follows: \n\n      AIC --  specifies the Akaike information criterion. \n      AICC -- specifies the corrected Akaike information criterion. This is the default criterion. \n      FPE --  specifies the final prediction error criterion. \n      HQC --  specifies the Hanna-Quinn criterion. \n      SBC --  specifies the Schwarz Bayesian criterion. You can also specify this value as TYPE=BIC."},"StatementOptionType":"S|V"},{"StatementOptionName":"DFTEST=","StatementOptionHelp":{"#cdata":"[Syntax: DFTEST | DFTEST=(DLAG=number) | DFTEST=(DLAG=(number) ...(number))] \n          \nPrints the Dickey-Fuller unit root tests. The DLAG=(number) ...(number) option specifies the \nregular or seasonal unit root test. Supported values of number are in 1, 2, 4, 12. If the number \nis greater than one, a seasonal Dickey-Fuller test is performed. If the TREND= option is specified, \nthe seasonal unit root test is not available. The default is DLAG=1. \n\nFor example, the DFTEST=(DLAG=(1)(12)) option produces two tables: the Dickey-Fuller regular unit \nroot test and the seasonal unit root test."},"StatementOptionType":"S|V"},{"StatementOptionName":"COINTTEST=","StatementOptionHelp":{"#cdata":"Tests for cointegration. The following options can be used with the COINTTEST=( ) option. \nThe options are specified within parentheses:\n\nJOHANSEN | JOHANSEN=(TYPE=value IORDER=number NORMALIZE=variable) \nprints the cointegration rank test for multivariate time series based on Johansen\u2019s method.\nThe following options can be used in the JOHANSEN=() option: \n\n    IORDER=number \n    specifies the integrated order. \n\n        IORDER=1 \n        prints the cointegration rank test for an integrated order 1 and prints the long-run \n        parameter, \u03b2, and the adjustment coefficient, \u03b1. This is the default.\n\n        IORDER=2 -- prints the cointegration rank test for integrated orders 1 and 2.\n        \n    NORMALIZE=variable \n    specifies the dependent (endogenous) variable name whose cointegration vectors are to be normalized.\n    \n    TYPE=value \n    specifies the type of cointegration rank test to be printed. Valid values are as follows: \n\n        MAX -- prints the cointegration maximum eigenvalue test. \n        TRACE -- prints the cointegration trace test. This is the default.\n        \nSIGLEVEL=value \nsets the size of cointegration rank tests and common trends tests. The SIGLEVEL=value can be set\nto 0.1, 0.05, or 0.01. The default is SIGLEVEL=0.05.\n\nSW | SW=(TYPE=value LAG=number) \nprints common trends tests for a multivariate time series based on the Stock-Watson method. This test\nis provided when the number of dependent (endogenous) variables is less than or equal to 6.\nThe following options can be used in the SW=( ) option. The options are listed within parentheses:\n\n  LAG=number \n  specifies the number of lags.\n\n  TYPE=value \n  specifies the type of common trends test to be printed. Valid values are as follows: \n\n      FILTDIF -- prints the common trends test based on the filtering method applied to the differenced series. \n      This is the default. \n      FILTRES -- prints the common trends test based on the filtering method applied to the residual series. \n      KERNEL -- prints the common trends test based on the kernel method."},"StatementOptionType":"S|V"},{"StatementOptionName":"PRIOR=","StatementOptionHelp":{"#cdata":"[Syntax: PRIOR | PRIOR=(prior-options)]\n          \nSpecifies the prior value of parameters for the BVARX(p,s) model. The following options can be \nused with the PRIOR=(prior-options) option. The prior-options are listed within parentheses:\n\n  IVAR | IVAR=(variables) \n  specifies an integrated BVAR(p) model. The variables should be specified in the MODEL statement \n  as dependent variables.\n\n  LAMBDA=value \n  specifies the prior standard deviation of the AR coefficient parameter matrices. It should be a\n  positive number. The default is \u03bb=1.\n\n  MEAN=(vector) \n  specifies the mean vector in the prior distribution for the AR coefficients. If the vector is not\n  specified, the prior value is assumed to be a zero vector.\n\n  NREP=number \n  specifies the number of periods to compute the measure of forecast accuracy. The default is NREP=0.5T,\n  where T is the number of observations.\n\n  THETA=value \n  specifies the prior standard deviation of the AR coefficient parameter matrices. The value is in the \n  interval (0,1). The default is \u03b8=0.1."},"StatementOptionType":"S|V"},{"StatementOptionName":"ECM=","StatementOptionHelp":{"#cdata":"[Syntax: ECM=(RANK=number NORMALIZE= emphvariable ECTREND )] \n          \nSpecifies a vector error correction model. The following options can be used in the ECM=() option:\n\n  NORMALIZE=variable \n  specifies a single dependent variable name whose cointegrating vectors are normalized.\n\n  RANK=number \n  specifies the cointegration rank. This option is required in the ECM= option. The value of the RANK=\n  option should be greater than zero and less than or equal to the number of dependent (endogenous) variables, k. \n\n  ECTREND \n  specifies the restriction on the drift."},"StatementOptionType":"V"}]}},{"StatementName":"GARCH","StatementHelp":{"#cdata":"Syntax: GARCH options ; \n\nThe GARCH statement specifies a GARCH-type multivariate conditional heteroscedasticity model."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"FORM=","StatementOptionHelp":{"#cdata":"Specifies the representation for a GARCH model."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BEKK","@Value2":"CCC"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a BEKK representation. This is the default.","@ToolTip2":"Specifies a constant conditional correlation representation."}},{"StatementOptionName":"OUTHT=","StatementOptionHelp":{"#cdata":"[Syntax: OUTHT=SAS-data-set] \n          \nWrites the conditional covariance matrix to an output data set."},"StatementOptionType":"DV"},{"StatementOptionName":"P=","StatementOptionHelp":{"#cdata":"[Syntax: P=number | P=(number-list)] \n          \nSpecifies the order of the process or the subset of GARCH terms to be fitted. For example, \nyou can specify the P=(1,3) option. The P=3 option is equivalent to the P=(1,2,3) option. \nThe default is P=0."},"StatementOptionType":"V"},{"StatementOptionName":"Q=","StatementOptionHelp":{"#cdata":"[Syntax: Q=number | Q=(number-list)] \n          \nSpecifies the order of the process or the subset of ARCH terms to be fitted. This option \nis required in the GARCH statement."},"StatementOptionType":"V"}]}},{"StatementName":"NLOPTIONS","StatementHelp":{"#cdata":"Syntax: NLOPTIONS options ; \n\nThe VARMAX procedure uses the nonlinear optimization (NLO) subsystem to perform nonlinear \noptimization tasks."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ABSCONV=|ABSTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSCONV= | ABSTOL=r] \n          \nSpecifies an absolute function convergence criterion. The default value of r is the negative \nsquare root of the largest double-precision value, which serves only as a protection against \noverflows. "},"StatementOptionType":"V"},{"StatementOptionName":"ABSFCONV=|ABSFTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSFCONV=r[n] | ABSFTOL=r[n]] \n          \nSpecifies an absolute function convergence criterion. The default value is r=0. The optional \ninteger value n specifies the number of successive iterations for which the criterion must be \nsatisfied before the process can be terminated."},"StatementOptionType":"V"},{"StatementOptionName":"ABSGCONV=|ABSGTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSGCONV=r[n] | ABSGTOL=r[n]] \n          \nSpecifies an absolute gradient convergence criterion. The default value is r=1E-5. \nThe optional integer value n specifies the number of successive iterations for which \nthe criterion must be satisfied before the process can be terminated."},"StatementOptionType":"V"},{"StatementOptionName":"ABSXCONV=|ABSXTOL=","StatementOptionHelp":{"#cdata":"[Syntax: ABSXCONV= | ABSXTOL=r[n]] \n          \nSpecifies the absolute parameter convergence criterion. The default is r=1E-8 for the \nNMSIMP technique and r=0 otherwise. The optional integer value n specifies the number of \nsuccessive iterations for which the criterion must be satisfied before the process can \nterminate."},"StatementOptionType":"V"},{"StatementOptionName":"DAMPSTEP=","StatementOptionHelp":{"#cdata":"[Syntax: DAMPSTEP<=r>] \n          \nSpecifies that the initial step length value a\u2070 for each line search (used by the QUANEW, \nHYQUAN, CONGRA, or NEWRAP technique) cannot be larger than r times the step length value used \nin the former iteration. If the DAMPSTEP option is specified but r is not specified, the default \nis r=2. The DAMPSTEP=r option can prevent the line-search algorithm from repeatedly stepping into\nregions where some objective functions are difficult to compute or where they could lead to floating \npoint overflows during the computation of objective functions and their derivatives. The DAMPSTEP=r \noption can save time-costly function calls during the line searches of objective functions that \nresult in very small steps."},"StatementOptionType":"S|V"},{"StatementOptionName":"FCONV=|FTOL=","StatementOptionHelp":{"#cdata":"[Syntax: FCONV= | FTOL=r[n]] \n          \nSpecifies a relative function convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"FCONV2=|FTOL2=","StatementOptionHelp":{"#cdata":"[Syntax: FCONV2= | FTOL2=r[n]] \n          \nSpecifies another function convergence criterion."},"StatementOptionType":"V"},{"StatementOptionName":"FSIZE=","StatementOptionHelp":{"#cdata":"[Syntax:FSIZE=r] \n          \nSpecifies the FSIZE parameter of the relative function and relative gradient termination \ncriteria. The default value is r=0."},"StatementOptionType":"V"},{"StatementOptionName":"GCONV=|GTOL=","StatementOptionHelp":{"#cdata":"[Syntax: GCONV=r | GTOL=r] \n          \nSpecifies a relative gradient convergence criterion. The default value is r=1E-8. \nThe optional integer value n specifies the number of successive iterations for which \nthe criterion must be satisfied before the process can terminate."},"StatementOptionType":"V"},{"StatementOptionName":"HESCAL=|HS=","StatementOptionHelp":{"#cdata":"Specifies the scaling version of the Hessian matrix used in NRRIDG, TRUREG, NEWRAP, or \nDBLDOG optimization."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"0","@Value2":"1","@Value3":"2","@Value4":"3"},"StatementOptionToolTips":{"@ToolTip1":"Specifies that no scaling is done.","@ToolTip2":"Specifies the Mor\u00e9 (1978) scaling update","@ToolTip3":"Specifies the Dennis, Gay, and Welsch (1981) scaling update","@ToolTip4":"Specifies that di is reset in each iteration"}},{"StatementOptionName":"INHESSIAN=|INHESS=","StatementOptionHelp":{"#cdata":"[Syntax: INHESSIAN[=r]] \n          \nSpecifies how the initial estimate of the approximate Hessian is defined for the \nquasi-Newton techniques QUANEW and DBLDOG."},"StatementOptionType":"S|V"},{"StatementOptionName":"INSTEP=","StatementOptionHelp":{"#cdata":"[Syntax: INSTEP=r] \n          \nReduces the length of the first trial step during the line search of the first iterations."},"StatementOptionType":"V"},{"StatementOptionName":"LINESEARCH=|LIS=","StatementOptionHelp":{"#cdata":"[Syntax: LINESEARCH= | LIS=i] \n          \n Specifies the line-search method for the CONGRA, QUANEW, and NEWRAP optimization techniques."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"1","@Value2":"2","@Value3":"3","@Value4":"4","@Value5":"5","@Value6":"6","@Value7":"7","@Value8":"8"},"StatementOptionToolTips":{"@ToolTip1":"Specifies a line-search method that needs the same number of function and gradient calls  for cubic interpolation and cubic extrapolation; this method is similar to one used by  the Harwell subroutine library.","@ToolTip2":"Specifies a line-search method that needs more function calls than gradient calls for quadratic  and cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher  (1987) and can be modified to an exact line search by using the LSPRECISION= option.","@ToolTip3":"Specifies a line-search method that needs the same number of function and gradient calls for  cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher  (1987) and can be modified to an exact line search by using the LSPRECISION= option.","@ToolTip4":"Specifies a line-search method that needs the same number of function and gradient calls for  stepwise extrapolation and cubic interpolation","@ToolTip5":"Specifies a line-search method that is a modified version of LIS=4.","@ToolTip6":"Specifies golden section line search (Polak 1971), which uses only function values for linear  approximation.","@ToolTip7":"Specifies bisection line search (Polak 1971), which uses only function values for linear  approximation.","@ToolTip8":"Specifies Armijo line-search technique (Polak 1971), which uses only function values for  linear approximation."}},{"StatementOptionName":"LSPRECISION=|LSP=","StatementOptionHelp":{"#cdata":"[Syntax: LSPRECISION= | LSP=r] \n          \nSpecifies the degree of accuracy that should be obtained by the line-search algorithms \nLIS=2 and LIS=3. The default LSPRECISION= values are: \n\n  o For TECH=QUANEW UPDATE=DBFGS, BFGS: r = 0.4\n  o For TECH=QUANEW UPDATE=DDFP, DFP: r = 0.06 \n  o For TECH=CONGRA UPDATE=all r = 0.1\n  o For TECH=NEWRAP NO UPDATE: r = 0.9"},"StatementOptionType":"V"},{"StatementOptionName":"MAXFUNC=|MAXFU=","StatementOptionHelp":{"#cdata":"[Syntax: MAXFUNC= | MAXFU=i] \n          \nRequires the number of function calls to be no larger than i. The default values are: \n\n  o For TECH= TRUREG, NRRIDG, NEWRAP: i=125 \n  o For TECH= DBLDOG, QUANEW: i=500 \n  o For TECH= CONGRA: i=1000\n  o For TECH= NMSIMP: i=3000 \n  \nNote that the optimization can terminate only after completing a full iteration. \nTherefore, the number of function calls that is actually performed can exceed the \nnumber that is specified by the MAXFUNC= option."},"StatementOptionType":"V"},{"StatementOptionName":"MAXITER=|MAXIT=","StatementOptionHelp":{"#cdata":"[Syntax: MAXITER= | MAXIT=i[n]] \n          \n Requires the number of iterations to be no larger than i. The default values are: \n \n  o For TECH= TRUREG, NRRIDG, NEWRAP: i=50 \n  o For TECH= QUANEW, DBLDOG: i=200 \n  o For TECH= CONGRA: i=400\n  o For TECH= NMSIMP: i=1000 \n  \nThese default values are also valid when i is specified as a missing value."},"StatementOptionType":"V"},{"StatementOptionName":"MAXSTEP=","StatementOptionHelp":{"#cdata":"[Syntax: MAXSTEP=r[n]] \n          \nSpecifies an upper bound for the step length of the line-search algorithms during \nthe first n iterations."},"StatementOptionType":"V"},{"StatementOptionName":"MAXTIME=","StatementOptionHelp":{"#cdata":"[Syntax: MAXTIME=r] \n          \nRequires the CPU time to be no larger than r. The default value of the MAXTIME= option \nis the largest double floating-point number on your computer. Note that the time specified \nby the MAXTIME= option is checked only once at the end of each iteration. Therefore, the \nactual running time can be much longer than that specified by the MAXTIME= option. The \nactual running time includes the rest of the time needed to finish the iteration and the \ntime needed to generate the output of the results."},"StatementOptionType":"V"},{"StatementOptionName":"MINITER=|MINIT=","StatementOptionHelp":{"#cdata":"[Syntax: MINITER= | MINIT=i] \n          \nSpecifies the minimum number of iterations. The default value is 0. If you request more \niterations than are actually needed for convergence to a stationary point, the optimization \nalgorithms can behave strangely. For example, the effect of rounding errors can prevent the \nalgorithm from continuing for the required number of iterations."},"StatementOptionType":"V"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Suppresses the output."},"StatementOptionType":"S"},{"StatementOptionName":"PALL","StatementOptionHelp":{"#cdata":"[Displays all optional output for optimization."},"StatementOptionType":"S"},{"StatementOptionName":"PHISTORY","StatementOptionHelp":{"#cdata":"Displays the optimization history."},"StatementOptionType":"S"},{"StatementOptionName":"PHISTPARMS","StatementOptionHelp":{"#cdata":"Display parameter estimates in each iteration."},"StatementOptionType":"S"},{"StatementOptionName":"PINIT","StatementOptionHelp":{"#cdata":"Displays the initial values and derivatives (if available)."},"StatementOptionType":"S"},{"StatementOptionName":"PSHORT","StatementOptionHelp":{"#cdata":"Restricts the amount of default output."},"StatementOptionType":"S"},{"StatementOptionName":"PSUMMARY","StatementOptionHelp":{"#cdata":"Restricts the amount of default displayed output to a short form of iteration history and \nnotes, warnings, and errors."},"StatementOptionType":"S"},{"StatementOptionName":"RESTART=|REST=","StatementOptionHelp":{"#cdata":"[Syntax: RESTART= | REST=i > 0] \n          \nSpecifies that the QUANEW or CONGRA algorithm is restarted with a steepest descent/ascent \nsearch direction after, at most, i iterations, i > 0."},"StatementOptionType":"V"},{"StatementOptionName":"SOCKET=","StatementOptionHelp":{"#cdata":"Specifies the fileref that contains the information needed for remote monitoring."},"StatementOptionType":"V"},{"StatementOptionName":"TECHNIQUE=|TECH=","StatementOptionHelp":{"#cdata":"[Syntax: TECHNIQUE= | TECH=name] \n          \nSpecifies the optimization technique."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"CONGRA","@Value2":"DBLDOG","@Value3":"NMSIMP","@Value4":"NEWRAP","@Value5":"NRRIDG","@Value6":"QUANEW","@Value7":"TRUREG","@Value8":"NONE"},"StatementOptionToolTips":{"@ToolTip1":"Chooses one of four different conjugate-gradient optimization algorithms, which can be more  precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip2":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation  of the Cholesky factor of the Hessian.","@ToolTip3":"Performs a Nelder-Mead simplex optimization.","@ToolTip4":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson  optimization technique. The algorithm combines a line-search algorithm with ridging, and it  can be modified with the LINESEARCH= option.","@ToolTip5":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson  optimization technique. This algorithm does not perform a line search.","@ToolTip6":"Chooses one of four different quasi-Newton optimization algorithms that can be more precisely  defined with the UPDATE= option and modified with the LINESEARCH= option.","@ToolTip7":"Performs a usually very stable but, for large problems, memory- and time-consuming trust-region  optimization technique. The algorithm is implemented similar to Gay (1983) and Mor\u00e9 and Sorensen  (1983).","@ToolTip8":"Does not perform any optimization. This option is similar to METHOD=NONE, but TECH=NONE also  computes and displays residuals and goodness of fit statistics."}},{"StatementOptionName":"UPDATE=|UPD=","StatementOptionHelp":{"#cdata":"Specifies the update method for the quasi-Newton, double-dogleg, or conjugate-gradient \noptimization technique."},"StatementOptionType":"V","StatementOptionValues":{"@Value1":"BFGS","@Value2":"DBFGS","@Value3":"DDFP","@Value4":"DFP","@Value5":"PB","@Value6":"FR","@Value7":"PR","@Value8":"CD"},"StatementOptionToolTips":{"@ToolTip1":"Performs the original Broyden, Fletcher, Goldfarb, and Shanno (BFGS) update of the inverse  Hessian matrix.","@ToolTip2":"Performs the dual BFGS update of the Cholesky factor of the Hessian matrix. This is the  default update method.","@ToolTip3":"Performs the dual Davidon, Fletcher, and Powell (DFP) update of the Cholesky factor of  the Hessian matrix.","@ToolTip4":"Performs the original DFP update of the inverse Hessian matrix.","@ToolTip5":"Performs the automatic restart update method of Powell (1977) and Beale (1972).","@ToolTip6":"Performs the Fletcher-Reeves update (Fletcher 1987).","@ToolTip7":"Performs the Polak-Ribiere update (Fletcher 1987).","@ToolTip8":"Performs a conjugate-descent update of Fletcher (1987)."}},{"StatementOptionName":"XCONV=|XTOL=","StatementOptionHelp":{"#cdata":"[Syntax: XCONV= | XTOL=r[n]] \n          \nSpecifies the relative parameter convergence criterion. For all techniques except NMSIMP, \ntermination requires a small relative parameter change in subsequent iterations. The default \nvalue is r=1E-8 for the NMSIMP technique and r=0 otherwise. The optional integer value n \nspecifies the number of successive iterations for which the criterion must be satisfied \nbefore the process can be terminated. "},"StatementOptionType":"V"},{"StatementOptionName":"XSIZE=","StatementOptionHelp":{"#cdata":"[Syntax: XSIZE=r > 0] \n          \nSpecifies the XSIZE parameter of the relative parameter termination criterion. The default \nvalue is r=0."},"StatementOptionType":"V"}]}},{"StatementName":"OUTPUT","StatementHelp":{"#cdata":"Syntax: OUTPUT <options> ; \n\nThe OUTPUT statement generates and prints forecasts based on the model estimated in the previous MODEL\nstatement and, optionally, creates an output SAS data set that contains these forecasts."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"ALPHA=","StatementOptionHelp":{"#cdata":"[Syntax: ALPHA=number] \n          \nSets the forecast confidence limit size, where number is between 0 and 1. When you specify the \nALPHA=number option, the upper and lower confidence limits define the 100(1-\u03b1)% confidence interval. \nThe default is ALPHA=0.05, which produces 95% confidence intervals."},"StatementOptionType":"V"},{"StatementOptionName":"BACK=","StatementOptionHelp":{"#cdata":"[Syntax: BACK=number] \n          \nSpecifies the number of observations before the end of the data at which the multistep forecasts \nbegin. The BACK= option value must be less than or equal to the number of observations minus the \nnumber of lagged regressors in the model. The default is BACK=0, which means that the forecasts \nstart at the end of the available data."},"StatementOptionType":"V"},{"StatementOptionName":"LEAD=","StatementOptionHelp":{"#cdata":"[Syntax: LEAD=number] \n          \nSpecifies the number of multistep forecast values to compute. The default is LEAD=12."},"StatementOptionType":"V"},{"StatementOptionName":"NOPRINT","StatementOptionHelp":{"#cdata":"Suppresses the printed forecast values of each dependent (endogenous) variable."},"StatementOptionType":"S"},{"StatementOptionName":"OUT=","StatementOptionHelp":{"#cdata":"[Syntax: OUT=SAS-data-set] \n          \nWrites the forecast values to an output data set."},"StatementOptionType":"DV"}]}},{"StatementName":"RESTRICT","StatementHelp":{"#cdata":"Syntax: RESTRICT restriction, ..., restriction ; \n\nThe RESTRICT statement restricts the specified parameters to the specified values. Only one RESTRICT\nstatement is allowed, but multiple restrictions can be specified in one RESTRICT statement."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CONST","StatementOptionHelp":{"#cdata":"[Syntax: CONST(i)= ] \n          \nIs the intercept parameter of the (i)th time series, (y)it"},"StatementOptionType":"S|V"},{"StatementOptionName":"AR","StatementOptionHelp":{"#cdata":"[Syntax: AR(l,i,j)= ] \n          \nIs the autoregressive parameter of the lag l value of the (j)th dependent (endogenous) variable, \n(y)j,t-l, to the (i)th dependent variable at time t, (y)it."},"StatementOptionType":"S|V"},{"StatementOptionName":"MA","StatementOptionHelp":{"#cdata":"[Syntax: MA(l,i,j)= ] \n          \nIs the moving-average parameter of the lag l value of the (j)th error process, \u0454j,t-l, to the \n(i)th dependent variable at time t, (y)it."},"StatementOptionType":"S|V"},{"StatementOptionName":"XL","StatementOptionHelp":{"#cdata":"[Syntax: XL(l,i,j)= ] \n          \nIs the exogenous parameter of the lag l value of the (j)th exogenous (independent) variable, \n(x)j,t-l, to the (i)th dependent variable at time t, (y)it."},"StatementOptionType":"S|V"},{"StatementOptionName":"SDUMMY","StatementOptionHelp":{"#cdata":"[Syntax: SDUMMY(i,j)= ] \n          \nIs the (j)th seasonal dummy of the (i)th time series at time t, (y)it, where j=1,...,(nseason-1), \nwhere nseason is based on the NSEASON= option in the MODEL statement."},"StatementOptionType":"S|V"},{"StatementOptionName":"LTREND","StatementOptionHelp":{"#cdata":"[Syntax: LTREND(i)= ] \n          \nIs the linear trend parameter of the current value (i)th time series, (y)it."},"StatementOptionType":"S|V"},{"StatementOptionName":"QTREND","StatementOptionHelp":{"#cdata":"[Syntax: QTREND(i)= ] \n          \nIs the quadratic trend parameter of the current value (i)th time series, (y)it."},"StatementOptionType":"S|V"},{"StatementOptionName":"GCHC","StatementOptionHelp":{"#cdata":"[Syntax: GCHC(i,j)= ] \n          \nIs the constant parameter of the covariance matrix, Ht, and (i,j) is 1 \u2264 i=j \u2264 k for \nCCC representation and 1 \u2264 i \u2264 j \u2264 k for BEKK representations, where k is the number \nof dependent variables."},"StatementOptionType":"S|V"},{"StatementOptionName":"ACH","StatementOptionHelp":{"#cdata":"[Syntax: ACH(l,i,j)= ] \n          \nIs the ARCH parameter of the lag l value of (\u03b5)t(\u03b5')t, where i,j=1,...,k for BEKK \nrepresentation and i=j=1,...,k for CCC representation."},"StatementOptionType":"S|V"},{"StatementOptionName":"GCH","StatementOptionHelp":{"#cdata":"[Syntax: GCH(l,i,j)= ] \n          \nIs the GARCH parameter of the lag l value of covariance matrix, Ht, where i,j=1,...,k \nfor BEKK representation and i=j=1,...,k for CCC representation."},"StatementOptionType":"S|V"},{"StatementOptionName":"CCC","StatementOptionHelp":{"#cdata":"[Syntax: CCC(i,j)= ] \n          \nIs the constant conditional correlation parameter for only the CCC representation; (i,j) \nis 1 \u2264 i \u2264 j \u2264 k."},"StatementOptionType":"S|V"}]}},{"StatementName":"TEST","StatementHelp":{"#cdata":"Syntax: TEST restriction, ..., restriction ; \n\nThe TEST statement performs the Wald test for the joint hypothesis specified in the statement. The\nrestriction\u2019s form is parameter=value, and each restriction is separated by commas. The restrictions \nare specified in the same manner as in the RESTRICT statement. Any number of TEST statements\ncan be specified. \n\nTo use the TEST statement, you need to know the form of the model. If the P=, Q=, and XLAG= options\nare not specified, then the TEST statement is not applicable.\n\nThe following is an example of the TEST statement. In the case of a bivariate (=2) VAR(2) model, \n\n   proc varmax data=one;\n      model y1 y2 / p=2;\n      test AR(1,1,2)=0, AR(2,1,2)=0;\n   run;"},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CONST","StatementOptionHelp":{"#cdata":"[Syntax: CONST(i)= ] \n          \nIs the intercept parameter of the (i)th time series, (y)it"},"StatementOptionType":"S|V"},{"StatementOptionName":"AR","StatementOptionHelp":{"#cdata":"[Syntax: AR(l,i,j)= ] \n          \nIs the autoregressive parameter of the lag l value of the (j)th dependent (endogenous) variable, \n(y)j,t-l, to the (i)th dependent variable at time t, (y)it."},"StatementOptionType":"S|V"},{"StatementOptionName":"MA","StatementOptionHelp":{"#cdata":"[Syntax: MA(l,i,j)= ] \n          \n          \nIs the moving-average parameter of the lag l value of the (j)th error process, (\u03b5)j,t-l, to \nthe (i)th dependent variable at time t, (y)it."},"StatementOptionType":"S|V"},{"StatementOptionName":"XL","StatementOptionHelp":{"#cdata":"[Syntax: XL(l,i,j)= ] \n          \nIs the exogenous parameter of the lag l value of the (j)th exogenous (independent) variable, \n(x)j,t-l, to the (i)th dependent variable at time t, (y)it."},"StatementOptionType":"S|V"},{"StatementOptionName":"SDUMMY","StatementOptionHelp":{"#cdata":"[Syntax: SDUMMY(i,j)= ] \n          \nIs the (j)th seasonal dummy of the (i)th time series at time t, (y)it, where , where \nj=1,...,(nseason-1), where nseason is based on the NSEASON= option in the MODEL statement."},"StatementOptionType":"S|V"},{"StatementOptionName":"LTREND","StatementOptionHelp":{"#cdata":"[Syntax: LTREND(i)= ] \n          \nIs the linear trend parameter of the current value (i)th time series, (y)it."},"StatementOptionType":"S|V"},{"StatementOptionName":"QTREND","StatementOptionHelp":{"#cdata":"[Syntax: QTREND(i)= ] \n          \nIs the quadratic trend parameter of the current value (i)th time series, (y)it."},"StatementOptionType":"S|V"},{"StatementOptionName":"GCHC","StatementOptionHelp":{"#cdata":"[Syntax: GCHC(i,j)= ] \n          \nIs the constant parameter of the covariance matrix, Ht, and (i,j) is 1 \u2264 i=j \u2264 k for \nCCC representation and 1 \u2264 i \u2264 j \u2264 k for BEKK representations, where k is the number \nof dependent variables."},"StatementOptionType":"S|V"},{"StatementOptionName":"ACH","StatementOptionHelp":{"#cdata":"[Syntax: ACH(l,i,j)= ] \n          \nIs the ARCH parameter of the lag l value of (\u03b5)t(\u03b5)'t, where i,j=1,...,k for BEKK representation \nand i=j=1,...,k for CCC representation."},"StatementOptionType":"S|V"},{"StatementOptionName":"GCH","StatementOptionHelp":{"#cdata":"[Syntax: GCH(l,i,j)= ] \n          \nIs the GARCH parameter of the lag l value of covariance matrix, Ht, where i,j=1,...,k for \nBEKK representation and i=j=1,...,k for CCC representation."},"StatementOptionType":"S|V"},{"StatementOptionName":"CCC","StatementOptionHelp":{"#cdata":"[Syntax: CCC(i,j)= ] \n          \nIs the constant conditional correlation parameter for only the CCC representation; (i,j) \nis 1 \u2264 i \u2264 j \u2264 k."},"StatementOptionType":"S|V"}]}}]}}}