{"Procedure":{"Name":"VARREDUCE","ProductGroup":"CAS","ProcedureHelp":{"#cdata":"Syntax: PROC VARREDUCE < options > ;\n    CLASS variable < (options) >: : :< variable < (options) > > < / global-options > ;\n    DISPLAY < table-list > < /options > ;\n    DISPLAYOUT table-spec-list < /options > ;\n    REDUCE UNSUPERVISED effects < / reduce-options > ;\n    REDUCE SUPERVISED response : : :< response > = effects < / reduce-options > ;\n    FREQ variable ;\n\nThe VARREDUCE procedure is a high-performance procedure that performs both supervised and unsupervised\nvariable selection on the SAS appliance. You can use the VARREDUCE procedure to read data in\ndistributed form and perform variable selection in parallel in single-machine mode or distributed mode.\n\nThe VARREDUCE procedure performs unsupervised variable selection by identifying a set of variables\nthat jointly explain the maximum amount of data variance. Unlike principal component analysis (PCA),\nwhich reduces dimensionality by generating a set of new variables (variable extraction), the VARREDUCE\nprocedure reduces dimensionality by selecting a subset of the original variables (variable selection). \nThus, this technique preserves model interpretation."},"ProcedureOptions":{"ProcedureOption":[{"ProcedureOptionName":"DATA=","ProcedureOptionHelp":{"#cdata":"Syntax: DATA=CAS-libref.data-table\n      \nNames the input data table for PROC VARREDUCE to use. The default is the most recently created\ndata table. CAS-libref.data-table is a two-level name, where\n\n  CAS-libref refers to a collection of information that is defined in the LIBNAME statement and\n    includes the caslib, which includes a path to the data, and a session identifier, which\n    defaults to the active session but which can be explicitly defined in the LIBNAME\n    statement.\n    \n  data-table specifies the name of the input data table."},"ProcedureOptionType":"DV"},{"ProcedureOptionName":"MATRIX=","ProcedureOptionHelp":{"#cdata":"Syntax: MATRIX=CORR | COV | SSCP\n      \nSpecifies the matrix to use to select variables: Pearson correlation, sum of squares and crossproducts,\nor covariance respectively."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"CORR","@Value2":"COV","@Value3":"SSCP"},"ProcedureOptionToolTips":{"@ToolTip1":"Selects variables based on the Pearson correlation matrix.","@ToolTip2":"Selects variables based on the covariance matrix.","@ToolTip3":"Selects variables based on the sums of squares and crossproducts matrix."}},{"ProcedureOptionName":"TECHNIQUE=|TECH=","ProcedureOptionHelp":{"#cdata":"Syntax: TECHNIQUE=|TECH= keyword \n      \nSpecifies the variable selection technique. You can specify the following keywords: \n\n  VARIANCEANALYSIS | VAR performs variance analysis for variable selection.  \n  DISCRIMINANTANALYSIS | DSC performs discriminant analysis for variable selection.  \n  \nBy default, TECHNIQUE=VAR."},"ProcedureOptionType":"V","ProcedureOptionValues":{"@Value1":"VARIANCEANALYSIS|VAR","@Value2":"DISCRIMINANTANALYSIS|DSC"},"ProcedureOptionToolTips":{"@ToolTip1":"Performs variance analysis for variable selection.","@ToolTip2":"Performs discriminant analysis for variable selection."}}]},"ProcedureStatements":{"ProcedureStatement":[{"StatementName":"CLASS","StatementHelp":{"#cdata":"Syntax: CLASS variable < (options) >... < variable < (options) >> < / global-options > ;\n      \nThe CLASS statement names the classification variables to be used as explanatory variables in the analysis.\nThe CLASS statement must precede the REDUCE statement. \n\nThe VARREDUCE procedure does not support the SPLIT option in the CLASS statement. For CLASS\nvariable parameterization, the VARREDUCE procedure only support the GLM method."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"DESCENDING|DESC","StatementOptionHelp":{"#cdata":"Reverses the sort order of the classification variable."},"StatementOptionType":"S"},{"StatementOptionName":"MISSING","StatementOptionHelp":{"#cdata":"Treats missing values (\u201c.\u201d, \u201c.A\u201d, . . . , \u201c.Z\u201d for numeric variables and blanks for character variables) as\nvalid values for the CLASS variable.\n\nIf you do not specify the MISSING option, observations with missing values for CLASS variables are\nremoved from the analysis, even if the CLASS variables are not used in the model formulation."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAY","StatementHelp":{"#cdata":"Syntax: DISPLAY < table-list > < / options > ;\n      \nThe DISPLAY statement enables you to specify a list of ODS tables to display or exclude. This statement\nis similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY\nstatement can improve performance when a large number of tables could be generated (such as in BY-group\nprocessing). The procedure processes the DISPLAY statement on a CAS server and thus sends only a subset\nof ODS tables to the SAS client. Because ODS statements are processed on a SAS client, all ODS tables\nare sent to the client and then the client creates a subset. If both DISPLAY and ODS statements are used\ntogether, the DISPLAY statement takes precedence over the ODS statements."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"CASESENSITIVE","StatementOptionHelp":{"#cdata":"Performs a case-sensitive comparison of table names in the table-list to ODS table names when tables\nare subsetted for display. To preserve case, you must enclose table names in the table-list in quotation\nmarks."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDE","StatementOptionHelp":{"#cdata":"Displays all ODS tables except those specified in the table-list."},"StatementOptionType":"S"},{"StatementOptionName":"EXCLUDEALL","StatementOptionHelp":{"#cdata":"Suppresses display of all tables. This option takes precedence over the other options."},"StatementOptionType":"S"},{"StatementOptionName":"TRACE","StatementOptionHelp":{"#cdata":"Displays the ODS table names, labels, and paths."},"StatementOptionType":"S"}]}},{"StatementName":"DISPLAYOUT","StatementHelp":{"#cdata":"Syntax: DISPLAYOUT table-spec-list < / options > ;\n      \nThe DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This\nstatement is similar to the ODS OUTPUT statement.\n\nThe table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a\nkey=value format:\n\n  key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the\n    CAS output table name.\n  key specifies key as the ODS table name and also as the CAS output table name.\n  \nTable names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT\nstatement does not support regular expressions."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"NOREPLACE","StatementOptionHelp":{"#cdata":"Does not replace an existing CAS output table of the same name."},"StatementOptionType":"S"},{"StatementOptionName":"REPEATED","StatementOptionHelp":{"#cdata":"Replicates the CAS output tables on all nodes."},"StatementOptionType":"S"}]}},{"StatementName":"FREQ","StatementHelp":{"#cdata":"Syntax: FREQ variable ; \n      \nThe variable in the FREQ statement identifies a numeric variable in the data set that contains the frequency\nof occurrence for each observation. SAS high-performance analytical procedures that support the FREQ\nstatement treat each observation as if it appeared f times, where f is the value of the FREQ variable for the\nobservation. If the frequency value is not an integer, it is truncated to an integer. If the frequency value \nis less than 1 or missing, the observation is not used in the analysis. When the FREQ statement is not specified,\neach observation is assigned a frequency of 1."},"StatementOptions":null},{"StatementName":"REDUCE UNSUPERVISED","StatementHelp":{"#cdata":"Syntax: REDUCE UNSUPERVISED effects < / reduce-options > ;\n  \nPROC VARREDUCE can be used for both supervised and unsupervised variable selection. In \nunsupervised case, the REDUCE statement specifies the effects to be considered in the \nvariable selection process. An effect can be an original variable in the input data set \nor a variable constructed from the original variables. In the supervised case, besides \nthe effects, the response variables also needs to be specified. A response variable can \nbe an original variable in the input data set or a variable constructed from the original \nvariables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"MAXITER=|MAXSTEPS=","StatementOptionHelp":{"#cdata":"Syntax: MAXITER=n | MAXSTEPS=n \n          \n[For both supervised and unsupervised variable selection]\n          \nStops PROC VARREDUCE after it runs n steps."},"StatementOptionType":"V"},{"StatementOptionName":"MAXEFFECTS=","StatementOptionHelp":{"#cdata":"Syntax: MAXEFFECTS=n \n          \n[For both supervised and unsupervised variable selection]\n          \nStops PROC VARREDUCE after n effects have been selected. Because individual levels of one\nclassification variable can be selected in different steps of the variable selection process, PROC\nVARREDUCE might take more than n steps to select n effects."},"StatementOptionType":"V"},{"StatementOptionName":"VARIANCEEXPLAINED=|VAREXP=","StatementOptionHelp":{"#cdata":"Syntax: VARIANCEEXPLAINED=fraction | VAREXP=fraction \n          \n[For both supervised and unsupervised variable selection]\n\nStops PROC VARREDUCE when the fraction of the total variance can be explained by the selected\nvariables."},"StatementOptionType":"V"},{"StatementOptionName":"MINVARIANCEINCREMENT=|VARINC=","StatementOptionHelp":{"#cdata":"Syntax: MINVARIANCEINCREMENT=fraction | VARINC=fraction \n          \n[For both supervised and unsupervised variable selection]\n\nStops PROC VARREDUCE when the minimum increment of the explained variance is less than fraction\nof the total variance."},"StatementOptionType":"V"}]}},{"StatementName":"REDUCE SUPERVISED","StatementHelp":{"#cdata":"Syntax: REDUCE SUPERVISED response ... < response > = effects < / reduce-options > ; \n  \nPROC VARREDUCE can be used for both supervised and unsupervised variable selection. In \nunsupervised case, the REDUCE statement specifies the effects to be considered in the \nvariable selection process. An effect can be an original variable in the input data set \nor a variable constructed from the original variables. In the supervised case, besides \nthe effects, the response variables also needs to be specified. A response variable can \nbe an original variable in the input data set or a variable constructed from the original \nvariables."},"StatementOptions":{"StatementOption":[{"StatementOptionName":"AIC","StatementOptionHelp":{"#cdata":"Stops PROC VARREDUCE if the Akaike\u2019s information criterion (AIC) value fails to decrease in three\ncontiguous steps."},"StatementOptionType":"S"},{"StatementOptionName":"AICC","StatementOptionHelp":{"#cdata":"Stops PROC VARREDUCE if the corrected Akaike\u2019s information (AICC) value fails to decrease in\nthree contiguous steps."},"StatementOptionType":"S"},{"StatementOptionName":"BIC","StatementOptionHelp":{"#cdata":"Stops PROC VARREDUCE if the Schwarz Bayesian information criterion (BIC) value fails to decrease\nin three contiguous steps."},"StatementOptionType":"S"},{"StatementOptionName":"MAXITER=|MAXSTEPS=","StatementOptionHelp":{"#cdata":"Syntax: MAXITER=n | MAXSTEPS=n \n          \n[For both supervised and unsupervised variable selection]\n          \nStops PROC VARREDUCE after it runs n steps."},"StatementOptionType":"V"},{"StatementOptionName":"MAXEFFECTS=","StatementOptionHelp":{"#cdata":"Syntax: MAXEFFECTS=n \n          \n[For both supervised and unsupervised variable selection]\n          \nStops PROC VARREDUCE after n effects have been selected. Because individual levels of one\nclassification variable can be selected in different steps of the variable selection process, PROC\nVARREDUCE might take more than n steps to select n effects."},"StatementOptionType":"V"},{"StatementOptionName":"VARIANCEEXPLAINED=|VAREXP=","StatementOptionHelp":{"#cdata":"Syntax: VARIANCEEXPLAINED=fraction | VAREXP=fraction \n          \n[For both supervised and unsupervised variable selection]\n\nStops PROC VARREDUCE when the fraction of the total variance can be explained by the selected\nvariables."},"StatementOptionType":"V"},{"StatementOptionName":"MINVARIANCEINCREMENT=|VARINC=","StatementOptionHelp":{"#cdata":"Syntax: MINVARIANCEINCREMENT=fraction | VARINC=fraction \n          \n[For both supervised and unsupervised variable selection]\n\nStops PROC VARREDUCE when the minimum increment of the explained variance is less than fraction\nof the total variance."},"StatementOptionType":"V"}]}}]}}}