{"Keywords":{"Keyword":[{"Name":"ALTER=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Assigns an alter password to a SAS file and enables access to a password-protected \nSAS file."}},{"Name":"BUFNO=","Type":"DATASET_OPTION_V","Values":{"@Value1":"n","@Value2":"nK","@Value3":"hexX","@Value4":"MIN","@Value5":"MAX"},"ToolTips":{"@ToolTip1":"Specifies the number of buffers in multiples of 1 (bytes).  Replace n with an integer value.","@ToolTip2":"Specifies the number of buffers in multiples of 1,024 (kilobytes).  Replace n with an integer value.","@ToolTip3":"Specifies the number of buffers as a hexadecimal value.  Replace hex with an actual hexadecimal value.","@ToolTip4":"Sets the minimum number of buffers to 0, which causes SAS to use the minimum optimal  value for the operating environment. This is the default.","@ToolTip5":"Sets the number of buffers to the maximum possible number in your operating environment,  up to the largest four-byte, signed integer, which is 2\u00b3\u00b9-1, or approximately 2 billion."},"Help":{"#cdata":"Specifies the number of buffers for processing a SAS data set."}},{"Name":"BUFSIZE=","Type":"DATASET_OPTION_V","Values":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"hexX","@Value6":"MIN","@Value7":"MAX"},"ToolTips":{"@ToolTip1":"Specifies the page size in multiples of 1 (bytes). Replace n with an integer value.","@ToolTip2":"Specifies the number of buffers in multiples of 1,024 (kilobytes).  Replace n with an integer value.","@ToolTip3":"Specifies the page size in multiples of 1,048,576 (megabytes).  Replace n with an integer value.","@ToolTip4":"Specifies the page size in multiples of 1,073,741,824 (gigabytes).  Replace n with an integer value.","@ToolTip5":"Specifies the page size as a hexadecimal value.  Replace hex with an actual hexadecimal value.","@ToolTip6":"Sets the page size of buffers to 0, which causes SAS to use the minimum  optimal value for the operating environment.  This is the default.","@ToolTip7":"Sets the page size to the maximum possible number in your operating environment,  up to the largest four-byte, signed integer, which is 2\u00b3\u00b9-1, or approximately 2 billion."},"Help":{"#cdata":"Specifies a permanent buffer size for output SAS data sets."}},{"Name":"CNTLLEV=","Type":"DATASET_OPTION_V","Values":{"@Value1":"LIB","@Value2":"MEM","@Value3":"REC"},"ToolTips":{"@ToolTip1":"Specifies that concurrent access is controlled at the library level.  Library-level control restricts concurrent access to only one update process to the library.","@ToolTip2":"Specifies that concurrent access is controlled at the SAS data set (member) level.","@ToolTip3":"Specifies that concurrent access is controlled at the observation (record) level."},"Help":{"#cdata":"Specifies the level of shared access to SAS data sets."}},{"Name":"COMPRESS=","Type":"DATASET_OPTION_V","Values":{"@Value1":"NO","@Value2":"YES","@Value3":"CHAR","@Value4":"BINARY","@Value5":"FORCE"},"ToolTips":{"@ToolTip1":"Specifies that the observations in a newly created SAS data set are uncompressed  (fixed-length records).","@ToolTip2":"Specifies that the observations in a newly created SAS data set are compressed  (variable-length records) by SAS using RLE (Run Length Encoding).","@ToolTip3":"Same as YES,  but COMPRESS=CHAR is only accepted by Version 7 and later versions.                 Note: May not apply to Cloud Analytic Server (CAS).","@ToolTip4":"Specifies that the observations in a newly created SAS data set are compressed  (variable-length records) by SAS using RDC (Ross Data Compression).   Note: May not apply to Cloud Analytic Server (CAS).","@ToolTip5":"Specifies that the size of the CHAR variables in the DATA step output table are used when appending new observations."},"Help":{"#cdata":"Compresses observations in an output SAS data set."}},{"Name":"DLDMGACTION=","Type":"DATASET_OPTION_V","Values":{"@Value1":"FAIL","@Value2":"ABORT","@Value3":"REPAIR","@Value4":"NOINDEX","@Value5":"PROMPT"},"ToolTips":{"@ToolTip1":"Stops the step, issues an error message to the log immediately. This is the default  for batch mode.","@ToolTip2":"Terminates the step, issues an error message to the log, and terminates the SAS session.","@ToolTip3":"Automatically repairs and rebuilds indexes and integrity constraints, unless the  data file is truncated. You use the REPAIR statement in PROC DATASETS to restore  a truncated data set. It issues a warning message to the log. This is the default  for interactive mode.","@ToolTip4":"Automatically repairs the data file without the indexes and integrity constraints,  deletes the index file, updates the data file to reflect the disabled indexes and  integrity constraints, and limits the data file to be opened only in INPUT mode.","@ToolTip5":"Displays a dialog box that asks you to select the FAIL, ABORT, REPAIR, or NOINDEX action."},"Help":{"#cdata":"Specifies what type of action to take when a SAS data set in a SAS data library \nis detected as damaged."}},{"Name":"DROP=","Type":"DATASET_OPTION_CV","Help":{"#cdata":"Excludes variables from processing or from output SAS data sets."}},{"Name":"FILECLOSE=","Type":"DATASET_OPTION_V","Values":{"@Value1":"DISP","@Value2":"LEAVE","@Value3":"REREAD","@Value4":"REWIND"},"ToolTips":{"@ToolTip1":"Positions the tape volume according to the disposition specified in the operating  environment's control language.","@ToolTip2":"Positions the tape at the end of the file that was just processed.  Use FILECLOSE=LEAVE if you are not repeatedly accessing the same files in a SAS program  but you are accessing one or more subsequent SAS files on the same tape.","@ToolTip3":"Positions the tape volume at the beginning of the file that was just processed.  Use FILECLOSE=REREAD if you are accessing the same SAS data set on tape several times in a SAS program.","@ToolTip4":"Rewinds the tape volume to the beginning.  Use FILECLOSE=REWIND if you are accessing one or more previous SAS files on the same tape,  but you are not repeatedly accessing the same files in a SAS program."},"Help":{"#cdata":"Specifies how a tape is positioned when a SAS file on the tape is closed."}},{"Name":"FIRSTOBS=","Type":"DATASET_OPTION_V","Values":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"hexX","@Value6":"MIN","@Value7":"MAX"},"ToolTips":{"@ToolTip1":"Specifies the number of the first observation to process in multiples of 1 (bytes).  Replace n with an integer value.","@ToolTip2":"Specifies the number of the first observation to process in multiples of 1,024  (kilobytes). Replace n with an integer value.","@ToolTip3":"Specifies the number of the first observation to process in multiples of 1,048,576  (megabytes). Replace n with an integer value.","@ToolTip4":"Specifies the number of the first observation to process in multiples of 1,073,741,824  (gigabytes). Replace n with an integer value.","@ToolTip5":"Specifies the number of the first observation to process as a hexadecimal value.  Replace hex with an actual hexadecimal value.","@ToolTip6":"Sets the number of the first observation to process to 1. This is the default.","@ToolTip7":"Sets the number of the first observation to process to the maximum number of  observations in the data set, up to the largest eight-byte, signed integer,  which is 2\u2076\u00b3-1, or or approximately 9.2 quintillion observations."},"Help":{"#cdata":"Causes processing to begin at a specified observation."}},{"Name":"GENMAX=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: GENMAX=number-of-generations \n    \nRequests generations for a data set and specifies the maximum number of versions. \n\nSyntax Description: \nnumber-of-generations\n  requests generations for a data set and specifies the maximum number of versions to maintain. \n  The value can be from 0 to 1,000. The default is GENMAX=0, which means that no generation data \n  sets are requested."}},{"Name":"GENNUM=","Type":"DATASET_OPTION_V","Values":{"@Value1":"ALL","@Value2":"HIST","@Value3":"REVERT","@Value4":"<integer>"},"ToolTips":{"@ToolTip1":"Refers to the base version and all historical versions in a generation group.","@ToolTip2":"Refers to all historical versions, but excludes the base version in a generation group.","@ToolTip3":"Deletes the base version and changes the most current historical version, if it exists, to the base version.","@ToolTip4":"<integer> is a number that references a specific version from a generation group. Specifying  a positive number is an absolute reference to a specific generation number that is appended to a  data set's name (that is, gennum=2 specifies MYDATA#002)."},"Help":{"#cdata":"Syntax: GENNUM=ALL | HIST | REVERT | integer \n    \nRestricts processing for generation data sets. You use the option in parentheses after the name of each SAS file."}},{"Name":"IDXNAME=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Directs SAS to use a specific index to satisfy the conditions of a WHERE expression."}},{"Name":"IDXWHERE=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Tells SAS to choose the best index to optimize a WHERE expression, and to disregard  the possibility that a sequential search of the data set might be more resource -efficient.","@ToolTip2":"Tells SAS to ignore all indexes and satisfy the conditions of a WHERE expression  with a sequential search of the data set."},"Help":{"#cdata":"Overrides the SAS System decision about whether to use an index to satisfy the conditions \nof a WHERE expression."}},{"Name":"INDEX=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Defines indexes when a SAS data set is created."},"SubOptionsKeywords":"UNIQUE|NOMISS"},{"Name":"IN=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: IN=variable \n    \nCreates a Boolean variable that indicates whether the data set contributed data to the current observation. \n\nSyntax Description\nvariable\n  names the new variable whose value indicates whether the input data set contributed data to the current \n  observation. Within the DATA step, the value of the variable is 1 if the data set contributed to the \n  current observation. Otherwise, the value is 0.Creates a variable that indicates whether the data set \n  contributed data to the current observation."}},{"Name":"KEEP=","Type":"DATASET_OPTION_CV","Help":{"#cdata":"Syntax: KEEP=variable(s) \n\nFor an input data set, specifies the variables to process; for an output data set, specifies the variables \nto write to the data set.\n\nSyntax Description: \n\nvariable(s)\n  lists one or more variable names. You can list the variables in any form that SAS allows."}},{"Name":"LABEL=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Specifies a label for the data set."}},{"Name":"MEMTYPE=","Type":"DATASET_OPTION_V","Values":{"@Value1":"ACCESS","@Value2":"ALL","@Value3":"CATALOG","@Value4":"DATA","@Value5":"FDB","@Value6":"MDDB","@Value7":"PROGRAM","@Value8":"VIEW"},"ToolTips":{"@ToolTip1":"Access descriptor files (created by SAS/ACCESS software)","@ToolTip2":"All member types","@ToolTip3":"SAS catalogs","@ToolTip4":"SAS data files","@ToolTip5":"Financial database","@ToolTip6":"Multidimensional database","@ToolTip7":"Stored compiled SAS programs","@ToolTip8":"SAS views"},"Help":{"#cdata":"[Syntax: (mtype(s))] \n      \nRestricts deleting one or more member types. For example, the following PROC DELETE statement \ndeletes all the DATA files in the default data library: \n\n  proc delete memtype=view;\n  run;"}},{"Name":"OBSBUF=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: OBSBUF=n\n\nDetermines the size of the view buffer for processing a DATA step view.\n\nSyntax Description:\n\nn\n  specifies the number of observations that are read into the view buffer at a time.\n\nDefault: 32K bytes of memory are allocated for the default view buffer, which means the default \nnumber of observations that can be read into the view buffer at one time depends on the observation \nlength. Therefore, the default is the number of observations that can fit into 32K bytes. If the "}},{"Name":"OBS=","Type":"DATASET_OPTION_V","Values":{"@Value1":"n","@Value2":"nK","@Value3":"nM","@Value4":"nG","@Value5":"nT","@Value6":"hexX","@Value7":"MIN","@Value8":"MAX"},"ToolTips":{"@ToolTip1":"Specifies a number to indicate when to stop processing observations in multiples of  1 (bytes). Replace n with an integer value.","@ToolTip2":"Specifies the number of buffers in multiples of 1,024 (kilobytes). Replace n with  an integer value.","@ToolTip3":"Specifies a number to indicate when to stop processing observations in multiples  of 1,048,576 (megabytes). Replace n with an integer value.","@ToolTip4":"Specifies a number to indicate when to stop processing observations in multiples  of 1,073,741,824 (gigabytes). Replace n with an integer value.","@ToolTip5":"Specifies a number to indicate when to stop processing observations in multiples  of 1,099,511,627,776 (terabytes). Replace n with an integer value.","@ToolTip6":"Specifies the number to indicate when to stop processing observations as a hexadecimal  value. Replace hex with an actual hexadecimal value.","@ToolTip7":"Sets the number to indicate when to stop processing observations to 0. Use OBS=0  in order to create an empty data set that has the structure, but not the  observations, of another data set.","@ToolTip8":"Sets the number to indicate when to stop processing observations to the maximum  number of observations in the data set,  up to the largest eight-byte, signed integer,  which is 2\u2076\u00b3-1, or or approximately 9.2 quintillion observations. This is the default."},"Help":{"#cdata":"Causes processing to end with the nth observation."}},{"Name":"OUTREP=","Type":"DATASET_OPTION_V","Values":{"@Value1":"ALPHA_TRU64","@Value2":"ALPHA_VMS_32","@Value3":"ALPHA_VMS_64","@Value4":"HP_IA64","@Value5":"HP_UX_32","@Value6":"HP_UX_64","@Value7":"INTEL_ABI","@Value8":"LINUX_32","@Value9":"LINUX_IA64","@Value10":"LINUX_X86_64","@Value11":"MIPS_ABI","@Value12":"MVS_32","@Value13":"MVS_64_BFP","@Value14":"OS2","@Value15":"RS_6000_AIX_32","@Value16":"RS_6000_AIX_64","@Value17":"SOLARIS_32","@Value18":"SOLARIS_64","@Value19":"SOLARIS_X86_64","@Value20":"VAX_VMS","@Value21":"VMS_IA64","@Value22":"WINDOWS_32","@Value23":"WINDOWS_64"},"ToolTips":{"@ToolTip1":"Tru64 UNIX","@ToolTip2":"OpenVMS Alpha","@ToolTip3":"OpenVMS Alpha","@ToolTip4":"HP-UX for the Itanium Processor Family Architecture","@ToolTip5":"HP-UX for PA-RISC","@ToolTip6":"HP-UX for PA-RISC, 64-bit","@ToolTip7":"ABI for Intel architecture","@ToolTip8":"Linux for Intel architecture","@ToolTip9":"Linux for Itanium-based systems","@ToolTip10":"Linux for x64","@ToolTip11":"MIPS ABI","@ToolTip12":"31-bit SAS on z/OS","@ToolTip13":"64-bit SAS on z/OS","@ToolTip14":"OS/2 on Intel","@ToolTip15":"RS_6000_AIX  AIX","@ToolTip16":"AIX","@ToolTip17":"Solaris for SPARC","@ToolTip18":"Solaris for SPARC","@ToolTip19":"Solaris for x64","@ToolTip20":"OpenVMS VAX","@ToolTip21":"OpenVMS on HP Integrity","@ToolTip22":"32-bit SAS on Microsoft Windows","@ToolTip23":"64-bit SAS on Microsoft Windows (for both Itanium-based systems and x64)"},"Help":{"#cdata":"Syntax: OUTREP=format\n     \nSpecifies the data representation for the output SAS data set. \n\nSyntax Description:\nformat\n  specifies the data representation, which is the form in which data is stored in a particular \n  operating environment. Different operating environments use different standards or conventions \n  for storing floating-point numbers (for example, IEEE or IBM mainframe); for character encoding \n  (ASCII or EBCDIC); for the ordering of bytes in memory (big Endian or little Endian); for word \n  alignment (4-byte boundaries or 8-byte boundaries); for integer data-type length (16-bit, 32-bit, \n  or 64-bit); and for doubles (byte-swapped or not). \n  \n  By default, SAS creates a new SAS data set by using the data representation of the CPU that is \n  running SAS. Specifying the OUTREP= option enables you to create a SAS data set with a different \n  data representation. For example, in a UNIX environment, you can create a SAS data set that uses \n  a Windows data representation."}},{"Name":"POINTOBS=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Causes SAS software to produce a compressed data set that might be randomly accessed  by observation number. This is the default.","@ToolTip2":"Suppresses the ability to randomly access observations in a compressed data set by  observation number."},"Help":{"#cdata":"Controls whether a compressed data set may be processed with random access (by \nobservation number) rather than sequential access only."}},{"Name":"PW=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: PW=password \n \nAssigns a read, write, or alter password to a SAS file and enables access to a \npassword-protected SAS file. \n\nSyntax Description\npassword\n  must be a valid SAS name, which limits the password to eight characters and is case-insensitive."}},{"Name":"PWREQ=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies to display a dialog box.","@ToolTip2":"Prevents a dialog box from displaying. If a missing or invalid password is entered,  the data set is not opened and an error message is written to the SAS log."},"Help":{"#cdata":"Syntax: PWREQ=YES | NO \n    \nControls the pop up of a requestor window for a data set password."}},{"Name":"READ=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Assigns a read password to a SAS file and enables access to a read-protected SAS file."}},{"Name":"RENAME=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: RENAME=(old-name-1=new-name-1 <old-name-2=new-name-2 \u2026> ) \n    \nSyntax Description: \n\nold-name\n  is the variable that you want to rename. \nnew-name\n  is the new name of the variable. It must be a valid SAS name. \n\nChanges the name of a variable."}},{"Name":"REPEMPTY=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that a new empty data set with a given name replaces an existing data set  with the same name. This is the default.","@ToolTip2":"Specifies that a new empty data set with a given name does not replace an existing  data set with the same name."},"Help":{"#cdata":"Syntax: REPEMPTY=YES | NO \n    \nSpecifies whether a new, empty data set can overwrite an existing SAS data set that \nhas the same name."}},{"Name":"REPLACE=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that a new data set with a given name replaces an existing data set with  the same name.","@ToolTip2":"Specifies that a new data set with a given name does not replace an existing data  set with the same name."},"Help":{"#cdata":"Syntax: REPLACE=NO | YES \n    \nSpecifies whether a new SAS data set that contains data can overwrite an existing data \nset that has the same name."}},{"Name":"REUSE=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Tracks and reuses space in compressed SAS data sets.  New observations are inserted in the space that is freed when other observations are updated or deleted.","@ToolTip2":"Does not track and reuse space in compressed data sets.  New observations are appended to the existing data set."},"Help":{"#cdata":"Syntax: REUSE=NO | YES \n    \nSpecifies whether new observations are written to free space in compressed SAS data sets."}},{"Name":"ROLE=","Type":"DATASET_OPTION_V","Values":{"@Value1":"FACT","@Value2":"DIMENSION|DIM"},"ToolTips":{"@ToolTip1":"Identifies the SAS data set as the fact table for a star schema.","@ToolTip2":"Identifies the SAS data set as a dimension table for a star schema"},"Help":{"#cdata":"Syntax: ROLE=NO | YES \n    \nIdentifies the fact table for a star schema join. \n\nSyntax Description:\nFACT\n  identifies the SAS data set as the fact table for a star schema.\nDIMENSION | DIM\n  identifies the SAS data set as a dimension table for a star schema."}},{"Name":"SGIO=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS activate the scatter-read / gather-write feature for a SAS data set. The scatter-read / gather-write feature remains active until your SAS session ends.","@ToolTip2":"Specifies that SAS not activate the scatter-read/gather-write feature for the SAS data set."},"Help":{"#cdata":"Activates the Scatter/Gather I/O feature for a data set."}},{"Name":"SORTEDBY=","Type":"DATASET_OPTION_V","Values":{"@Value1":"by-clause < / collate-name>","@Value2":"_NULL_"},"ToolTips":{"@ToolTip1":"By-clause names the variables and options that you use in a BY statement in a PROC SORT step.  collate-name names the collating sequence that is used for the sort.","@ToolTip2":"Removes any existing sort indicator."},"Help":{"#cdata":"Syntax: SORTEDBY=by-clause</ collate-name> | _NULL_ \n    \nSyntax Description:\nby-clause < / collate-name>\n  indicates how the data is currently sorted.Specifies how the data set is currently sorted. \nby-clause\n  names the variables and options that you use in a BY statement in a PROC SORT step.collate-name\n  names the collating sequence that is used for the sort. By default, the collating sequence is that \n  of your operating environment. A slash (/) must precede the collating sequence.\n_NULL_\n  removes any existing sort indicator."}},{"Name":"SPILL=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Creates a spill file for non-sequential processing of a DATA step view. This is the default.","@ToolTip2":"Does not create a spill file or reduces the size of a spill file."},"Help":{"#cdata":"Syntax: SPILL=YES | NO\n    \nSpecifies whether to create a spill file for non-sequential processing of a DATA step view.\n\nSyntax Description\nYES\ncreates a spill file for non-sequential processing of a DATA step view. This is the default.\nInteraction\nA spill file is never created for sequential processing of a DATA step view.\nNO\ndoes not create a spill file or reduce the size of a spill file."}},{"Name":"TOBSNO=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: TOBSNO=n \n\nSpecifies the number of observations to send in a client/server transfer.\n\nSyntax Description:\nn\n  specifies the number of observations to be transmitted."}},{"Name":"TRANTAB=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Specifies a translation table for character conversions."}},{"Name":"TYPE=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: TYPE=data-set-type\n\nSpecifies the data set type for a specially structured SAS data set.\n    \nSyntax Description: \ndata-set-type\n  specifies the special type of data set."}},{"Name":"WHERE=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: WHERE=(where-expression-1 <logical-operator where-expression-2> ) \n\nSpecifies specific conditions to use to select observations from a SAS data set.\n\nSyntax Description:\nwhere-expression\n  is an arithmetic or logical expression that consists of a sequence of operators, operands, \n  and SAS functions. An operand is a variable, a SAS function, or a constant. An operator is \n  a symbol that requests a comparison, logical operation, or arithmetic calculation. The \n  expression must be enclosed in parentheses.logical-operator\n  \ncan be AND, AND NOT, OR, or OR NOT."}},{"Name":"WHEREUP=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Evaluates added observations and modified observations against a WHERE expression. Specify WHEREUP=YES when you want any added observations or modified observations  to match a specified WHERE expression.","@ToolTip2":"Does not evaluate added observations and modified observations against a WHERE expression."},"Help":{"#cdata":"Syntax: WHEREUP=NO | YES\n\nSpecifies whether to evaluate added observations and modified observations against \na WHERE expression.\n\nSyntax Description:\nNO\n  does not evaluate added observations and modified observations against a WHERE expression.\nYES\n  evaluates added observations and modified observations against a WHERE expression."}},{"Name":"WRITE=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: WRITE=write-password \n     \nAssigns a write password to a SAS file and enables access to a write-protected SAS file.\n     \nSyntax Description: \nwrite-password\n  must be a valid SAS name."}},{"Name":"EXTENDOBSCOUNTER=|EOC=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Requests an enhanced file format in a newly created SAS data file that counts observations beyond  the 32-bit limitation. Although this SAS data file is created for an operating environment that  stores the number of observations with a 32-bit integer, the data file behaves like a 64-bit file  with respect to counters. This is the default.  Restrictions: A SAS data file that is created with an extended observation count is incompatible with releases prior  to SAS 9.3. If the SAS data file was created in SAS 9.3 or later and EXTENDOBSCOUNTER was set to YES  when the SAS data file was created, you must re-create the SAS data file with EXTENDOBSCOUNTER=NO.  EXTENDOBSCOUNTER=YES is valid only for an output SAS data file whose internal data representation  stores the observation count as a 32-bit integer. EXTENDOBSCOUNTER=YES is ignored for SAS data files  with a 64-bit integer. For a table that lists the operating environments and the OUTREP= data representation  values that are appropriate with EXTENDOBSCOUNTER=YES, see \u201cWhen Extending the Observation Count Is  Supported\u201d in Chapter 26 of SAS Language Reference: Concepts.","@ToolTip2":"Specifies that the maximum observation count in a newly created SAS data file is determined  by the long integer size for the operating environment. In operating environments with a  32-bit long integer, the maximum number is 2\u00b3\u00b9\u20131 or approximately two billion observations  (2,147,483,647). In operating environments with a 64-bit long integer, the number is 2\u2076\u00b3\u20131 or approximately 9.2 quintillion observations"},"Help":{"#cdata":"Specifies whether to extend the maximum observation count in a new output SAS data file. \n    \nDefault: YES\nRestrictions:\n  Use with output data files only.\n  Use with the BASE engine only."}},{"Name":"ENCODING=","Type":"DATASET_OPTION_V","Values":{"@Value1":"ANY","@Value2":"ASCIIANY","@Value3":"EBCDICANY","@Value4":"<encoding-value>"},"ToolTips":{"@ToolTip1":"Specifies that no transcoding occurs.                 Note:ANY is a synonym for binary. Because the data is binary, the actual encoding is irrelevant.","@ToolTip2":"Specifies that no transcoding occurs when the mixed encodings are ASCII encodings.","@ToolTip3":"Specifies that no transcoding occurs when the mixed encodings are EBCDIC encodings.","@ToolTip4":"Replace <encoding-value> with a valid encoding value. See Encoding for NLS."},"Help":{"#cdata":"Overrides the encoding to use for reading or writing a SAS data set. \n    \nThe value for ENCODING= indicates that the SAS data set has a different encoding from \nthe current session encoding. When you read data from a data set, SAS transcodes the \ndata from the specified encoding to the session encoding. When you write data to a data \nset, SAS transcodes the data from the session encoding to the specified encoding."}},{"Name":"ENCRYPTKEY=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: ENCRYPTKEY=key-value \n    \nSpecifies a key value for AES (Advanced Encryption Standard) encryption. \nRange: 1 to 64 bytes\nRestrictions: Use with SAS 9.4 or later only. Use only with AES-encrypted data files.\n\nSyntax: ENCRYPTKEY=key-value \n\nSyntax Description:\nkey-value \n  assigns an encrypt key value. You must specify the ENCRYPTKEY= data set option when you are using ENCRYPT=AES. \n  The key value can be up to 64 bytes long. To create an ENCRYPTKEY= key value with or without quotation marks, \n  follow these rules:\n    No quotation marks:\n      \u2022use alphanumeric characters and underscores only\n      \u2022can be up to 64 bytes long\n      \u2022use uppercase and lowercase letters\n      \u2022must start with a letter\n      \u2022cannot include blank spaces\n      \u2022is not case-sensitive\n        %let mykey=abcdefghi12;\n        encryptkey=&mykey\n        encryptkey=key_value\n        encryptkey=key_value1\n    Single quotation marks:\n      \u2022use alphanumeric, special, and DBCS characters\n      \u2022can be up to 64 bytes long\n      \u2022use uppercase and lowercase letters\n      \u2022can include blank spaces, but cannot contain all blanks\n      \u2022is case-sensitive\n        encryptkey='key_value'\n        encryptkey='1234*#mykey'\n    Double quotation marks:\n      \u2022use alphanumeric, special, and DBCS characters\n      \u2022can be up to 64 bytes long\n      \u2022use uppercase and lowercase letters\n      \u2022can include blank spaces, but cannot contain all blanks \n      \u2022is case-sensitive\n        encryptkey=\"key_value\"\n        encryptkey=\"1234*#mykey\"\n        %let mykey=Abcdefghi12;\n        encryptkey=\"&mykey\""}},{"Name":"ENCRYPT=","Type":"DATASET_OPTION_V","Values":{"@Value1":"AES","@Value2":"YES","@Value3":"NO"},"ToolTips":{"@ToolTip1":"Encrypts the file by using the AES (Advanced Encryption Standard) algorithm. AES provides enhanced encryption by using SAS/SECURE software, which is included with Base SAS software. You must  specify the ENCRYPTKEY= data set option when you are using ENCRYPT=AES.   Restriction: The tape engine does not support ENCRYPT=AES. Use ENCRYPT=YES for tape engine encryption.  CAUTION: Record all ENCRYPTKEY= values when you are using ENCRYPT=AES. If you forget to record the ENCRYPTKEY=  value, you lose your data. SAS cannot assist you in recovering the ENCRYPTKEY= value. The following  note is written to the log:   Note: If you lose or forget the ENCRYPTKEY= value, there will   be no way to open the file or recover the data.","@ToolTip2":"Encrypts the file by using the SAS Proprietary algorithm. This encryption uses passwords that are  stored in the data set. At a minimum, you must specify the READ= or the PW= data set option at the  same time that you specify ENCRYPT=YES. Because the encryption method uses passwords, you cannot  change any password on an encrypted data set without re-creating the data set.  CAUTION:Record all passwords when you are using ENCRYPT=YES. If you forget the passwords, you cannot  reset it without assistance from SAS. The process is time-consuming and resource-intensive.","@ToolTip3":"Does not encrypt the file."},"Help":{"#cdata":"Specifies whether to encrypt an output SAS data set. \n    \nDefault: ENCRYPT=NO\nRestriction: Use with output data sets only."}},{"Name":"APPEND=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that the rows emitted by the DATA step are appended to the CAS table.","@ToolTip2":"Specifies that the rows emitted by the DATA step are not appended to the CAS table."},"Help":{"#cdata":"Syntax: APPEND=YES | NO\n    \nSpecifies that the rows emitted by the DATA step are appended to the CAS table."}},{"Name":"CASLIB=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: CASLIB=caslib\n    \nSpecifies the name of the CASLIB to use for engine operations involving the dataset.By default, engine \noperations use the active CASLIB. If the libname CASLIB= option was specified, engine operations will \nuse CASLIB= caslib. To override the active CASLIB or the libname CASLIB= option, use the CASLIB= dataset \noption."}},{"Name":"COPIES=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: COPIES=integer\n    \nSpecifies the number of replicate copies for a replicated table.\n\nDefault: 1\nRestriction:\nThe number of copies is limited to one less than the number of worker nodes in the server. \n\nTips:\nA larger number of replicate block copies results in greater fault tolerance for node failures \nbecause replicate tables are distributed in memory on a greater number of nodes. \n\nCOPIES=0 results in no fault tolerance in the event of a node failure."}},{"Name":"DATALIMIT=","Type":"DATASET_OPTION_V","Values":{"@Value1":"<integer>","@Value2":"<integerK>","@Value3":"<integerM>","@Value4":"<integerG>","@Value5":"ALL"},"ToolTips":{"@ToolTip1":"Specifies the maximum number of bytes to read ","@ToolTip2":"Specifies the maximum number of kilobytes to read.","@ToolTip3":"Specifies the maximum number of megabytes to read.","@ToolTip4":"Specifies the maximum number of gigabytes to read.","@ToolTip5":"Specifies that the entire file can be read, no matter how large it is."},"Help":{"#cdata":"[Syntax: DATALIMIT=integer | integerK | integerM | integerG | ALL]\n    \nSpecifies the maximum number of bytes of data that can transferred from the SAS Cloud Analytic Services server to SAS. \n\nValid in: CAS LIBNAME statement\n\nDefault: 100M\nRestriction: This option affects only read access.\nTip:\nThis option can prevent you from accidentally transferring a large amount of data from the server to the client."}},{"Name":"DUPLICATE=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that the output table in the Cloud Analytic Services (CAS) is duplicated on all nodes.","@ToolTip2":"Specifies that the output table in the Cloud Analytic Services (CAS) is not duplicated on any node."},"Help":{"#cdata":"DUPLICATE=YES | NO\n    \nSpecifies whether the output table in the SAS Cloud Analytic Services is duplicated on all nodes.\n\nDefault: NO\n\nInteraction:\nThe value for the COPIES= Data Set Option is ignored if you use the COPIES= data set option with \nthe DUPLICATE= data set option. "}},{"Name":"ONDEMAND=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that the temporary computed columns are evaluated one row at a time.","@ToolTip2":"Specifies that the temporary computed columns are evaluated collectively up front."},"Help":{"#cdata":"ONDEMAND=YES | NO\n    \nSpecifies whether the temporary computed columns are evaluated one row at a time or collectively up front. \nOn demand execution is recommended for situations where you fetch data from the Cloud Analytic Services (CAS) \nto the SAS session, such as when the CAS table is the input data of a DATA step or a procedure. "}},{"Name":"ORDERBY=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: ORDERBY=<ascending | descending><variable-list>\n    \nSpecifies the variables by which to order the data within a partition. The ordering is hierarchical, \nfor example, ORDERBY=(A B) implies ordering by the values of variable B within the ordered values of \nvariable A. The specified variable(s) must exist and cannot be partitioning variables. The order is \ndetermined based on the raw value of the variables and uses locale-sensitive collation for character \nvariables. By default, values are arranged in ascending order. You can achieve descending order by \npreceding the variable name in the variable-list with the keyword DESCENDING."},"SubOptionsKeywords":"ASCENDING|DESCENDING"},{"Name":"PARTITION=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: PARTITION=(variable-list)\n    \nSpecifies the list of partitioning variables for the output table. \n\no Partitioning information is ignored when tables are opened for input. Partitioning by a variable that \n  does not exist on output is an error. \no Partition keys are derived based on formatted values in the order of the variable names in the variable-list. \n  Key construction is not hierarchical, so PARTITION=(A B) implies that any unique combination of formatted values \n  for variables A and B forms a partition of the data. \no Observations that share the same partition key are arranged together on the same worker node in the Cloud \n  Analytic Services (CAS). \no Partitioning is also available for tables in SMP CAS servers."}},{"Name":"PROMOTE=","Type":"DATASET_OPTION_V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Requests that the table created in the Cloud Analytic Services (CAS) is added with a global scope.","@ToolTip2":"Requests that the table created in the Cloud Analytic Services (CAS) is added without a global scope."},"Help":{"#cdata":"PROMOTE=YES | NO\n    \nRequests that the table created in the Cloud Analytic Services (CAS) is added with a global scope. \n\nDefault: NO\nRestriction:\nYou can set either PROMOTE= or APPEND= to YES. An error results if you set both to YES at the same time. \n\nRequirement:\nThe caslib target must also have global scope.\n\nNote:\nGlobal scope lets other sessions access the table, subject to access controls. "}},{"Name":"READTRANSFERSIZE=|RTS=","Type":"DATASET_OPTION_V","Values":{"@Value1":"<integer>","@Value2":"<integerK>","@Value3":"<integerM>","@Value4":"<integerG>"},"ToolTips":{"@ToolTip1":"Specifies the total number of bytes for each read to the server.","@ToolTip2":"Specifies the total number of kilobytes to read.","@ToolTip3":"Specifies the total number of megabytes to read.","@ToolTip4":"Specifies the total number of gigabytes to read."},"Help":{"#cdata":"[Syntax: READTRANSFERSIZE=<(integer ) | K | M | G>]\n    \nSpecifies the maximum data transfer size in bytes that can be used when reading a table from SAS Cloud Analytic Services. \n\nDefault: 500MB\n\nRestriction: This option affects only read access.\n\nInteraction:\nREADTRANSFERSIZE= is the maximum amount of data that is transferred with each read request that is made to SAS \nCloud Analytic Services. If the entire result of the read request is smaller than the value of the READTRANSFERSIZE=\noption, only the necessary number of bytes are transferred. This situation can occur if either the table size or the \nvalue of the DATALIMIT= option is smaller than the value of the READTRANSFERSIZE= option."}},{"Name":"SCRIPT=|TEMPEXPRESS=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: SCRIPT=fileref\n    \nSpecifies the file reference for the SAS script that defines the temporary computed columns."}},{"Name":"TAG=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: TAG=tagName \n    \nSpecifies the tag from which to construct table names in the Cloud Analytic Services (CAS). The tag \noption was first used in the sasiola libname to handle multi-level names. A SAS data set is identified \nby its lib name (libref) and member name, for example, WORK.FOO. Table names in the Cloud Analytic \nServices (CAS) can have more than two levels. \n\nSuppose you wish to work with the CAS table USER.SASSEK.CAS.TEST.SALES_FACT. In order to reference the \nfive-level name we need to use some device to map the LIBREF.MEMBER syntax to USER.SASSEK.CAS.TEST.SALES_FACT. \nWhen the SASIOCA engine construct the name of a table in CAS, the name is constructed as UPPER(tagName).MEMBER. \nIn other words, the tagName replaces the LIBREF. \n\nUse TAG=\"MYTAG\" if you want the table name to be constricted with a tag. By default the TAG is NULL."}},{"Name":"TEMPNAMES=","Type":"DATASET_OPTION_V","Help":{"#cdata":"Syntax: TEMPNAMES=(list of variables)\n    \nLists the names of the temporary computed columns that are added to the input table. Temporary computed \ncolumns are only supported for tables opened for input. By default, temporary columns are numeric \n(8-byte doubles). For example, the following SAS code defines three variabls in a simple script and \ncaptures it in the file reference newcols. \n\nThe names of the variables you want to add to the MYCARS.CARS data set are then listed in the TEMPNAMES= option."}},{"Name":"TRANSCODE_FAIL=","Type":"DATASET_OPTION_V","Values":{"@Value1":"ERROR","@Value2":"WARN","@Value3":"SILENT"},"ToolTips":{"@ToolTip1":"Writes an error message to the SAS log. Processing will stop. ","@ToolTip2":"Writes a warning message to the SAS log. Processing will continue.","@ToolTip3":"Transcoding errors are ignored. Processing will continue."},"Help":{"#cdata":"[Syntax: TRANSCODE_FAIL=ERROR | WARN | SILENT]\n    \nSpecifies how transcoding errors are reported and whether processing will continue. \n\nInteraction:\nIf you specify both the TRANSCODE_FAIL= LIBNAME and data set options, the data set option has precedence."}},{"Name":"WRITETRANSFERSIZE=","Type":"DATASET_OPTION_V","Values":{"@Value1":"<integer>","@Value2":"<integerK>","@Value3":"<integerM>","@Value4":"<integerG>"},"ToolTips":{"@ToolTip1":"Specifies the total number of bytes for each write to the server.","@ToolTip2":"Specifies the total number of kilobytes to write.","@ToolTip3":"Specifies the total number of megabytes to write.","@ToolTip4":"Specifies the total number of gigabytes to write."},"Help":{"#cdata":"[Syntax: WRITETRANSFERSIZE=<(integer ) | K | M | G>]\n    \nSpecifies the maximum data transfer size in bytes that can be used when writing to a table in SAS Cloud Analytic Services. \n\nDefault: 512KB\n\nRestriction: This option affects only write access."}}],"#comment":[{},{},{}]}}