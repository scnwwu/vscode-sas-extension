{"Keywords":{"Keyword":[{"Name":"ARMCONV","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts a SAS System 9 or later ARM log written in simple format to the more readable \nlabel=item format that was used in SAS 8.2."}},{"Name":"ARMEND","Type":"SAS_FUNCTION","Help":{"#cdata":"Indicates the termination of an application."}},{"Name":"ARMGTID","Type":"SAS_FUNCTION","Help":{"#cdata":"Assigns a unique identifier to a transaction class."}},{"Name":"ARMINIT","Type":"SAS_FUNCTION","Help":{"#cdata":"Starts the initialization of an application."}},{"Name":"ARMJOIN","Type":"SAS_FUNCTION","Help":{"#cdata":"Reads the six SAS data sets created by the %ARMPROC macro, and creates SAS data sets \nand SQL views that contain common information about applications and transactions."}},{"Name":"ARMPROC","Type":"SAS_FUNCTION","Help":{"#cdata":"Processes an input ARM log, and outputs six SAS data sets that contain the gathered \ninformation from the log."}},{"Name":"ARMSTOP","Type":"SAS_FUNCTION","Help":{"#cdata":"Specifies the end of a transaction instance."}},{"Name":"ARMSTRT","Type":"SAS_FUNCTION","Help":{"#cdata":"Specifies the start of execution of a transaction instance, and returns a unique \nhandle that is passed to %ARMUPDT and %ARMSTOP."}},{"Name":"ARMUPDT","Type":"SAS_FUNCTION","Help":{"#cdata":"Updates a transaction instance that has been previously started."}},{"Name":"ABS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the absolute value."}},{"Name":"ADDR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the memory address of a variable on a 32-bit platform. The value that is \nreturned is numeric.  \n\nSyntax: ADDR(variable)\n\nRequired Argument:\nvariable\n  specifies a variable name.\n\nInteraction:\nWhen a SAS server is in a locked-down state, the ADDR function does not execute. \n\n"}},{"Name":"ADDRLONG","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the memory address of a variable on 32-bit and 64-bit platforms. \n \nInteraction:\nWhen a SAS server is in a locked-down state, the ADDRLONG function does not execute. \n\nSyntax: ADDRLONG(variable)\nRequired Argument:\nvariable\n  specifies a variable.\n  \nDetails:\nThe return value is a character string that contains the binary representation of the address. \nTo display this value, use the $HEXw. format to convert the binary value to its hexadecimal equivalent. \nIf you store the result in a variable, that variable should be a character variable with a length of \nat least eight characters for portability. If you assign the result to a variable that does not yet \nhave a length defined, that variable is assigned a length of 20 characters."}},{"Name":"AIRY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the Airy function."}},{"Name":"ALLPERM","Type":"SAS_FUNCTION","Help":{"#cdata":"Generates all permutations of the values of several variables in a minimal change order."}},{"Name":"ANYALNUM","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for an alphanumeric character, and returns the first \nposition at which the character is found."}},{"Name":"ANYALPHA","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for an alphabetic character, and returns the first \nposition at which the character is found."}},{"Name":"ANYCNTRL","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a control character, and returns the first position \nat which that character is found."}},{"Name":"ANYDIGIT","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a digit, and returns the first position at which \nthe digit is found."}},{"Name":"ANYFIRST","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a character that is valid as the first character \nin a SAS variable name under VALIDVARNAME=V7, and returns the first position \nat which that character is found."}},{"Name":"ANYGRAPH","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a graphical character, and returns the first position \nat which that character is found."}},{"Name":"ANYLOWER","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a lowercase letter, and returns the first position at \nwhich the letter is found."}},{"Name":"ANYNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a character that is valid in a SAS variable name \nunder VALIDVARNAME=V7, and returns the first position at which that character \nis found."}},{"Name":"ANYPRINT","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a printable character, and returns the first position \nat which that character is found."}},{"Name":"ANYPUNCT","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a punctuation character, and returns the first position \nat which that character is found."}},{"Name":"ANYSPACE","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a white-space character (blank, horizontal and vertical \ntab, carriage return, line feed, and form feed), and returns the first position at \nwhich that character is found."}},{"Name":"ANYUPPER","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for an uppercase letter, and returns the first position \nat which the letter is found."}},{"Name":"ANYXDIGIT","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a hexadecimal character that represents a digit, \nand returns the first position at which that character is found."}},{"Name":"ARCOS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the arccosine."}},{"Name":"ARCOSH","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the inverse hyperbolic cosine."}},{"Name":"ARSIN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the arcsine."}},{"Name":"ARSINH","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the inverse hyperbolic sine."}},{"Name":"ARTANH","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the inverse hyperbolic tangent."}},{"Name":"ATAN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the arc tangent."}},{"Name":"ATAN2","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the arc tangent of the ratio of two numeric variables."}},{"Name":"ATTRC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of a character attribute for a SAS data set."}},{"Name":"ATTRN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of a numeric attribute for a SAS data set."}},{"Name":"BAND","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the bitwise logical AND of two arguments. If either argument contains a \nmissing value, then the function returns a missing value and sets _ERROR_ equal \nto 1."}},{"Name":"BETA","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the beta function."}},{"Name":"BETAINV","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a quantile from the beta distribution with shape parameters a and b."}},{"Name":"BLACKCLPRC","Type":"SAS_FUNCTION","Help":{"#cdata":"Calculates call prices for European options on futures, based on the Black model."}},{"Name":"BLACKPTPRC","Type":"SAS_FUNCTION","Help":{"#cdata":"Calculates put prices for European options on futures, based on the Black model."}},{"Name":"BLKSHCLPRC","Type":"SAS_FUNCTION","Help":{"#cdata":"Calculates call prices for European options on stocks, based on the Black-Scholes model."}},{"Name":"BLSHIFT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the bitwise logical left shift of two arguments. If either argument contains \na missing value, then the function returns a missing value and sets _ERROR_ equal \nto 1."}},{"Name":"BNOT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the bitwise logical NOT of an argument."}},{"Name":"BOR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the bitwise logical OR of two arguments. If either argument contains a \nmissing value, then the function returns a missing value and sets _ERROR_ equal \nto 1."}},{"Name":"BRSHIFT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the bitwise logical right shift of two arguments. If either argument contains \na missing value, then the function returns a missing value and sets _ERROR_ equal to 1."}},{"Name":"BXOR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the bitwise logical EXCLUSIVE OR of two arguments. If either argument contains \na missing value, then the function returns a missing value and sets _ERROR_ equal to 1."}},{"Name":"BYTE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns one character in the ASCII or the EBCDIC collating sequence."}},{"Name":"ALLCOMB","Type":"SAS_FUNCTION","Help":{"#cdata":"Generates all combinations of the values of n variables taken k at a time in a \nminimal change order."}},{"Name":"ALLCOMBI","Type":"SAS_FUNCTION","Help":{"#cdata":"Generates all combinations of the indices of n objects taken k at a time in a \nminimal change order."}},{"Name":"CATS","Type":"SAS_FUNCTION","Help":{"#cdata":"Removes leading and trailing blanks, and returns a concatenated character string."}},{"Name":"CATT","Type":"SAS_FUNCTION","Help":{"#cdata":"Removes trailing blanks, and returns a concatenated character string."}},{"Name":"CATX","Type":"SAS_FUNCTION","Help":{"#cdata":"Removes leading and trailing blanks, inserts delimiters, and returns a concatenated \ncharacter string."}},{"Name":"COMPCOST","Type":"SAS_FUNCTION","Help":{"#cdata":"Sets the costs of operations for later use by the COMPGED function."}},{"Name":"GRAYCODE","Type":"SAS_FUNCTION","Help":{"#cdata":"Generates all subsets of n items in a minimal change order."}},{"Name":"LABEL","Type":"SAS_FUNCTION","Help":{"#cdata":"Assigns a variable label to a specified character variable."}},{"Name":"LEXCOMB","Type":"SAS_FUNCTION","Help":{"#cdata":"Generates all distinct combinations of the non-missing values of n variables taken \nk at a time in lexicographic order."}},{"Name":"LEXCOMBI","Type":"SAS_FUNCTION","Help":{"#cdata":"Generates all combinations of the indices of n objects taken k at a time in \nlexicographic order."}},{"Name":"LEXPERK","Type":"SAS_FUNCTION","Help":{"#cdata":"Generates all distinct permutations of the non-missing values of n variables \ntaken k at a time in lexicographic order."}},{"Name":"LEXPERM","Type":"SAS_FUNCTION","Help":{"#cdata":"Generates all distinct permutations of the non-missing values of several variables \nin lexicographic order."}},{"Name":"LOGISTIC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the logistic transformation of the argument. \n    \nSyntax: LOGISTIC(argument)\nRequired Argument:\nargument\n  is a numeric variable, constant, or expression that specifies the value of a numeric random variable. \n  When argument is missing, the LOGISTIC function returns a missing value. \n  \nDetails\nThe LOGISTIC function returns the logistic transformation of an argument. It is typically used to \nconvert a log odds value to a value on the probability scale."}},{"Name":"MISSING","Type":"SAS_FUNCTION","Help":{"#cdata":"Assigns missing values to the specified character or numeric variables."}},{"Name":"MODULE","Type":"SAS_FUNCTION","Help":{"#cdata":"Calls an external routine without any return code.\n    \nInteraction:\nWhen a SAS server is in a locked-down state, the CALL MODULE routine does not execute. \n\nSyntax: CALL MODULE(<control-string,> module-name <, argument-1, ..., argument-n>);\n\nRequired Argument:\nmodule-name - is the name of the external module to use.\n\nOptional Arguments:\ncontrol-string\n  is an optional control string whose first character must be an asterisk (*), followed by any \n  combination of the following characters:\n    I\n    prints the hexadecimal representations of all arguments to the CALL MODULE routine. You can use \n    this option to help diagnose problems that are caused by incorrect arguments or attribute tables. \n    If you specify the I option, the E option is implied.\n    E\n    prints detailed error messages. Without the E option (or the I option, which supersedes it), \n    the only error message that the CALL MODULE routine generates is \"Invalid argument to function,\" \n    which is usually not enough information to determine the cause of the error. The E option is \n    useful for a production environment, whereas the I option is preferable for a development or \n    debugging environment.\n    H\n    provides brief information about the syntax of the CALL MODULE routine, the attribute file format, \n  and suggested SAS formats and informats. \n\nargument - is one or more arguments to pass to the requested routine."}},{"Name":"POKE","Type":"SAS_FUNCTION","Help":{"#cdata":"Writes a value directly into memory on a 32-bit platform. \n  \nInteraction:\nWhen a SAS server is in a locked-down state, the CALL POKE routine does not execute. \n\nSyntax: CALL POKE(source, pointer <, length> <, floating-point>);\n\nRequired Arguments:\nsource\n  specifies a constant, variable, or expression that contains a value to write into memory \npointer\n  specifies a numeric expression that contains the virtual address of the data that the CALL POKE routine alters.\n\nOptional Arguments:\nlength\n  specifies a numeric constant, variable, or expression that contains the number of bytes to write from the source \n  to the address that is indicated by pointer. If you omit length, the action that the CALL POKE routine takes depends \n  on whether source is a character value or a numeric value:\n    \u2022If source is a character value, the CALL POKE routine copies the entire value of source to the specified memory location.\n    \u2022If source is a numeric value, the CALL POKE routine converts source to a long integer and writes into memory the number \n      of bytes that constitute a pointer.\n\n  z/OS Specifics\n  Under z/OS, pointers are 3 or 4 bytes long, depending on the situation. \n\nfloating-point\n  specifies that the value of source is stored as a floating-point number. The value of floating-point can be any number."}},{"Name":"POKELONG","Type":"SAS_FUNCTION","Help":{"#cdata":"Writes a value directly into memory on 32-bit and 64-bit platforms. \n    \nInteraction:\nWhen a SAS server is in a locked-down state, the CALL POKELONG routine does not execute. \n\nSyntax: CALL POKELONG(source, pointer <, length> <, floating-point>);\nRequired Arguments:\nsource\n  specifies a character constant, variable, or expression that contains a value to write into memory. \npointer\n  specifies a character string that contains the virtual address of the data that the CALL POKELONG routine alters.\n\nOptional Arguments:\nlength\n  specifies a numeric SAS expression that contains the number of bytes to write from the source to the address \n  that is indicated by the pointer. If you omit length, the CALL POKELONG routine copies the entire value of \n  source to the specified memory location. \nfloating-point\n  specifies that the value of source is stored as a floating-point number. The value of floating-point can be any number."}},{"Name":"PRXDEBUG","Type":"SAS_FUNCTION","Help":{"#cdata":"Enables Perl regular expressions in a DATA step to send debugging output to the SAS log."}},{"Name":"PRXFREE","Type":"SAS_FUNCTION","Help":{"#cdata":"Frees memory that was allocated for a Perl regular expression."}},{"Name":"PRXNEXT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the position and length of a substring that matches a pattern, and iterates \nover multiple matches within one string."}},{"Name":"PRXSUBSTR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the position and length of a substring that matches a pattern."}},{"Name":"RANBIN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a random variate from a binomial distribution."}},{"Name":"RANCAU","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a random variate from a Cauchy distribution."}},{"Name":"RANNOR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a random variate from a normal distribution."}},{"Name":"RANPERK","Type":"SAS_FUNCTION","Help":{"#cdata":"Randomly permutes the values of the arguments, and returns a permutation of k out \nof n values."}},{"Name":"RANPERM","Type":"SAS_FUNCTION","Help":{"#cdata":"Randomly permutes the values of the arguments."}},{"Name":"RANPOI","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a random variate from a Poisson distribution."}},{"Name":"RANTBL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a random variate from a tabled probability distribution."}},{"Name":"RANTRI","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a random variate from a triangular distribution."}},{"Name":"RANUNI","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a random variate from a uniform distribution."}},{"Name":"SET","Type":"SAS_FUNCTION","Help":{"#cdata":"Links SAS data set variables to DATA step or macro variables that have the same \nname and data type."}},{"Name":"SOFTMAX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the softmax value."}},{"Name":"SORTC","Type":"SAS_FUNCTION","Help":{"#cdata":"Sorts the values of character arguments."}},{"Name":"SORTN","Type":"SAS_FUNCTION","Help":{"#cdata":"Sorts the values of numeric arguments."}},{"Name":"STDIZE","Type":"SAS_FUNCTION","Help":{"#cdata":"Standardizes the values of one or more variables."}},{"Name":"STREAMINIT","Type":"SAS_FUNCTION","Help":{"#cdata":"Specifies a seed value to use for subsequent random number generation by the \nRAND function."}},{"Name":"SYMPUT","Type":"SAS_FUNCTION","Help":{"#cdata":"Assigns DATA step information to a macro variable."}},{"Name":"SYMPUTX","Type":"SAS_FUNCTION","Help":{"#cdata":"Assigns a value to a macro variable, and removes both leading and trailing blanks."}},{"Name":"VNEXT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the name, type, and length of a variable that is used in a DATA step."}},{"Name":"CAT","Type":"SAS_FUNCTION","Help":{"#cdata":"Does not remove leading or trailing blanks, and returns a concatenated character string."}},{"Name":"CATQ","Type":"SAS_FUNCTION","Help":{"#cdata":"Concatenates character or numeric values by using a delimiter to separate items \nand by adding quotation marks to strings that contain the delimiter."}},{"Name":"CDF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a value from a cumulative probability distribution. \n\nSyntax: CDF(distribution, quantile <, parameter-1, \u2026, parameter-k>) \n\nRequired Arguments:\ndistribution\n  Is a character constant, variable, or expression that identifies the distribution. Valid distributions are as follows:\n\n      Bernoulli distribuion: BERNOULLI\n      Beta distribuion: BETA\n      Binomial distribuion: BINOMIAL\n      Cauchy distribuion: CAUCHY\n      Chi-Square distribuion: CHISQUARE\n      Conway-Maxwell-Poisson distribuion: CMP\n      Exponential distribuion: EXPONENTIAL\n      F distribuion: F\n      Gamma distribuion: GAMMA\n      Generalized Poisson distribuion: GENPOISSON\n      Geometric distribuion: GEOMETRIC\n      Hypergeometric distribuion: HYPERGEOMETRIC\n      Laplace distribuion: LAPLACE\n      Logistic distribuion: LOGISTIC\n      Lognormal distribuion: LOGNORMAL\n      Negative binomial distribuion: NEGBINOMIAL\n      Normal distribuion: NORMAL|GAUSS\n      Normal mixture distribuion: NORMALMIX\n      Pareto distribuion: PARETO\n      Poisson distribuion: POISSON\n      T distribuion: T\n      Tweedie distribuion: TWEEDIE\n      Uniform distribuion: UNIFORM\n      Wald (inverse Gaussian) distribuion: WALD|IGAUSS\n      Weibull distribuion: WEIBULL\n\n      Note: Except for T, F, and NORMALMIX, you can minimally identify any distribution by its first four characters. \n\nquantile\n  is a numeric constant, variable, or expression that specifies the value of the random variable.\n\nOptional Argument: parameter-1, \u2026 , parameter-k\n  are optional constants, variables, or expressions that specify shape, location, or scale parameters appropriate \n  for the specific distribution."}},{"Name":"CEIL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the smallest integer that is greater than or equal to the argument, fuzzed \nto avoid unexpected floating-point results."}},{"Name":"CEILZ","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the smallest integer that is greater than or equal to the argument, using \nzero fuzzing."}},{"Name":"CEXIST","Type":"SAS_FUNCTION","Help":{"#cdata":"Verifies the existence of a SAS catalog or SAS catalog entry."}},{"Name":"CHAR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a single character from a specified position in a character string."}},{"Name":"CHOOSEC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a character value that represents the results of choosing from a list \nof arguments."}},{"Name":"CHOOSEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a numeric value that represents the results of choosing from a list \nof arguments."}},{"Name":"CINV","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a quantile from the chi-square distribution."}},{"Name":"CLOSE","Type":"SAS_FUNCTION","Help":{"#cdata":"Closes a SAS data set."}},{"Name":"CMISS","Type":"SAS_FUNCTION","Help":{"#cdata":"Counts the number of missing arguments."}},{"Name":"CNONCT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the noncentrality parameter from a chi-square distribution."}},{"Name":"COALESCE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the first non-missing value from a list of numeric arguments."}},{"Name":"COALESCEC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the first non-missing value from a list of character arguments."}},{"Name":"COLLATE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a character string in ASCII or EBCDIC collating sequence."}},{"Name":"COMB","Type":"SAS_FUNCTION","Help":{"#cdata":"Computes the number of combinations of n elements taken r at a time."}},{"Name":"COMPARE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the position of the leftmost character by which two strings differ, or returns 0 \nif there is no difference."}},{"Name":"COMPBL","Type":"SAS_FUNCTION","Help":{"#cdata":"Removes multiple blanks from a character string."}},{"Name":"COMPGED","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the generalized edit distance between two strings."}},{"Name":"COMPLEV","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the Levenshtein edit distance between two strings."}},{"Name":"COMPOUND","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns compound interest parameters."}},{"Name":"COMPRESS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a character string with specified characters removed from the original string."}},{"Name":"CONSTANT","Type":"SAS_FUNCTION","Help":{"#cdata":"Computes machine and mathematical constants."}},{"Name":"CONVX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the convexity for an enumerated cash flow."}},{"Name":"CONVXP","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the convexity for a periodic cash flow stream, such as a bond."}},{"Name":"COS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the cosine."}},{"Name":"COSH","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the hyperbolic cosine."}},{"Name":"COUNT","Type":"SAS_FUNCTION","Help":{"#cdata":"Counts the number of times that a specified substring appears within a character string."}},{"Name":"COUNTC","Type":"SAS_FUNCTION","Help":{"#cdata":"Counts the number of characters in a string that appear or do not appear in a list \nof characters."}},{"Name":"COUNTW","Type":"SAS_FUNCTION","Help":{"#cdata":"Counts the number of words in a character string."}},{"Name":"CSS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the corrected sum of squares."}},{"Name":"CUROBS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the observation number of the current observation."}},{"Name":"CV","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the coefficient of variation. At least two arguments are required."}},{"Name":"DACCDB","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the accumulated declining balance depreciation."}},{"Name":"DACCDBSL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the accumulated declining balance with conversion to a straight-line depreciation."}},{"Name":"DACCSL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the accumulated straight-line depreciation."}},{"Name":"DACCSYD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the accumulated sum-of-years-digits depreciation."}},{"Name":"DACCTAB","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the accumulated depreciation from specified tables."}},{"Name":"DAIRY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the derivative of the AIRY function."}},{"Name":"DATDIF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the number of days between two dates."}},{"Name":"DATE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the current date as a SAS date value. \n    \nAlias: TODAY \n\nInteraction:\nIf the value of the TIMEZONE= system option is set to a time zone name or time zone ID, the date \nand time values that are returned for this function are determined by the time zone."}},{"Name":"DATEJUL","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts a Julian date to a SAS date value."}},{"Name":"DATEPART","Type":"SAS_FUNCTION","Help":{"#cdata":"Extracts the date from a SAS datetime value."}},{"Name":"DATETIME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the current date and time of day as a SAS datetime value. \n    \nInteraction:\nIf the value of the TIMEZONE= system option is set to a time zone name or time zone ID, the date \nand time values that are returned for this function are determined by the time zone."}},{"Name":"DAY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the day of the month from a SAS date value."}},{"Name":"DCLOSE","Type":"SAS_FUNCTION","Help":{"#cdata":"Closes a directory that was opened by the DOPEN function."}},{"Name":"DCREATE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the complete pathname of a new, external directory."}},{"Name":"DEPDB","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the declining balance depreciation."}},{"Name":"DEPDBSL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the declining balance with conversion to a straight-line depreciation."}},{"Name":"DEPSL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the straight-line depreciation."}},{"Name":"DEPSYD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the sum-of-years-digits depreciation."}},{"Name":"DEPTAB","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the depreciation from specified tables."}},{"Name":"DEQUOTE","Type":"SAS_FUNCTION","Help":{"#cdata":"Removes matching quotation marks from a character string that begins with a quotation \nmark, and deletes all characters to the right of the closing quotation mark."}},{"Name":"DEVIANCE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the deviance based on a probability distribution."}},{"Name":"DHMS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a SAS datetime value from date, hour, minute, and second values."}},{"Name":"DIF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns differences between an argument and its nth lag. n specifies the number of lags."}},{"Name":"DIGAMMA","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the digamma function."}},{"Name":"DIM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the number of elements in an array. n specifies the dimension, in a multidimensional \narray, for which you want to know the number of elements.\n\nIn CAS, this returns the dimensions of a list variable. For example:\n\n  x[10] = 1;\n  y     = dim(x);\n\n\ny would be set to 10"}},{"Name":"DINFO","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns information about a directory."}},{"Name":"DIVIDE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the result of a division that handles special missing values for ODS output."}},{"Name":"DNUM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the number of members in a directory."}},{"Name":"DOPEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Opens a directory, and returns a directory identifier value."}},{"Name":"DOPTNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns directory attribute information."}},{"Name":"DOPTNUM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the number of information items that are available for a directory."}},{"Name":"DREAD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the name of a directory member."}},{"Name":"DROPNOTE","Type":"SAS_FUNCTION","Help":{"#cdata":"Deletes a note marker from a SAS data set or an external file."}},{"Name":"DSNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the SAS data set name that is associated with a data set identifier."}},{"Name":"DUR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the modified duration for an enumerated cash flow."}},{"Name":"DURP","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the modified duration for a periodic cash flow stream, such as a bond."}},{"Name":"ENVLEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the length of an environment variable."}},{"Name":"ERF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the (normal) error function."}},{"Name":"ERFC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the complementary (normal) error function."}},{"Name":"EUCLID","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the Euclidean norm of the non-missing arguments."}},{"Name":"EXIST","Type":"SAS_FUNCTION","Help":{"#cdata":"Verifies the existence of a SAS library member."}},{"Name":"EXP","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the exponential function."}},{"Name":"FACT","Type":"SAS_FUNCTION","Help":{"#cdata":"Computes a factorial."}},{"Name":"FAPPEND","Type":"SAS_FUNCTION","Help":{"#cdata":"Appends the current record to the end of an external file."}},{"Name":"FCLOSE","Type":"SAS_FUNCTION","Help":{"#cdata":"Closes an external file, directory, or directory member."}},{"Name":"FCOL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the current column position in the File Data Buffer (FDB)."}},{"Name":"FDELETE","Type":"SAS_FUNCTION","Help":{"#cdata":"Deletes an external file or an empty directory."}},{"Name":"FETCH","Type":"SAS_FUNCTION","Help":{"#cdata":"Reads the next non-deleted observation from a SAS data set into the Data Set Data Vector (DDV)."}},{"Name":"FETCHOBS","Type":"SAS_FUNCTION","Help":{"#cdata":"Reads a specified observation from a SAS data set into the Data Set Data Vector (DDV)."}},{"Name":"FEXIST","Type":"SAS_FUNCTION","Help":{"#cdata":"Verifies the existence of an external file that is associated with a fileref."}},{"Name":"FGET","Type":"SAS_FUNCTION","Help":{"#cdata":"Copies data from the File Data Buffer (FDB) into a variable."}},{"Name":"FILEEXIST","Type":"SAS_FUNCTION","Help":{"#cdata":"Verifies the existence of an external file by its physical name."}},{"Name":"FILENAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Assigns or deassigns a fileref to an external file, directory, or output device."}},{"Name":"FILEREF","Type":"SAS_FUNCTION","Help":{"#cdata":"Verifies whether a fileref has been assigned for the current SAS session."}},{"Name":"FINANCE","Type":"SAS_FUNCTION","Help":{"#cdata":"Computes financial calculations such as depreciation, maturation, accrued interest, net present \nvalue, periodic savings, and internal rates of return."}},{"Name":"FIND","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches for a specific substring of characters within a character string."}},{"Name":"FINDC","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a string for any character in a list of characters."}},{"Name":"FINDW","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the character position of a word in a string, or returns the number of the word \nin a string."}},{"Name":"FINFO","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of a file information item."}},{"Name":"FINV","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a quantile from the F distribution."}},{"Name":"FIPNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts two-digit FIPS codes to uppercase state names."}},{"Name":"FIPNAMEL","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts two-digit FIPS codes to mixed case state names."}},{"Name":"FIPSTATE","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts two-digit FIPS codes to two-character state postal codes."}},{"Name":"FIRST","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the first character in a character string."}},{"Name":"FLOOR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the largest integer that is less than or equal to the argument, fuzzed to avoid \nunexpected floating-point results."}},{"Name":"FLOORZ","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the largest integer that is less than or equal to the argument, using zero fuzzing."}},{"Name":"FNONCT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the noncentrality parameter of an F distribution."}},{"Name":"FNOTE","Type":"SAS_FUNCTION","Help":{"#cdata":"Identifies the last record that was read, and returns a value that the FPOINT function can use."}},{"Name":"FOPEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Opens an external file and returns a file identifier value."}},{"Name":"FOPTNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the name of an item of information about a file."}},{"Name":"FOPTNUM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the number of information items that are available for an external file."}},{"Name":"FPOINT","Type":"SAS_FUNCTION","Help":{"#cdata":"Positions the read pointer on the next record to be read."}},{"Name":"FPOS","Type":"SAS_FUNCTION","Help":{"#cdata":"Sets the position of the column pointer in the File Data Buffer (FDB)."}},{"Name":"FPUT","Type":"SAS_FUNCTION","Help":{"#cdata":"Moves data to the File Data Buffer (FDB) of an external file, starting at the FDB's current \ncolumn position."}},{"Name":"FREAD","Type":"SAS_FUNCTION","Help":{"#cdata":"Reads a record from an external file into the File Data Buffer (FDB)."}},{"Name":"FREWIND","Type":"SAS_FUNCTION","Help":{"#cdata":"Positions the file pointer to the start of the file."}},{"Name":"FRLEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the size of the last record that was read, or, if the file is opened for output, \nreturns the current record size."}},{"Name":"FSEP","Type":"SAS_FUNCTION","Help":{"#cdata":"Sets the token delimiters for the FGET function."}},{"Name":"FUZZ","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the nearest integer if the argument is within 1E-12 of that integer."}},{"Name":"FWRITE","Type":"SAS_FUNCTION","Help":{"#cdata":"Writes a record to an external file."}},{"Name":"GAMINV","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a quantile from the gamma distribution."}},{"Name":"GAMMA","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the gamma function."}},{"Name":"GARKHCLPRC","Type":"SAS_FUNCTION","Help":{"#cdata":"Calculates call prices for European options on stocks, based on the Garman-Kohlhagen model."}},{"Name":"GARKHPTPRC","Type":"SAS_FUNCTION","Help":{"#cdata":"Calculates put prices for European options on stocks, based on the Garman-Kohlhagen model."}},{"Name":"GCD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the greatest common divisor for one or more integers."}},{"Name":"GEODIST","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the geodetic distance between two latitude and longitude coordinates."}},{"Name":"GEOMEAN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the geometric mean."}},{"Name":"GEOMEANZ","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the geometric mean, using zero fuzzing."}},{"Name":"GETOPTION","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of a SAS system or graphics option."}},{"Name":"GETVARC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of a SAS data set character variable."}},{"Name":"GETVARN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of a SAS data set numeric variable."}},{"Name":"HARMEAN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the harmonic mean."}},{"Name":"HARMEANZ","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the harmonic mean, using zero fuzzing."}},{"Name":"HBOUND","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the upper bound of an array. n is an optional integer constant that specifies \nthe dimension for which you want to know the upper bound. If no n value is specified, \nthe HBOUND function returns the upper bound of the first dimension of the array."}},{"Name":"HMS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a SAS time value from hour, minute, and second values."}},{"Name":"HOLIDAY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a SAS date value of a specified holiday for a specified year."}},{"Name":"HOUR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the hour from a SAS time or datetime value."}},{"Name":"HTMLDECODE","Type":"SAS_FUNCTION","Help":{"#cdata":"Decodes a string that contains HTML numeric character references or HTML character \nentity references, and returns the decoded string."}},{"Name":"HTMLENCODE","Type":"SAS_FUNCTION","Help":{"#cdata":"Encodes characters using HTML character entity references, and returns the \nencoded string."}},{"Name":"IBESSEL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the modified Bessel function."}},{"Name":"IFC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a character value based on whether an expression is true, false, \nor missing."}},{"Name":"IFN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a numeric value based on whether an expression is true, false, \nor missing."}},{"Name":"INDEX","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character expression for a string of characters, and returns the position \nof the string's first character for the first occurrence of the string."}},{"Name":"INDEXC","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character expression for any of the specified characters, and returns \nthe position of that character."}},{"Name":"INDEXW","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character expression for a string that is specified as a word, and returns \nthe position of the first character in the word."}},{"Name":"INPUT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value that is produced when SAS converts an expression using the \nspecified informat."}},{"Name":"INPUTC","Type":"SAS_FUNCTION","Help":{"#cdata":"Enables you to specify a character informat at run time."}},{"Name":"INPUTN","Type":"SAS_FUNCTION","Help":{"#cdata":"Enables you to specify a numeric informat at run time."}},{"Name":"INT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the integer value, fuzzed to avoid unexpected floating-point results."}},{"Name":"INTCINDEX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the cycle index when a date, time, or datetime interval and value \nare specified."}},{"Name":"INTCK","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the count of the number of interval boundaries between two dates, two \ntimes, or two datetime values."}},{"Name":"INTCYCLE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the date, time, or datetime interval at the next higher seasonal cycle \nwhen a date, time, or datetime interval is specified."}},{"Name":"INTFIT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a time interval that is aligned between two dates."}},{"Name":"INTFMT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a recommended SAS format when a date, time, or datetime interval is specified."}},{"Name":"INTGET","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a time interval based on three date or datetime values."}},{"Name":"INTINDEX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the seasonal index when a date, time, or datetime interval and value are \nspecified."}},{"Name":"INTNX","Type":"SAS_FUNCTION","Help":{"#cdata":"Increments a date, time, or datetime value by a given time interval, and returns \na date, time, or datetime value."}},{"Name":"INTRR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the internal rate of return as a fraction."}},{"Name":"INTSEAS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the length of the seasonal cycle when a date, time, or datetime interval \nis specified."}},{"Name":"INTSHIFT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the shift interval that corresponds to the base interval."}},{"Name":"INTTEST","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns 1 if a time interval is valid, and returns 0 if a time interval is invalid."}},{"Name":"INTZ","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the integer portion of the argument, using zero fuzzing."}},{"Name":"IQR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the interquartile range."}},{"Name":"IORCMSG","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a formatted error message for _IORC_."}},{"Name":"IRR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the internal rate of return as a percentage."}},{"Name":"JBESSEL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the Bessel function."}},{"Name":"JULDATE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the Julian date from a SAS date value."}},{"Name":"JULDATE7","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a seven-digit Julian date from a SAS date value."}},{"Name":"KURTOSIS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the kurtosis."}},{"Name":"LAG","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns values from a queue. n specifies the number of lagged values."}},{"Name":"LARGEST","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the kth largest non-missing value."}},{"Name":"LBOUND","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the lower bound of an array. n is an optional integer constant that specifies \nthe dimension for which you want to know the lower bound. If no n value is specified, \nthe LBOUND function returns the lower bound of the first dimension of the array."}},{"Name":"LCM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the least common multiple."}},{"Name":"LCOMB","Type":"SAS_FUNCTION","Help":{"#cdata":"Computes the logarithm of the COMB function; that is, the logarithm of the number \nof combinations of n objects taken r at a time."}},{"Name":"LEFT","Type":"SAS_FUNCTION","Help":{"#cdata":"Left-aligns a character string by removing leading blanks."}},{"Name":"QLEFT","Type":"SAS_FUNCTION","Help":{"#cdata":"Left-aligns a character string by removing leading blanks."}},{"Name":"LENGTH","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the length of a non-blank character string, excluding trailing blanks, \nand returns 1 for a blank character string."}},{"Name":"LENGTHC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the length of a character string, including trailing blanks."}},{"Name":"LENGTHM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the amount of memory (in bytes) that is allocated for a character string."}},{"Name":"LENGTHN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the length of a character string, excluding trailing blanks."}},{"Name":"LFACT","Type":"SAS_FUNCTION","Help":{"#cdata":"Computes the logarithm of the FACT (factorial) function."}},{"Name":"LGAMMA","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the natural logarithm of the Gamma function."}},{"Name":"LIBNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Assigns or deassigns a libref for a SAS library."}},{"Name":"LIBREF","Type":"SAS_FUNCTION","Help":{"#cdata":"Verifies that a libref has been assigned."}},{"Name":"LOG","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the natural (base e) logarithm."}},{"Name":"LOG1PX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the log of 1 plus the argument."}},{"Name":"LOG10","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the logarithm to the base 10."}},{"Name":"LOG2","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the logarithm to the base 2."}},{"Name":"LOGBETA","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the logarithm of the beta function."}},{"Name":"LOGCDF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the logarithm of a left cumulative distribution function. \n    \nSyntax: LOGCDF('distribution', quantile <, parameter-1, ..., parameter-k>)\n\nRequired Arguments:\n'distribution' is a character constant, variable, or expression that identifies the distribution. Valid distributions are as follows:\n\n      Bernoulli distribution: 'BERNOULLI'\n      Beta distribution: 'BETA'\n      Binomial distribution: 'BINOMIAL'\n      Cauchy distribution: 'CAUCHY'\n      Chi-Square distribution: 'CHISQUARE'\n      Conway-Maxwell-Poisson distribution: 'CMP'\n      Exponential distribution: 'EXPONENTIAL'\n      F distribution: 'F'\n      Gamma distribution: 'GAMMA'\n      Generalized Poisson distribution: 'GENPOISSON'\n      Geometric distribution: 'GEOMETRIC'\n      Hypergeometric distribution: 'HYPERGEOMETRIC'\n      Laplace distribution: 'LAPLACE'\n      Logistic distribution: 'LOGISTIC'\n      Lognormal'LOGNORMAL'\n      Negative binomial distribution: 'NEGBINOMIAL'\n      Normal distribution: 'NORMAL'|'GAUSS'\n      Normal mixture distribution: 'NORMALMIX'\n      Pareto distribution: 'PARETO'\n      Poisson distribution: 'POISSON'\n      T distribution: 'T'\n      Tweedie distribution: 'TWEEDIE').\n      Uniform distribution: 'UNIFORM'\n      Wald (inverse Gaussian) distribution: 'WALD'|'IGAUSS'\n      Weibull distribution: 'WEIBULL'\n\n      Except for T, F, and NORMALMIX, you can minimally identify any distribution by its first four characters. \n      \nquantile\n  is a numeric variable, constant, or expression that specifies the value of a random variable.\n\nOptional Argument: \nparameter-1, ..., parameter-k\n  are optional shape, location, or scale parameters appropriate for the specific distribution."}},{"Name":"LOGPDF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the logarithm of a probability density (mass) function. \n    \nSyntaxLOGPDF('distribution', quantile, parameter-1, ..., parameter-k)\nRequired Arguments:\n  'distribution' is a character constant, variable, or expression that identifies the distribution. Valid distributions are as follows:\n\n      Bernoulli distribution: 'BERNOULLI'\n      Beta distribution: 'BETA'\n      Binomial distribution: 'BINOMIAL'\n      Cauchy distribution: 'CAUCHY'\n      Chi-Square distribution: 'CHISQUARE'\n      Conway-Maxwell-Poisson distribution: 'CMP'\n      Exponential distribution: 'EXPONENTIAL'\n      F distribution: 'F'\n      Gamma distribution: 'GAMMA'\n      Generalized Poisson distribution: 'GENPOISSON'\n      Geometric distribution: 'GEOMETRIC'\n      Hypergeometric distribution: 'HYPERGEOMETRIC'\n      Laplace distribution: 'LAPLACE'\n      Logistic distribution: 'LOGISTIC'\n      Lognormal'LOGNORMAL'\n      Negative binomial distribution: 'NEGBINOMIAL'\n      Normal distribution: 'NORMAL'|'GAUSS'\n      Normal mixture distribution: 'NORMALMIX'\n      Pareto distribution: 'PARETO'\n      Poisson distribution: 'POISSON'\n      T distribution: 'T'\n      Tweedie distribution: 'TWEEDIE').\n      Uniform distribution: 'UNIFORM'\n      Wald (inverse Gaussian) distribution: 'WALD'|'IGAUSS'\n      Weibull distribution: 'WEIBULL'\n\n      Except for T, F, and NORMALMIX, you can minimally identify any distribution by its first four characters. \n      \nquantile\n  is a numeric constant, variable, or expression that specifies the value of a random variable.parameter-1, ..., parameter-k\n  are optional shape, location, or scale parameters appropriate for the specific distribution."}},{"Name":"LOGSDF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the logarithm of a survival function. \n    \nSyntax: LOGSDF('distribution', quantile, parameter-1, ..., parameter-k)\nRequired Arguments:\n'distribution' is a character constant, variable, or expression that identifies the distribution. Valid distributions are as follows:\n\n      Bernoulli distribution: 'BERNOULLI'\n      Beta distribution: 'BETA'\n      Binomial distribution: 'BINOMIAL'\n      Cauchy distribution: 'CAUCHY'\n      Chi-Square distribution: 'CHISQUARE'\n      Conway-Maxwell-Poisson distribution: 'CMP'\n      Exponential distribution: 'EXPONENTIAL'\n      F distribution: 'F'\n      Gamma distribution: 'GAMMA'\n      Generalized Poisson distribution: 'GENPOISSON'\n      Geometric distribution: 'GEOMETRIC'\n      Hypergeometric distribution: 'HYPERGEOMETRIC'\n      Laplace distribution: 'LAPLACE'\n      Logistic distribution: 'LOGISTIC'\n      Lognormal'LOGNORMAL'\n      Negative binomial distribution: 'NEGBINOMIAL'\n      Normal distribution: 'NORMAL'|'GAUSS'\n      Normal mixture distribution: 'NORMALMIX'\n      Pareto distribution: 'PARETO'\n      Poisson distribution: 'POISSON'\n      T distribution: 'T'\n      Tweedie distribution: 'TWEEDIE').\n      Uniform distribution: 'UNIFORM'\n      Wald (inverse Gaussian) distribution: 'WALD'|'IGAUSS'\n      Weibull distribution: 'WEIBULL'\n\n      Note: Except for T, F, and NORMALMIX, you can minimally identify any distribution by its first four characters. \n      \nquantile\n  is a numeric constant, variable, or expression that specifies the value of a random variable. \n  \nparameter-1, ..., parameter-k\n  are optional shape, location, or scale parameters appropriate for the specific distribution."}},{"Name":"LOWCASE","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts all letters in an argument to lowercase."}},{"Name":"QLOWCASE","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts all letters in an argument to lowercase. QLOWCASE produces a result with \nspecial characters and mnemonic operators masked."}},{"Name":"LPERM","Type":"SAS_FUNCTION","Help":{"#cdata":"Computes the logarithm of the PERM function; that is, the logarithm of the number \nof permutations of n objects, with the option of including r number of elements."}},{"Name":"LPNORM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the Lp norm of the second argument and subsequent non-missing arguments."}},{"Name":"MAD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the median absolute deviation from the median."}},{"Name":"MARGRCLPRC","Type":"SAS_FUNCTION","Help":{"#cdata":"Calculates call prices for European options on stocks, based on the Margrabe model."}},{"Name":"MARGRPTPRC","Type":"SAS_FUNCTION","Help":{"#cdata":"Calculates put prices for European options on stocks, based on the Margrabe model."}},{"Name":"MAX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the largest value. At least two arguments are required."}},{"Name":"MD5","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the result of the message digest of a specified string. \n    \nSyntax: MD5(string)\nRequired Argument: \nstring\n  specifies a character constant, variable, or expression.\n\nTip: Enclose a literal string of characters in quotation marks. \n\nExample: Generating Results with the MD5 Function\nThis example generates results that are returned by the MD5 function.\n  data _null_;\n  y=md5('abc');\n  z=md5('access method');\n  put y=/ y=$hex32.;\n  put z=/ z=$hex32.;\n  run;\n  \nThe output from this program contains unprintable characters."}},{"Name":"MDY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a SAS date value from month, day, and year values."}},{"Name":"MEAN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the arithmetic mean (average). At least one non-missing argument is required. \nOtherwise, the function returns a missing value."}},{"Name":"MEDIAN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the median value."}},{"Name":"MIN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the smalles value. At least two arguments are required."}},{"Name":"MINUTE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the minute from a SAS time or datetime value."}},{"Name":"MOD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the remainder from the division of the first argument by the second argument, \nfuzzed to avoid most unexpected floating-point results."}},{"Name":"MODULEC","Type":"SAS_FUNCTION","Help":{"#cdata":"Calls an external routine and returns a character value."}},{"Name":"MODULEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Calls an external routine and returns a numeric value."}},{"Name":"MODZ","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the remainder from the division of the first argument by the second argument, \nusing zero fuzzing."}},{"Name":"MONTH","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the month from a SAS date value."}},{"Name":"MOPEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Opens a file by directory ID and member name, and returns either the file identifier or a 0."}},{"Name":"MORT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns amortization parameters."}},{"Name":"MSPLINT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the ordinate of a monotonicity-preserving interpolating spline."}},{"Name":"N","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the number of non-missing numeric values. At least one argument is required."}},{"Name":"NETPV","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the net present value as a fraction."}},{"Name":"NLITERAL","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts a character string that you specify to a SAS name literal."}},{"Name":"NMISS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the number of missing numeric values. At least one argument is required."}},{"Name":"NOTALNUM","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a non-alphanumeric character, and returns the first position \nat which the character is found."}},{"Name":"NOTALPHA","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a nonalphabetic character, and returns the first \nposition at which the character is found."}},{"Name":"NOTCNTRL","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a character that is not a control character, and \nreturns the first position at which that character is found."}},{"Name":"NOTDIGIT","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for any character that is not a digit, and returns the \nfirst position at which that character is found."}},{"Name":"NOTE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns an observation ID for the current observation of a SAS data set."}},{"Name":"NOTFIRST","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for an invalid first character in a SAS variable name under \nVALIDVARNAME=V7, and returns the first position at which that character is found."}},{"Name":"NOTGRAPH","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a non-graphical character, and returns the first position \nat which that character is found."}},{"Name":"NOTLOWER","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a character that is not a lowercase letter, and returns \nthe first position at which that character is found."}},{"Name":"NOTNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for an invalid character in a SAS variable name under \nVALIDVARNAME=V7, and returns the first position at which that character is found."}},{"Name":"NOTPRINT","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a nonprintable character, and returns the first \nposition at which that character is found."}},{"Name":"NOTPUNCT","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a character that is not a punctuation character, \nand returns the first position at which that character is found."}},{"Name":"NOTSPACE","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a character that is not a white-space character \n(blank, horizontal and vertical tab, carriage return, line feed, and form feed), \nand returns the first position at \nwhich that character is found."}},{"Name":"NOTUPPER","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a character that is not an uppercase letter, and \nreturns the first position at which that character is found."}},{"Name":"NOTXDIGIT","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a character string for a character that is not a hexadecimal character, \nand returns the first position at which that character is found."}},{"Name":"NPV","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the net present value with the rate expressed as a percentage."}},{"Name":"NVALID","Type":"SAS_FUNCTION","Help":{"#cdata":"Checks the validity of a character string for use as a SAS variable name."}},{"Name":"NWKDOM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the date for the nth occurrence of a weekday for the specified month and year."}},{"Name":"OPEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Opens a SAS data set."}},{"Name":"ORDINAL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the kth smallest of the missing and nonmissing values. At least two arguments \nare required."}},{"Name":"PATHNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the physical name of an external file or a SAS library, or returns a blank."}},{"Name":"PCTL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the percentile that corresponds to the percentage. n is a digit from 1 to 5 \nwhich specifies the definition of the percentile to be computed."}},{"Name":"PDF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a value from a probability density (mass) distribution. \n\nSyntax: PDF(distribution, quantile <, parameter-1, ... , parameter-k>)\nRequired Arguments:\ndistribution\n  Is a character constant, variable, or expression that identifies the distribution. Valid distributions are as follows:\n\n      Bernoulli distribution: 'BERNOULLI'\n      Beta distribution: 'BETA'\n      Binomial distribution: 'BINOMIAL'\n      Cauchy distribution: 'CAUCHY'\n      Chi-Square distribution: 'CHISQUARE'\n      Conway-Maxwell-Poisson distribution: 'CMP'\n      Exponential distribution: 'EXPONENTIAL'\n      F distribution: 'F'\n      Gamma distribution: 'GAMMA'\n      Generalized Poisson distribution: 'GENPOISSON'\n      Geometric distribution: 'GEOMETRIC'\n      Hypergeometric distribution: 'HYPERGEOMETRIC'\n      Laplace distribution: 'LAPLACE'\n      Logistic distribution: 'LOGISTIC'\n      Lognormal'LOGNORMAL'\n      Negative binomial distribution: 'NEGBINOMIAL'\n      Normal distribution: 'NORMAL'|'GAUSS'\n      Normal mixture distribution: 'NORMALMIX'\n      Pareto distribution: 'PARETO'\n      Poisson distribution: 'POISSON'\n      T distribution: 'T'\n      Tweedie distribution: 'TWEEDIE').\n      Uniform distribution: 'UNIFORM'\n      Wald (inverse Gaussian) distribution: 'WALD'|'IGAUSS'\n      Weibull distribution: 'WEIBULL'\n\n      Note: Except for T, F, and NORMALMIX, you can minimally identify any distribution by its first four characters. \n      \nquantile\n  is a numeric constant, variable, or expression that specifies the value of the random variable.\n\nOptional Argument: \nparameter-1, ..., parameter-k\n  are optional numeric constants, variables, or expressions that specify the values of shape, location, or \n  scale parameters that are appropriate for the specific distribution."}},{"Name":"PMF","Type":"SAS_FUNCTION","Help":{"#cdata":"Alias for the PDF function."}},{"Name":"PEEK","Type":"SAS_FUNCTION","Help":{"#cdata":"Stores the contents of a memory address in a numeric variable on a 32-bit platform. \n    \nInteraction:\nWhen a SAS server is in a locked-down state, the PEEK function does not execute. \n\nSyntax: PEEK(address <, length>)\nRequired Argument: \naddress\n  is a numeric constant, variable, or expression that specifies the memory address.\n\nOptional Argument:\nlength\n  is a numeric constant, variable, or expression that specifies the data length.\n  \n  Default: a 4-byte address pointer\n  Range: 2\u20138"}},{"Name":"PEEKC","Type":"SAS_FUNCTION","Help":{"#cdata":"Stores the contents of a memory address in a character variable on a 32-bit platform. \n    \nInteraction:\nWhen a SAS server is in a locked-down state, the PEEKC function does not execute. \n\nSyntax: PEEKC(address <, length>)\n\nRequired Argument:\naddress\n  is a numeric constant, variable, or expression that specifies the memory address.\n\nOptional Argument: \nlength\n  is a numeric constant, variable, or expression that specifies the data length.\n\n  Default: 8, unless the variable length has already been set (for example, by the LENGTH statement)\n  Range: 1\u201332,767"}},{"Name":"PEEKCLONG","Type":"SAS_FUNCTION","Help":{"#cdata":"Stores the contents of a memory address in a character variable on 32-bit and 64-bit platforms. \n    \nInteraction:\nWhen a SAS server is in a locked-down state, the PEEKCLONG function does not execute. \n\nSyntax: PEEKCLONG(address <, length>)\nRequired Argument: \naddress\n  specifies a character constant, variable, or expression that contains the binary pointer address.\n\nOptional Argument:\nlength\n  is a numeric constant, variable, or expression that specifies the length of the character data.\n\nDefault: 8\nRange: 1\u201332,767\nDetails:\nIf you do not have access to the memory storage location that you are requesting, the PEEKCLONG \nfunction returns an Invalid argument error."}},{"Name":"PEEKLONG","Type":"SAS_FUNCTION","Help":{"#cdata":"Stores the contents of a memory address in a numeric variable on 32-bit and 64-bit platforms. \n    \nInteraction:\nWhen a SAS server is in a locked-down state, the PEEKLONG function does not execute. \n\nSyntax: PEEKLONG(address <, length>) \n\nRequired Argument:\naddress\n  specifies a character constant, variable, or expression that contains the binary pointer address.\n\nOptional Argument:\nlength\n  is a numeric constant, variable, or expression that specifies the length of the character data.\n\n  Default: 4 on 32-bit computers; 8 on 64-bit computers\n  Range: 1\u20134 on 32-bit computers; 1\u20138 on 64-bit computers\n\nDetails:\nIf you do not have access to the memory storage location that you are requesting, the PEEKLONG function \nreturns an Invalid argument error."}},{"Name":"PERM","Type":"SAS_FUNCTION","Help":{"#cdata":"Computes the number of permutations of n items that are taken r at a time."}},{"Name":"POINT","Type":"SAS_FUNCTION","Help":{"#cdata":"Locates an observation that is identified by the NOTE function."}},{"Name":"POISSON","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the probability from a Poisson distribution."}},{"Name":"PROBBETA","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the probability from a beta distribution."}},{"Name":"PROBBNML","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the probability from a binomial distribution."}},{"Name":"PROBBNRM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a probability from a bivariate normal distribution."}},{"Name":"PROBCHI","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the probability from a chi-square distribution."}},{"Name":"PROBF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the probability from an F distribution."}},{"Name":"PROBGAM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the probability from a gamma distribution."}},{"Name":"PROBHYPR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the probability from a hypergeometric distribution."}},{"Name":"PROBIT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a quantile from the standard normal distribution."}},{"Name":"PROBMC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a probability or a quantile from various distributions for multiple \ncomparisons of means."}},{"Name":"PROBNEGB","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the probability from a negative binomial distribution."}},{"Name":"PROBNORM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the probability from the standard normal distribution."}},{"Name":"PROBT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the probability from a t distribution."}},{"Name":"PROPCASE","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts all words in an argument to proper case."}},{"Name":"PRXCHANGE","Type":"SAS_FUNCTION","Help":{"#cdata":"Performs a pattern-matching replacement."}},{"Name":"PRXMATCH","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches for a pattern match and returns the position at which the pattern is found."}},{"Name":"PRXPAREN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the last bracket match for which there is a match in a pattern."}},{"Name":"PRXPARSE","Type":"SAS_FUNCTION","Help":{"#cdata":"Compiles a Perl regular expression (PRX) that can be used for pattern matching of \na character value."}},{"Name":"PRXPOSN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a character string that contains the value for a capture buffer."}},{"Name":"PTRLONGADD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the pointer address as a character variable on 32-bit and 64-bit platforms."}},{"Name":"PUT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a value using a specified format."}},{"Name":"PUTC","Type":"SAS_FUNCTION","Help":{"#cdata":"Enables you to specify a character format at run time. \n    \nSyntax: PUTC(value, format-specification <, w>)\n\nRequired Arguments:\nvalue\n  specifies a character value to be formatted.format-specification\n  is a character format that you want to apply to value.\n  Here are valid format forms:\n    \u2022format-name\n    \u2022format-name.\n    \u2022format-namew. \n    \n    Except for format-name, you can use \u2013L, \u2013R, and \u2013C in format-specification to left-align, \n    right-align, and center your output. For example, you can use 'upcase.-c\u2019 as the value for \n    the second argument, format-specification.\n\nOptional Argument:\nw\n  is a numeric constant, variable, or expression that specifies a width to apply to the format.\n\n  Interaction:\n  If you specify a width here, it overrides any width specification in the format."}},{"Name":"PUTN","Type":"SAS_FUNCTION","Help":{"#cdata":"Enables you to specify a numeric format at run time. \n    \nSyntax: PUTN(value, format-specification <, w <, d>>)\n\nRequired Arguments: \nvalue\n  specifies a numeric value to be formatted.  \nformat-specification\n  is the numeric format that you want to apply to value.\n  Here are valid format forms:\n    \u2022format-name\n    \u2022format-name.\n    \u2022format-namew.\n    \u2022format-namew.d\n  Except for format-name, you can use \u2013L, \u2013R, and \u2013C in format-specification to left-align, \n  right-align, and center your output. For example, you can use 'weekdate.-c\u2019 as the value \n  for the second argument, format-specification.\n\nOptional Arguments:\nw\n  is a numeric constant, variable, or expression that specifies a width to apply to the format.\n\n  Interaction:\n  If you specify a width here, it overrides any width specification in the format.\n\nd\n  is a numeric constant, variable, or expression that specifies the number of decimal places to use.\n  \n  Interaction:\n  If you specify a number here, it overrides any decimal-place specification in the format."}},{"Name":"PVP","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the present value for a periodic cash flow stream (such as a bond), with repayment of \nprincipal at maturity."}},{"Name":"QTR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the quarter of the year from a SAS date value."}},{"Name":"QUANTILE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the quantile from a distribution that you specify. \n    \nSyntax: QUANTILE(distribution, probability, parameter-1, \u2026, parameter-k)\nRequired Arguments: \ndistribution is a character constant, variable, or expression that identifies the distribution. Valid distributions are as follows:\n\n      Bernoulli distribution: 'BERNOULLI'\n      Beta distribution: 'BETA'\n      Binomial distribution: 'BINOMIAL'\n      Cauchy distribution: 'CAUCHY'\n      Chi-Square distribution: 'CHISQUARE'\n      Conway-Maxwell-Poisson distribution: 'CMP'\n      Exponential distribution: 'EXPONENTIAL'\n      F distribution: 'F'\n      Gamma distribution: 'GAMMA'\n      Generalized Poisson distribution: 'GENPOISSON'\n      Geometric distribution: 'GEOMETRIC'\n      Hypergeometric distribution: 'HYPERGEOMETRIC'\n      Laplace distribution: 'LAPLACE'\n      Logistic distribution: 'LOGISTIC'\n      Lognormal'LOGNORMAL'\n      Negative binomial distribution: 'NEGBINOMIAL'\n      Normal distribution: 'NORMAL'|'GAUSS'\n      Normal mixture distribution: 'NORMALMIX'\n      Pareto distribution: 'PARETO'\n      Poisson distribution: 'POISSON'\n      T distribution: 'T'\n      Tweedie distribution: 'TWEEDIE').\n      Uniform distribution: 'UNIFORM'\n      Wald (inverse Gaussian) distribution: 'WALD'|'IGAUSS'\n      Weibull distribution: 'WEIBULL'\n\n      Note: Except for T, F, and NORMALMIX, you can minimally identify any distribution by its first four characters. \n\nprobability\n  is a numeric constant, variable, or expression that specifies the value of a random variable. \nparameter-1, \u2026, parameter-k\n  are optional shape, location, or scale parameters appropriate for the specific distribution."}},{"Name":"QUOTE","Type":"SAS_FUNCTION","Help":{"#cdata":"Adds double quotation marks to a character value."}},{"Name":"RAND","Type":"SAS_FUNCTION","Help":{"#cdata":"Generates random numbers from a distribution that you specify."}},{"Name":"RANEXP","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a random variate from an exponential distribution."}},{"Name":"RANGAM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a random variate from a gamma distribution."}},{"Name":"RANGE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the range of the nonmissing values. At least one nonmissing argument is required."}},{"Name":"RANK","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the position of a character in the ASCII or EBCDIC collating sequence."}},{"Name":"RENAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Renames a member of a SAS library, an entry in a SAS catalog, an external file, or a directory."}},{"Name":"REPEAT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a character value that consists of the first argument repeated n+1 times."}},{"Name":"RESOLVE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the resolved value of the argument after it has been processed by the macro facility."}},{"Name":"REVERSE","Type":"SAS_FUNCTION","Help":{"#cdata":"Reverses a character string."}},{"Name":"REWIND","Type":"SAS_FUNCTION","Help":{"#cdata":"Positions the data set pointer at the beginning of a SAS data set."}},{"Name":"RIGHT","Type":"SAS_FUNCTION","Help":{"#cdata":"Right aligns a character expression."}},{"Name":"RMS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the root mean square of the nonmissing arguments."}},{"Name":"ROUND","Type":"SAS_FUNCTION","Help":{"#cdata":"Rounds the first argument to the nearest multiple of the second argument, or to the nearest \ninteger when the second argument is omitted."}},{"Name":"ROUNDE","Type":"SAS_FUNCTION","Help":{"#cdata":"Rounds the first argument to the nearest multiple of the second argument, and returns an \neven multiple when the first argument is halfway between the two nearest multiples."}},{"Name":"ROUNDZ","Type":"SAS_FUNCTION","Help":{"#cdata":"Rounds the first argument to the nearest multiple of the second argument, using \nzero fuzzing."}},{"Name":"SAVING","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the future value of a periodic saving."}},{"Name":"SCAN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the nth word from a character string."}},{"Name":"SCANQ","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the nth word from a character expression, ignoring delimiters that are \nenclosed in quotation marks."}},{"Name":"SDF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a survival function. \n    \nSyntax: SDF(distribution, quantile, parameter-1, ..., parameter-k)\nRequired Arguments: \ndistribution\n  Is a character string that identifies the distribution. Valid distributions are as follows:\n\n      Bernoulli distribution: 'BERNOULLI'\n      Beta distribution: 'BETA'\n      Binomial distribution: 'BINOMIAL'\n      Cauchy distribution: 'CAUCHY'\n      Chi-Square distribution: 'CHISQUARE'\n      Conway-Maxwell-Poisson distribution: 'CMP'\n      Exponential distribution: 'EXPONENTIAL'\n      F distribution: 'F'\n      Gamma distribution: 'GAMMA'\n      Generalized Poisson distribution: 'GENPOISSON'\n      Geometric distribution: 'GEOMETRIC'\n      Hypergeometric distribution: 'HYPERGEOMETRIC'\n      Laplace distribution: 'LAPLACE'\n      Logistic distribution: 'LOGISTIC'\n      Lognormal'LOGNORMAL'\n      Negative binomial distribution: 'NEGBINOMIAL'\n      Normal distribution: 'NORMAL'|'GAUSS'\n      Normal mixture distribution: 'NORMALMIX'\n      Pareto distribution: 'PARETO'\n      Poisson distribution: 'POISSON'\n      T distribution: 'T'\n      Tweedie distribution: 'TWEEDIE').\n      Uniform distribution: 'UNIFORM'\n      Wald (inverse Gaussian) distribution: 'WALD'|'IGAUSS'\n      Weibull distribution: 'WEIBULL'\n\n      Note: Except for T, F, and NORMALMIX, you can minimally identify any distribution by its first four characters. \n      \nquantile\n  is a numeric constant, variable, or expression that specifies the value of a random variable. \n  \nparameter-1, ..., parameter-k\n  are optional shape, location, or scale parameters appropriate for the specific distribution."}},{"Name":"SECOND","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the second from a SAS time or datetime value."}},{"Name":"SIGN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the sign of a value."}},{"Name":"SIN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the sine."}},{"Name":"SINH","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the hyperbolic sine."}},{"Name":"SKEWNESS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the skewness of the nonmissing arguments. At least 3 arguments are required."}},{"Name":"SLEEP","Type":"SAS_FUNCTION","Help":{"#cdata":"For a specified number of seconds (or fraction thereof), this function suspends the execution of a program that invokes \nit. From the syntax SLEEP(n, unit), n is the number of seconds to suspend (as a constant, variable or \nexpression), unless the unit of time is modified by the second argument. The second parameter, unit, \nis a numeric constant, variable, or expression that specifies the unit of time, as a power of 10, which \nis applied to n. For example, unit=1 corresponds to a second, unit=0.001 to a millisecond, unit=0.000001 \nto a microsecond, and so on. Range: n \u2265 0."}},{"Name":"SMALLEST","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the kth smallest nonmissing value."}},{"Name":"SOUNDEX","Type":"SAS_FUNCTION","Help":{"#cdata":"Encodes a string to facilitate searching."}},{"Name":"SPEDIS","Type":"SAS_FUNCTION","Help":{"#cdata":"Determines the likelihood of two words matching, expressed as the asymmetric spelling \ndistance between the two words."}},{"Name":"SQRT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the square root of a value."}},{"Name":"STD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the standard deviation of the nonmissing arguments. At least two nonmissing \narguments are required."}},{"Name":"STDERR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the standard error of the mean of the nonmissing arguments. At least two \nnonmissing arguments are required."}},{"Name":"STFIPS","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts state postal codes to FIPS state codes."}},{"Name":"STNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts state postal codes to uppercase state names."}},{"Name":"STNAMEL","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts state postal codes to mixed case state names."}},{"Name":"STRIP","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a character string with all leading and trailing blanks removed."}},{"Name":"SUBPAD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a substring that has a length you specify, using blank padding if necessary."}},{"Name":"SUBSTR","Type":"SAS_FUNCTION","Help":{"#cdata":"Extracts a substring from an argument."}},{"Name":"QSUBSTR","Type":"SAS_FUNCTION","Help":{"#cdata":"%QSUBSTR produces a substring of a character string, masking special characters and \nmnemonic operators."}},{"Name":"SUBSTRN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a substring, allowing a result with a length of zero."}},{"Name":"SUM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the sum of the nonmissing arguments."}},{"Name":"SUMABS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the sum of the absolute values of the non-missing arguments."}},{"Name":"SYMEXIST","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns an indication of the existence of a macro variable."}},{"Name":"SYMGET","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of a macro variable during DATA step execution."}},{"Name":"SYMGLOBL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns an indication of whether a macro variable is in global scope to the DATA \nstep during DATA step execution."}},{"Name":"SYMLOCAL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns an indication of whether a macro variable is in local scope to the DATA \nstep during DATA step execution."}},{"Name":"SYSMSG","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns error or warning message text from processing the last data set or external \nfile function."}},{"Name":"SYSPARM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the system parameter string."}},{"Name":"SYSPROCESSID","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the process ID of the current process."}},{"Name":"SYSPROCESSNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the process name that is associated with a given process ID, or returns \nthe name of the current process."}},{"Name":"SYSPROD","Type":"SAS_FUNCTION","Help":{"#cdata":"Determines whether a product is licensed."}},{"Name":"SYSRC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a system error number."}},{"Name":"SYSTEM","Type":"SAS_FUNCTION","Help":{"#cdata":"Issues an operating environment command during a SAS session, and returns the \nsystem return code."}},{"Name":"TAN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the tangent."}},{"Name":"TANH","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the hyperbolic tangent."}},{"Name":"TIME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the current time of day as a numeric SAS time value. \n    \nInteraction:\nIf the value of the TIMEZONE= system option is set to a time zone name or time zone ID, the date \nand time values that are returned for this function are determined by the time zone."}},{"Name":"TIMEPART","Type":"SAS_FUNCTION","Help":{"#cdata":"Extracts a time value from a SAS datetime value."}},{"Name":"TINV","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a quantile from the t distribution."}},{"Name":"TNONCT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the noncentrality parameter from the Student's t distribution."}},{"Name":"TODAY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the current date as a numeric SAS date value. \n    \nAlias: DATE \n\nInteraction:\nIf the value of the TIMEZONE= system option is set to a time zone name or time zone ID, the date \nand time values that are returned for this function are determined by the time zone."}},{"Name":"TRANSLATE","Type":"SAS_FUNCTION","Help":{"#cdata":"Replaces specific characters in a character string."}},{"Name":"TRANSTRN","Type":"SAS_FUNCTION","Help":{"#cdata":"Replaces all occurrences of a substring found in a character string, allowing a \nzero-length replacement string."}},{"Name":"TRANWRD","Type":"SAS_FUNCTION","Help":{"#cdata":"Replaces or removes all occurrences of a substring in a character string."}},{"Name":"TRIGAMMA","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the trigamma function."}},{"Name":"TRIM","Type":"SAS_FUNCTION","Help":{"#cdata":"Removes trailing blanks from a character string, and returns one blank if the string \nis missing."}},{"Name":"QTRIM","Type":"SAS_FUNCTION","Help":{"#cdata":"Removes trailing blanks from a character string, and returns one blank if the string \nis missing. QTRIM produces a result with special characters and mnemonic operators \nmasked."}},{"Name":"TRIMN","Type":"SAS_FUNCTION","Help":{"#cdata":"Removes trailing blanks from character expressions, and returns a string with a length \nof zero if the expression is missing."}},{"Name":"TRUNC","Type":"SAS_FUNCTION","Help":{"#cdata":"Truncates a numeric value to a specified number of bytes."}},{"Name":"UNIFORM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a random variate from a uniform distribution."}},{"Name":"UPCASE","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts all letters in an argument to uppercase."}},{"Name":"QUPCASE","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts all letters in an argument to uppercase. %QUPCASE masks special characters \nand mnemonic operators in its result."}},{"Name":"URLDECODE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a string that was decoded using the URL escape syntax."}},{"Name":"URLENCODE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a string that was encoded using the URL escape syntax."}},{"Name":"USS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the uncorrected sum of squares of the nonmissing arguments. At least one \nnonmissing argument is required."}},{"Name":"UUIDGEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the short or binary form of a Universal Unique Identifier (UUID)."}},{"Name":"VAR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the variance of the nonmissing arguments. At least two nonmissing arguments \nare required."}},{"Name":"VARFMT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the format that is assigned to a SAS data set variable."}},{"Name":"VARINFMT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the informat that is assigned to a SAS data set variable."}},{"Name":"VARLABEL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the label that is assigned to a SAS data set variable."}},{"Name":"VARLEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the length of a SAS data set variable."}},{"Name":"VARNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the name of a SAS data set variable."}},{"Name":"VARNUM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the number of a variable's position in a SAS data set."}},{"Name":"VARRAY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a value that indicates whether the specified name is an array."}},{"Name":"VARRAYX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a value that indicates whether the value of the specified argument is an array."}},{"Name":"VARTYPE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the data type of a SAS data set variable."}},{"Name":"VERIFY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the position of the first character in a string that is not in any of several \nother strings."}},{"Name":"VFORMAT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the format that is associated with the specified variable."}},{"Name":"VFORMATD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the decimal value of the format that is associated with the specified variable."}},{"Name":"VFORMATDX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the decimal value of the format that is associated with the value of the \nspecified argument."}},{"Name":"VFORMATN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the format name that is associated with the specified variable."}},{"Name":"VFORMATNX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the format name that is associated with the value of the specified argument."}},{"Name":"VFORMATW","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the format width that is associated with the specified variable."}},{"Name":"VFORMATWX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the format width that is associated with the value of the specified argument."}},{"Name":"VFORMATX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the format that is associated with the value of the specified argument."}},{"Name":"VINARRAY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a value that indicates whether the specified variable is a member of an array."}},{"Name":"VINARRAYX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a value that indicates whether the value of the specified argument is a member \nof an array."}},{"Name":"VINFORMAT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the informat that is associated with the specified variable."}},{"Name":"VINFORMATD","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the decimal value of the informat that is associated with the specified variable."}},{"Name":"VINFORMATDX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the decimal value of the informat that is associated with the value of the \nspecified variable."}},{"Name":"VINFORMATN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the informat name that is associated with the specified variable."}},{"Name":"VINFORMATNX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the informat name that is associated with the value of the specified argument."}},{"Name":"VINFORMATW","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the informat width that is associated with the specified variable."}},{"Name":"VINFORMATWX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the informat width that is associated with the value of the specified argument."}},{"Name":"VINFORMATX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the informat that is associated with the value of the specified argument."}},{"Name":"VLABEL","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the label that is associated with the specified variable."}},{"Name":"VLABELX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the label that is associated with the value of the specified argument."}},{"Name":"VLENGTH","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the compile-time (allocated) size of the specified variable."}},{"Name":"VLENGTHX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the compile-time (allocated) size for the variable that has a name that is the \nsame as the value of the argument."}},{"Name":"VNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the name of the specified variable."}},{"Name":"VNAMEX","Type":"SAS_FUNCTION","Help":{"#cdata":"Validates the value of the specified argument as a variable name."}},{"Name":"VTYPE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the type (character or numeric) of the specified variable."}},{"Name":"VTYPEX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the type (character or numeric) for the value of the specified argument."}},{"Name":"VVALUE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the formatted value that is associated with the variable that you specify."}},{"Name":"VVALUEX","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the formatted value that is associated with the argument that you specify."}},{"Name":"WEEK","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the week-number value."}},{"Name":"WEEKDAY","Type":"SAS_FUNCTION","Help":{"#cdata":"From a SAS date value, returns an integer that corresponds to the day of the week."}},{"Name":"WHICHC","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches for a character value that is equal to the first argument, and returns the index \nof the first matching value."}},{"Name":"WHICHN","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches for a numeric value that is equal to the first argument, and returns the index \nof the first matching value."}},{"Name":"YEAR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the year from a SAS date value."}},{"Name":"YIELDP","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the yield-to-maturity for a periodic cash flow stream, such as a bond."}},{"Name":"YRDIF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the difference in years between two dates."}},{"Name":"YYQ","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a SAS date value from year and quarter year values."}},{"Name":"ZIPCITY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a city name and the two-character postal code that corresponds to a zip code."}},{"Name":"ZIPCITYDISTANCE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the geodetic distance between two zip code locations."}},{"Name":"ZIPFIPS","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts zip codes to two-digit FIPS codes."}},{"Name":"ZIPNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts zip codes to uppercase state names."}},{"Name":"ZIPNAMEL","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts zip codes to mixed case state names."}},{"Name":"ZIPSTATE","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts zip codes to two-character state postal codes."}},{"Name":"ASCEBC","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts an input character string from ASCII to EBCDIC."}},{"Name":"EBCASC","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts an input character string from EBCDIC to ASCII."}},{"Name":"FILEATTR","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the attribute information for a specified file."}},{"Name":"FINDFILE","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches a directory for a file."}},{"Name":"GETDVI","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a specified item of information from a device."}},{"Name":"GETJPI","Type":"SAS_FUNCTION","Help":{"#cdata":"Retrieves job-process information."}},{"Name":"GETLOG","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns information about a DCL logical name."}},{"Name":"GETMSG","Type":"SAS_FUNCTION","Help":{"#cdata":"Translates an OpenVMS error code into text."}},{"Name":"GETQUOTA","Type":"SAS_FUNCTION","Help":{"#cdata":"Retrieves disk quota information."}},{"Name":"GETSYM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of a DCL symbol."}},{"Name":"GETTERM","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the characteristics of your terminal device."}},{"Name":"NODENAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the name of the current node."}},{"Name":"PUTLOG","Type":"SAS_FUNCTION","Help":{"#cdata":"Creates an OpenVMS logical-name in your process-level logical name table."}},{"Name":"PUTSYM","Type":"SAS_FUNCTION","Help":{"#cdata":"Creates a DCL symbol in the parent SAS process."}},{"Name":"SETTERM","Type":"SAS_FUNCTION","Help":{"#cdata":"Modifies a characteristic of your terminal device."}},{"Name":"TERMIN","Type":"SAS_FUNCTION","Help":{"#cdata":"Allows simple input from SYS$INPUT."}},{"Name":"TERMOUT","Type":"SAS_FUNCTION","Help":{"#cdata":"Allows simple output to SYS$OUTPUT."}},{"Name":"TTCLOSE","Type":"SAS_FUNCTION","Help":{"#cdata":"Closes a channel that was previously assigned by TTOPEN."}},{"Name":"TTCONTRL","Type":"SAS_FUNCTION","Help":{"#cdata":"Modifies the characteristics of a channel that was previously assigned by TTOPEN."}},{"Name":"TTOPEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Assigns an I/O channel to a terminal."}},{"Name":"TTREAD","Type":"SAS_FUNCTION","Help":{"#cdata":"Reads characters from the channel assigned by TTOPEN."}},{"Name":"TTWRITE","Type":"SAS_FUNCTION","Help":{"#cdata":"Writes characters to the channel assigned by TTOPEN."}},{"Name":"VMS","Type":"SAS_FUNCTION","Help":{"#cdata":"Spawns a subprocess and executes a DCL command."}},{"Name":"BQUOTE","Type":"SAS_FUNCTION","Help":{"#cdata":"Mask special characters and mnemonic operators in a resolved value at macro execution."}},{"Name":"NRBQUOTE","Type":"SAS_FUNCTION","Help":{"#cdata":"Mask special characters and mnemonic operators in a resolved value at macro execution."}},{"Name":"EVAL","Type":"SAS_FUNCTION","Help":{"#cdata":"Evaluates arithmetic and logical expressions using integer arithmetic."}},{"Name":"NRQUOTE","Type":"SAS_FUNCTION","Help":{"#cdata":"Masks special characters, including & and %, and mnemonic operators in a resolved value \nat macro execution."}},{"Name":"STR","Type":"SAS_FUNCTION","Help":{"#cdata":"Masks special characters, excluding & and %, and mnemonic operators in constant text \nduring macro compilation."}},{"Name":"NRSTR","Type":"SAS_FUNCTION","Help":{"#cdata":"Masks special characters, including & and %, and mnemonic operators in constant text \nduring macro compilation."}},{"Name":"QSCAN","Type":"SAS_FUNCTION","Help":{"#cdata":"Searches for a word and masks special characters and mnemonic operators."}},{"Name":"SUPERQ","Type":"SAS_FUNCTION","Help":{"#cdata":"Masks all special characters and mnemonic operators at macro execution but prevents \nfurther resolution of the value."}},{"Name":"SYSEVALF","Type":"SAS_FUNCTION","Help":{"#cdata":"Evaluates arithmetic and logical expressions using floating-point arithmetic."}},{"Name":"SYSFUNC","Type":"SAS_FUNCTION","Help":{"#cdata":"Execute SAS functions or user-written functions."}},{"Name":"QSYSFUNC","Type":"SAS_FUNCTION","Help":{"#cdata":"Execute SAS functions or user-written functions. %QSYSFUNC masks special characters \nand mnemonic operators such as & % ' \" ( ) + - * / < > = \u00ac ^ ~ ; , #  blank AND OR \nNOT EQ NE LE LT GE GT IN."}},{"Name":"SYSGET","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the value of the specified operating environment variable."}},{"Name":"UNQUOTE","Type":"SAS_FUNCTION","Help":{"#cdata":"During macro execution, unmasks all special characters and mnemonic operators \nfor a value."}},{"Name":"CMPRES","Type":"SAS_FUNCTION","Help":{"#cdata":"Compress multiple blanks and remove leading and trailing blanks."}},{"Name":"QCMPRES","Type":"SAS_FUNCTION","Help":{"#cdata":"Compress multiple blanks and remove leading and trailing blanks.  QCMPRES produces \na result with special characters and mnemonic operators masked."}},{"Name":"COMPSTOR","Type":"SAS_FUNCTION","Help":{"#cdata":"Compiles macros and stores them in a catalog in a permanent SAS library."}},{"Name":"DATATYP","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the data type of a value."}},{"Name":"DQCASE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a character value with standardized capitalization."}},{"Name":"DQGENDER","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a gender determination from the name of an individual."}},{"Name":"DQGENDERINFOGET","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the name of the parse definition that is associated with the specified \ngender definition."}},{"Name":"DQGENDERPARSED","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a gender determination from the parsed name of an individual."}},{"Name":"DQIDENTIFY","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a category name from a character value."}},{"Name":"DQLOCALEGUESS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the name of the locale that is most likely represented by a character value."}},{"Name":"DQLOCALEINFOGET","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns information about locales."}},{"Name":"DQLOCALEINFOLIST","Type":"SAS_FUNCTION","Help":{"#cdata":"Displays the names of the definitions in a locale and returns a count of those definitions."}},{"Name":"DQMATCH","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a match code from a character value."}},{"Name":"DQMATCHINFOGET","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the name of the parse definition that is associated with a match definition."}},{"Name":"DQMATCHPARSED","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a match code from a parsed character value."}},{"Name":"DQPARSE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a parsed character value."}},{"Name":"DQPARSEINFOGET","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the token names in a parse definition."}},{"Name":"DQPARSETOKENGET","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a token from a parsed character value."}},{"Name":"DQPARSETOKENPUT","Type":"SAS_FUNCTION","Help":{"#cdata":"Inserts a token into a parsed character value and returns the updated parsed \ncharacter value."}},{"Name":"DQPATTERN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a pattern analysis from an input character value."}},{"Name":"DQSCHEMEAPPLY","Type":"SAS_FUNCTION","Help":{"#cdata":"Applies a scheme and returns a transformed value."}},{"Name":"DQSRVARCHJOB","Type":"SAS_FUNCTION","Help":{"#cdata":"Runs an dfPower Architect job on a DataFlux Integration Server and returns a job \nidentifier."}},{"Name":"DQSRVCOPYLOG","Type":"SAS_FUNCTION","Help":{"#cdata":"Copies a job's log file from a DataFlux Integration Server."}},{"Name":"DQSRVDELETELOG","Type":"SAS_FUNCTION","Help":{"#cdata":"Deletes a job's log file from a DataFlux Integration Server."}},{"Name":"DQSRVJOBSTATUS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the status of a job that was submitted to a DataFlux Integration Server."}},{"Name":"DQSRVKILLJOB","Type":"SAS_FUNCTION","Help":{"#cdata":"Terminates a job that is running on a DataFlux Integration Server."}},{"Name":"DQSRVPROFJOBFILE","Type":"SAS_FUNCTION","Help":{"#cdata":"Runs a file-type Profile job on a DataFlux Integration Server and returns a job \nidentifier."}},{"Name":"DQSRVPROFJOBREP","Type":"SAS_FUNCTION","Help":{"#cdata":"Runs a repository-type Profile job on a DataFlux Integration Server and returns \na job identifier."}},{"Name":"DQSRVUSER","Type":"SAS_FUNCTION","Help":{"#cdata":"Authenticates a user on a DataFlux Integration Server."}},{"Name":"DQSTANDARDIZE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a character value after standardizing casing, spacing, and format, and \napplies a common representation to certain words and abbreviations."}},{"Name":"DQTOKEN","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a token from a character value."}},{"Name":"EFFRATE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the effective annual interest rate.\n    \nSyntax:\nEFFRATE(compounding-interval, rate) \n\nRequired Arguments:\ncompounding-interval \n  is a SAS interval. This value represents how often rate compounds. \n\nrate \n  is numeric. rate is a nominal annual interest rate (expressed as a percentage) that \n  is compounded at each compounding interval."}},{"Name":"MVALID","Type":"SAS_FUNCTION","Help":{"#cdata":"Checks the validity of a character string for use as a SAS member name.\n    \nSyntax:\nMVALID(libname, string, memtype<,validmemname>) \n\nRequired Arguments:\nlibname \n  specifies a character constant, variable, or expression that associates a SAS library \n  with a libref. Leading and trailing blanks are ignored. \nstring \n  specifies a character constant, variable, or expression that is checked to determine \n  whether its value can be used as a SAS member name. Leading and trailing blanks are ignored. \nmemtype \n  specifies a character constant, variable, or expression that is the member type of the \n  member name that you are using. Leading and trailing blanks are ignored. The value of \n  memtype is not validated. The following member types are available: \n\n    ACCESS specifies access descriptor files that are created by SAS/ACCESS.  \n    CATALOG specifies SAS catalogs. \n    DATA specifies SAS data files. \n    FDB specifies a financial database. \n    ITEMSTOR specifies a SAS data set that consists of pieces of information that can be \n      accessed independently. The SAS Registry is an example of an item store.  \n    MDDB specifies a multidimensional database. \n    PROGRAM specifies stored compiled SAS programs. \n    VIEW specifies SAS views. \n\nOptional Argument:\nvalidmemname \n  specifies a character constant, variable, or expression. The values for validmemname can \n  be uppercase or lowercase. Leading and trailing blanks are ignored. The following list \n  contains the values that you can use with validmemname: \n    COMPAT | COMPATIBLE\n    EXTEND      \n    Default: VALIDMEMNAME= is set to COMPAT."}},{"Name":"NOMRATE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the nominal annual interest rate.\n    \nSyntax:\nNOMRATE(compounding-interval, rate) \n\nRequired Arguments:\ncompounding-interval \n  is a SAS interval. This value represents how often the returned value is compounded. \nrate \n  is numeric. rate is the effective annual interest rate (expressed as a percentage) \n  that is compounded at each interval."}},{"Name":"SAVINGS","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the balance of a periodic savings by using variable interest rates.\n    \nSyntax:\nSAVINGS(base-date, initial-deposit-date, deposit-amount, deposit-number, \ndeposit-interval, compounding-interval, date-1, rate-2 <,date-2, rate-2,...>) \n\nRequired Arguments: \nbase-date \n  is a SAS date. The value that is returned is the balance of the savings at base-date. \ninitial-deposit-date \n  is a SAS date. initial-deposit-date is the date of the first deposit. Subsequent deposits \n  are at the beginning of subsequent deposit intervals. \ndeposit-amount \n  is numeric. All deposits are assumed constant. deposit-amount is the value of each deposit. \ndeposit-number \n  is a positive integer. deposit-number is the number of deposits. \ndeposit-interval \n  is a SAS interval. deposit-interval is the frequency at which deposits are made. \ncompounding-interval \n  is a SAS interval. compounding-interval is the compounding interval. \ndate \n  is a SAS date. Each date is paired with a rate. date is the time that rate takes effect. \nrate \n  is a numeric percentage. Each rate is paired with a date. rate is the interest rate that \n  starts on date."}},{"Name":"SOAPWEB","Type":"SAS_FUNCTION","Help":{"#cdata":"Calls a Web service by using basic Web authentication; credentials are provided in the arguments.\n    \nSyntax:\nSOAPWEB (IN, URL <,options>) \n\nRequired Arguments:\nIN \n  specifies a character value that is the fileref. IN is used to input XML data that contains the SOAP request. \nURL \n  specifies a character value that is the URL of the Web service endpoint. \n\nOptional Arguments:\nOUT \n  specifies a character value that is the fileref where the SOAP response output XML will be written. \nSOAPACTION \n  specifies a character value that is a SOAPAction element to invoke on the Web service. \nWEBUSERNAME \n  specifies a character value that is a user name for either basic or NTLM Web authentication. \nWEBPASSWORD \n  specifies a character value that is a password for either basic or NTLM Web authentication. \n  Encodings that are produced by PROC PWENCODE are supported. \nWEBDOMAIN \n  specifies a character value that is the domain or realm for the user name and password for NTLM authentication. \nMUSTUNDERSTAND \n  specifies a numeric value that is the setting for the mustUnderstand attribute in the SOAP header. \nPROXYPORT \n  specifies a numeric value that is an HTTP proxy server port. \nPROXYHOST \n  specifies a character value that is an HTTP proxy server host. \nPROXYUSERNAME \n  specifies a character value that is an HTTP proxy server user name. \nPROXYPASSWORD \n  specifies a character value that is an HTTP proxy server password. Encodings that are produced by PROC PWENCODE are supported. \nCONFIGFILE \n  specifies a character value that is a Spring configuration file that is used primarily to set time-out values. \nDEBUG \n  specifies a character value that is the full path to a file that is used for debugging logging output."}},{"Name":"SOAPWEBMETA","Type":"SAS_FUNCTION","Help":{"#cdata":"Calls a Web service by using basic Web authentication; credentials for the authentication \ndomain are retrieved from metadata. \n\nSyntax:\nSOAPWEBMETA (IN, URL <,options>) \n\nRequired Arguments:\nIN \n  specifies a character value that is the fileref. IN is used to input XML data that contains the SOAP request. \nURL \n  specifies a character value that is the URL of the Web service endpoint. \n\nOptional Arguments:\nOUT \n  specifies a character value that is the fileref where the SOAP response output XML will be written. \nSOAPACTION \n  specifies a character value that is a SOAPAction element to invoke on the Web service. \nWEBAUTHDOMAIN \n  specifies a character value that is the authentication domain from which to retrieve a user \n  name and password from metadata for basic Web authentication. \nMUSTUNDERSTAND \n  specifies a numeric value that is the setting for the mustUnderstand attribute in the SOAP header. \nPROXYPORT \n  specifies a numeric value that is an HTTP proxy server port. \nPROXYHOST \n  specifies a character value that is an HTTP proxy server host. \nPROXYUSERNAME \n  specifies a character value that is an HTTP proxy server user name. \nPROXYPASSWORD \n  specifies a character value that is an HTTP proxy server password. Encodings that are produced \n  by PROC PWENCODE are supported. \nCONFIGFILE \n  specifies a character value that is a Spring configuration file that is used primarily to set time-out values. \nDEBUG \n  specifies a character value that is the full path to a file that is used for debugging logging output."}},{"Name":"SOAPWIPSERVICE","Type":"SAS_FUNCTION","Help":{"#cdata":"Calls a SAS registered Web service by using WS-Security authentication; credentials \nare provided in the arguments.\n\nSyntax:\nSOAPWIPSERVICE (IN, SERVICE <,options>) \n\nRequired Arguments:\nIN \n  specifies a character value that is the fileref. IN is used to input XML data that contains the SOAP request. \nSERVICE \n  specifies the service name of the endpoint service as the service is stored in the Service Registry. \n\nOptional Arguments:\nOUT \n  specifies a character value that is the fileref where the SOAP response output XML will be written. \nSOAPACTION \n  specifies a character value that is a SOAPAction element to invoke on the Web service. \nWSSUSERNAME \n  specifies a character value that is a WS-Security user name. \nWSSPASSWORD \n  specifies a character value that is a WS-Security password, which is the password for WSSUSERNAME. \n  Encodings that are produced by PROC PWENCODE are supported. \nENVFILE \n  specifies a character value that is the location of the SAS environments file. \nENVIRONMENT \n  specifies a character value that is the environment defined in the SAS environments file to use. \nMUSTUNDERSTAND \n  specifies a numeric value that is the setting for the mustUnderstand attribute in the SOAP header. \nCONFIGFILE \n  specifies a character value that is a Spring configuration file that is used primarily to set time-out values. \nDEBUG \n  specifies a character value that is the full path to a file that is used for debugging logging output."}},{"Name":"SOAPWIPSRS","Type":"SAS_FUNCTION","Help":{"#cdata":"Calls a SAS registered Web service by using WS-Security authentication; credentials \nare provided in the arguments.\n\nSyntax:\nSOAPWIPSRS (IN, URL, SRSURL<,options>) \n\nRequired Arguments:\nIN \n  specifies a character value that is the fileref. IN is used to input XML data that contains \n  the SOAP request. \nURL \n  specifies a character value that is the URL of the Web service endpoint. \nSRSURL \n  specifies a character value that is the URL of the System Registry Service. \n\nOptional Arguments:\nOUT \n  specifies a character value that is the fileref where the SOAP response output XML will be written. \nSOAPACTION \n  specifies a character value that is a SOAPAction element to invoke on the Web service. \nWSSUSERNAME \n  specifies a character value that is a WS-Security user name. \nWSSPASSWORD \n  specifies a character value that is a WS-Security password, which is the password for WSSUSERNAME. \n  Encodings that are produced by PROC PWENCODE are supported. \nMUSTUNDERSTAND \n  specifies a numeric value that is the setting for the mustUnderstand attribute in the SOAP header. \nCONFIGFILE \n  specifies a character value that is a Spring configuration file that is used primarily to set \n  time-out values. \nDEBUG \n  specifies a character value that is the full path to a file that is used for debugging \n  logging output."}},{"Name":"SOAPWS","Type":"SAS_FUNCTION","Help":{"#cdata":"Calls a Web service by using WS-Security authentication; credentials are provided \nin the arguments. \n\nSyntax:\nSOAPWS (IN, URL<,options>) \n\nRequired Arguments:\nIN \n  specifies a character value that is the fileref. IN is used to input XML data that contains the SOAP request. \nURL \n  specifies a character value that is the URL of the Web service endpoint. \n\nOptional Arguments:\nOUT \n  specifies a character value that is the fileref where the SOAP response output XML will be written. \nSOAPACTION \n  specifies a character value that is a SOAPAction element to invoke on the Web service. \nWSSUSERNAME \n  specifies a character value that is a WS-Security user name. \nWSSPASSWORD \n  specifies a character value that is a WS-Security password, which is the password for WSSUSERNAME. \n  Encodings that are produced by PROC PWENCODE are supported. \nMUSTUNDERSTAND \n  specifies a numeric value that is the setting for the mustUnderstand attribute in the SOAP header. \nPROXYPORT \n  specifies a numeric value that is an HTTP proxy server port. \nPROXYHOST \n  specifies a character value that is an HTTP proxy server host. \nPROXYUSERNAME \n  specifies a character value that is an HTTP proxy server user name. \nPROXYPASSWORD \n  specifies a character value that is an HTTP proxy server password. Encodings that are produced \n  by PROC PWENCODE are supported. \nCONFIGFILE \n  specifies a character value that is a Spring configuration file that is used primarily to set time-out values. \nDEBUG \n  specifies a character value that is the full path to a file that is used for debugging logging output."}},{"Name":"SOAPWSMETA","Type":"SAS_FUNCTION","Help":{"#cdata":"Calls a Web service by using WS-Security authentication; credentials for the provided \nauthentication domain are retrieved from metadata.\n\nSyntax: \nSOAPWSMETA (IN, URL <,options>) \n\nRequired Arguments:\nIN \n  specifies a character value that is the fileref. IN is used to input XML data that contains the SOAP request. \nURL \n  specifies a character value that is the URL of the Web service endpoint. \n\nOptional Arguments:\nOUT \n  specifies a character value that is the fileref where the SOAP response output XML will be written. \nSOAPACTION \n  specifies a character value that is a SOAPAction element to invoke on the Web service. \nWSSAUTHDOMAIN \n  specifies a character value that is the authentication domain for which to retrieve credentials \n  to be used for WS-Security authentication. \nMUSTUNDERSTAND \n  specifies a numeric value that is the setting for the mustUnderstand attribute in the SOAP header. \nPROXYPORT \n  specifies a numeric value that is an HTTP proxy server port. \nPROXYHOST \n  specifies a character value that is an HTTP proxy server host. \nPROXYUSERNAME \n  specifies a character value that is an HTTP proxy server user name. \nPROXYPASSWORD \n  specifies a character value that is an HTTP proxy server password. Encodings that are produced \n  by PROC PWENCODE are supported. \nCONFIGFILE \n  specifies a character value that is a Spring configuration file that is used primarily to set time-out values. \nDEBUG \n  specifies a character value that is the full path to a file that is used for debugging logging output."}},{"Name":"SQUANTILE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the quantile from a distribution when you specify the right probability (SDF). \n\nSyntax:\n  SQUANTILE(dist, probability, parm-1, ... , parm-k) \n\nRequired Arguments \ndist \n  is a character constant, variable, or expression that identifies the distribution. \n  Valid distributions are as follows: \n      Bernoulli  BERNOULLI \n      Beta  BETA \n      Binomial  BINOMIAL \n      Cauchy  CAUCHY \n      Chi-Square  CHISQUARE \n      Exponential  EXPONENTIAL \n      F  F \n      Gamma  GAMMA \n      Generalized Poisson  GENPOISSON \n      Geometric  GEOMETRIC \n      Hypergeometric  HYPERGEOMETRIC \n      Laplace  LAPLACE \n      Logistic  LOGISTIC \n      Lognormal  LOGNORMAL \n      Negative binomial  NEGBINOMIAL \n      Normal  NORMAL|GAUSS \n      Normal mixture  NORMALMIX \n      Pareto  PARETO \n      Poisson  POISSON \n      T  T \n      Tweedie  TWEEDIE \n      Uniform  UNIFORM \n      Wald (inverse Gaussian)  WALD|IGAUSS \n      Weibull  WEIBULL \n\nprobability \n  is a numeric constant, variable, or expression that specifies the value of a random variable. \nparm-1,\u2026,parm-k \n  are optional shape, location, or scale parameters that are appropriate for the specific distribution."}},{"Name":"SYSEXIST","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a value that indicates whether an operating-environment variable exists \nin your environment.\n\nSyntax:\nSYSEXIST (argument) \n\nRequired Argument:\nargument \n  specifies a character variable that is the name of an operating-environment variable that \n  you want to test."}},{"Name":"TIMEVALUE","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the equivalent of a reference amount at a base date by using variable \ninterest rates.\n \nSyntax: \nTIMEVALUE(base-date, reference-date, reference-amount, compounding-interval,\n  date-1, rate-1 <,date-2, rate-2,...>) \n\nRequired Arguments:\nbase-date \n  is a SAS date. The value that is returned is the time value of reference-amount at base-date. \nreference-date \n  is a SAS date. reference-date is the date of reference-amount. \nreference-amount \n  is numeric. reference-amount is the amount at reference-date. \ncompounding-interval \n  is a SAS interval. compounding-interval is the compounding interval. \ndate \n  is a SAS date. Each date is paired with a rate. date is the time that rate takes effect. \nrate \n  is a numeric percentage. Each rate is paired with a date. rate is the interest \n  rate that starts on date."}},{"Name":"INVCDF","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid for PROC FCMP only!]\n\nComputes the quantile from any distribution for which you have defined a cumulative \ndistribution function (CDF).\n\nSyntax:\nquantile=INVCDF('CDF-function-name', options-array, cumulative-probability, \nparameter-1, parameter-2, ..., parameter-n); \n\nRequired Arguments:\nquantile \n  specifies the quantile that is returned from the INVCDF function. \n'CDF-function-name' \n  specifies the name of the CDF function. Enclose CDF-function-name in quotation marks. \n\n  Requirement:CDF-function-name must be a function defined using the FCMP procedure. It must \n  have a signature as follows: \n    function <CDF-function-name> (x, parameter-1, parameter-2, \u2026, parameter-n);\n    endsub;\n  \noptions-array \n  specifies an array of options to use with the INVCDF function. Options-array is used to \n  control and monitor the process of inverting the CDF. Options-array can be a missing value (.), \n  or it can have up to four of the following elements in the following order: \n    initial-value \n      specifies the initial guess for the quantile at which the inversion process starts. This is \n      useful when you have an idea of the approximate value for quantile. The default for initial-value is 0.1. \n    desired-accuracy \n      specifies the desired relative accuracy of the quantile. You can specify any value in the range (0,0.1).\n      The default for desired-accuracy is 1.0e-8.\n    domain-type \n      specifies the domain for the CDF function. A missing value or a value of 0 indicates a nonnegative \n      support, that is [0,\u221e). Any other value indicates a support over the entire real line, that is (-\u221e,\u221e). \n      The default for domain-type is 0. \n    return-code \n      specifies the return status. If options-array is of dimension 4 or more, then the fourth element contains \n      the return status. Return-code can have one of the following values: \n        <=0 \n          indicates success. If negative, then the absolute value is the number of times the CDF function was \n          evaluated in order to compute the quantile. A larger absolute value indicates longer convergence time. \n        1 \n          indicates that the quantile could not be computed. \ncumulative-probability \n  specifies the cumulative probability value for which the quantile is desired. This must be in the range [0,1). \nparameters \n  specifies the parameters of the distribution at which the quantile is desired. You must specify exactly the \n  same number of parameters as required by the specified CDF function, and they should appear exactly in the \n  same order as required by the specified CDF function."}},{"Name":"ISNULL","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid for PROC FCMP only!]\n\nDetermines whether a pointer element of a structure is null.\n\nSyntax:\nnumeric-variable = ISNULL(pointer-element); \n\nRequired Arguments:\nnumeric-variable \n  specifies a numeric value. \npointer-element \n  specifies a variable that contains the address of another variable."}},{"Name":"LIMMOMENT","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid for PROC FCMP only!]\n\nComputes the limited moment of any distribution for which you have defined a cumulative distribution function (CDF). \n\nSyntax:\nimom=LIMMOMENT('CDF-function-name', options-array, order, limit, \n\nparameter-1, parameter-2, parameter-n); \nRequired Arguments \nimom \n  specifies the limited moment that is returned from the LIMMOMENT function.\n'CDF-function-name' \n  specifies the name of the CDF function. Enclose CDF-function-name in quotation marks. \n\n  Requirement:CDF-function-name must be a function defined using the FCMP procedure. It must \n  have a signature as follows: \n    function <CDF-function-name> (x, parameter-1, parameter-2, \u2026, parameter-n);\n    endsub;\n  \noptions-array \n  specifies an array of options to use with the LIMMOMENT function. Options-array is used to \n  control and monitor the process of inverting the CDF. Options-array can be a missing value (.), \n  or it can have up to four of the following elements in the following order: \n    initial-value \n      specifies the initial guess for the quantile at which the inversion process starts. This is \n      useful when you have an idea of the approximate value for quantile. The default for initial-value is 0.1. \n    desired-accuracy \n      specifies the desired relative accuracy of the quantile. You can specify any value in the range (0,0.1).\n      The default for desired-accuracy is 1.0e-8.\n    domain-type \n      specifies the domain for the CDF function. A missing value or a value of 0 indicates a nonnegative \n      support, that is [0,\u221e). Any other value indicates a support over the entire real line, that is (-\u221e,\u221e). \n      The default for domain-type is 0. \n    return-code \n      specifies the return status. If options-array is of dimension 4 or more, then the fourth element contains \n      the return status. Return-code can have one of the following values: \n        <=0 \n          indicates success. If negative, then the absolute value is the number of times the CDF function was \n          evaluated in order to compute the quantile. A larger absolute value indicates longer convergence time. \n        1 \n          indicates that the quantile could not be computed. \norder \n  specifies the order of the desired limited moment. This value must be in the range [1,10]. \nlimit \n  specifies the upper limit that is used to compute the desired limited moment. This value must be greater than 0. \nparameters \n  specifies the parameters of the distribution at which the limited moment is desired. You must specify exactly \n  the same number of parameters as required by the specified CDF function, and they should appear exactly in \n  the same order as required by the specified CDF function."}},{"Name":"READ_ARRAY","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid for PROC FCMP only!]\n    \nReads data from a SAS data set into a PROC FCMP array variable.\n\nSyntax:\nrc = READ_ARRAY(data_set_name, array_variable <, 'col_name_1', ..., 'col_name_n'>); \n\nRequired Arguments:\nrc \n  is 0 if the function is able to successfully read the data set. \ndata_set_name \n  specifies the name of the data set from which the array data will be read. data_set_name must be \n  a character literal or variable that contains the member name (libname.memname) of the data set to \n  be read from. \narray_variable \n  specifies the PROC FCMP array variable into which the data is read. array_variable must be a local \n  temporary array variable because the function might need to grow or shrink its size to accommodate \n  the size of the data set. \n\nOptional Argument:\ncol_name \n  specifies optional names for the specific columns of the data set that will be read. \n  If specified, col_name must be a literal string enclosed in quotation marks. col_name cannot be a \n  PROC FCMP variable. If column names are not specified, PROC FCMP reads all of the columns in the data set."}},{"Name":"RUN_MACRO","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid for PROC FCMP only!]\n\nExecutes a predefined SAS macro.\n\nSyntax:\nrc = RUN_MACRO('macro_name' <, variable_1, ..., variable_n>); \n\nRequired Arguments:\nrc \n  is 0 if the function is able to submit the macro. The return code indicates only that the \n  macro call was attempted. The macro itself should set the value of a SAS macro variable that \n  corresponds to a PROC FCMP variable to determine whether the macro executed as expected. \nmacro_name \n  specifies the name of the macro to be run. \n  Requirement:macro_name must be a string enclosed in quotation marks or a character variable \n  that contains the macro to be executed. \n\nOptional Argument:\nvariable \n  specifies optional PROC FCMP variables, which are set by macro variables of the same name. \n  These arguments must be PROC FCMP double or character variables. \n  \n  Before SAS executes the macro, SAS macro variables are defined with the same name and value \n  as the PROC FCMP variables. After SAS executes the macro, the macro variable values are copied \n  back to the corresponding PROC FCMP variables."}},{"Name":"RUN_SASFILE","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid for PROC FCMP only!]\n    \nSyntax \nrc = RUN_SASFILE('fileref_name' <, variable-1, ..., variable-n>); \n\nRequired Arguments:\nrc \n  is 0 if the function is able to submit a request to execute the code that processes the SAS file. \n  The return code indicates only that the call was attempted. \nfileref_name \n  specifies the name of the SAS fileref that points to the SAS code. \n  Requirement:fileref_name must be a string enclosed in quotation marks or a character variable \n  that contains the name of the SAS fileref. \n\nOptional Argument:\nvariable \n  specifies optional PROC FCMP variables that will be set by macro variables of the same name. \n  These arguments must be PROC FCMP double or character variables. \n  \n  Before SAS executes the code that references the SAS file, the SAS macro variables are defined \n  with the same name and value as the PROC FCMP variables. After execution, these macro variable \n  values are copied back to the corresponding PROC FCMP variables."}},{"Name":"SOLVE","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid for PROC FCMP only!]\n    \nComputes implicit values of a function.\n\nSyntax:\nanswer = SOLVE('function-name', options-array, expected-value, argument-1, ..., argument-n); \n\nRequired Arguments:\nanswer \n  specifies the value that is returned from the SOLVE function. \n'function-name' \n  specifies the name of the function. Enclose function-name in quotation marks. \noptions-array \n  specifies an array of options to use with the SOLVE function. Options-array is used to control and \n  monitor the root-finding process. Options-array can be a missing value (.), or it can have up to five \n  of the following elements in the following order:   \n    initial-value \n      specifies the starting value for the implied value. The default for the first call is 0.001. If \n      the same line of code is executed again, then options-array uses the previously found implied value. \n    absolute-criterion \n      specifies a value for convergence. The absolute value of the difference between the expected value \n      and the predicted value must be less than the value of absolute-criterion for convergence. \n      Default:1.0e\u201312 \n    relative-criterion \n      specifies a value for convergence. When the change in the computed implied value is less than the \n      value of relative-criterion, then convergence is assumed. \n      Default:1.0e\u20136 \n    maximum-iterations \n      specifies the maximum number of iterations to use to find the solution. \n      Default:100 \n    solve-status \n      can be one of the following values: \n        0 successful. \n        1 could not decrease the error. \n        2 could not compute a change vector. \n        3 maximum number of iterations exceeded. \n        4 initial objective function is missing. \nexpected-value \n  specifies the expected value of the function of interest. \nargument \n  specifies the arguments to pass to the function that is being minimized."}},{"Name":"WRITE_ARRAY","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid for PROC FCMP only!]\n    \nSyntax:\nrc = WRITE_ARRAY(data_set_name, array_variable <, 'col_name_1', ..., 'col_name_n'>); \n\nRequired Arguments:\nrc \n  is 0 if the function is able to successfully write the data set. \ndata_set_name \n  specifies the name of the data set to which the array data will be written. data_set_name must \n  be a character literal or variable that contains the member name (libname.memname) of the data \n  set to be created. \narray_variable \n  specifies the PROC FCMP array or matrix variable whose contents will be written to data_set_name. \n\nOptional Argument:\ncol_name \n  specifies optional names for the columns of the data set that will be created. \n  If specified, col_name must be a literal string enclosed in quotation marks. col_name cannot be \n  a PROC FCMP variable. If column names are not specified, the column name will be the array name \n  with a numeric suffix."}},{"Name":"GRDSVC_ENABLE","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid in: %SYSFUNC or %QSYSFUNC Macro, DATA step]\n    \nEnables or disables one or all SAS sessions on a grid. \n\nSyntax:\ngrdsvc_enable(identifier <, option-1; ... option-n> ) \ngrdsvc_enable(identifier,\"\" | \" ) \n\nRequired Argument:\nidentifier \n  specifies one or all server sessions to be enabled or disabled for grid execution. The identifier \n  is specified as follows: \n  \n    server-ID \n      specifies the name of a SAS/CONNECT server session to be enabled or disabled for grid execution. \n    _ALL_ \n      specifies that all SAS sessions are enabled or disabled for grid execution. \n\nOptional Arguments:\nSASAPPSERVER=server-value | SERVER=server-value | RESOURCE=server-value\n  specifies the name of a SAS Application Server that has been defined in the SAS Metadata Repository. \n  The SAS Application Server contains the definition for the logical grid server that defines the grid environment. \n\nWORKLOAD=workload-value \nidentifies the resource for the job to be executed on the grid. This value specifies an additional \nresource requirement for which Platform Suite for SAS selects the appropriate grid nodes.\n\nJOBNAME=job-name-macro-variable \nspecifies the macro variable that contains the name that is assigned to the job that is executed on the grid. \n\nJOBOPTS=job-opts-macro-variable \n  specifies the macro variable that contains the job options. The job option name/value pairs are \n  assigned to job-opts-macro-variable. \n\n\"\" | \" \ndisables grid execution for the specified server ID or all server sessions."}},{"Name":"GRDSVC_GETADDR","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid in: %SYSFUNC or %QSYSFUNC Macro, DATA step] \n    \nReports the IP address of the grid node on which the SAS session was chosen to execute. \n    \nSyntax:\ngrdsvc_getaddr(identifier)\n\nRequired Argument:\nidentifier \n  identifies the server session that is executing on the grid. The identifier can be specified \n  as follows: \n\n    \"\"| \" \n      is an empty string that is used to refer to the computer on which the function is executing. \n    \n    server-ID \n      specifies the server session that is executing on a grid."}},{"Name":"GRDSVC_GETINFO","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid in: %SYSFUNC or %QSYSFUNC Macro, DATA step] \n    \nReports information about the grid environment.\n\nSyntax:\ngrdsvc_getinfo(identifier)\n\nRequired Argument:\nidentifier \n  specifies the server session or the SAS Application Server whose details you want to have reported \n  to the SAS log. The identifier is specified as follows: \n  \n    server-ID \n      reports details about the specified server ID. The details that are returned by the GRDSRV_INFO \n      function reflect the arguments that are specified in the GRDSVC_ENABLE function. \n      Requirement:A server-ID cannot exceed eight characters. \n    \n    _ALL_ \n      reports details about all server IDs to the SAS log. The details that are returned by the \n      GRDSRV_INFO function reflect the arguments that are specified in the GRDSVC_ENABLE function. \n    \n    SASAPPSERVER=SAS-application-server | SERVER=SAS-application-server | SERVER=SAS-application-server\n      reports information about the specified SAS Application Server to the SAS log. \n    \n    _SHOWID_ \n      lists each server session and its status: enabled for grid execution, enabled for SMP execution, or disabled."}},{"Name":"GRDSVC_GETNAME","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid in: %SYSFUNC or %QSYSFUNC Macro, DATA step] \n    \nReports the name of the grid node on which the SAS grid server session was chosen to execute. \n\nSyntax:\ngrdsvc_getname(identifier)\n\nRequired Argument:\nidentifier \n  identifies the server session that is executing on the grid. The identifier can be specified as follows: \n\n    \"\" | \" \n      is an empty string that is used to refer to the computer at which the statement is executed. \n\n    server-ID \n      specifies the server session that is executing on a grid. \n      You use the same server-ID that you used to sign on to a server session using the RSUBMIT \n      statement or the SIGNON statement.\n      \n      If the function is used in a DATA step, enclose server-ID in double or single quotation marks"}},{"Name":"GRDSVC_NNODES","Type":"SAS_FUNCTION","Help":{"#cdata":"[Valid in: %SYSFUNC or %QSYSFUNC Macro, DATA step] \n    \nReports the total number of job slots that are available for use on a grid. \n\nSyntax:\ngrdsvc_nnodes(argument;option) \n\nRequired Argument:\n  SASAPPSERVER=SAS-application-server | SERVER=SAS-application-server | RESOURCE=SAS-application-server\n    specifies the name of the SAS Application Server that has been defined in the SAS Metadata Repository. \n\nOptional Argument:\n  WORKLOAD=workload-value \n    identifies the resource for the type of job to be executed on the grid. This value specifies the \n    workload requirements for which Platform Suite for SAS selects the grid nodes that contain these \n    resources. \n    \n    The specified workload value should match one of the workload values that is defined in the \n    SAS Application Server in the SAS Metadata Repository. \n    \n    Requirement:If you specify WORKLOAD=, you must also specify the SASAPPSERVER= option. Workload \n    values are case sensitive."}},{"Name":"COT","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the cotangent. \n    \nSyntax: COT(argument)\nRequired Argument:\nargument\n  specifies a numeric constant, variable, or expression and is expressed in radians.\n\n  Restriction: argument cannot be 0 or a multiple of PI."}},{"Name":"CSC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the cosecant. \n    \nSyntax: CSC(argument) \n\nRequired Argument:\nargument\n  specifies a numeric constant, variable, or expression and is expressed in radians.\n  \n  Restriction: argument cannot be 0 or a multiple of PI."}},{"Name":"DOSUBL","Type":"SAS_FUNCTION","Help":{"#cdata":"Imports macro variables from the calling environment, and exports macro variables back to the calling environment. \n    \nSyntax: DOSUBL(x)\nRequired Argument: \nx\n  specifies a text string.\n  \nDetails:\nThe DOSUBL function enables the immediate execution of SAS code after a text string is passed. \nMacro variables that are created or updated during the execution of the submitted code are exported \nback to the calling environment. \n\nDOSUBL returns a value of zero if SAS code was able to execute, and returns a nonzero value if SAS \ncode was not able to execute."}},{"Name":"FCOPY","Type":"SAS_FUNCTION","Help":{"#cdata":"Copies records from one fileref to another fileref, and returns a value that indicates whether the \nrecords were successfully copied. \n\nSyntax: FCOPY('fileref-1', 'fileref-2')\nRequired Arguments:\n'fileref-1'\n  specifies an existing fileref from which records are to be copied.\n'fileref-2'\n  specifies an existing fileref to which records are to be copied.\n\nDetails:\nValues That Are Returned by the FCOPY Function\n  FCOPY returns these values:\n    \u2022a value of 0 if records were copied without errors or warnings\n    \u2022a positive value if an error occurred\n    \u2022a negative value if a warning was issued\n  You can use the SYSMSG function to retrieve error or warning messages, and you can use the SYSRC \n  function to retrieve the return code.\n\nUsing Macro Variables with the FCOPY Function\n  The following macro variables provide information for the FCOPY function:\n    \u2022The &SYSCC and &SYSERR macro variables are set if FCOPY writes an error or warning message to the log.\n    \u2022The &SYSCC and &SYSERR macro variables are not set if FCOPY returns a warning return code and there \n      is no log output from FCOPY.\n    \u2022The &SYSERRORTEXT macro variable is set if FCOPY writes an error message to the log.\n    \u2022The &SYSWARNINGTEXT macro variable is set if FCOPY writes a warning message to the log."}},{"Name":"SEC","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the secant. \n \nSyntax: SEC(argument)\n\nRequired Argument:\nargument\n  specifies a numeric constant, variable, or expression and is expressed in radians.\n\n  Restriction: argument cannot be an odd multiple of PI/2."}},{"Name":"TYPEOF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns a value that indicates whether the argument is character or numeric.\n\nRestriction:\nThe TYPEOF function is used exclusively with the Graph Template Language (GTL) and in WHERE clauses, \nbut not in DATA steps.\n\nSyntax: TYPEOF(column) \n\nRequired Argument:\ncolumn\n  can have one of the following values:\n  C\n    indicates that the argument is a character value.\n  N\n    indicates that the argument is a numeric value."}},{"Name":"TZONEID|TZID","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the current time zone ID.\n\nAlias: TZID \n\nSyntax: TZID=TZONEID() \n\nDetails:\nThe TZONEID function returns a blank value is the TIMEZONE= option is blank or a user-defined time zone is specified."}},{"Name":"TZONENAME","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the current standard or daylight savings time, time zone name.\n\nSyntax: TZONENAME() | TZONENAME<time-zone-id>\n\nOptional Argument: \ntime-zone-id\n  specifies a region/area value that is defined by SAS. When you specify a zone ID, the time zone that SAS uses \n  is determined by time zone name and daylight savings time rules.\n\nDetails:\nThe TZONENAME function returns a blank value if the TIMEZONE= option is blank."}},{"Name":"TZONEOFF","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the user time zone offset.\n\nSyntax: TZONEOFF() | TZONEOFF(<time-zone-id, time-zone-name>)\n\nOptional Arguments:\ntime-zone-id\n  specifies a region/area value that is defined by SAS. When you specify a time zone ID, the time zone \n  that SAS uses is determined by time zone name and daylight savings time rules."}},{"Name":"TZONES2U","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts a SAS date time value to a UTC date time value. \n    \nSyntax: TZONES2U <datetime, time-zone-name> \n\nOptional Arguments: \ndatetime \n  specifies a SAS datetime value. \ntime-zone-name\n  specifies a predefined time zone. Predefined time zone names take into consideration standard and daylight saving \n  time, and rules for daylight savings time for that time zone."}},{"Name":"TZONEU2S","Type":"SAS_FUNCTION","Help":{"#cdata":"Converts a UTC date time value to a SAS date time value. \n    \nSyntax: TZONEU2S <time-zone-ID> \n\nOptional Argument:\ntime-zone-ID\n  specifies a region/area value that is defined by SAS. When you specify a zone ID, the time zone that \n  SAS uses is determined by time zone name and daylight savings time rules.Note:Time zone IDs are compatible \n  with Java time zone names."}},{"Name":"SHA256","Type":"SAS_FUNCTION","Help":{"#cdata":"Returns the result of the message digest of a specified string.\n\nSyntax: SHA256(string) \n\nRequired Argument:\nstring\n  specifies a character constant, variable, or expression.\n\nDetails:\n\nThe Basics\n  The SHA256 function converts a string, based on the SHA256 algorithm, to a 256-bit hash value. \n\n  The SHA256 function does not format its own output. Use the $BINARYw. or $HEXw. formats to view readable results.\n\n  z/OS Specifics\n  In the z/OS operating environment, because the SHA256 function might be operating on EBCDIC data, the message \n  digest is different from the ASCII equivalent. For example, SHA256('ABC') on an EBCDIC system means that SHA256 \n  receives the bytes 'C1C2C3'x and the digest is 5202BF40821662BF1AD7D9C9B558056775D9D6BF8AA1C00492BCA8556B02772F, \n  whereas on an ASCII system, 'ABC' is '414243'x and the digest is \n  B5D4045C3F466FA91FE2CC6ABE79232A1A57CDF104F7A26E716E0A1E2789DF78."}},{"Name":"CLIBEXIST","Type":"CAS_FUNCTION","Help":{"#cdata":"Syntax: CLIBEXIST(session name,caslib name)\n    \nReturns 0 when the specified caslib name is not found and 1 when the caslib is found. \n\nArguments:\nsession name\n  a valid session name\ncaslib name\n  a valid caslib name."}},{"Name":"GETCASURL","Type":"CAS_FUNCTION","Help":{"#cdata":"The SAS function GETCASURL returns the URL value for connecting to the CAS Server Monitor \nfor a CAS server. This function takes no parameters. \n\nRequirements: \no The server name identified by the SAS CASHOST= option is used when constructing the URL. \n  For example, \"rdcgrd001.unx.sas.com\". \n  \no The SAS SESSREF= option identifies a connection to the server identified by CASHOST=. \n  This connection is used to obtain additional URL information. \n\nExample:\n%put httpaddr= %sysfunc(getcasurl());\nhttp://rdcgrd001.unx.sas.com:38281"}},{"Name":"GETLCASLIB","Type":"CAS_FUNCTION","Help":{"#cdata":"Syntax: GETLCASLIB(libref)\n    \nReturns the caslib that was bound to a CAS LIBNAME engine libref in the CASLIB= option when it was assigned. \n\nNote:\nIf a caslib is not bound, then the active caslib is returned.\n    \nArgument:\nlibref\n  specifies the caslib name that is associated with the library reference. "}},{"Name":"GETLSESSREF","Type":"CAS_FUNCTION","Help":{"#cdata":"Syntax: GETLSESSREF (libref) \n\nReturns the session reference that is associated with a CAS LIBNAME engine libref. \n\nArgument:\nlibref\n  specifies the session reference name."}},{"Name":"GETLTAG","Type":"CAS_FUNCTION","Help":{"#cdata":"Syntax: GETLTAG(libref) \n\nReturns the tag that was associated with a CAS LIBNAME engine libref in the TAG= option when it is assigned. \n\nNotes:\nIf a tag was not associated, a zero-length string (\"\") is returned. \nThe TAG= option is rarely used. It is useful after loading a server-side file into memory from \na caslib that enables access to subdirectories with CASL. \n\nArgument:\nlibref\nspecifies the tag that is associated with the library reference. "}},{"Name":"SESSFOUND","Type":"CAS_FUNCTION","Help":{"#cdata":"The SAS function SESSFOUND returns 0 when not found and 1 when the session is found. This function only \nhas access to sessions connected using SAS Client interfaces. To return a full set of sessions known \nto the CAS server use Proc CAS and the \"listsessions\" action or the CAS statement. \n\n  CAS mySess LISTSESSIONS ;\n\nThe SESSFOUND function has one parameter session name. The result is 0 for not found and 1 for found. \n\nExample:\n\n%put doIExist= %sysfunc(sessfound(mysess));\ndoIExist= 0\n \n%put doIExist= %sysfunc(sessfound(existingSession));"}},{"Name":"GETSESSOPT","Type":"CAS_FUNCTION","Help":{"#cdata":"The SAS function GETSESSOPT returns the value for a Cloud Analytic Services (CAS) session option.\n    \nEach CAS session has a set of server-side session options. \n\nThe GETSESSOPT function has two parameters: \n a session name. \n a session option name. You can use CAS mysess LISTSESSOPTS; to list the session option names or read \n    them from the CASSESSOPTS= system option documentation.\n\nExample: List the active caslib\n\nSpecify code like the following to return the value of the CASLIB option. \n\n%put caslib = %sysfunc(GETSESSOPT(mysess, caslib)) ;\n \ndata work.one ; \n  x = GETSESSOPT(\"mysess\", \"caslib\") ; \n  put x= ;\nrun;"}},{"Name":"ISDOUBLE","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns true if the type of value (parameter) is double; otherwise, it returns false.\n \n Boolean  isDouble (value);"}},{"Name":"ISINTEGER","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns true if the type of value (parameter) is integer; otherwise, it returns false.\n \n Boolean  isInteger (value);"}},{"Name":"ISDICTIONARY","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns true if the type of value (parameter) is dictionary; otherwise, it returns false.\n \n Boolean  isDictionary (value);"}},{"Name":"ISARRAY","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns true if the type of value (parameter) is array; otherwise, it returns false.\n \n Boolean  isArray (value);"}},{"Name":"ISTABLE","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns true if the type of value (parameter) is table; otherwise, it returns false.\n \n Boolean  isTable (value);"}},{"Name":"ISLIST","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns true if the type of value (parameter) is list; otherwise, it returns false.\n \n Boolean  isList (value);"}},{"Name":"ISSTRING","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns true if the type of value (parameter) is string; otherwise, it returns false.\n \n Boolean  isString (value);"}},{"Name":"ISBLOB","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns true if the type of value (parameter) is blob; otherwise, it returns false.\n \n Boolean  isBlob (value);"}},{"Name":"ISTYPE","Type":"CAS_FUNCTION","Help":{"#cdata":"This is a generic version where the type is specified as the first argument.\n    \nisType( \"<type>\", value);"}},{"Name":"NEWTABLE","Type":"CAS_FUNCTION","Help":{"#cdata":"Creates a new table. \n    \n  o 1st argument is a list of column names\n  o 2nd argument is a list of types for each column\n  o any further arguments are rows to be added to the table \n  o A table with the given rows is returned. No rows are required.\n\nExample:\n columns = {\"make\", \"MSRP\", \"HP\", \"cylinders\"};\n coltypes = {\"varchar\", \"int64\", \"integer\",\"int64\"};\n row1 = {\"dodge\", 20000, 250, 4};\n row2 = {\"ford\", 30000, 200, 6};\n table = newtable( \"cars\", columns, coltypes, row1, row2,...};\n \nThe name of the table can be specified as the first argument, but is not required. The default name is \"nodeList\"."}},{"Name":"ADD_TABLE_ATTR","Type":"CAS_FUNCTION","Help":{"#cdata":"The ADD_TABLE_ATTR adds attributes to a table. The first parameter is the table. Then pairs of values are specified as the key and value. \n\n  rc =  add_table_attr( table, \"Actionset\",\"tkimstat\",  \"Action\",\"Summary\");\n\nYou may print the attributes of a table as \n\n   print table.attr;"}},{"Name":"DISCARD","Type":"CAS_FUNCTION","Help":{"#cdata":"Discards the variables that are listed as arguments:\n    \nx[10] = 1;\ny = 2;\ndiscard(x,y);"}},{"Name":"TABCOLUMNS","Type":"CAS_FUNCTION","Help":{"#cdata":"Gets the columns for a table:\n    \n  columns = tabcolumns( table);"}},{"Name":"TABTYPES","Type":"CAS_FUNCTION","Help":{"#cdata":"Gets the types for a table.\n    \n coltypes  = tabtypes( table);\n\nThis and the TABCOLUMNS function are useful when creating a new table from an existing table."}},{"Name":"PRINTTABLE","Type":"CAS_FUNCTION","Help":{"#cdata":"This prints a table to the specified location. This function allows better control over the output a table \nas compared to \"print table\"; \n\n printtable(table, \"<fileref>\", columns)\n\nfileref can be:\n o ods -- uses the default print location with ODS output when appropriate.\n o log -- uses the default print location, but do not use ODS; uses the internal format routines.\n o <name> -- uses the named fileref location for output.\n o file:<path> -- uses the given path as the location for output. This file is closed after the table has been written.\n\n\ncolumns specifies the number of columns to be printed per line."}},{"Name":"ADDROW","Type":"CAS_FUNCTION","Help":{"#cdata":"Adds row to table.\n    \n  addrow(table,row1);"}},{"Name":"FINDTABLE","Type":"CAS_FUNCTION","Help":{"#cdata":"This function will search the given value for the first table it sees. This is useful when a result \nfrom an action has a table result, but you do not know the name, you just know it is there. \n\n  table = findtable( result);"}},{"Name":"TRACEBACK","Type":"CAS_FUNCTION","Help":{"#cdata":"This will return a string consisting of the traceback from the current function.\n    \n  tb = traceback();"}},{"Name":"DICTIONARY","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns the value of a key from a dictionary. \n    \n  y = dictionary(dict, \"name\");\n\nIf the value does not exist, then a 0 is returned."}},{"Name":"EXISTS","Type":"CAS_FUNCTION","Help":{"#cdata":"Determines if a key exists in a dictionary. \n    \n y = exists(dict,\"name\");\n\nThis returns TRUE or FALSE."}},{"Name":"READPATH","Type":"CAS_FUNCTION","Help":{"#cdata":"This will read the contents of the file given into the variable as a string."}},{"Name":"SESSIONS","Type":"CAS_FUNCTION","Help":{"#cdata":"Creates a session variable. \n    \nThis will get the session named casl:\n \n  ses = session(\"casl\");\n\nThis creates a session to \"rdcgrd001\" on port 17766 with user \"username\" and 23 nodes:\n \n  ses = session(\"rdcgrd001\", 17766, \"username\", 23);\n\nThe authentication is assumed to be Kerberos."}},{"Name":"SORT","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns a list sorted in ascending order.\n\nExample:\n  list = { 9, 4, 5.2};\n  slist = sort( list);\n  print slist;\n    {  4, 5.2 9 };"}},{"Name":"SORT_REV","Type":"CAS_FUNCTION","Help":{"#cdata":"Returns a list sorted in descending order.\n    \nExample:\n  slist = sort_rev( list);\n  print slist;  \n    {  9, 5.2, 4 }"}},{"Name":"GITFN_VERSION","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: version = GITFN_VERSION();\n\nValidate that libgit2 is available for use and if available report the version that is being used.\n    \nReturn Values: -1\n  The libgit2 library is not available for use, no Git operations are available.\n\nversion\n  The major and minor version of the library, such as 0.27."}},{"Name":"GITFN_CLONE","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: rc = GITFN_CLONE(uri,dir,<user>,<password>, <path to pub ssh key file>, <path to private ssh key file>);\n\nClone the specified repository into the target directory on SAS server.\n\nRequired Arguments\nuri(in)\n  Specifies the URI of the repository, such as https://github.com/mamonaco1973/itr.git.\ndir(in)\n  The path of a directory on the SAS server for the repository be cloned into.\n  \nOptional Arguments\nuser(in)\n  User name for a secured repository. Note: When using ssh, the user name must be the ssh user.\npassword(in)\n  Password for a secured repository. The password can be encoded with PROC PWENCODE.\npath to the public ssh key file(in)\n  The path to the public ssh key file.\npath to the private ssh key file(in)\n  The path to the private ssh key file.\n\nReturn Values\n-1 The libgit2 library is not available for use, no Git operations are available.\n0 The clone operation succeeded.\n>0 Git support is available, but the clone operation failed. See the log for the return message \n  from the Git server."}},{"Name":"GITFN_STATUS","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: n = GITFN_STATUS(dir);\n\nGet the number of status objects associated with the local repository. \n\nRequired Arguments\ndir(in)\n The path containing a cloned Git repository on the SAS server.\nReturn Values\n -1\n   The libgit2 library is not available for use, no Git operations are available.\n -2\n   Git support is available but the status operation failed. See the log for the return message from the Git server.\n n\n   The number of status objects associated with the local repository. This value can be 0 or greater."}},{"Name":"GITFN_STATUS_GET","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: rc = GITFN_STATUS_GET(n,dir,attr,value);\n    \nGet the attribute of a status of object that was obtained from calling GITFN_STATUS on the local repository.\n\nRequired Arguments\nn(in) The Nth status object to retrieve attributes from.\ndir(in) The path containing a cloned GIT repository on the SAS server.\nattr(in) The attribute to retrieve. Valid attributes are PATH, STATUS and STAGED.\nvalue(out) Returns the value of the specified attribute.\n\nReturn Values\n-1 The libgit2 library is not available for use, no Git operations are available.\n-2 GIT support is available but no status objects were found for the specified repository.\n0 Status object and attribute was found. The value was returned.\n1 Status object was found, but the specified attribute is not valid.\n2 Repository status found, but the Nth requested element does not exist."}},{"Name":"GITFN_STATUSFREE","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: n = GITFN_STATUSFREE(dir);\n    \nFree the status objects associated with a repository that were acquired with GITFN_STATUS.\n\nRequired Arguments\ndir(in)\nThe path containing a cloned GIT repository on the SAS server that has previously had GITFN_STATUS called.\nReturn Values\n-1\nThe libgit2 library is not available for use, no GIT operations are available.\n-2\nInternal failure.\n0\nThe free operation was successful.\n1\nNo status information found for the specified repository."}},{"Name":"GITFN_IDX_ADD","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: GITFN_IDX_ADD(dir, file1, fileStatus1, file2, fileStatus2, ...);\n    \nStages 1 to N number of files in preparation for commit.\n\nRequired Arguments\ndir(in)\n  The path of the local Git Repository.\nfile1(in)\n  The relative path of the first file to be staged.\nfileStatus1(in)\n  The status of the file. New, Modified, Deleted, Renamed, or type change."}},{"Name":"GITFN_IDX_REMOVE","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: GITFN_IDX_REMOVE(dir, file1, file2, ...);\n    \nUn-stages 1 to N number of files.\n\nRequired Arguments\ndir(in)\n  The path of the local GIT Repository.\nfile1(in)\n  The relative path of the first file to be staged."}},{"Name":"GITFN_COMMIT","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: GITFN_COMMIT(dir, updateref, authorName, authorEmail, commitMessage);\n    \nCommits staged files to the local repository.\n\nRequired Arguments\ndir(in)\n  The path of the local GIT Repository.\nupdateref(in)\n  Reference to update. In most cases \"HEAD\" should be used.\nauthorName(in)\n  Commit author's name.\nauthorEmail(in)\n  Commit author's email.\ncommitMessage(in)\n  Commit message. Used for providing some details of the commit. Displayed in commit log."}},{"Name":"GITFN_PUSH","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: GITFN_PUSH(dir, username, password, pubSSHKeyPath, privSSHKeyPath);\n    \nPushes commits on the local repository to the remote repository.\n\nRequired Arguments\ndir(in)\n  The path of the local Git Repository.\nRequired if authentication is required:\nusername(in)\n  User name used for authentication.\npassword(in)\n  Password used for authentication.\npubSSHKeyPath(in)\n  The path to the public SSH key file.\nprivSSHKeyPath(in)\n  The path to the private SSH key file."}},{"Name":"GITFN_PULL","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: GITFN_PULL(dir, username, password, pubSSHKeyPath, privSSHKeyPath);\n\nPulls changes from the remote repository that were pushed by other users.\n\nRequired Arguments\ndir(in)\n  The path of the local Git Repository.\nRequired if authentication is required:\nusername(in)\n  User name used for authentication.\npassword(in)\n  Password used for authentication.\npubSSHKeyPath(in)\n  The path to the public SSH key file.\nprivSSHKeyPath(in)\n  The path to the private SSH key file."}},{"Name":"GITFN_COMMIT_LOG","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: n = GITFN_COMMIT_LOG(dir);\n    \nGet the number of commit objects associated with the local repository.   \n    \nRequired Arguments\ndir(in)\n  The path containing a cloned Git repository on the SAS server.\nReturn Values\nn\n  The number of commit objects associated with the local repository. \n  This value can be 0 or greater."}},{"Name":"GITFN_COMMIT_GET","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: rc = GITFN_COMMIT_GET(n,dir,attr,value);\n    \nGet the attribute of a commit object that was obtained from calling GITFN_COMMIT_LOG on the local repository.    \n    \nRequired Arguments\nn(in)\n  The Nth commit object to retrieve attributes from.\ndir(in)\n  The path containing a cloned Git repository on the SAS server.\nattr(in)\n  The attribute to retrieve. Valid attributes are id\", \"author\", \"email\", \"message\", \"parent_ids\", and \"time.\"\nvalue(out)\n  Returns the value of the specified attribute."}},{"Name":"GITFN_COMMITFREE","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: n = GITFN_COMMITFREE(dir);\n\nFree the commit objects associated with a repository that were acquired with GITFN_COMMIT_LOG.    \n    \nRequired Arguments\ndir(in)\n  The path containing a cloned Git repository on the SAS server that has previously had GITFN_COMMIT_LOG called.\nReturn Values\n-1  The libgit2 library is not available for use, no Git operations are available.\n-2  Internal failure.\n0  The free operation was successful.\n1  No commit information found for the specified repository."}},{"Name":"GITFN_DIFF","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: n = GITFN_DIFF(dir, olderCommitID, newerCommitID);\n    \nGet the number of diffs between two commits.\n  \nRequired Arguments\ndir(in)\n  The path containing a cloned Git repository on the SAS server.\nolderCommitID(in)\n  The older of the two commit IDs to run the diff between.\nnewerCommitID(in)\n  The newer of the two commit IDs to run the diff between.\nReturn Values\nn\n  The number of diff objects associated with the local repository and \n  the two commit ids. This value can be 0 or greater."}},{"Name":"GITFN_DIFF_GET","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: rc = GITFN_DIFF_GET(n,dir,attr,value);\n    \nRequired Arguments\nn(in)\n  The Nth commit object to retrieve attributes from.\ndir(in)\n  The path containing a cloned Git repository on the SAS server.\nattr(in)\n  The attribute to retrieve. Valid attributes are File, Diff_Content, Diff_type.\"\nvalue(out)\n  Returns the value of the specified attribute."}},{"Name":"GITFN_DIFF_FREE","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: n = GITFN_DIFF_FREE(dir, olderCommitID, newerCommitID);\n\nFree the diff objects associated with a repository and commit ids that were generated with GITFN_DIFF.\n\nRequired Arguments\ndir(in)\n  The path containing a cloned Git repository on the SAS server that has previously had GITFN_DIFF called.\nolderCommitID(in)\n  The commit ID of the older of the two commits.\nnewerCommitID(in)\n  The commit ID of the newer of the two commits.\nReturn Values\n-1 The libgit2 library is not available for use, no Git operations are available.\n-2 Internal failure.\n0 The free operation was successful.\n1 No diff information found for the specified repository."}},{"Name":"GITFN_RESET","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: n = GITFN_RESET(dir, commitID, reset_type);\n    \nFunction to reset the local repository to a specific commit.\n\nRequired Arguments\ndir(in) \n  The path to the local GIT repository.\ncommitID(in)\n  The commit ID to reset to.\nreset_type(in)\n  Type of reset desired. HARD (reset working directory and index discard all local changes \n  including uncommitted), MIXED (leave working directory untouched, reset index), or SOFT \n  (leave working directory and index untouched)\nReturn Values\n0"}},{"Name":"GITFN_DEL_REPO","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: n = GITFN_DEL_REPO(dir);\n    \nFunction to delete a local Git repository and its contents.   \n    \nRequired Arguments\ndir(in)\n  The path to the local GIT repository.\nReturn Values\n0 on success.\n-1 on failure."}},{"Name":"GITFN_NEW_BRANCH","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: branch = GITFN_NEW_BRANCH(dir, id, name, force);\n\nFunction to create a new Git branch.\n    \nRequired Arguments\ndir(in)\n  The path to the local Git repository.\nid(in)\n  The id of the Git commit level to branch.\nname(in)\n  The name to give the new branch.\nforce(in)\n  1 if the branch name specified is already in use, replace the branch location with this commit level\nReturn Values\n0 - on success.\n-1 - when an error occurs."}},{"Name":"GITFN_CO_BRANCH","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: rc = GITFN_CO_BRANCH(dir, name);\n\nFunction to check out a Git branch.\n    \nRequired Arguments\ndir(in)\n  The path to the local Git repository.\nname(in)\n  The name of the Git branch to check out.\nReturn Values\n0 on success.\n-1 when an error occurs."}},{"Name":"GITFN_MRG_BRANCH","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: rc = GITFN_MRG_BRANCH(path, branch, userid, email);\n    \nFunction to merge a Git branch.    \n    \nRequired Arguments\npath(in)\n  The path to the local Git repository.\nbranch(in)\n  The name of the Git branch to merge into the checked-out branch.\nuserid(in)\n  The user ID that is invoking the merge.\nemail(in)\n  The email address of the user that is invoking the merge.\nReturn Values\nrc = 0: success\nrc = 1: branch already up-to-date\nrc = -1: merge commit failed\nrc = -2: index has conflicts, check log for conflicting files."}},{"Name":"GITFN_DIFF_IDX_F","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: rc = GITFN_DIFF_IDX_F(path, file path, DIFF_CONTENT);\n\nFunction to get the diff of a file that is in the index.\n\nRequired Arguments\npath(in)\n  The path to the local Git repository.\nfile path(in)\n  The file path relative to the local repository.\nDIFF_CONTENT(out)\n  Out variable that holds the content of the diff.\nReturn Values\nrc - 0 on success.\nrc - 1 on failure."}},{"Name":"GITFN_RESET_FILE","Type":"SAS_FUNCTION","Help":{"#cdata":"Syntax: rc = GITFN_RESET_FILE(path, file path); \n    \nRequired Arguments\npath(in)\n  The path to the local Git repository.\nfile path(in)\n  The file path relative to the local repository.\nReturn Values\nrc - 0 on success.\nrc - 1 on failure."}}],"#comment":[{},{},{},{},{},{},{},{},{}]}}