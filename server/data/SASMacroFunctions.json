{"Keywords":{"Keyword":[{"Name":"%BQUOTE","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %BQUOTE (character string | text expression)]\n    \nMask special characters and mnemonic operators in a resolved value at macro execution."}},{"Name":"%DEQUOTE","Type":"MACRO_FUNCTION","Help":{"#cdata":"Removes matching quotation marks from a character string that begins with a quotation mark, \nand deletes all characters to the right of the closing quotation mark."}},{"Name":"%NRBQUOTE","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %NRBQUOTE (character string | text expression)]\n    \nMask special characters and mnemonic operators in a resolved value at macro execution."}},{"Name":"%EVAL","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %EVAL (arithmetic or logical expression)]\n\nEvaluates arithmetic and logical expressions using integer arithmetic."}},{"Name":"%INDEX","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %INDEX (source, string)]\n    \nReturns the position of the first character of a string."}},{"Name":"%LENGTH","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %LENGTH (character string | text expression)]\n\nReturns the length of a string."}},{"Name":"%QUOTE","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %QUOTE (character string | text expression)]\n    \nMask special characters and mnemonic operators in a resolved value at macro execution.\nUnmatched quotation marks (\" \")  and parentheses ( () )  must be marked with a preceding %."}},{"Name":"%NRQUOTE","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %NRQUOTE (character string | text expression)]\n    \nMask special characters and mnemonic operators in a resolved value at macro execution.\nUnmatched quotation marks (\" \")  and parentheses ( () )  must be marked with a preceding %."}},{"Name":"%SCAN","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SCAN(argument, n<, delimiters>)] \n    \nSearch for a word that is specified by its position in a string."}},{"Name":"%QSCAN","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %QSCAN(argument, n<, delimiters>)]\n\nMasks special characters and mnemonic operators in its result."}},{"Name":"%STR","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %STR (character-string)]\n\nMask special characters and mnemonic operators in constant text at macro compilation.\nUnmatched quotation marks (\" \")  and parentheses ( () )  must be marked with a preceding %."}},{"Name":"%NRSTR","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %NRSTR (character-string)]\n\nMask special characters and mnemonic operators in constant text at macro compilation.\nUnmatched quotation marks (\" \")  and parentheses ( () )  must be marked with a preceding %."}},{"Name":"%SUBSTR","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SUBSTR (argument, position<, length>)] \n    \nProduce a substring of a character string."}},{"Name":"%QSUBSTR","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %QSUBSTR (argument, position<, length>)]\n\nProduce a substring of a character string. %QSUBSTR masks special characters and mnemonic \noperators in its result."}},{"Name":"%SUPERQ","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SUPERQ (argument)] \n    \nMasks all special characters and mnemonic operators at macro execution but prevents resolution \nof the value."}},{"Name":"%SYMEXIST","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SYMEXIST (argument)]\n\nReturns an indication as to whether the named macro variable exists."}},{"Name":"%SYMGLOBL","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SYMGLOBL(macro-variable-name)] \n    \nReturns an indication as to whether the named macro variable is global in scope."}},{"Name":"%SYMLOCAL","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SYMLOCAL(macro-variable-name)]\n\nReturns an indication as to whether the named macro variable is local in scope."}},{"Name":"%SYSEVALF","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SYSEVALF(expression<, conversion-type>)]\n\nEvaluates arithmetic and logical expressions using floating point arithmetic."}},{"Name":"%SYSFUNC","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SYSFUNC (function(argument(s))<, format>)] \n    \nExecute SAS functions or user-written functions."}},{"Name":"%QSYSFUNC","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %QSYSFUNC (function(argument(s))<, format>)]\n\nExecute SAS functions or user-written functions. Masks special characters and mnemonic operators \nin its result."}},{"Name":"%SYSGET","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SYSGET(environment-variable)]\n\nReturns the value of a specified host environment variable."}},{"Name":"%SYSPROD","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SYSPROD (product)]\n\nReports whether a SAS software product is licensed at the site."}},{"Name":"%UNQUOTE","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %UNQUOTE (character string | text expression)]\n\nUnmasks all special characters and mnemonic operators for a value."}},{"Name":"%UPCASE","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %UPCASE (character string | text expression)]\n    \nConverts characters to uppercase."}},{"Name":"%LOWCASE","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %LOWCASE (character string | text expression)]\n\nConverts characters to lowercase. LOWCASE returns a result without quotation marks, even if the \nargument has quotation marks."}},{"Name":"%QLOWCASE","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %QLOWCASE (character string | text expression)]\n\nConverts characters to lowercase.\nQLOWCASE produces a result with the following special characters and mnemonic operators masked\nso the macro processor interprets them as text instead of as elements of the macro language:\n& % ' \" ( ) + - * / < > = \u00ac ^ ~ ; , blank AND OR NOT EQ NE LE LT GE GT"}},{"Name":"%QUPCASE","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %QUPCASE (character string | text expression)] \n    \nConvert characters to uppercase. %QUPCASE masks special characters and mnemonic operators \nin its result."}},{"Name":"%PUT","Type":"MACRO_FUNCTION","Help":{"#cdata":"Returns a value using a specified format."}},{"Name":"%TPLOT","Type":"MACRO_FUNCTION","Help":{"#cdata":"The %TPLOT macro creates a triangular plot that graphically displays genetic marker \ntest results. The plot has colors and shapes representing p-value ranges for tests \nof the following quantities: linkage disequilibrium between pairs of markers, Hardy-\nWeinberg equilibrium (HWE) for individual markers, and associations between markers \nand a dichotomous trait (such as disease status)."}},{"Name":"%SYSMACEXEC","Type":"MACRO_FUNCTION","Help":{"#cdata":"Returns an indication of the execution status of a macro.\n    \nSyntax: \n%SYSMACEXEC(macro_name) \n\nRequired Argument:\nmacro_name \n  the name of a macro or a text expression that yields the name of the macro. \n\nDetails:\nThe %SYSMACEXEC function returns the number 1 if the macro is currently executing. \nOtherwise, if the macro is not executing, the number 0 is returned."}},{"Name":"%SYSMACEXIST","Type":"MACRO_FUNCTION","Help":{"#cdata":"Returns an indication of the existence of a macro definition in the WORK.SASMACR \ncatalog. Otherwise, the returned value is 0.\n    \nSyntax \n%SYSMACEXIST(macro-name) \nRequired Argument \nmacro-name \nthe name of a macro or a text expression that yields the name of a macro. \nDetails \nThe %SYSMACEXIST function returns the number 1 if a definition for the macro exists in the WORK.SASMACR catalog. If there is not a macro definition, the returned value is 0."}},{"Name":"%SYSMEXECDEPTH","Type":"MACRO_FUNCTION","Help":{"#cdata":"Returns the nesting depth of macro execution from the point of the call to %SYSMEXECDEPTH.\n    \nSyntax:\n%SYSMEXECDEPTH\n\nDetails:\nTo retrieve the nesting level of the currently executing macro, use the %SYSMEXECDEPTH. \nThis function returns a number indicating the depth of the macro in nested macro calls. \n\nThe following are the %SYSMEXECDEPTH return value descriptions: \n  0  open code \n >0  nesting level"}},{"Name":"%SYSMEXECNAME","Type":"MACRO_FUNCTION","Help":{"#cdata":"Returns the name of the macro executing at a requested nesting level.\n    \nSyntax:\n%SYSMEXECNAME (n) \n\nRequired Argument:\nn \n  The nesting level at which you are requesting the macro name. \n    0 open code \n    >0 nesting level"}},{"Name":"%CMPRES","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %CMPRES (text | text expression)\n\nCompresses multiple blanks and removes leading and trailing blanks."}},{"Name":"%QCMPRES","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %QCMPRES (text | text expression)\n\nCompresses multiple blanks and removes leading and trailing blanks.\n\n%QCMPRES masks the result so special characters and mnemonic operators are treated \nas text instead of being interpreted by the macro facility."}},{"Name":"%COMPSTOR","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %COMPSTOR (PATHNAME=SAS-data-library)\n\nCompiles macros and stores them in a catalog in a permanent SAS library."}},{"Name":"%DATATYP","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax:%DATATYP (text | text expression)\n\nReturns the data type (numeric or char) of a value."}},{"Name":"%LEFT","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %LEFT(text | text expression)\n    \nLeft-aligns an argument by removing leading blanks."}},{"Name":"%QLEFT","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %QLEFT(text | text expression)\n\nLeft-aligns an argument by removing leading blanks.\n\nQLEFT masks the result so special characters and mnemonic operators are treated as \ntext instead of being interpreted by the macro facility."}},{"Name":"%SYSRC","Type":"MACRO_FUNCTION","Help":{"#cdata":"[Syntax: %SYSRC(character-string)]\n\nReturns a value corresponding to an error condition."}},{"Name":"%TRIM","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %TRIM(text | text expression)\n\nTrim trailing blanks."}},{"Name":"%QTRIM","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %QTRIM(text | text expression)\n    \nTrim trailing blanks. Masks special characters and mnemonic operators."}},{"Name":"%VERIFY","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %VERIFY(source, excerpt)\n    \nReturns the position of the first character unique to an expression."}},{"Name":"%DQLOAD","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %DQLOAD(DQLOCALE=(locale1 ...localeN), DQSETUPLOC=`file-specification', <DQINFO=0 | 1>)\n    \nSets system option values and loads locales into memory."}},{"Name":"%DQPUTLOC","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %DQPUTLOC(locale, <SHORT=0 | 1>, <PARSEDEFN=0 | 1)>\n    \nDisplays current information on a specified locale in the SAS log."}},{"Name":"%DQUNLOAD","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %DQUNLOAD \n    \nUnloads all locales to increase the amount of free memory."}},{"Name":"%KLOWCASE","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %KLOWCASE (text | text expression) \n\nChanges uppercase alphabetic characters to their lowercase equivalents. If the argument \nmight contain a special character or mnemonic operator, listed below, use %QKLOWCAS. \n\n%KLOWCASE returns a result without quotation marks, even if the argument has quotation marks. \n%QKLOWCAS produces a result with the following special characters and mnemonic operators masked \nso the macro processor interprets them as text instead of as elements of the macro language: \n\n  & % ' \" ( ) + - * / < > = \u00ac ^ ~ ; , blank AND OR NOT EQ NE LE LT GE GT IN \n\nAutocall macros are included in a SAS library. This library might not be installed at your site \nor might be a site-specific version. If you cannot access this macro or if you want to find out \nif the library is a site-specific version, see your on-site SAS support personnel."}},{"Name":"%QKLOWCAS","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %QKLOWCAS (text | text expression) \n\nChanges uppercase alphabetic characters to their lowercase equivalents. If the argument \nmight contain a special character or mnemonic operator, listed below, use %QKLOWCAS. \n\n%KLOWCASE returns a result without quotation marks, even if the argument has quotation marks. \n%QKLOWCAS produces a result with the following special characters and mnemonic operators masked \nso the macro processor interprets them as text instead of as elements of the macro language: \n\n  & % ' \" ( ) + - * / < > = \u00ac ^ ~ ; , blank AND OR NOT EQ NE LE LT GE GT IN \n\nAutocall macros are included in a SAS library. This library might not be installed at your site \nor might be a site-specific version. If you cannot access this macro or if you want to find out \nif the library is a site-specific version, see your on-site SAS support personnel."}},{"Name":"%KTRIM","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %KTRIM (text | text expression) \n    \nTrims trailing blanks. If the argument contains a special character or mnemonic operator, \nlisted below, use %QKTRIM. \n\nQKTRIM produces a result with the following special characters and mnemonic operators masked \nso the macro processor interprets them as text instead of as elements of the macro language: \n\n  & % ' \" ( ) + - * / < > = \u00ac ? ~ ; , # blank AND OR NOT EQ NE LE LT GE GT IN \n  \nAutocall macros are included in a SAS library. This library might not be installed at your \nsite or might be a site-specific version. If you cannot access this macro or if you want to \nfind out if the library is a site-specific version, see your on-site SAS support personnel."}},{"Name":"%QKTRIM","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %QKTRIM (text | text expression) \n \n    \nTrims trailing blanks. If the argument contains a special character or mnemonic operator, \nlisted below, use %QKTRIM. \n\nQKTRIM produces a result with the following special characters and mnemonic operators masked \nso the macro processor interprets them as text instead of as elements of the macro language: \n\n  & % ' \" ( ) + - * / < > = \u00ac ? ~ ; , # blank AND OR NOT EQ NE LE LT GE GT IN \n  \nAutocall macros are included in a SAS library. This library might not be installed at your \nsite or might be a site-specific version. If you cannot access this macro or if you want to \nfind out if the library is a site-specific version, see your on-site SAS support personnel."}},{"Name":"%KVERIFY","Type":"MACRO_FUNCTION","Help":{"#cdata":"Syntax: %KVERIFY (source, excerpt) \n\nReturns the position of the first character unique to an expression. \n\nArguments:\nsource \n  is text or a text expression that you want to examine for characters that do not exist in excerpt. \nexcerpt \n  is text or a text expression that defines the set of characters that %KVERIFY uses to examine source."}}],"#comment":[{},{},{},{},{}]}}