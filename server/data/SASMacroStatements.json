{"Keywords":{"Keyword":[{"Name":"%ABORT","Type":"MACRODEFONLY","Help":{"#cdata":"[Syntax: %ABORT <ABEND | CANCEL <FILE> | RETURN | <n>> ;]\n\nABEND causes abnormal termination of the current macro and SAS job or session.\n\nABORT causes your macro, windowing environment, and interactive line mode to stop \nprocessing immediately and return you to your operating environment. n is an integer \nvalue that enables you to specify a condition code that SAS returns to the operating \nenvironment when it stops executing."}},{"Name":"%COPY","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %COPY macro-name< /options(s)>]\n\nCopies specified items from a SAS macro library."}},{"Name":"%DISPLAY","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %DISPLAY window<.group><NOINPUT><BLANK> <BELL><DELETE>;]\n    \nDisplays a macro window.\n\nNOINPUT specifies that you cannot input values into fields displayed in the window.\n\nBLANK  clears the display.\n\nBELL rings your terminal's bell, if available, when the window is displayed.\n\nDELETE deletes the display of the window after processing passes from the %DISPLAY \nstatement on which the option appears."}},{"Name":"%DO","Type":"MACRODEFONLY","Help":{"#cdata":"The %DO statement designates the beginning of a section of a macro definition that \nis treated as a unit until a matching %END statement is encountered. This macro \nsection is called a %DO group. %DO groups can be nested.\n\nA simple %DO statement often appears in conjunction with %IF-%THEN/%ELSE statements \nto designate a section of the macro to be processed depending on whether the %IF \ncondition is true or false.\n\nSyntax:\n%DO; \n  text and macro language statements  \n%END;"}},{"Name":"%DO %UNTIL","Type":"MACRODEFONLY","Help":{"#cdata":"Executes a section of a macro repetitively until a condition is true.\n      \nSyntax: \n\n%DO %UNTIL (expression); \n  text and macro language statements  \n%END;"}},{"Name":"%DO %WHILE","Type":"MACRODEFONLY","Help":{"#cdata":"Executes a section of a macro repetitively while a condition is true.\n      \nSyntax: \n\n%DO %WHILE (expression); \n  text and macro language statements  \n%END;"}},{"Name":"%END","Type":"MACRODEFONLY","Help":{"#cdata":"[Syntax: %END;]\n \nEnds a %DO group."}},{"Name":"%GLOBAL","Type":"OPENCODE","Help":{"#cdata":"[Syntax: %GLOBAL macro-variable(s); | %GLOBAL / READONLY macro-variable=value;]    \n\nCreates macro variables that are available during the execution of an entire SAS session. \n\nRequired Argument:\nmacro-variable(s)\n  is the name of one or more macro variables or a text expression that generates one or more macro variable names. \n  You cannot use a SAS variable list or a macro expression that generates a SAS variable list in a %GLOBAL statement.\n\nOptional Argument:\nREADONLY macro-variable=value\n  creates a new read only global macro variable.Note:The READONLY option can be used to create a single new macro variable (local or global).\n\nmacro-variable\n  is the name of a macro variable or a text expression that produces a macro variable name. The name must be a new macro variable name. \nvalue\n  is a character string or a text expression."}},{"Name":"%GOTO","Type":"MACRODEFONLY","Help":{"#cdata":"[Syntax: %GOTO label;]\n    \nBranches macro processing to the specified label."}},{"Name":"%IF","Type":"MACRODEFONLY","Help":{"#cdata":"[Syntax: %IF expression %THEN action; <%ELSE action;>]\n    \nConditionally process a portion of a macro."}},{"Name":"%THEN","Type":"MACRODEFONLY","Help":{"#cdata":"Conditionally process a portion of a macro."}},{"Name":"%ELSE","Type":"MACRODEFONLY","Help":{"#cdata":"Conditionally process a portion of a macro."}},{"Name":"%INPUT","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %INPUT <macro-variable(s)>;]\n    \nSupplies values to macro variables during macro execution."}},{"Name":"%LET","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %LET macro-variable =<value>;]\n    \nCreates a macro variable and assigns it a value."}},{"Name":"%LOCAL","Type":"MACRODEFONLY","Help":{"#cdata":"[Syntax: %LOCAL macro-variable(s); | %LOCAL / READONLY macro-variable=value;]\n    \nCreates macro variables that are available only during the execution of the macro \nwhere they are defined. \n\nRequired Argument:\nmacro-variable(s)\n  is the name of one or more macro variables or a text expression that generates one or more macro \n  variable names. You cannot use a SAS variable list or a macro expression that generates a SAS \n  variable list in a %LOCAL statement. \n  \nOptional Argument:\nREADONLY macro-variable=value\n  creates a new read only local macro variable.Note:The READONLY option can be used to create a single \n  new macro variable (local or global). \nmacro-variable \n  is the name of a macro variable or a text expression that produces a macro variable name. The name \n  must be a new macro variable name. \nvalue\n  is a character string or a text expression."}},{"Name":"%MACRO","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %MACRO macro-name <(parameter-list)></ option(s)>;]\n    \nBegins a macro definition."}},{"Name":"%MEND","Type":"MACRODEFONLY","Help":{"#cdata":"[Syntax: %MEND <macro-name>;]\n    \nEnds a macro definition."}},{"Name":"%PUT","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %PUT <text | _ALL_ | _AUTOMATIC_ | _GLOBAL_ | _LOCAL_ | _USER_>; ]\n    \nWrites text or macro variable information to the SAS log."}},{"Name":"%RETURN","Type":"MACRODEFONLY","Help":{"#cdata":"[Syntax: %RETURN; ]\n    \nExecution causes normal termination of the currently executing macro."}},{"Name":"%SYMDEL","Type":"MACRODEFONLY","Help":{"#cdata":"[Syntax: %SYMDEL macro-variable(s)</option>;]\n    \nDeletes the specified variables(s) from the macro global symbol table."}},{"Name":"%SYSCALL","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %SYSCALL call-routine<(call-routine-argument(s))>;]\n\nInvokes a SAS call routine."}},{"Name":"%SYSEXEC","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %SYSEXEC <command>;]\n    \nIssues operating environment commands."}},{"Name":"%WHILE","Type":"MACRODEFONLY","Help":{"#cdata":"[Syntax: %DO %WHILE(expression);]\n    \nExecutes a section of a macro repetitively while a condition is true."}},{"Name":"%UNTIL","Type":"MACRODEFONLY","Help":{"#cdata":"[Syntax: %DO %UNTIL(expression);]\n    \nExecutes a section of a macro repetitively until a condition is true."}},{"Name":"%SYSLPUT","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %SYSLPUT macro-variable=<value</REMOTE=remote-session-id>>;]\n    \nCreates a new macro variable or modifies the value of an existing macro variable \non a remote host or server."}},{"Name":"%SYSRPUT","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %SYSRPUT local-macro-variable=remote-macro-variable;]\n    \nAssigns the value of a macro variable on a remote host to a macro variable on the \nlocal host."}},{"Name":"%WINDOW","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"[Syntax: %WINDOW window-name<window-option(s) group-definition(s)>field-definition(s);]\n    \nDefines customized windows."}},{"Name":"%INCLUDE","Type":"VALIDANYWHERE","Help":{"#cdata":"Syntax: %INCLUDE source(s) </<SOURCE2> <S2=length> <operating-environment-options>>;\n    \nBrings a SAS programming statement, data lines, or both, into a current SAS program."}},{"Name":"%LIST","Type":"VALIDANYWHERE","Help":{"#cdata":"Displays lines that are entered in the current session.\n    \nSyntax: %LIST<n <:m | - m>>; \n\nwhere\n\nn - means display line n.\n\nn-m - means display lines n through m; can be written as n:m"}},{"Name":"%RUN","Type":"VALIDANYWHERE","Help":{"#cdata":"Syntax: %RUN;\n    \nEnds source statements following a %INCLUDE * statement."}},{"Name":"%SYSMSTORECLEAR","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"Syntax: %SYSMSTORECLEAR;\n    \nUse the %SYSMSTORECLEAR statement to close the stored compiled macro catalog and to clear \nthe previous libref when switching between SASMSTORE= libraries. \n\nNote: If any stored compiled macro from the library specified by the SASMSTORE= system \noption is still executing, the following will occur: \n\n  o an ERROR diagnostic message will be issued \n  o the library will not be closed \n  o the libref will not be cleared"}},{"Name":"%SYSMACDELETE","Type":"OPENCODE_OR_MACRODEF","Help":{"#cdata":"Syntax: %SYSMACDELETE macro_name </ option>;\n    \nRequired Argument:\nmacro_name \n  the name of a macro or a text expression that produces a macro variable name. \n\nOptional Argument:\nNOWARN \n  specifies that no warning diagnostic message should be issued. \n\nDetails:\nThe %SYSMACDELETE statement deletes the macro definition of the specified macro from the \nWORK.SASMACR catalog. If no definition for the macro exists in the WORK.SASMACR catalog, \na WARNING diagnostic message is issued. If the macro is currently being executed, an \nERROR diagnostic message is issued."}}],"#comment":{}}}