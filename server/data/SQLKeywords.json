{"Keywords":{"Keyword":[{"Name":"SELECT","Help":{"#cdata":"Syntax: SELECT <DISTINCT> object-item <, ...object-item>   <INTO macro-variable-specification \n    <, ... macro-variable-specification>>  \n    FROM from-list  \n    <WHERE sql-expression>  \n    <GROUP BY group-by-item <, ... group-by-item>>  \n    <HAVING sql-expression>  \n    <ORDER BY order-by-item <, ... order-by-item>>; \n    \nSelects columns and rows of data from tables and views."},"Type":"SQL_KEYWORD"},{"Name":"DISTINCT","Help":{"#cdata":"Eliminates duplicate rows."},"Type":"SQL_KEYWORD"},{"Name":"INTO","Help":{"#cdata":"Stores the value of one or more columns for use later in another PROC SQL query \nor SAS statement."},"Type":"SQL_KEYWORD"},{"Name":"FROM","Help":{"#cdata":"Specifies source tables or views."},"Type":"SQL_KEYWORD"},{"Name":"WHERE","Help":{"#cdata":"Subsets the output based on specified conditions."},"Type":"SQL_KEYWORD"},{"Name":"GROUP","Help":{"#cdata":"[Syntax: GROUP BY group-by-item <, ..., group-by-item] \n          \nSpecifies how to group the data for summarizing."},"Type":"SQL_KEYWORD"},{"Name":"HAVING","Help":{"#cdata":"[HAVING sql-expression] \n          \nSubsets grouped data based on specified conditions."},"Type":"SQL_KEYWORD"},{"Name":"ORDER","Help":{"#cdata":"[ORDER BY order-by-item <ASC|DESC><, ... order-by-item <ASC|DESC>>;]\n          \nSpecifies the order in which rows are displayed in a result table."},"Type":"SQL_KEYWORD"},{"Name":"LEFT","Help":{"#cdata":"[SQL expression keyword] \n          \nUsed in connection with JOIN expressions.\n\nExample:\nSELECT *  FROM   employee  LEFT OUTER JOIN department  \n  ON employee.DepartmentID = department.DepartmentID;"},"Type":"SQL_KEYWORD"},{"Name":"RIGHT","Help":{"#cdata":"[SQL expression keyword] \n          \nUsed in connection with JOIN expressions.\n\nExample:\nSELECT *  FROM   employee  RIGHT OUTER JOIN department  \n  ON employee.DepartmentID = department.DepartmentID;"},"Type":"SQL_KEYWORD"},{"Name":"BETWEEN","Help":{"#cdata":"[SQL expression operator] \n          \nSelects rows where column values are within a range of values. \n\nSyntax:\nsql-expression <NOT> BETWEEN sql-expression AND sql-expression"},"Type":"SQL_KEYWORD"},{"Name":"AND","Help":{"#cdata":"[SQL expression operator] \n          \nIndicates logical AND."},"Type":"SQL_KEYWORD"},{"Name":"OR","Help":{"#cdata":"[SQL expression operator] \n          \nIndicates logical OR."},"Type":"SQL_KEYWORD"},{"Name":"NOT","Help":{"#cdata":"[SQL expression operator]           \n          \nIndicates logical NOT."},"Type":"SQL_KEYWORD"},{"Name":"CONTAINS","Help":{"#cdata":"[SQL expression operator] \n          \nTests whether a string is part of a column's value."},"Type":"SQL_KEYWORD"},{"Name":"EXISTS","Help":{"#cdata":"[SQL expression operator] \n          \nSyntax: <NOT> EXISTS (query-expression) \n          \nTests if a subquery returns one or more rows. "},"Type":"SQL_KEYWORD"},{"Name":"LIKE","Help":{"#cdata":"[SQL expression operator] \n          \nTests for a matching pattern. \n\nSyntax: \nsql-expression <NOT> LIKE sql-expression <ESCAPE character-expression>"},"Type":"SQL_KEYWORD"},{"Name":"ASC","Help":{"#cdata":"Orders the data in ascending order."},"Type":"SQL_KEYWORD"},{"Name":"DESC","Help":{"#cdata":"Orders the data in descending order."},"Type":"SQL_KEYWORD"},{"Name":"INNER","Help":{"#cdata":"[SQL expression keyword] \n          \nUsed in connection with JOIN expressions.\n\nExample:\nSELECT *  FROM   employee LEFT INNER JOIN department  \n  ON employee.DepartmentID = department.DepartmentID;"},"Type":"SQL_KEYWORD"},{"Name":"OUTER","Help":{"#cdata":"[SQL expression keyword] \n          \nUsed in connection with JOIN expressions.\n\nExample:\nSELECT *  FROM   employee LEFT OUTER JOIN department  \n  ON employee.DepartmentID = department.DepartmentID;"},"Type":"SQL_KEYWORD"},{"Name":"FULL","Help":{"#cdata":"[SQL expression keyword] \n          \nUsed in connection with JOIN expressions.\n\nExample:\nSELECT *  FROM   employee  FULL JOIN department  \n  ON employee.DepartmentID = department.DepartmentID;"},"Type":"SQL_KEYWORD"},{"Name":"CROSS","Help":{"#cdata":"[SQL expression keyword] \n          \nUsed in connection with JOIN expressions.\n\nExample:\nSELECT *  FROM   employee  CROSS JOIN department  \n  ON employee.DepartmentID = department.DepartmentID;"},"Type":"SQL_KEYWORD"},{"Name":"UNION","Help":{"#cdata":"[SQL expression keyword] \n          \nUsed in connection with JOIN expressions.\n\nExample:\nSELECT *  FROM   employee  UNION JOIN department  \n  ON employee.DepartmentID = department.DepartmentID;"},"Type":"SQL_KEYWORD"},{"Name":"INTERSECT","Help":{"#cdata":"[SQL set operator keyword] \n          \nProduces rows that are common to both query results."},"Type":"SQL_KEYWORD"},{"Name":"CORRESPONDING","Help":{"#cdata":"[SQL set operator keyword] \n          \nCauses PROC SQL to match the columns in table-expressions by name and not by \nordinal position."},"Type":"SQL_KEYWORD"},{"Name":"EXCEPT","Help":{"#cdata":"[SQL set operator keyword] \n          \nProduces rows that are part of the first query only."},"Type":"SQL_KEYWORD"},{"Name":"ALL","Help":{"#cdata":"[SQL set operator keyword] \n          \nThe set operators automatically eliminate duplicate rows from their output tables. \nThe optional ALL keyword preserves the duplicate rows, reduces the execution by one \nstep, and thereby improves the query-expression's performance."},"Type":"SQL_KEYWORD"},{"Name":"CASE","Help":{"#cdata":"Selects result values that satisfy specified conditions. \n          \nSyntax:\n  CASE <case-operand>  \n    WHEN when-condition THEN result-expression  \n    <...WHEN when-condition THEN result-expression>  \n    <ELSE result-expression>  \n    END"},"Type":"SQL_KEYWORD"},{"Name":"WHEN","Help":{"#cdata":"[Used in a CASE expression] \n          \nSyntax:\n  CASE <case-operand>  \n    WHEN when-condition THEN result-expression  \n    <...WHEN when-condition THEN result-expression>  \n    <ELSE result-expression>  \n    END"},"Type":"SQL_KEYWORD"},{"Name":"THEN","Help":{"#cdata":"[Used in a CASE expression] \n          \nSyntax:\n  CASE <case-operand>  \n    WHEN when-condition THEN result-expression  \n    <...WHEN when-condition THEN result-expression>  \n    <ELSE result-expression>  \n    END"},"Type":"SQL_KEYWORD"},{"Name":"ELSE","Help":{"#cdata":"[Used in a CASE expression] \n          \nSyntax:\n  CASE <case-operand>  \n    WHEN when-condition THEN result-expression  \n    <...WHEN when-condition THEN result-expression>  \n    <ELSE result-expression>  \n    END"},"Type":"SQL_KEYWORD"},{"Name":"END","Help":{"#cdata":"[Used in a CASE expression] \n          \nSyntax:\n  CASE <case-operand>  \n    WHEN when-condition THEN result-expression  \n    <...WHEN when-condition THEN result-expression>  \n    <ELSE result-expression>  \n    END"},"Type":"SQL_KEYWORD"},{"Name":"UNIQUE","Help":{"#cdata":"Specifies that the values of the column must be unique. This constraint is identical \nto DISTINCT."},"Type":"SQL_KEYWORD"},{"Name":"PRIMARY","Help":{"#cdata":"PRIMARY KEY\n          \nSpecifies that the column is a primary key column, that is, a column that does \nnot contain missing values and whose values are unique."},"Type":"SQL_KEYWORD"},{"Name":"KEY","Help":{"#cdata":"PRIMARY KEY\n          \nSpecifies that the column is a primary key column, that is, a column that does \nnot contain missing values and whose values are unique."},"Type":"SQL_KEYWORD"},{"Name":"REFERENCES","Help":{"#cdata":"Syntax: REFERENCES table-name <ON DELETE referential-action > <ON UPDATE referential-action>\n            \nSpecifies that the column is a foreign key, that is, a column whose values are linked \nto the values of the primary key variable in another table (the table-name that is \nspecified for REFERENCES)."},"Type":"SQL_KEYWORD"},{"Name":"FOREIGN","Help":{"#cdata":"\n    \n<DROP FOREIGN KEY constraint-name>\n  Removes the foreign key constraint that is referenced by constraint-name. "},"Type":"SQL_KEYWORD"},{"Name":"AS","Help":{"#cdata":"[Syntax: ...AS query-expression ...] \n          \nSQL keyword"},"Type":"SQL_KEYWORD"},{"Name":"IN","Help":{"#cdata":"[Syntax: SELECT column_name(s)\nFROM table_name\nWHERE column_name IN (value1,value2,...); \n\nThe IN operator allows you to specify multiple values in a WHERE clause."},"Type":"SQL_KEYWORD"},{"Name":"JOIN","Help":{"#cdata":"Combines records from two or more tables.\n    \nExample:\nSELECT *  FROM   employee  LEFT OUTER JOIN department  \n  ON employee.DepartmentID = department.DepartmentID;"},"Type":"SQL_KEYWORD"}],"#comment":{}}}