{"Keywords":{"Keyword":[{"Name":"CLEAR","Type":"S","Help":{"#cdata":"Disassociates one or more currently assigned librefs."}},{"Name":"_ALL_","Type":"S","Help":{"#cdata":"Specifies that the CLEAR or LIST argument applies to all currently assigned librefs."}},{"Name":"V9|BASE","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses SAS System 9, SAS 9.1, and SAS 9.2 data sets. You can use the nickname BASE \nfor this engine."}},{"Name":"V8","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses Version 8, Release 8.1, and Release 8.2 data sets."}},{"Name":"V7","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses Version 7 data sets."}},{"Name":"V6","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses Release 6.08 through Release 6.12 data sets."}},{"Name":"V604","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses Release 6.03 and Release 6.04 data sets.\n\nNote: The V604 engine enables you to read from Release 6.03 and Release 6.04 SAS data \nsets directly from your 32-bit Windows SAS 9.2 session. Release 6.03 and Release 6.04 \nSAS data sets are not compatible with the x64 64-bit environment and the Itanium 64-bit \nenvironment."}},{"Name":"XPORT","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses transport format files."}},{"Name":"BMDP","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses BMDP data files in a 32-bit operating environment."}},{"Name":"OSIRIS","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses OSIRIS data files."}},{"Name":"SPSS","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses SPSS export files."}},{"Name":"V9TAPE","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nEnables you to access SAS files that were created in a sequential format, whether \non tape or on disk. Requires less overhead than the default engine because sequential \naccess is simpler that random access."}},{"Name":"V8TAPE","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nEnables you to access SAS files that were created in a sequential format, whether \non tape or on disk. Requires less overhead than the default engine because sequential \naccess is simpler that random access."}},{"Name":"V7TAPE","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses Version 7 sequential-format SAS files."}},{"Name":"V6TAPE","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses V6 SAS data files that were created in a sequential format. This engine is read-only."}},{"Name":"V5","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nSpecifies the read-only SAS engine for SAS 5. This engine enables you to read your \nSAS 5 sequential data sets in SAS 9.2."}},{"Name":"V5TAPE","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nSpecifies the read-only SAS sequential engine for SAS 5. This engine enables you \nto read your SAS 5 sequential data sets in SAS 9.2."}},{"Name":"SPDS","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nEnables communication between a client session and a data server. You must have the \nScalable Performance Data Server licensed on your client computer to use this engine."}},{"Name":"MDDB","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nEnables communication between a client session and an MDDB server. You must have \nSAS/MDDB Server licensed on your client computer or on your server to use this \nengine."}},{"Name":"CONCUR","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nProvides concurrent UPDATE access to SAS data sets."}},{"Name":"CVP","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nExpands character variable lengths for transcoding."}},{"Name":"SQLVIEW","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nAccesses data views that are described by the SQL procedure."}},{"Name":"SPD","Type":"S","Help":{"#cdata":"[Engine Name] \n    \nProvides high-performance data delivery."}},{"Name":"MEMLIB","Type":"S","Help":{"#cdata":"Specifies to use extended server memory for this library."}},{"Name":"FILELOCKWAIT=","Type":"V","Help":{"#cdata":"[Syntax: FILELOCKWAIT=n] \n    \nSpecifies the number of seconds SAS will wait for a locked file to become available to \nanother process. If the locked file is released before the number of seconds specified \nby n, then SAS locks the file for the current process and continues. If the file is still \nlocked when the number of seconds has been reached, then SAS writes a \"Locked File\" error \nto the log and the DATA step fails. \n\nInteraction: Specifying the FILELOCKWAIT= option can have an adverse effect on one or \nmore SAS/SHARE server and client sessions that are waiting for the release of a SAS \nfile that is locked by another process. One or more wait conditions could lead to failed \nprocesses for a SAS/SHARE server and clients. \n\nTo prevent the possibility of a failed SAS/SHARE process, you can set FILELOCKWAIT=0, \nwhich cancels the amount of time that a SAS/SHARE server and clients would wait for the \nrelease of a locked file. Canceling the wait time would prevent a failed process. \n \nRange: 0 - 600 \nDefault: 0"}},{"Name":"LIST","Type":"S","Help":{"#cdata":"Writes the attributes of one or more SAS data libraries to the SAS log."}},{"Name":"EXCEL","Type":"S","Help":{"#cdata":"[SAS/ACCESS engine name for your PC file format.]\n    \nFor Microsoft Excel data (5, 95, 97, 2000, 2002, 2003, or 2007)."}},{"Name":"XLSX","Type":"S","Help":{"#cdata":"[SAS/ACCESS engine name for associating a SAS libref with a Microsoft Excel workbook (XLSX file format).]\n    \nFor Microsoft Excel data (2007, 2010, and later files). This LIBNAME engine is new starting in the \nsecond maintenance release of SAS/ACCESS 9.4 Interface to PC Files.\n\nSyntax:\nLIBNAME  < libref>  XLSX  <'physical-path and filename.xlsx'> \n  <SAS/ACCESS LIBNAME-options>; "}},{"Name":"ACCESS","Type":"S","Help":{"#cdata":"[SAS/ACCESS engine name for your PC file format.] \n    \nFor Microsoft Access data (97, 2000, 2002, 2003, or 2007)."}},{"Name":"DB2","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to DB2 relational database."}},{"Name":"ORACLE","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to ORACLE relational database."}},{"Name":"ODBC","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to ODBC."}},{"Name":"OLEDB","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to OLEDB."}},{"Name":"MYSQL","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to MySQL relational database."}},{"Name":"SQLSVR","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to Microsoft SQL Server relational database."}},{"Name":"INFORMIX","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to INFORMIX relational database."}},{"Name":"NEOVIEW","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to HP NEOVIEW."}},{"Name":"SYBASE","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to Sybase relational database."}},{"Name":"TERADATA","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to TERADATA."}},{"Name":"NETEZZA","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to NETEZZA."}},{"Name":"ASTER","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to Aster nCluster."}},{"Name":"GREENPLM","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to Greenplum."}},{"Name":"SYBASEIQ","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to Sybase IQ."}},{"Name":"HADOOP","Type":"S","Help":{"#cdata":"Engine name for SAS/ACCESS Interface to Hadoop."}},{"Name":"SASIOLA","Type":"S","Help":{"#cdata":"Engine name for the SASIOLA (The SAS LASR Engine)"}},{"Name":"CAS","Type":"S","Help":{"#cdata":"Engine name for the Cloud Analytic Services (CAS)"}},{"Name":"SASHDAT","Type":"S","Help":{"#cdata":"The sashdat engine is a bi-directional engine for metadata and  a uni-directional engine \nfor data. That means, you can use a sashdat libname to parse a procedure against data \nstored in sashdat format and a DATA step sends metadata information to HDFS when you \noperate on a sashdat file. When it comes to moving data (=rows) between sashdat files \nin HDFS and a SAS session, the flow is only one way, however. The sashdat engine does \nnot bring data from a sashdat file back to the SAS session. Data moves only from the \nSAS session into the sashdat format."}},{"Name":"POSTGRES","Type":"S","Help":{"#cdata":"Specifies the SAS/ACCESS engine name for the PostgreSQL interface.)"}},{"Name":"VERTICA","Type":"S","Help":{"#cdata":"Specifies the SAS/ACCESS engine name for the Vertica interface.)"}},{"Name":"JMP","Type":"S","Help":{"#cdata":"Associates a libref with a JMP data table and enables you to read and write JMP data tables."}},{"Name":"INIT=|INIT_STRING=","Type":"V","Help":{"#cdata":"[Syntax: INIT= \"connection-string\"] \n    \nSpecifies an initialization string that SAS uses when connecting to a data source, as in this example: \n\n  libname db ACCESS init=\"Provider=Microsoft.Jet.OLEDB.4.0 \n  Data Source=c:\\temp\\sasdemo.mdb\" \n\nNote: This option should not be used with a physical filename or other connection options, such \nas PATH= and UDL=."}},{"Name":"DS=|DATASRC=","Type":"V","Help":{"#cdata":"[Syntax: DS=|DATASRC=|PATH=\"path-for-file\"] \n    \nSpecifies the data source file. This is the full path and filename for your relational database \nfile or Microsoft Excel workbook file. This option value is treated the same as the physical filename. \nYou should use it only when you do not specify the physical filename in the LIBNAME statement. However, \nuse of this option requires the engine name to be specified. Always enter file extension .mdb for Microsoft \nAccess and .xls for Excel."}},{"Name":"PROMPT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO","@Value3":"REQUIRED","@Value4":"NOPROMPT","@Value5":"PROMPT","@Value6":"UDL"},"ToolTips":{"@ToolTip1":"Enables prompting with a Data Link Properties dialog box. To write the initialization string to the  SAS log, submit this code immediately after connecting to the data source:     %put %superq (SYSDBMSG);","@ToolTip2":"Does not enable prompting with a Data Link Properties dialog box, and you must specify the data  source (physical filename or PATH=).","@ToolTip3":"Enables connection without prompting for more information only if a valid physical filename is  specified for a successful connection. Otherwise, you are prompted for the connection options  with a dialog box that enables you to change the data source file and other properties.","@ToolTip4":"Disables prompting with the Data Link Properties dialog box.","@ToolTip5":"Enables prompting for connection information that supplies the data source information.","@ToolTip6":"Enables browsing so you can select an existing data link file (.udl)."},"Help":{"#cdata":"Determines whether you are prompted for connection information that supplies the data \nsource information. For DBMS, it determines whether one of these interactive dialog \nboxes displays to guide you through the connection process."}},{"Name":"UDL=|UDL_FILE=","Type":"V","Help":{"#cdata":"[Syntax: UDL=\"path-for-udl-file\"] \n    \nSpecifies the path and filename for a UDL file (a Microsoft data link file), as in this example: \n\n  UDL=\"C:\\WinNT\\profiles\\me\\desktop\\MyDBLink.UDL\"; \n  %put %superq(SYSDBMSG);\n  \nThis option does not support SAS filerefs. Macro variable SYSDBMSG is set on successful completion."}},{"Name":"COMPRESS=","Type":"V","Values":{"@Value1":"NO","@Value2":"YES","@Value3":"CHAR","@Value4":"BINARY"},"ToolTips":{"@ToolTip1":"Specifies that the observations in a newly created SAS data set be uncompressed (fixed-length records).","@ToolTip2":"Specifies that the observations in a newly created SAS data set be compressed (variable-length records)  by SAS using RLE (Run Length Encoding).","@ToolTip3":"Specifies that the observations in a newly created SAS data set be compressed (variable-length records)  by SAS using RLE (Run Length Encoding).","@ToolTip4":"Specifies that the observations in a newly created SAS data set be compressed (variable-length records)  by SAS using RDC (Ross Data Compression)."},"Help":{"#cdata":"Controls the compression of observations in output SAS data sets for a SAS data library.\n    \n For CAS, this options requests that the table to be created in SAS Cloud Analytic Services is compressed. Valid values for CAS: YES | NO"}},{"Name":"CVPBYTES=","Type":"V","Help":{"#cdata":"Specifies the number of bytes to expand character variable lengths when processing a SAS data file \nthat requires transcoding."}},{"Name":"CVPENGINE=|CVPENG=","Type":"V","Help":{"#cdata":"Specifies the engine to use in order to process the SAS file."}},{"Name":"CVPMULTIPLIER=|CVPMULT=","Type":"V","Help":{"#cdata":"Specifies a multiplier value in order to expand character variable lengths when processing a SAS data \nfile that requires transcoding."}},{"Name":"EXTENDOBSCOUNTER=|EOC=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Requests an enhanced file format in a newly created SAS data file that counts  observations beyond the 32-bit limitation. Although this SAS data file is created for an  operating environment that stores the number of observations with a 32-bit integer, the  file behaves like a 64-bit file with respect to counters. This is the default.","@ToolTip2":"Specifies that the maximum observation count in a newly created SAS data file is  determined by the long integer size for the operating environment. In operating  environments with a 32-bit-long integer, the maximum number is (2**31)\u20131 or approximately  two billion observations (2,147,483,647). In operating environments with a 64-bit-long  integer, the number is (2**63)\u20131 or approximately 9.2 quintillion observations."},"Help":{"#cdata":"Specifies whether to extend the maximum observation count in output SAS data files \nfor a SAS library.\n    \nDefault: YES"}},{"Name":"INENCODING=","Type":"V","Values":{"@Value1":"ANY","@Value2":"ASCIIANY","@Value3":"EBCDICANY","@Value4":"warabic","@Value5":"wbaltic","@Value6":"wlatin2","@Value7":"wcyrillic","@Value8":"wgreek","@Value9":"whebrew","@Value10":"wturkish","@Value11":"wvietnamese","@Value12":"wlatin1","@Value13":"utf-8","@Value14":"ms-950","@Value15":"ms-936","@Value16":"ms-932","@Value17":"ms-949"},"ToolTips":{"@ToolTip1":"Specifies no transcoding between ASCII and EBCDIC encodings.","@ToolTip2":"Specifies that no transcoding occurs, assuming that the mixed encodings are ASCII encodings.","@ToolTip3":"Specifies that no transcoding occurs, assuming that the mixed encodings are EBCDIC encodings.","@ToolTip4":"Arabic","@ToolTip5":"Baltic","@ToolTip6":"Central Europe","@ToolTip7":"Cyrillic","@ToolTip8":"Greek","@ToolTip9":"Hebrew","@ToolTip10":"Turkish","@ToolTip11":"Vietnamese","@ToolTip12":"Western","@ToolTip13":"Unicode encoding","@ToolTip14":"Traditional Chinese","@ToolTip15":"Simplified Chinese","@ToolTip16":"Japanese","@ToolTip17":"Korean"},"Help":{"#cdata":"Overrides the encoding when you are reading (input processing) SAS data sets in the SAS data library."}},{"Name":"OUTENCODING=","Type":"V","Values":{"@Value1":"ANY","@Value2":"ASCIIANY","@Value3":"EBCDICANY","@Value4":"warabic","@Value5":"wbaltic","@Value6":"wlatin2","@Value7":"wcyrillic","@Value8":"wgreek","@Value9":"whebrew","@Value10":"wturkish","@Value11":"wvietnamese","@Value12":"wlatin1","@Value13":"utf-8","@Value14":"ms-950","@Value15":"ms-936","@Value16":"ms-932","@Value17":"ms-949"},"ToolTips":{"@ToolTip1":"Specifies no transcoding between ASCII and EBCDIC encodings.","@ToolTip2":"Specifies that no transcoding occurs, assuming that the mixed encodings are ASCII encodings.","@ToolTip3":"Specifies that no transcoding occurs, assuming that the mixed encodings are EBCDIC encodings.","@ToolTip4":"Arabic","@ToolTip5":"Baltic","@ToolTip6":"Central Europe","@ToolTip7":"Cyrillic","@ToolTip8":"Greek","@ToolTip9":"Hebrew","@ToolTip10":"Turkish","@ToolTip11":"Vietnamese","@ToolTip12":"Western","@ToolTip13":"Unicode encoding","@ToolTip14":"Traditional Chinese","@ToolTip15":"Simplified Chinese","@ToolTip16":"Japanese","@ToolTip17":"Korean"},"Help":{"#cdata":"Overrides the encoding when you are creating (output processing) SAS data sets in the SAS data library."}},{"Name":"OUTREP=","Type":"V","Values":{"@Value1":"ALPHA_TRU64","@Value2":"ALPHA_VMS_32","@Value3":"ALPHA_VMS_64","@Value4":"HP_IA64","@Value5":"HP_UX_32","@Value6":"HP_UX_64","@Value7":"INTEL_ABI","@Value8":"LINUX_32","@Value9":"LINUX_IA64","@Value10":"MIPS_ABI","@Value11":"MVS_32","@Value12":"OS2","@Value13":"RS_6000_AIX_32","@Value14":"RS_6000_AIX_64","@Value15":"SOLARIS_32","@Value16":"SOLARIS_64","@Value17":"VAX_VMS","@Value18":"WINDOWS_32","@Value19":"WINDOWS_64"},"ToolTips":{"@ToolTip1":"Compaq Tru64 UNIX","@ToolTip2":"OpenVMS Alpha on 32-bit platform","@ToolTip3":"OpenVMS Alpha on 64-bit platform","@ToolTip4":"HP UX on Itanium 64-bit platform","@ToolTip5":"HP UX on 32-bit platform","@ToolTip6":"HP UX on 64-bit platform","@ToolTip7":"ABI UNIX on Intel 32-bit platform","@ToolTip8":"Linux for Intel Architecture on 32-bit platform","@ToolTip9":"Linux for Itanium-based system on 64-bit platform","@ToolTip10":"ABI UNIX on 32-bit platform","@ToolTip11":"z/OS on 32-bit platform","@ToolTip12":"OS/2 on Intel 32-bit platform","@ToolTip13":"AIX UNIX on 32-bit RS/6000","@ToolTip14":"AIX UNIX on 64-bit RS/6000","@ToolTip15":"Sun Solaris on 32-bit platform","@ToolTip16":"Sun Solaris on 64-bit platform","@ToolTip17":"VAX VMS","@ToolTip18":"Microsoft Windows on 32-bit platform","@ToolTip19":"Microsoft Windows 64-bit Edition"},"Help":{"#cdata":"Specifies the data representation for the SAS library, which is the form in which data is stored in \na particular operating environment."}},{"Name":"REPEMPTY=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that a new empty data set with a given name replace an existing data set with the same name.  This is the default.","@ToolTip2":"Specifies that a new empty data set with a given name not replace an existing data set with the same name."},"Help":{"#cdata":"Controls replacement of like-named temporary or permanent SAS data sets when the new one is empty."}},{"Name":"SASEDOC","Type":"S","Help":{"#cdata":"Syntax: LIBNAME libref SASEDOC 'path' <sasedoc-engine-option> <options>;\n    \nIs the name of the engine that associates a SAS libref (library reference) with one or more ODS  \noutput objects that are stored in an ODS document."}},{"Name":"META","Type":"S","Help":{"#cdata":"Syntax: LIBNAME libref META LIBID=<\">identifier<\"> | LIBRARY=<\">name<\"> |  \n      LIBRARY=\"/folder-pathname/name\" | LIBURI=\"URI-format\"  \n     <server-connection-arguments>  \n     <METAOUT=ALL | DATA | DATAREG | META>  \n     <CONOPTSET=\"propertyset-object\">  \n     <LIBOPTSET=\"propertyset-object\">;  \n\n    \nIs the engine name for the metadata engine that reads metadata on the SAS Metadata Server."}},{"Name":"XML","Type":"S","Help":{"#cdata":"Specifies the XML engine nickname that accesses the SAS 9.1.3 XML engine functionality."}},{"Name":"XMLV2|XML92","Type":"S","Help":{"#cdata":"Specifies the XML engine nickname that accesses the SAS 9.2 and 9.3 XML engine \nfunctionality.\n\nTip: At your site, the engine nicknames could be different if your system administrator \nassigned an alias to the XML LIBNAME engine. See your system administrator to determine \nwhether an alias is assigned."}},{"Name":"WEBDAV","Type":"S","Help":{"#cdata":"Specifies that the libref access a WebDAV server."}},{"Name":"INFOMAPS|SASIOIME","Type":"S","Help":{"#cdata":"Is the engine name for the SAS Information Maps LIBNAME engine."}},{"Name":"SASESOCK","Type":"S","Help":{"#cdata":"Identifies the SASESOCK engine to process input to and output from a TCP/IP port instead of a \nphysical disk device."}},{"Name":"DOC_SEQNO=","Type":"V","Help":{"#cdata":"[Syntax: DOC_SEQNO=sequence-number] \n    \nPermits you to specify the sequence number of the output object to be accessed."}},{"Name":"LIBID=","Type":"V","Help":{"#cdata":"[Syntax: LIBID=<\">identifier<\"> | <\">name<\"> | LIBRARY=\"/folder-pathname/name\" | LIBURI=\"URI-format\"]\n    \nSpecifies a SASLibrary object, which defines a SAS library. This SAS library contains the data that \nyou want to process."}},{"Name":"LIBRARY=|\"","Type":"V","Help":{"#cdata":"[Syntax: LIBRARY=\"/folder-pathname/name\" | LIBURI=\"URI-format\" | LIBID=<\">identifier<\"> | <\">name<\">] \n    \nIs the name that is assigned to a particular SASLibrary metadata object in a SAS Metadata Repository. \n\nAlternatively, you can specify the folder pathname and the value in the SASLibrary object's Name= \nattribute. The pathname is the object's location in a SAS folder. The pathname begins with a forward \nslash. An example is library=\"/Users/Dmitri/My Folder/test/mylib\" . The maximum length is 256 characters."}},{"Name":"LIBURI=","Type":"V","Help":{"#cdata":"[Syntax: LIBURI=\"URI-format\" | LIBID=<\">identifier<\"> | <\">name<\"> | LIBRARY=\"/folder-pathname/name\"] \n    \nReferences the particular SASLibrary metadata object in a SAS Metadata Repository using one of the \nSAS Open Metadata Architecture Uniform Resource Identifier (URI) formats. \n\nThe following URI formats are supported.\n\n  LIBURI=\"identifier.identifier\" \n  specifies the full 17-character metadata identifier, which references both the repository and the object. \n  This syntax is equivalent to specifying both LIBID= and REPID=. An example is liburi=\"A57DQR88.AW000002\".\n\n  LIBURI=\"SASLibrary/identifier.identifier\" \n  specifies the SASLibrary object type, followed by the full 17-character metadata identifier. This syntax \n  is equivalent to specifying both LIBID= and REPID=. An example is liburi=\"SASLibrary/A57DQR88.AW000002\".\n\n  LIBURI=\"SASLibrary?@attribute='value'\" \n  specifies the SASLibrary object type, followed by a search string. Examples are liburi=\"SASLibrary?@libref='mylib'\" \n  and liburi=\" SASLibrary?@engine='base'\".\n\nRequirement: You must enclose the LIBURI= value in quotation marks."}},{"Name":"IPADDR=","Type":"V","Help":{"#cdata":"[Syntax: IPADDR=address] \n    \nIs the network IP (Internet Protocol) address of the computer that hosts the SAS Metadata Server, \nsuch as ipaddr=d6292.us.sas.com."}},{"Name":"PORT=","Type":"V","Help":{"#cdata":"[Syntax: PORT=port-number] \n    \nSpecifies the port number that is used to connect to the specified server.\n\nFor SASIOLA engine:\nSpecifies the port on which the LASR Analytic Server controller listens for connections.\nIf the PORT= is not specified, the port is derived from the contents of the LASR= file, \nor from the LASRPORT macro variable.\n\nFor CAS/SASIOCA:\nSpecifiesan integer for the port where the SAS Cloud Analytic Services control node listens \nfor client connections. It is recommended that you specify a port. Otherwise, the engine checks \nfor a value in the CASHOST= system option and then in the _CASHOST_ macro variable."}},{"Name":"PROTOCOL=","Type":"V","Values":{"@Value1":"BRIDGE","@Value2":"COM"},"ToolTips":{"@ToolTip1":"Specifies that the connection use the SAS Bridge protocol. This is the default.","@ToolTip2":"Specifies that the connection use Microsoft COM/DCOM services."},"Help":{"#cdata":"Specifies the network protocol for communicating with the SAS Metadata Server."}},{"Name":"TAG=","Type":"V","Help":{"#cdata":"[Syntax: TAG=keyword|TAG=tag-name] \n \nFor SASIOLA:\nSpecifies the tag for identifying tables in the LASR Analytic Server image. \nIf no TAG= is specified, the name of the LIBNAME serves as the tag. A TAG= can also be \nspecified as a DATA set option\u2014this overrides any TAG= specification in the LIBNAME \nstatement.\n\nFor CAS/SASIOCA:\nSpecifies a user-defined string to use for constructing table names. The TAG= option was first used \nin the SASIOLA engine to handle multi-level names. A SAS data set is identified by its libref and \nmember name, for example, WORK.FOO. Table names in CAS can have more than two levels."}},{"Name":"FORMATEXPORT=","Type":"V","Values":{"@Value1":"NONE","@Value2":"ALL","@Value3":"DATA"},"ToolTips":{"@ToolTip1":"User-defined formats are not transferred to the server. ","@ToolTip2":"All formats in the format catalog search path are converted and transferred with the table.  This is useful if the catalog search path contains user-defined formats that you might want  to use later in LASR actions against the table, but that are currently not associated with  variables in the data set. With large catalogs or a deep search path, considerable resources  might be used to generate the XML representation of the formats.","@ToolTip3":"Implies that the definition of all user-defined formats associated with variables written  to the LASR Analytic Server table will be transferred to the server. You can then draw on  those formats when running actions against the table in the LASR Analytic Server\u2014in other words, you do not transfer the formats as XML streams on subsequent actions to the server. "},"Help":{"#cdata":"Specifies how the engine handles user-defined formats when tables are added to the \nLASR Analytic Server. The default is FORMATEXPORT=DATA."}},{"Name":"TIMEOUT=","Type":"V","Help":{"#cdata":"[Syntax: TIMEOUT=time-in-seconds] \n    \nSpecifies the time in seconds that a SAS process will wait to successfully connect to another process."}},{"Name":"PASSWORD=|PWD=|PW=|PASS=","Type":"V","Help":{"#cdata":"Specifies a password for the user to access a server."}},{"Name":"SYBPW=","Type":"V","Help":{"#cdata":"Specifies a password for the user to access a Sybase server."}},{"Name":"REPID=","Type":"V","Help":{"#cdata":"[Syntax: REPID=id] \n    \nIs an identifier that is assigned to a particular SAS Metadata Repository."}},{"Name":"REPOSITORY=|REPNAME=|REPOS=|METAREPOSITORY=","Type":"V","Help":{"#cdata":"[Syntax: REPOSITORY|REPNAME|REPOS|METAREPOSITORY=name] \n   \nIs a name that is assigned to a particular repository."}},{"Name":"USER=|METAUSER=|USERID=|ID=|UID=","Type":"V","Help":{"#cdata":"[Syntax: USER|METAUSER|USERID|ID=id] \n   \nSpecifies the user name or user ID that you use to connect to your database."}},{"Name":"METAOUT=","Type":"V","Values":{"@Value1":"ALL","@Value2":"DATA","@Value3":"DATAREG","@Value4":"META"},"ToolTips":{"@ToolTip1":"Specifies that you can read, create, update, and delete observations in existing physical tables  that are defined in metadata. You cannot create or delete entire physical tables. This is the  default behavior.                 Interaction: The user is restricted to only the tables that have been defined in the repository.","@ToolTip2":"Specifies that you can read, create, update, and delete physical tables.  Interaction: The user can access any table, regardless of whether it has been defined in the repository.","@ToolTip3":"Specifies that you can read, update, and delete physical tables that are defined in metadata. You  can create a table, but you cannot read, update, or delete the new table until it is defined in  metadata. This value is like ALL, but it adds the ability to create new tables.  Interaction: The user is restricted to only the tables that have been defined in the repository.","@ToolTip4":"Specifies that you can read physical tables that are defined in metadata. You cannot create, update,  or delete physical tables or observations. This value is like ALL, without the ability to create,  update, and delete observations.  Interaction: The user is restricted to only the tables that have been defined in the repository.   Caution: The METAOUT=META value might not be supported in future releases of the software."},"Help":{"#cdata":"Specifies the metadata engine's output processing of tables in the data source."}},{"Name":"PROXY=","Type":"V","Help":{"#cdata":"[Syntax: PROXY=url] \n    \nSpecifies the Uniform Resource Locator (URL) for the proxy server in one of these forms: \n\n \"http://hostname\"\n \n \"http://hostname:port\""}},{"Name":"LOCALCACHE=","Type":"V","Help":{"#cdata":"[Syntax: LOCALCACHE=\"directory name\"] \n    \nSpecifies a directory where a temporary subdirectory is created to hold local copies of the server files."}},{"Name":"LOCKDURATION=","Type":"V","Help":{"#cdata":"[Syntax: LOCKDURATION=n] \n    \nSpecifies the number of minutes that the files written through the WebDAV libref are locked."}},{"Name":"INDENT=","Type":"V","Help":{"#cdata":"[Syntax: INDENT=integer] \n    \nSpecifies the number of columns to indent each nested element in the exported XML document."}},{"Name":"FORMATACTIVE=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"CDISC ODM CodeList elements are to be converted to SAS variable formats, and vice versa.","@ToolTip2":"CDISC ODM CodeList elements are not to be converted to SAS variable formats, and vice versa."},"Help":{"#cdata":"Specifies whether CDISC ODM CodeList elements, which contain instructions for transcoding display \ndata in a CDISC ODM document, are to be converted to SAS variable formats, and vice versa."}},{"Name":"FORMATLIBRARY=","Type":"V","Help":{"#cdata":"[Syntax: FORMATLIBRARY=libref] \n    \nSpecifies the libref of an existing SAS library in which to create the format catalog."}},{"Name":"FORMATNOREPLACE=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"The engine does not replace formats that have the same name.","@ToolTip2":"The engine replaces formats that have the same name. This is the default."},"Help":{"#cdata":"Specifies whether to replace existing format entries in the format catalog search path in cases where \nan existing format entry has the same name as a format that is being created by the XML engine when \nit converts a CDISC ODM CodeList element."}},{"Name":"VERSION=","Type":"V","Help":{"#cdata":"[XML92 Only][Syntax: VERSION=value] \n    \nSpecifies a version name or number for the software. For example, when importing a CDISC ODM \ndocument, you can specify version=\"1.2\".\n\nRestriction: The functionality is available for the XML92 engine nickname only. \n\nRestriction: The functionality is for SAS 9.2 Phase 2 and later."}},{"Name":"OIMSTART=","Type":"V","Help":{"#cdata":"[Syntax: OIMSTART=nnn] \n    \nSpecifies a beginning reference number, which in the exported XML document will be incremented \nsequentially for catalog, schema, table, and column identification. Default is 1."}},{"Name":"XMLCONCATENATE=|XMLCONCAT=","Type":"V","Values":{"@Value1":"NO","@Value2":"YES"},"ToolTips":{"@ToolTip1":"File to be imported foes not contain multiple, concatenated XML documents.","@ToolTip2":"File to be imported contains multiple, concatenated XML documents."},"Help":{"#cdata":"Specifies whether the file to be imported contains multiple, concatenated XML documents. Importing \nmultiple, concatenated XML documents can be useful (for example, if an application is producing a \ncomplete document per query/response, as in a Web form).\n\nDefault: NO \n\nRestriction: Use this option when importing an XML document only. \n\nRestriction: Use XMLCONCATENATE=YES cautiously. If an XML document consists of concatenated XML \ndocuments, the content is not standard XML construction. The option is provided for convenience, \nnot to encourage invalid XML markup."}},{"Name":"XMLDATAFORM=","Type":"V","Values":{"@Value1":"ELEMENT","@Value2":"ATTRIBUTE"},"ToolTips":{"@ToolTip1":"Specifies the tag for the element to contain SAS variable information (name and data)  is in open element.","@ToolTip2":"Specifies the tag for the element to contain SAS variable information (name and data)  is in enclosed attribute format."},"Help":{"#cdata":"Specifies whether the tag for the element to contain SAS variable information (name and data) is in \nopen element or enclosed attribute format. For example, if the variable name is PRICE and the value \nof one observation is 1.98, the generated output for ELEMENT is <PRICE> 1.98 </PRICE> and for ATTRIBUTE \nit is <COLUMN name=\"PRICE\" value=\"1.98\" />.\n\nDefault: ELEMENT \n\nRestriction: Use this option when exporting an XML document only. \n\nRestriction: Use this option for the GENERIC markup type only."}},{"Name":"XMLDOUBLE=","Type":"V","Values":{"@Value1":"DISPLAY|FORMAT","@Value2":"INTERNAL|PRECISION"},"ToolTips":{"@ToolTip1":"Uses an assigned SAS format. When exporting, the engine retrieves the stored value for the numeric  variable, determines an appropriate display for the value in a readable form, and writes the display  value to the XML document. In some cases, values might not be displayed completely, or they might show  truncation or rounding artifacts.   When importing, the engine retrieves PCDATA (parsed character data) from the named element in the XML  document and converts that value to numeric variable content.","@ToolTip2":"Retains the precision of numeric values. When exporting, the XML engine retrieves the stored value  for the numeric variable and writes the raw value to a generated attribute-value pair (of the form  rawvalue=\"value\"). SAS uses a base64 encoding of a portable machine representation. (The  base64 encoding method converts binary data into ASCII text, and vice versa, and is similar to the  MIME format.)   When importing, the XML engine retrieves the value from the rawvalue= attribute from the named element  in the XML document and converts that value to numeric variable content. The PCDATA content of the  element is ignored.   Typically, you use XMLDOUBLE=INTERNAL to import or export an XML document when data content is more  important than readability."},"Help":{"#cdata":"Determines the precision of a numeric value by specifying whether you want the value to be controlled \nby an assigned SAS format or whether you want the stored raw value."}},{"Name":"XMLFILEREF=","Type":"V","Help":{"#cdata":"[Syntax: XMLFILEREF=fileref] \n   \nIs the SAS name that is associated with the physical location of the XML document to be exported \nor imported. To assign the fileref, use the FILENAME statement. The XML engine can access any data \nreferenced by a fileref. For example, the following code writes to the XML document Wilma.XML: \n\n  filename cartoon 'C:\\XMLdata\\wilma.xml';\n\n  libname bedrock xml xmlfileref=cartoon;\n\n  proc print data=bedrock.wilma;\n  run;"}},{"Name":"XMLMETA=","Type":"V","Values":{"@Value1":"DATA|NONE\\NO|IGNORE","@Value2":"SCHEMADATA|FULL|YES","@Value3":"SCHEMA"},"ToolTips":{"@ToolTip1":"Ignores metadata-related information.","@ToolTip2":"Includes both data content and metadata-related information in the exported markup and imports  both data content and metadata-related information in the input XML document.","@ToolTip3":"Ignores data content."},"Help":{"#cdata":"Specifies whether to include metadata-related information in the exported markup, or specifies \nwhether to import metadata-related information that is included in the input XML document."}},{"Name":"XMLPROCESS=","Type":"V","Values":{"@Value1":"CONFORM","@Value2":"PERMIT|RELAX"},"ToolTips":{"@ToolTip1":"Requires that the XML conform to W3C specifications.","@ToolTip2":"Allows for character data that does not conform to W3C specifications to be accepted."},"Help":{"#cdata":"Determines how the XML engine processes character data that does not conform to W3C specifications."}},{"Name":"XMLSCHEMA=","Type":"V","Help":{"#cdata":"Syntax: XMLSCHEMA=fileref|'external-file'] \n    \nSpecifies an external file to contain metadata-related information."}},{"Name":"XMLTYPE=","Type":"V","Values":{"@Value1":"GENERIC","@Value2":"ORACLE","@Value3":"OIMDBM","@Value4":"EXPORT","@Value5":"HTML","@Value6":"MSACCESS","@Value7":"CDISCODM","@Value8":"WSDL","@Value9":"XMLMAP"},"ToolTips":{"@ToolTip1":"A simple, well-formed XML format. This is the default.","@ToolTip2":"Is the XML format for the markup standards equivalent to the Oracle8iXML implementation.","@ToolTip3":"Is the XML format for the markup standards supported by the Open Information Model  (Database Schema Model) proposed by the Metadata Coalition (MDC) as vendor and  technology independent, conforming to the 1.0 specification.","@ToolTip4":"[XML92 Only]--Is an alias to specify the XML format that is most commonly used in the industry. It is an XML markup type for transporting files across hosts. The EXPORT markup type processes XML  markup that is in a machine-independent format and can be used for all hosts. The EXPORT markup type  determines a variable's attributes from metadata.","@ToolTip5":"Is the HyperText Markup Language format.","@ToolTip6":"Is the XML format for the markup standards supported for a Microsoft Access database (.mdb).","@ToolTip7":"Is the XML format for the markup standards that are defined in the Operational Data Model (ODM)  that was created by the Clinical Data Interchange Standards Consortium (CDISC).","@ToolTip8":"[XML92 Only]--Is the XML markup type that supports the markup standards of the WSDL. WSDL describes  Web services and is developed jointly by Microsoft and IBM. The XML engine supports WSDL Version 1.1.  Specifying the WSDL markup type enables the XML engine to invoke a Web service and import the Web  service results.","@ToolTip9":"[XML92 Only]--Specifies that XML markup is determined by an XMLMap, which is an XML document that  you create that contains specific XMLMap syntax. The XMLMap syntax tells the XML engine how to map  the SAS data back into the specific XML document structure."},"Help":{"#cdata":"Specifies the format type."}},{"Name":"ODSCHARSET=","Type":"V","Help":{"#cdata":"[Syntax: ODSCHARSET=character-set]   \n    \nSpecifies the character set to use for the output file. A character set includes letters, logograms, \ndigits, punctuation, symbols, and control characters that are used for display and printing. An example \nof a character set is ISO-8859-1.\n\nRestriction: Use this option when exporting an XML document only. \nTip: The combination of the character set and translation table (encoding method) results in the \nfile's encoding."}},{"Name":"ODSTRANTAB=","Type":"V","Help":{"#cdata":"[Syntax: ODSTRANTAB=table-name] \n    \nSpecifies the translation table to use for the output file. The translation table (encoding method) \nis a set of rules that are used to map characters in a character set to numeric values. An example \nof a translation table is one that converts characters from EBCDIC to ASCII-ISO. The table-name can \nbe any translation table that SAS provides or any user-defined translation table. The value must be \nthe name of a SAS catalog entry in either the SASUSER.PROFILE catalog or the SASHELP.HOST catalog.\n\nRestriction: Use this option when exporting an XML document only. \n\nTip: The combination of the character set and translation table results in the file's encoding."}},{"Name":"XMLENCODING=","Type":"V","Help":{"#cdata":"[Syntax: XMLENCODING='encoding-value'] \n    \nOverrides the SAS data set's encoding for the output file. If an encoding value contains a hyphen, \nenclose the value in quotation marks.\n\nRestriction: Use this option when exporting an XML document only."}},{"Name":"ODSRECSEP=","Type":"V","Values":{"@Value1":"DEFAULT","@Value2":"NONE","@Value3":"YES"},"ToolTips":{"@ToolTip1":"Enables the XML engine to determine whether to generate a record separator based on the operating  environment where you run the SAS job.   The use of a record separator varies by operating environment.  Tip: If you do not transfer XML documents across environments, use the default behavior.","@ToolTip2":"Specifies to not generate a record separator.   The XML engine uses the logical record length of the file that you are writing to and writes one  line of XML markup at a time to the output file.","@ToolTip3":"Specifies to generate a record separator.  Default: The XML engine determines whether to generate a record separator based on the operating  environment where you run the SAS job.    Restriction: Use this option when exporting an XML document only."},"Help":{"#cdata":"Controls the generation of a record separator that marks the end of a line in the output XML document."}},{"Name":"TAGSET=","Type":"V","Help":{"#cdata":"[Syntax: TAGSET=tagset-name] \n    \nSpecifies the name of a tagset in order to override the default tagset that is used by the markup \ntype that is specified with XMLTYPE=. \n\nTo change the tags that are produced, you can create a customized tagset and specify it with the \nTAGSET= option. \n\nRestriction: Use this option with caution. If you are unfamiliar with XML markup, do not use this option. \n\nRestriction: Use this option when exporting an XML document only."}},{"Name":"XMLCOMPRESS=","Type":"V","Values":{"@Value1":"NO","@Value2":"YES"},"ToolTips":{"@ToolTip1":"Writes observations in expanded element form.","@ToolTip2":"Writes observations in base64 encoding, which is a compressed format. The base64 encoding method  converts binary data into ASCII text."},"Help":{"#cdata":"[XML92 Only] \n    \nControls how SAS data set observations are written to the XML document."}},{"Name":"XMLMAP=","Type":"V","Help":{"#cdata":"[Syntax: XMLMAP=fileref | 'XMLMap'] \n    \nSpecifies an XML document that you create that contains specific XMLMap syntax. The syntax tells \nthe XML engine how to interpret the XML markup for importing or exporting. The XMLMap syntax is \nitself XML markup. \n\nfileref \nis the SAS name that is associated with the physical location of the XMLMap. To assign a fileref, \nuse the FILENAME statement.\n\nTip: To assign a fileref to an XMLMap using the URL access method, your Web server might require \nthat the file extension be .xml instead of .map. \n\n'XMLMap' \nis the physical location of the XMLMap. Include the complete pathname and the filename. It is \nsuggested that you use the filename extension .map. Enclose the physical name in single or double \nquotation marks."}},{"Name":"HOST=|SERVER=","Type":"V","Help":{"#cdata":"[Syntax: HOST=\"server-name\" | SERVER=<'>server-name<'>|HOST=controller-host-name] \n    \nFor SASIOLA engine:\nSpecifies the LASR Analytic Server controller. If a HOST= is specified, it is overwritten \nby the value from the LASR Analytic Server file, provided the LASR= option is specified.\n\nFor SASHDAT engine:\nSpecifies the name node of the HDFS cluster. If you are running in a LASR Analytic Server \nenvironment, then this is also the LASR controller (or grid host). You can use SERVER= as \nan alias for the HOST= option. If the HOST= option is not specified, the sashdat engines \nqueries the GRIDHOST environment variable. \n\nFor POSTGRES/VERTICA engines:\nSpecifies the server name or IP address of the PostgreSQL or Vertica server to which you want to connect. \nThis server accesses the database that contains the tables and views that you want to access. \nIf the server name contains spaces or nonalphanumeric characters, you must enclose it in \nquotation marks.\n\nFor CAS/SASIOCA:\nSpecifies the machine that is controller node of the server."}},{"Name":"HOSTNAME=","Type":"V","Help":{"#cdata":"[Syntax: HOSTNAME=node-name] \n    \nIs used to specify the name of the node that the server runs on."}},{"Name":"INSTALL=","Type":"V","Help":{"#cdata":"[Syntax: INSTALL=\"install-location\"] \n    \nSpecifies the install location of TKGrid on the cluster. If the INSTALL= option is not \nspecified, the sashdat engine queries the GRIDINSTALLLOC environment variable."}},{"Name":"SLIBREF=","Type":"V","Help":{"#cdata":"Specifies an existing server libref that you want to reference from the client."}},{"Name":"RENGINE=","Type":"V","Help":{"#cdata":"[Syntax: RENGINE=engine-name] \n    \nSpecifies the engine to be used to process the SAS data library."}},{"Name":"ROPTIONS=","Type":"V","Help":{"#cdata":"[Syntax: ROPTIONS=\"option=value <option=value> ...\"] \n    \nExecuted in the server session, specifies remote options and options that are specific to an operating environment \nthat the client passes to the engine on the server that will process the SAS data library."}},{"Name":"RMTVIEW=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"(The default) causes views to be interpreted in the server's SAS execution.","@ToolTip2":"Causes views to be interpreted in the client SAS session."},"Help":{"#cdata":"Determines whether SAS data views are interpreted in the server or in the client SAS session."}},{"Name":"SAPW=","Type":"V","Help":{"#cdata":"[Syntax: SAPW=server-access-password | \"encoded-password\"] \n    \nExecuted in the client session, specifies a server access password."}},{"Name":"SERVER=|METASERVER=|IPADDR=","Type":"V","Help":{"#cdata":"[Syntax: SERVER|METASERVER|IPADDR=server-ID] \n    \nSpecifies the ID, name, or IP address of the server to which you want to connect."}},{"Name":"MAPPATH=|PATH=","Type":"V","Help":{"#cdata":"[Syntax: MAPPATH=\"location\"] \n   \nSpecifies the path to the location within the SAS folders tree for the information maps you want to read.\n\nThe path is hierarchical with the slash (/) as the separator character. For example, \nmappath=\"/Users/myUserID/My Folder\". If the path does not contain a blank space (or spaces), \nenclosing the identifier in quotation marks is optional.\n\nNOTE: PATH= can also be an alias for the DS=|DATASRC= option. It specifies the data source file. \nThis is the full path and filename for your relational database file or Microsoft Excel \nworkbook file."}},{"Name":"DOMAIN=","Type":"V","Help":{"#cdata":"[Syntax: DOMAIN=\"authentication-domain\"] \n    \nSpecifies an authentication domain to associate the user ID and password with. If you do not specify \nan authentication domain, then the user ID and password are associated with the DefaultAuth authentication \ndomain. \n\nAn authentication domain is a set of computing resources that use the same authentication process. \nAn individual uses the same user ID and password for all of the resources in a particular authentication \ndomain. Authentication domains provide logical groupings for resources and logins in a metadata repository. \nFor example, when an application needs to locate credentials that enable a particular user to access a \nparticular server, the application searches the metadata for logins that are associated with the \nauthentication domain in which the target server is registered."}},{"Name":"METAPASS=","Type":"V","Help":{"#cdata":"[Syntax: METAPASS=\"password\"] \n    \nSpecifies the password that is associated with your user name or user ID."}},{"Name":"METAPORT=","Type":"V","Help":{"#cdata":"[Syntax: METAPORT=port-number] \n   \nSpecifies the TCP port that the metadata server is listening to for connections."}},{"Name":"METASERVER=|IPADDR=","Type":"V","Help":{"#cdata":"[Syntax: METASERVER=|IPADDR=\"address\"] \n    \nSpecifies the network IP (Internet Protocol) address of the computer that hosts the metadata server. \nFor example, metaserver=\"myip.mycompany.com\" . Enclosing the identifier in quotation marks is optional.\n\nIf this option is not specified, the value is obtained from the METASERVER= system option."}},{"Name":"METAUSER=|USERID=|ID=","Type":"V","Help":{"#cdata":"[Syntax: METAUSER=\"user-ID\"] \n    \nSpecifies the user ID to connect to the metadata server. For example, metauser=\"My UserID\" \nor metauser=myUserID . If the user ID does not contain a blank space (or spaces), enclosing \nthe identifier in quotation mark is optional.\n\nYou can use the METAUSER= system option to specify a default user ID for connecting to the \nmetadata server for the SAS session."}},{"Name":"AGGREGATE=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specify YES in order to see data items that do not support detailed data.","@ToolTip2":"Specifies that aggregated data should be used."},"Help":{"#cdata":"Specifies whether detailed data or aggregated data should be used. Specify YES in order to see data \nitems that do not support detailed data. Default: NO"}},{"Name":"METACREDENTIALS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that the user ID and password specified in the METAUSER= and METAPASS=  system options are retrieved and used to connect to the metadata server when the  METAUSER= and METAPASS= options for the PROC INFOMAPS statement are omitted.","@ToolTip2":"Enables a connection to be established under the identity of the client user using a  new one-time password. Specify METACREDENTIALS=NO to prevent the INFOMAPS procedure  from using the system option values."},"Help":{"#cdata":"Specifies whether the user ID and password specified in the METAUSER= and METAPASS= \nsystem options are retrieved and used to connect to the metadata server when the \nMETAUSER= and METAPASS= options for the PROC INFOMAPS statement are omitted.\n\nBy default, or when METACREDENTIALS=YES is specified, the system option values are \nused if they are available when the corresponding options for the PROC INFOMAPS \nstatement are omitted. Specify METACREDENTIALS=NO to prevent the INFOMAPS procedure \nfrom using the system option values.\n\nA typical situation in which you would specify METACREDENTIALS=NO is when the code \ncontaining the INFOMAPS procedure is being executed on a workspace server or stored \nprocess server. In such cases, the METAUSER= and METAPASS= system options contain a \none-time user ID and password that have already been used by the server. A new one-time \npassword must be generated in this situation. Specifying METACREDENTIALS=NO enables a \nconnection to be established under the identity of the client user using a new one-time \npassword.\n\nDefault: YES"}},{"Name":"EXPCOLUMNLEN=","Type":"V","Help":{"#cdata":"[Syntax: EXPCOLUMNLEN=integer] \n    \nSpecifies the length of the SAS character column when a data item defined with expressions is encountered."}},{"Name":"PRESERVE_MAP_NAMES=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that information map names are read with special characters, and that the exact,  case-sensitive spelling of the name is preserved.","@ToolTip2":"Specifies that when you refer to an information map, the information map name is derived  from SAS member names by using SAS member-name normalization."},"Help":{"#cdata":"Specifies how information map name is read or derived."}},{"Name":"PROMPT","Type":"S","Help":{"#cdata":"Specifies to prompt for the user login password, if necessary.\n\nInteraction: If PROMPT is specified without USER=, then the user is prompted for an ID, as well \nas a password. \n\nTip: If you specify the PROMPT option, you do not need to specify the PASSWORD= option."}},{"Name":"CONOPTSET=","Type":"V","Help":{"#cdata":"[Syntax: CONOPTSET=<\">propertyset-object<\"> ] \n    \nSpecifies a PropertySet object that is associated with the SASClientConnection object that corresponds \nto the SASLibrary object specified by the LIBID=, LIBRARY=, or LIBURI= argument. The Property objects \nthat are associated with this PropertySet object are used as connection arguments for the constructed \nLIBNAME statement for the underlying engine. A SASClientConnection object exists only for engines that \nconnect to a server, such as the SAS/ACCESS engines. The maximum length is 60 characters."}},{"Name":"LIBOPTSET=","Type":"V","Help":{"#cdata":"[Syntax: LIBOPTSET=<\">propertyset-object<\"> ] \n    \nSpecifies a PropertySet object that is associated with the SASLibrary object specified by the LIBID=, \nLIBRARY=, or LIBURI= argument. The Property objects that are associated with this PropertySet object \nare used as statement arguments for the constructed LIBNAME statement for the underlying engine. The \nmaximum length is 60 characters."}},{"Name":"DATABASE=|DB=","Type":"V","Help":{"#cdata":"[Syntax: DATABASE=<'>database-name<'> ]\n    \nSpecifies the name of the database on the server that contains the tables and views that \nyou want to access. If the database name contains spaces or nonalphanumeric characters, \nyou must enclose it in quotation marks.\n\nNote: For the Hadoop engine, this is an alias for SCHEMA=."}},{"Name":"READ_ONLY=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies to connect to the database in read-only mode.","@ToolTip2":"Specifies to connect to the database in read-write (NO) mode."},"Help":{"#cdata":"Specifies whether to connect to the database in read-only mode (YES) or read-write (NO) \nmode. If you do not specify anything for READ_ONLY=, the default of NO is used."}},{"Name":"DSN=","Type":"V","Help":{"#cdata":"[Syntax: DSN=<'>Data-source<'> ]\n    \nSpecifies the configured ODBC datasource to which you want to connect. Use this option \nif you have existing ODBC datasources that are configured on your client."}},{"Name":"USING=","Type":"V","Help":{"#cdata":"[Syntax: USING=<'>Informix-password<'> ] \n    \nSpecifies the password that is associated with the Informix user. If you omit the password, \nInformix uses the password in the /etc/password file."}},{"Name":"ACCOUNT=","Type":"V","Help":{"#cdata":"[Syntax: ACCOUNT=<'>account_ID<'> ] \n    \nIs an optional connection option that specifies the account number that you want \nto charge for the Teradata session."}},{"Name":"TDPID=","Type":"V","Help":{"#cdata":"[Syntax: TDPID=<'>dbcname<'> ] \n    \nIs a required connection option if you run more than one Teradata server. TDPID= operates \ndifferently for network-attached and channel-attached systems. You can substitute SERVER= \nfor TDPID= in all circumstances."}},{"Name":"DBDATASRC=","Type":"V","Help":{"#cdata":"[Syntax: DBDATASRC=<'>database-data-source<'> \n    \nEnvironment variable that lets you set a default data source. This value is used \nif you do not specify a SERVER= connection option."}},{"Name":"DATASOURCE=","Type":"V","Help":{"#cdata":"[Syntax: DATASOURCE=<'>data-source<'> ]\n    \nIdentifies the data source object (such as a relational database server or a local file) \nto which you want to connect."}},{"Name":"PROVIDER=","Type":"V","Help":{"#cdata":"[Syntax: PROVIDER=<'>provider-name<'> ]\n    \nSpecifies which OLE DB provider to use to connect to the data source. This option \nis required during batch processing. \n\nThere is no restriction on the length of the provider-name. If the provider-name \ncontains blank spaces or special characters, enclose it in quotation marks.\n"}},{"Name":"PROPERTIES=","Type":"V","Help":{"#cdata":"[Syntax: PROPERTIES=(<'>property-1<'>=<'>value-1<'> < ... <'>property-n<'>=<'>value-n<'>>)] \n    \nSpecifies standard provider properties that enable you to connect to a data source and \nto define connection attributes. If a property name or value contains embedded spaces or \nspecial characters, enclose the name or value in quotation marks. Use a blank space to \nseparate multiple properties. If your provider supports a password property, that value \ncannot be encoded. To use an encoded password, use the PASSWORD= option instead."}},{"Name":"PROVIDER_STRING=","Type":"V","Help":{"#cdata":"[Syntax: PROVIDER_STRING=<'>extended-properties<'> ]\n    \nSpecifies provider-specific extended connection information, such as the file type \nof the data source. If the string contains blank spaces or special characters, enclose \nit in quotation marks. For example, the Microsoft Jet provider accepts strings that \nindicate file type, such as 'Excel 8.0'."}},{"Name":"OLEDB_SERVICES=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies to use OLE DB Services.","@ToolTip2":"Specifies to use the provider to connect to the data source."},"Help":{"#cdata":"Determines whether SAS uses OLE DB Services to connect to the data source."}},{"Name":"INIT_STRING=","Type":"V","Help":{"#cdata":"[Syntax: INIT_STRING='property-1=value-1<...;property-n=value-n>' ]\n    \nSpecifies an initialization string, enabling you to bypass the interactive prompting \ninterface yet still use OLE DB Services. Use a semicolon to separate properties."}},{"Name":"IP_CURSOR=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that Implicit Proc SQL pass-through processes multiple result sets  simultaneously.","@ToolTip2":"Specifies that Implicit Proc SQL pass-through should not process multiple result  sets simultaneously."},"Help":{"#cdata":"Specifies whether Implicit Proc SQL pass-through processes multiple result sets \nsimultaneously. IP_CURSOR is set to NO by default. \n\nSetting it to YES allows this type of extended processing. However, it decreases \nperformance because cursors, not result sets, are being used. Do not set to YES \nunless needed."}},{"Name":"COMPLETE=","Type":"V","Help":{"#cdata":"[Syntax: COMPLETE=<'>SQL-Server-connection-options<'> | COMPLETE=YES | NO] \n    \n[This connection option is not supported on UNIX.]\n\nMicrosoft SQL Server: COMPLETE=<'>SQL-Server-connection-options<'>\nSpecifies connection options for your data source or database. Separate multiple options \nwith a semicolon. When a successful connection is made, the complete connection string is \nreturned in the SYSDBMSG macro variable.\n\nIf you do not specify enough correct connection options, you are prompted with a dialog \nbox that displays the values from the COMPLETE= connection string. You can edit any field \nbefore you connect to the data source. \n\nOLEDB: COMPLETE=YES | NO\nSpecifies whether SAS attempts to connect to the data source without prompting you for \nconnection information.\n\nIf you specify COMPLETE=YES and the connection information that you specify in your LIBNAME \nstatement is sufficient, then SAS makes the connection and does not prompt you for additional \ninformation.\n\nIf you specify COMPLETE=YES and the connection information that you specify in your LIBNAME \nstatement is not sufficient, the provider's dialog box prompts you for additional information. \nYou can enter optional information as well as required information in the dialog box.\n\nNO is the default value."}},{"Name":"NOPROMPT=","Type":"V","Help":{"#cdata":"[Syntax: NOPROMPT=<'>SQL-Server-connection-options<'> \n    \n[This Microsoft SQL Server connection option is not supported on UNIX.]\n\nSpecifies connection options for your data source or database. Separate multiple \noptions with a semicolon.\n\nIf you do not specify enough correct connection options, an error is returned. No \ndialog box is displayed to help you with the connection string."}},{"Name":"REQUIRED=","Type":"V","Help":{"#cdata":"[Syntax: REQUIRED=<'>SQL-Server-connection-options<'>  | REQUIRED=YES | NO]\n    \n[This connection option is not supported on UNIX.]\n\nMicrosoft SQL Server: REQUIRED=<'>SQL-Server-connection-options<'>\nSpecifies connection options for your data source or database. Separate multiple options \nwith a semicolon. When a successful connection is made, the complete connection string is \nreturned in the SYSDBMSG macro variable.\n\nIf you do not specify enough correct connection options, a dialog box prompts you for the \nconnection options. REQUIRED= allows you to modify only required fields in the dialog box. \n\nOLEDB: REQUIRED=YES | NO\nSpecifies whether SAS attempts to connect to the data source without prompting you for \nconnection information and whether you can interactively specify optional connection information.\n\nIf you specify REQUIRED=YES and the connection information that you specify in your LIBNAME \nstatement is sufficient, SAS makes the connection and you are not prompted for additional \ninformation. \n\nIf you specify REQUIRED=YES and the connection information that you specify in your LIBNAME \nstatement is not sufficient, the provider's dialog box prompts you for the required connection \ninformation. You cannot enter optional connection information in the dialog box. \n\nNO is the default value."}},{"Name":"ACCESS=","Type":"V","Values":{"@Value1":"READONLY","@Value2":"TEMP"},"ToolTips":{"@ToolTip1":"Assigns a read-only attribute to an entire SAS data library.                 For DBMS, it specifies that you can read but not update tables and views.","@ToolTip2":"Indicates that the SAS data library be treated as a scratch library."},"Help":{"#cdata":"Specifies whether to assign a read-only attribute to an entire SAS data library, \nor to treat the SAS data library as a scratch library."}},{"Name":"ADJUST_BYTE_SEMANTIC_COLUMN_LENGTHS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Indicates that column lengths are divided by the DBSERVER_MAX_BYTES= value and then  multiplied with the DBCLIENT_MAX_BYTES= value. So if DBCLIENT_MAX_BYTES is greater  than 1, then ADJUST_BYTE_SEMANTIC_COLUMN_LENGTHS=YES.","@ToolTip2":"Indicates that any column lengths that byte semantics specify on the server are used as is  on the client. So if DBCLIENT_MAX_BYTES=1, then ADJUST_BYTE_SEMANTIC_COLUMN_LENGTHS=NO."},"Help":{"#cdata":"Specifies whether to adjust the lengths of CHAR or VARCHAR data type columns that \nbyte semantics specify."}},{"Name":"ADJUST_NCHAR_COLUMN_LENGTHS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Indicates that column lengths are muliplied by the DBSERVER_MAX_BYTES= value.","@ToolTip2":"Indicates that column lengths that NCHAR or NVARCHAR columns specify are multiplied  by the maximum number of bytes per character value of the national character set  for the database."},"Help":{"#cdata":"Specifies whether to adjust the lengths of CHAR or VARCHAR data type columns. \n    \nDefault value: YES"}},{"Name":"AUTHDOMAIN=","Type":"V","Help":{"#cdata":"[Syntax: AUTHDOMAIN=auth-domain]\n    \nAllows connection to a server by specifying the name of an authentication domain \nmetadata object. \n\nIf you specify AUTHDOMAIN=, you must specify SERVER=. However, the authentication \ndomain references credentials so that you do not need to explicitly specify USER= \nand PASSWORD=. An example is authdomain=MyServerAuth."}},{"Name":"AUTOCOMMIT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that all updates, deletes, and inserts are committed (that is, saved to  a table) immediately after they are submitted, and no rollback is possible.","@ToolTip2":"Specifies that the SAS/ACCESS engine automatically performs the commit when it reaches  the DBCOMMIT= value, or the default number of rows if DBCOMMIT is not set."},"Help":{"#cdata":"Indicates whether updates are committed immediately after they are submitted."}},{"Name":"BL_KEEPIDENTITY=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that the user must provide values for the identity column.","@ToolTip2":"Specifies that Microsoft SQL Server generates values for an identity column in the table."},"Help":{"#cdata":"Determines whether the identity column that is created during bulk loading is populated \nwith values that Microsoft SQL Server generates or with values that the user provides."}},{"Name":"BL__KEEPNULLS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that Microsoft SQL Server preserves NULL values inserted by the OLE DB interface.","@ToolTip2":"Specifies that Microsoft SQL Server replaces NULL values that are inserted by the OLE DB  interface with a default value (as specified in the DEFAULT constraint)."},"Help":{"#cdata":"Indicates how NULL values in Microsoft SQL Server columns that accept NULL are handled \nduring bulk loading."}},{"Name":"BL_OPTIONS=","Type":"V","Help":{"#cdata":"Syntax: BL_OPTIONS='option <..., option>' \n    \nPasses options to the DBMS bulk-load facility, which affects how it loads and processes data. \n\nYou can use BL_OPTIONS= to pass options to the DBMS bulk-load facility when it is called, \nthereby affecting how data is loaded and processed. You must separate multiple options with \ncommas and enclose the entire string of options in quotation marks."}},{"Name":"BL_PORT=|BULKLOAD_PORT=","Type":"V","Help":{"#cdata":"Syntax: BL_PORT=port-number \n    \nThis option is required only if Hadoop HDFS streaming is running on a port other than the default port 8020."}},{"Name":"BULKLOAD=|FASTLOAD=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Calls a DBMS-specific bulk-load facility to insert or append rows to a DBMS table.","@ToolTip2":"Does not call the DBMS bulk-load facility."},"Help":{"#cdata":"Determines whether SAS uses a DBMS facility to insert data into a DBMS table."}},{"Name":"CAST=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Forces data conversions (casting) to be done on the Teradata DBMS server and  overrides any data overhead percentage limit.","@ToolTip2":"Forces data conversions to be done by SAS and overrides any data overhead  percentage limit."},"Help":{"#cdata":"Specifies whether SAS or the Teradata DBMS server performs data conversions."}},{"Name":"CAST_OVERHEAD_MAXPERCENT=","Type":"V","Help":{"#cdata":"Syntax: CAST_OVERHEAD_MAXPERCENT=]\n    \nwhere <n> is any positive numeric value. The engine default is 20.\n\nSpecifies the overhead limit for data conversions to perform in Teradata instead of SAS. \n\nDefault value: 20 percent"}},{"Name":"CELLPROP=","Type":"V","Values":{"@Value1":"VALUE","@Value2":"FORMATTED_VALUE"},"ToolTips":{"@ToolTip1":"Specifies that the SAS/ACCESS engine tries to return actual data values. If all values in a column are numeric, then that column is defined as NUMERIC.","@ToolTip2":"Specifies that the SAS/ACCESS engine returns formatted data values. All columns are defined as CHARACTER."},"Help":{"#cdata":"Modifies the metadata and content of a result data set that the MDX command defines."}},{"Name":"COMMAND_TIMEOUT=","Type":"V","Help":{"#cdata":"Syntax: COMMAND_TIMEOUT=number-of-seconds]\n    \nwhere number-of-seconds is an integer greater than or equal to 0.\n\nSpecifies the number of seconds to wait before a data source command times out."}},{"Name":"BL_LOG=","Type":"V","Help":{"#cdata":"[Syntax: BL_LOG=filename]\n    \nSpecifies the name of the error file to which all errors are written when BULKLOAD=YES."}},{"Name":"BULKEXTRACT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Calls the HP Neoview Transporter to retrieve data from HP Neoview.","@ToolTip2":"Uses standard HP Neoview result sets to retrieve data from HP Neoview."},"Help":{"#cdata":"Rapidly retrieves (fetches) a large number of rows from a data set."}},{"Name":"BULKUNLOAD=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Calls the Netezza Remote External Table interface to retrieve data from the Netezza  Performance Server.","@ToolTip2":"Uses standard Netezza result sets to retrieve data from the DBMS."},"Help":{"#cdata":"Rapidly retrieves (fetches) a large number of rows from a data set."}},{"Name":"CONNECTION=","Type":"V","Values":{"@Value1":"SHAREDREAD","@Value2":"UNIQUE","@Value3":"SHARED","@Value4":"GLOBALREAD","@Value5":"GLOBAL"},"ToolTips":{"@ToolTip1":"Specifies that all READ operations that access DBMS tables in a single libref share  a single connection. A separate connection is established for every table that is  opened for update or output operations.   Where available, this is usually the default value because it offers the best  performance and it guarantees data integrity.","@ToolTip2":"Specifies that a separate connection is established every time a DBMS table is  accessed by your SAS application.   Use UNIQUE if you want each use of a table to have its own connection.","@ToolTip3":"[Not valid for MySQL]                 Specifies that all operations that access DBMS tables in a single libref share a single connection.  Use this option with caution. When you use a single SHARED connection for multiple table opens, a  commit or rollback that is performed on one table that is being updated also applies to all other  tables that are opened for update. Even if you open a table only for READ, its READ cursor might be  resynchronized as a result of this commit or rollback. If the cursor is resynchronized, there is no  guarantee that the new solution table will match the original solution table that was being read.","@ToolTip4":"Specifies that all READ operations that access DBMS tables in multiple librefs  share a single connection if the following is true:     o the participating librefs are created by LIBNAME statements that specify identical      values for the CONNECTION=, CONNECTION_GROUP=, DBCONINIT=, DBCONTERM=, DBLIBINIT=,      and DBLIBTERM= options    o the participating librefs are created by LIBNAME statements that specify identical      values for any DBMS connection options.  A separate connection is established for each table that is opened for update or output  operations.","@ToolTip5":"[Not valid for MySQL]                 Specifies that all operations that access DBMS tables in multiple librefs share a single  connection if the following is true:    o All participating librefs that LIBNAME statements create specify identical values for      the CONNECTION=, CONNECTION_GROUP=, DBCONINIT=, DBCONTERM=, DBLIBINIT=, and DBLIBTERM=      options.    o All participating librefs that LIBNAME statements create specify identical values for      any DBMS connection options."},"Help":{"#cdata":"Specifies whether operations on a single libref share a connection to the DBMS \nand whether operations on multiple librefs share a connection to the DBMS."}},{"Name":"CONNECTION_GROUP=","Type":"V","Help":{"#cdata":"[Syntax: CONNECTION_GROUP=connection-group-name] \n    \nCauses operations on multiple librefs and on multiple Pass-Through Facility CONNECT \nstatements to share a connection to the DBMS."}},{"Name":"CURSOR_TYPE=","Type":"V","Values":{"@Value1":"DYNAMIC","@Value2":"FORWARD_ONLY","@Value3":"KEYSET_DRIVEN","@Value4":"STATIC"},"ToolTips":{"@ToolTip1":"Specifies that the cursor reflects all changes that are made to the rows in a result  set as you move the cursor. The data values and the membership of rows in the cursor  can change dynamically on each fetch. This is the default for the DB2 UNIX/PC,  Microsoft SQL Server, and ODBC interfaces.","@ToolTip2":"Specifies that the cursor functions like a DYNAMIC cursor except that it supports  only sequential fetching of rows.","@ToolTip3":"Specifies that the cursor determines which rows belong to the result set when the  cursor is opened. However, changes that are made to these rows are reflected as  you scroll around the cursor.","@ToolTip4":"Specifies that the cursor builds the complete result set when the cursor is opened.  No changes that are made to the rows in the result set after the cursor is opened  are reflected in the cursor. Static cursors are read-only."},"Help":{"#cdata":"Specifies the cursor type for read-only and updatable cursors."}},{"Name":"CONNECTION_TIMEOUT=|CON_TIMEOUT=","Type":"V","Help":{"#cdata":"[Syntax: CONNECTION_TIMEOUT=number-of-seconds]  \n    \nwhere number-of-seconds a number greater than or equal to 0. It represents the number of \nseconds that SAS/ACCESS Interface to HP Neoview waits for any operation on the connection \nto complete before returning to SAS. If the value is 0, which is the default, no timeout \noccurs. \n\nSpecifies the number of seconds to wait before a connection times out."}},{"Name":"DB_LENGTH_SEMANTICS_BYTE=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that CHAR and VARCHAR2 column lengths are specified in characters when  creating an Oracle table. The byte length is derived by multiplying the number  of characters in SAS with DBSERVER_MAX_BYTES= value.","@ToolTip2":"Specifies that CHAR and VARCHAR2 column lengths are specified in bytes when creating  an Oracle table. The CHAR keyword is also added next to the length value to indicate  that this is the character, not byte, length.For fixed-width encoding, the number of  characters is derived by dividing the byte length in SAS for the variable by the value  in DBCLIENT_MAX_BYTES=. For variable-width encoding, the number of characters remains  the same as the number of bytes."},"Help":{"#cdata":"Indicates whether CHAR/VARCHAR2 column lengths are specified in bytes or characters \nwhen creating an Oracle table. \n\nDefault value: YES"}},{"Name":"DBLINK=","Type":"V","Help":{"#cdata":"[Syntax: DBLINK=database-link] \n    \nSpecifies a link from your local database to database objects on another server [Oracle], \nor specifies a link from your default database to another database on the server to which \nyou are connected [Sybase]."}},{"Name":"DBCLIENT_MAX_BYTES=","Type":"V","Help":{"#cdata":"[Syntax: DBCLIENT_MAX_BYTES=max-client-bytes] \n    \nSpecifies the maximum number of bytes per single character in the database client \nencoding, which matches SAS encoding. \n\nDefault value: Always set to match the maximum bytes per single character of SAS \nsession encoding."}},{"Name":"DBSERVER_MAX_BYTES=","Type":"V","Help":{"#cdata":"[Syntax: DBSERVER_MAX_BYTES=max-server-bytes] \n    \nSpecifies the maximum number of bytes per single character in the database server \nencoding. \n\nDefault value: usually 1"}},{"Name":"DBCOMMIT=","Type":"V","Help":{"#cdata":"[Syntax: DBCOMMIT=n]\n    \nwhere n specifies an integer greater than or equal to 0.\n\nCauses an automatic COMMIT (a permanent writing of data to the DBMS) after a specified \nnumber of rows have been processed."}},{"Name":"DBCONINIT=","Type":"V","Help":{"#cdata":"[Syntax: DBCONINIT=<'>DBMS-user-command<'> ]\n    \nwhere DBMS-user-command is any valid command that can be executed by the SAS/ACCESS \nengine and that does not return a result set or output parameters.\n\nSpecifies a user-defined initialization command to execute immediately after every \nconnection to the DBMS that is within the scope of the LIBNAME statement or libref."}},{"Name":"DBCONTERM=","Type":"V","Help":{"#cdata":"[Syntax: DBCONTERM=<'>DBMS-user-command<'> ]\n    \nwhere DBMS-user-command is any valid command that can be executed by the SAS/ACCESS \nengine and that does not return a result set or output parameters.\n\nSpecifies a user-defined termination command to execute before every disconnect from \nthe DBMS that is within the scope of the LIBNAME statement or libref."}},{"Name":"DBCREATE_TABLE_OPTS=","Type":"V","Help":{"#cdata":"[Syntax: DBCREATE_TABLE_OPTS='DBMS-SQL-clauses']\n    \nwhere DBMS-SQL-clauses are one or more DBMS-specific clauses that can be appended \nto the end of an SQL CREATE TABLE statement.\n\nSpecifies DBMS-specific syntax to add to the CREATE TABLE statement."}},{"Name":"DBGEN_NAME=","Type":"V","Values":{"@Value1":"DBMS","@Value2":"SAS"},"ToolTips":{"@ToolTip1":"Specifies that SAS renames DBMS columns to valid SAS variable names. SAS converts  to underscores any characters that it does not allow. If it converts a column to   a name that already exists, it appends a sequence number at the end of the new name.","@ToolTip2":"Specifies that SAS converts DBMS columns that contain characters that SAS does not  allow into valid SAS variable names. SAS uses the format _COLn, where n is the  column number, starting with 0. If SAS converts a name to a name that already  exists, it appends a sequence number at the end of the new name."},"Help":{"#cdata":"Specifies how SAS automatically renames to valid SAS variable names any DBMS columns \nthat contain characters that SAS does not allow."}},{"Name":"DBINDEX=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS uses columns in the WHERE clause that have defined DBMS indexes.","@ToolTip2":"Specifies that SAS does not use indexes that are defined on DBMS columns."},"Help":{"#cdata":"Improves performance when processing a join that involves a large DBMS table and a \nsmall SAS data set."}},{"Name":"DBLIBINIT=","Type":"V","Help":{"#cdata":"[Syntax: DBLIBINIT=<'>DBMS-user-command<'> ] \n    \nwhere DBMS-user-command is any valid command that can be executed by the SAS/ACCESS \nengine and that does not return a result set or output parameters.\n\nSpecifies a user-defined initialization command to execute once within the scope of \nthe LIBNAME statement or libref that established the first connection to the DBMS."}},{"Name":"DBLIBTERM=","Type":"V","Help":{"#cdata":"[Syntax: DBLIBTERM=<'>DBMS-user-command<'> ]  \n    \nwhere DBMS-user-command is any valid command that can be executed by the SAS/ACCESS \nengine and that does not return a result set or output parameters.\n\nSpecifies a user-defined termination command to execute once, before the DBMS that \nis associated with the first connection made by the LIBNAME statement or libref \ndisconnects."}},{"Name":"DBMAX_TEXT=","Type":"V","Help":{"#cdata":"[Syntax: DBMAX_TEXT=<integer> ] \n    \nwhere integer is an integer between 1 and 32,767. \n\nDetermines the length of any very long DBMS character data type that is read into SAS \nor written from SAS when using a SAS/ACCESS engine. \n\nThis option applies to reading, appending, and updating rows in an existing table. \nIt does not apply when you are creating a table."}},{"Name":"DBMSTEMP=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS creates one or more temporary tables.","@ToolTip2":"Specifies that SAS creates permanent tables."},"Help":{"#cdata":"Specifies whether SAS creates temporary or permanent tables."}},{"Name":"DBNULLKEYS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"If there might be NULL values in the transaction table or the master table for the  columns that you specify in the DBKEY= option, use DBNULLKEYS=YES. This is the  default for most interfaces.","@ToolTip2":"If you know that there is no NULL values in the transaction table or the master table  for the columns that you specify in the DBKEY= option, use DBNULLKEYS=NO."},"Help":{"#cdata":"Controls the format of the WHERE clause when you use the DBKEY= data set option."}},{"Name":"DBPROMPT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS displays a window that interactively prompts you for the DBMS  connection options the first time the libref is used.","@ToolTip2":"Specifies that SAS does not display the prompting window."},"Help":{"#cdata":"Specifies whether SAS displays a window that prompts the user to enter DBMS connection \ninformation before connecting to the DBMS in interactive mode."}},{"Name":"DBSLICEPARM=","Type":"V","Values":{"@Value1":"NONE","@Value2":"THREADED_APPS","@Value3":"ALL"},"ToolTips":{"@ToolTip1":"Disables DBMS threaded read. SAS reads tables on a single DBMS connection, as it did  with SAS 8 and earlier.","@ToolTip2":"Makes fully threaded SAS procedures (threaded applications) eligible for threaded reads.","@ToolTip3":"Makes all read-only librefs eligible for threaded reads. This includes SAS threaded  applications, as well as the SAS DATA step and numerous SAS procedures."},"Help":{"#cdata":"Controls the scope of DBMS threaded reads and the number of threads."}},{"Name":"DBSASLABEL=","Type":"V","Values":{"@Value1":"COMPAT","@Value2":"NONE"},"ToolTips":{"@ToolTip1":"Specifies that the labels returned should be compatible with what the application  normally receives. In other words, engines exhibit their normal behavior.","@ToolTip2":"Specifies that the engine does not return a column label. The engine returns blanks  for the column labels."},"Help":{"#cdata":"Specifies how the engine returns column labels."}},{"Name":"DEFER=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that the connection to the DBMS occurs when the libref is assigned by a  LIBNAME statement.","@ToolTip2":"Specifies that the connection to the DBMS occurs when a table in the DBMS is opened."},"Help":{"#cdata":"Specifies when the connection to the DBMS occurs."}},{"Name":"DELETE_MULT_ROWS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS/ACCESS processing continues if multiple rows are deleted. This might  produce unexpected results.","@ToolTip2":"Specifies that SAS/ACCESS processing does not continue if multiple rows are deleted."},"Help":{"#cdata":"Indicates whether to allow SAS to delete multiple rows from a data source, such as a DBMS table."}},{"Name":"DIMENSION=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that the database creates dimension tables.","@ToolTip2":"Specifies that the database creates fact tables."},"Help":{"#cdata":"Specifies whether the database creates dimension tables or fact tables. \n    \nDefault value: NO"}},{"Name":"DIRECT_EXE=","Type":"V","Values":{"@Value1":"DELETE"},"ToolTips":{"@ToolTip1":"Specifies that an SQL delete statement is passed directly to the DBMS for processing."},"Help":{"#cdata":"Allows an SQL delete statement to be passed directly to a DBMS with pass-through."}},{"Name":"DIRECT_SQL=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO","@Value3":"NONE","@Value4":"NOGENSQL","@Value5":"NOWHERE","@Value6":"NOFUNCTIONS","@Value7":"NOMULTOUTJOINS"},"ToolTips":{"@ToolTip1":"Specifies that generated SQL from PROC SQL is passed directly to the DBMS for processing.","@ToolTip2":"Specifies that generated SQL from PROC SQL is not passed to the DBMS for processing.  This is the same as specifying the value NOGENSQL.","@ToolTip3":"Specifies that generated SQL is not passed to the DBMS for processing. This includes  SQL that is generated from PROC SQL, SAS functions that can be converted into DBMS  functions, joins, and WHERE clauses.","@ToolTip4":"Prevents PROC SQL from generating SQL to be passed to the DBMS for processing.","@ToolTip5":"Prevents WHERE clauses from being passed to the DBMS for processing. This includes SAS  WHERE clauses and PROC SQL generated or PROC SQL specified WHERE clauses.","@ToolTip6":"Prevents SQL statements from being passed to the DBMS for processing when they  contain functions.","@ToolTip7":"Specifies that PROC SQL does not attempt to pass any multiple outer joins to the DBMS  for processing. Other join statements might be passed down however, including  portions of a multiple outer join."},"Help":{"#cdata":"Specifies whether generated SQL is passed to the DBMS for processing."}},{"Name":"ENABLE_BULK=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Disables the bulk copy ability for the libref.","@ToolTip2":"Enables the connection to perform a bulk copy of SAS data into Sybase."},"Help":{"#cdata":"Allows the connection to process bulk copy when loading data into a Sybase table. \n    \nDefault value: YES"}},{"Name":"ERRLIMIT=","Type":"V","Help":{"#cdata":"[Syntax: ERRLIMIT=integer] \n    \nwhere integer specifies a positive integer that represents the number of errors after \nwhich SAS stops loading data. \n\nSpecifies the number of errors that are allowed while using the Fastload utility before \nSAS stops loading data to Teradata. \n\nDefault value: 1 million"}},{"Name":"FASTEXPORT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that the SAS/ACCESS engine uses the Teradata Parallel Transporter (TPT)  API to read data from a Teradata table.","@ToolTip2":"Specifies that the SAS/ACCESS engine does not use the TPT API to read data from a  Teradata table."},"Help":{"#cdata":"Specifies whether the SAS/ACCESS engine uses the TPT API to read data. \n    \nDefault value: NO"}},{"Name":"LOGDB=","Type":"V","Help":{"#cdata":"[Syntax: LOGDB=<database-name>] \n    \nRedirects to an alternate database specific tables that FastExport creates \nor MultiLoad uses."}},{"Name":"MODE=","Type":"V","Values":{"@Value1":"TERADATA","@Value2":"ANSI"},"ToolTips":{"@ToolTip1":"Specifies that SAS/ACCESS opens Teradata connections in Teradata mode.","@ToolTip2":"Specifies that SAS/ACCESS opens Teradata connections in ANSI mode."},"Help":{"#cdata":"Specifies whether the connection to Teradata uses the ANSI mode or the Teradata mode. \n    \nDefault value: ANSI"}},{"Name":"MULTISTMT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Attempts to send as many inserts to Teradata that can fit in a 64K buffer. If multistatement  inserts are not possible, processing reverts to single-row inserts.","@ToolTip2":"Send inserts to Teradata one row at a time."},"Help":{"#cdata":"Specifies whether insert statements are sent to Teradata one at a time or in a group. \n    \nDefault value: NO"}},{"Name":"INTERFACE=","Type":"V","Help":{"#cdata":"[Syntax: INTERFACE=<'>filename<'>] \n    \nSpecifies the name and location of the interfaces file that is searched when you \nconnect to the Sybase server."}},{"Name":"MAX_CONNECTS=","Type":"V","Help":{"#cdata":"[Syntax: MAX_CONNECTS=numeric-value] \n    \nSpecifies the maximum number of simultaneous connections that Sybase allows. \n\nDefault value: 25"}},{"Name":"FETCH_IDENTITY=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Returns the value of the last inserted identity value.","@ToolTip2":"Disables this option."},"Help":{"#cdata":"Returns the value of the last inserted identity value."}},{"Name":"ESCAPE_BACKSLASH=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that an additional backslash is inserted in every literal value that already  contains a backslash.","@ToolTip2":"Specifies that backslashes that exist in literal values are not preserved. An error results."},"Help":{"#cdata":"[DBMS support: For MySQL only]  \n    \nSpecifies whether backslashes in literals are preserved during data copy from a SAS \ndata set to a table."}},{"Name":"IGNORE_READ_ONLY_COLUMNS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies whether to ignore or include columns whose data types are read-only when  generating an SQL statement for inserts or updates.","@ToolTip2":"Specifies that the SAS/ACCESS engine does not ignore columns whose data types are  read-only when you are generating insert and update SQL statements."},"Help":{"#cdata":"Specifies whether to ignore or include columns whose data types are read-only when \ngenerating an SQL statement for inserts or updates."}},{"Name":"IN=|TABLESPACE=","Type":"V","Help":{"#cdata":"[Syntax: IN='database-name.tablespace-name'| 'DATABASE database-name'] \n    \nwhere database-name.tablespace-name specifies the names of the database and tablespace, \nwhich are separated by a period. Enclose the entire specification in single quotation marks.\n\nAllows specification of the database and tablespace in which you want to create a new table."}},{"Name":"INSERT_SQL=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS/ACCESS uses the data source's SQL insert method to insert new rows into a table.","@ToolTip2":"Specifies that SAS/ACCESS uses an alternate (DBMS-specific) method to insert new rows into a table."},"Help":{"#cdata":"Determines the method to use to insert rows into a data source."}},{"Name":"INSERTBUFF=","Type":"V","Help":{"#cdata":"[Syntax: INSERTBUFF=positive-integer]\n    \nwhere positive-integer specifies the number of rows to insert. \n\nSpecifies the number of rows in a single DBMS insert."}},{"Name":"KEYSET_SIZE=","Type":"V","Help":{"#cdata":"[Syntax: KEYSET_SIZE=number-of-rows]\n    \nwhere number-of-rows is an integer with a value between 0 and the number of rows \nin the cursor.\n\nSpecifies the number of rows that are driven by the keyset. \n\nDefault value: 0"}},{"Name":"LOCKTABLE=","Type":"V","Values":{"@Value1":"EXCLUSIVE","@Value2":"SHARE"},"ToolTips":{"@ToolTip1":"Specifies that other users are prevented from accessing each table that you open  in the libref.","@ToolTip2":"Specifies that other users or processes can read data from the tables, but they  cannot update the data."},"Help":{"#cdata":"Places exclusive or shared locks on tables. \n    \nYou can lock tables only if you are the owner or have been granted the necessary privilege."}},{"Name":"LOCKWAIT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS waits until rows are available for locking.","@ToolTip2":"Specifies that SAS does not wait and returns an error to indicate that the lock  is not available."},"Help":{"#cdata":"Specifies whether to wait indefinitely until rows are available for locking."}},{"Name":"LOCKTIME=","Type":"V","Help":{"#cdata":"[Syntax: LOCKTIME=LOCKTIME=positive-integer]\n    \nSpecifies the number of seconds to wait until rows are available for locking. \n\nYou must specify LOCKWAIT=YES for LOCKTIME= to have an effect. If you omit the LOCKTIME= \noption and use LOCKWAIT=YES, SAS suspends your process indefinitely until a lock can be \nobtained."}},{"Name":"LOGIN_TIMEOUT=","Type":"V","Help":{"#cdata":"[Syntax: LOGIN_TIMEOUT=numeric-value]\n    \nSpecifies the default login timeout for connecting to and accessing data sources \nin a library. \n\nDefault value: 0"}},{"Name":"MULTI_DATASRC_OPT=","Type":"V","Values":{"@Value1":"NONE","@Value2":"IN_CLAUSE"},"ToolTips":{"@ToolTip1":"Turns off the functionality of the option.","@ToolTip2":"Specifies that an IN clause containing the values read from a smaller table are used  to retrieve the matching values in a larger table based on a key column designated  in an equi-join."},"Help":{"#cdata":"Used in place of DBKEY to improve performance when processing a join between two data sources."}},{"Name":"OR_ENABLE_INTERRUPT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Enables interrupt of long-running SQL processes on the DBMS server.","@ToolTip2":"Disables interrupt of long-running SQL processes on the DBMS server."},"Help":{"#cdata":"Allows interruption of any long-running SQL processes on the DBMS server. \n    \nDefault value: NO"}},{"Name":"OR_UPD_NOWHERE=|ORACLE_73_OR_ABOVE=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS does not use an additional WHERE clause to determine whether  each row has changed since it was read. Instead, SAS uses the SERIALIZABLE  isolation level (available with Oracle 7.3 and above) for update locking. If  a row changes after the serializable transaction starts, the update on that  row fails.","@ToolTip2":"Specifies that SAS uses an additional WHERE clause to determine whether each row  has changed since it was read. If a row has changed since being read, the update  fails."},"Help":{"#cdata":"Specifies whether SAS uses an extra WHERE clause when updating rows with no locking."}},{"Name":"PATH=","Type":"V","Help":{"#cdata":"[Syntax: PATH=\"path\"] \n\nFor SASHDAT engine:\nDescribes the HDFS directory where the libname looks for sashdat files. If you want \nto work with one specific directory you can specify the path in the LIBNAME statement. \nIf you work with files from different directories you can also use the PATH= DATA set \noption for more granularity or to override the specification in the LIBNAME statement."}},{"Name":"COPIES=","Type":"V","Help":{"#cdata":"[Syntax: COPIES=number] \n\nFor SASHDAT engine:\nControls how many copies are made when file blocks are written to HDFS. You can override \nthe COPIES= specification in the LIBNAME with a DATA set option. The default is a single \ncopy when data are loaded in parallel, and two copies if the INNAMEONLY (=NODIST) option \nwas specified in the LIBNAME statement. Note that specifying COPIES=0 is valid and signals \nthe engine that you do not want any replicate copies of the data in HDFS."}},{"Name":"INNAMEONLY","Type":"S","Help":{"#cdata":"Specifies to support a special data loading mode to place small tables into HDFS."}},{"Name":"NODIST","Type":"S","Help":{"#cdata":"Specifies to support a special data loading mode to place small tables into HDFS."}},{"Name":"LASR=","Type":"V","Help":{"#cdata":"Specifies the LASR Analytic Server file. The file does not need to be specified. If the option \nis not given, then the engine constructs connection information from the HOST= and PORT= \ninformation."}},{"Name":"PACKETSIZE=","Type":"V","Help":{"#cdata":"[Syntax: PACKETSIZE=numeric-value] \n    \nAllows specification ofthe packet size for Sybase to use."}},{"Name":"PREFETCH=","Type":"V","Help":{"#cdata":"[Syntax: PREFETCH='unique_storename, [#sessions,algorithm]'] \n    \nEnables the PreFetch facility on tables that the libref (defined with the LIBNAME \nstatement) accesses. \n\nSyntax Description:\n\nunique_storename \nis a unique name that you specify. This value names the Teradata macro that PreFetch \ncreates to store selected SQL statements in the first run of a job. During subsequent \nruns of the job, SAS/ACCESS presubmits the stored SQL statements in parallel to the \nTeradata DBMS.\n\n#sessions \ncontrols the number of statements that PreFetch submits in parallel to Teradata. A \nvalid value is 1 through 9. If you do not specify a #sessions value, the default is 3.\n\nalgorithm \nspecifies the algorithm that PreFetch uses to order the selected SQL statements. \nCurrently, the only valid value is SEQUENTIAL."}},{"Name":"PRESERVE_COL_NAMES=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Preserves spaces, special characters, and case sensitivity in DBMS column names  when you create DBMS tables.","@ToolTip2":"Preserves spaces, special characters, and case sensitivity in DBMS column names  when you create DBMS tables. NO is the default for most DBMS interfaces."},"Help":{"#cdata":"Preserves spaces, special characters, and case sensitivity in DBMS column names when \nyou create DBMS tables."}},{"Name":"PRESERVE_TAB_NAMES=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that table names are read from and passed to the DBMS with special characters,  and the exact, case-sensitive spelling of the name is preserved.","@ToolTip2":"Specifies that when you create DBMS tables or refer to an existing table, the table  names are derived from SAS member names by using SAS member name normalization.  However, the database applies DBMS-specific normalization rules to the SAS member  names. Therefore, the table names are created or referenced in the database following  the DBMS-specific normalization rules."},"Help":{"#cdata":"Preserves spaces, special characters, and case sensitivity in DBMS table names."}},{"Name":"QUALIFIER=","Type":"V","Help":{"#cdata":"[Syntax: QUALIFIER=<qualifier-name> ]\n    \nAllows identification of such database objects tables and views with the specified qualifier."}},{"Name":"QUALIFY_ROWS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that when the OLE DB interface flattens the result set of an MDX command,  the values in each column are uniquely identified using a hierarchical naming scheme.","@ToolTip2":"Specifies that when the OLE DB interface flattens the result set of an MDX command,  the values in each column are not qualified, which means they might not be unique."},"Help":{"#cdata":"Uniquely qualifies all member values in a result set."}},{"Name":"QUERY_BAND=","Type":"V","Help":{"#cdata":"[Syntax: QUERY_BAND=\"pair-name=pair_value\" FOR SESSION;]\n    \nSpecifies whether to set a query band for the current session."},"SubOptionsKeywords":"FOR|SESSION"},{"Name":"QUERY_TIMEOUT=","Type":"V","Help":{"#cdata":"[Syntax: QUERY_TIMEOUT=number-of-seconds]\n    \nSpecifies the number of seconds of inactivity to wait before canceling a query. \n\nDefault value: 0"}},{"Name":"QUOTE_CHAR=","Type":"V","Help":{"#cdata":"[Syntax: QUOTE_CHAR=character]\n    \nwhere character is the quotation mark character to use when delimiting identifiers, \nsuch as the double quotation mark (\").\n\nSpecifies which quotation mark character to use when delimiting identifiers."}},{"Name":"QUOTED_IDENTIFIER=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Allows specification of table and column names with embedded spaces and special  characters.","@ToolTip2":"Does not allow specification of table and column names with embedded spaces and  special characters"},"Help":{"#cdata":"Allows specification of table and column names with embedded spaces and special \ncharacters. \n\nDefault value: NO"}},{"Name":"READBUFF=|ROWSET_SIZE=|BUFFSIZE=","Type":"V","Help":{"#cdata":"[Syntax: READBUFF=integer]\n    \nwhere integer is the positive number of rows to hold in memory. SAS allows the maximum \nnumber that is allowed by the DBMS.\n\nSpecifies the number of rows of DBMS data to read into the buffer."}},{"Name":"READ_ISOLATION_LEVEL=","Type":"V","Help":{"#cdata":"[Syntax: READ_ISOLATION_LEVEL=DBMS-specific value]\n    \nDefines the degree of isolation of the current application process from other \nconcurrently running application processes."}},{"Name":"READ_MODE_WAIT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies for Teradata to wait to acquire the lock, so SAS/ACCESS waits indefinitely  until it can acquire the lock.","@ToolTip2":"Specifies for Teradata to fail the lock request if the specified DBMS resource is locked."},"Help":{"#cdata":"Specifies during SAS/ACCESS read operations whether Teradata should wait to acquire \na lock or should fail the request when a different user has already locked the \nDBMS resource."}},{"Name":"READ_LOCK_TYPE=","Type":"V","Values":{"@Value1":"ROW","@Value2":"PAGE","@Value3":"TABLE","@Value4":"NOLOCK","@Value5":"VIEW"},"ToolTips":{"@ToolTip1":"(Valid for DB2 UNIX/PC, Microsoft SQL Server, ODBC, Oracle)   Locks a row if any of its columns are accessed. If you are using the interface to ODBC  or DB2 under UNIX and PC Hosts, READ_LOCK_TYPE=ROW indicates that locking is based on  the READ_ISOLATION_LEVEL= option.","@ToolTip2":"(Valid for Sybase)                 Locks a page of data, which is a DBMS-specific number of bytes. (This value is valid in  the Sybase interface.)","@ToolTip3":"(Valid for DB2 UNIX/PC, DB2 z/OS, Microsoft SQL Server, ODBC, Oracle, Teradata)                 Locks the entire DBMS table. If you specify READ_LOCK_TYPE=TABLE, you must also specify  CONNECTION=UNIQUE, or you receive an error message. Setting CONNECTION=UNIQUE ensures that  your table lock is not lost, for example, due to another table closing and committing rows  in the same connection.","@ToolTip4":"(Valid for Microsoft SQL Server, ODBC with Microsoft SQL Server driver, OLE DB, Oracle, Sybase)                 Does not lock the DBMS table, pages, or rows during a read transaction.","@ToolTip5":"(Valid for Teradata)                 Locks the entire DBMS view."},"Help":{"#cdata":"Specifies how data in a DBMS table is locked during a READ transaction."}},{"Name":"REREAD_EXPOSURE=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that the SAS/ACCESS engine functions like a random access engine when  rereading a row so that you cannot guarantee that the same row is returned.","@ToolTip2":"Specifies that the SAS/ACCESS engine functions as an RMOD engine, which means that  your data is protected by the normal data protection that SAS provides."},"Help":{"#cdata":"Specifies whether the SAS/ACCESS engine functions like a random access engine for \nthe scope of the LIBNAME statement."}},{"Name":"SCHEMA=","Type":"V","Help":{"#cdata":"[Syntax: SCHEMA=schema-name]\n    \nAllows reading of such database objects as tables and views in the specified schema. \n\nIf this option is omitted, you connect to the default schema for your DBMS. \n\nThe values for SCHEMA= are usually case sensitive, so use care when you specify this option."}},{"Name":"SESSIONS=","Type":"V","Help":{"#cdata":"[Syntax: SESSIONS=number-of-sessions]\n    \nwhere number-of-sessions specifies a numeric value that indicates the number of \nsessions to be logged on.\n\nSpecifies how many Teradata sessions to be logged on when using FastLoad, FastExport, \nor Multiload."}},{"Name":"SHOW_SYNONYMS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that PROC DATASETS shows only synonyms that represent tables, views, or  materialized views for the current user.","@ToolTip2":"Specifies that PROC DATASETS shows only tables, views, or materialized views for  the current user."},"Help":{"#cdata":"Specifies whether PROC DATASETS shows synonyms, tables, views, or materialized views \nfor the current user and schema if you specified the SCHEMA= option. \n\nDefault value: YES"}},{"Name":"SPOOL=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO","@Value3":"DBMS"},"ToolTips":{"@ToolTip1":"Specifies that SAS creates a utility spool file into which it writes the rows that  are read the first time. For subsequent passes through the data, the rows are read  from the utility spool file rather than being re-read from the DBMS table. This  guarantees that the row set is the same for every pass through the data.","@ToolTip2":"Specifies that the required rows for all passes of the data are read from the DBMS  table. No spool file is written. There is no guarantee that the row set is the same  for each pass through the data.","@ToolTip3":"Is valid for Oracle only. The required rows for all passes of the data are read  from the DBMS table but additional enforcements are made on the DBMS server side  to ensure that the row set is the same for every pass through the data. This  setting causes the SAS/ACCESS interface to Oracle to satisfy the two-pass  requirement by starting a read-only transaction. SPOOL=YES and SPOOL=DBMS  have comparable performance results for Oracle; however, SPOOL=DBMS does not  use any disk space. When SPOOL is set to DBMS, the CONNECTION option must be  set to UNIQUE. If not, an error occurs."},"Help":{"#cdata":"Specifies whether SAS creates a utility spool file during read transactions that \nread data more than once."}},{"Name":"SQL_FUNCTIONS=","Type":"V","Values":{"@Value1":"ALL","@Value2":"EXTERNAL_REPLACE=","@Value3":"EXTERNAL_APPEND="},"ToolTips":{"@ToolTip1":"Customizes the in-memory SQL dictionary function list for this particular LIBNAME  statement by adding the set of all existing functions, even those that might be  risky or untested.","@ToolTip2":"EXTERNAL_REPLACE=<libref.member> [not valid for Informix, OLE DB]                 Indicates a user-specified, external SAS data set from which the complete function  list in the SQL dictionary is to be built. The assumption is that the user has already  issued a LIBNAME statement to the directory where the SAS data set exists.","@ToolTip3":"EXTERNAL_APPEND=<libref.member> [not valid for Informix, OLE DB]                 Indicates a user-specified, external SAS data set from which additional functions  are to be added to the existing function list in the SQL dictionary. The assumption  is that the user has already issued a LIBNAME statement to the directory where the  SAS data set exists."},"Help":{"#cdata":"Customizes the in-memory SQL dictionary function list for this particular LIBNAME statement."}},{"Name":"SQL_FUNCTIONS_COPY=","Type":"V","Values":{"@Value1":"<libref.member>","@Value2":"SASLOG"},"ToolTips":{"@ToolTip1":"For this particular LIBNAME statement, writes the current in-memory function list to  a user-specified SAS data set.","@ToolTip2":"For this particular LIBNAME statement, writes the current in-memory function list to  the SAS log."},"Help":{"#cdata":"Writes the function associated with this particular LIBNAME statement to a SAS data set or the SAS log."}},{"Name":"SQLGENERATION=","Type":"V","Values":{"@Value1":"NONE","@Value2":"ALL","@Value3":"DBMS","@Value4":"DBMUST"},"ToolTips":{"@ToolTip1":"Allows in-database-enabled SAS procedures to generate SQL for all supported SAS/ACCESS engines.","@ToolTip2":"Prevents in-database-enabled SAS procedures from generating SQL for in-database processing.","@ToolTip3":"Allows in-database-enabled SAS procedures to generate SQL for processing DBMS tables through  supported SAS/ACCESS engines.","@ToolTip4":"Requires that SAS procedures with in-database capability work through the database to process  source data to avoid bringing table rows into SAS or to shift the principal workload to the  database. Without a full table read, some requested features might not be possible and cannot  be performed when SQLGENERATION=DBMUST. In this case, a warning message is written to the SAS  log."},"Help":{"#cdata":"Specifies whether and when SAS procedures generate SQL for in-database processing of source data. \n    \nDefault value: DBMS"}},{"Name":"SQL_OJ_ANSI=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that ANSI outer-join syntax is passed through to the database.","@ToolTip2":"Disables pass-through of ANSI outer-joins."},"Help":{"#cdata":"Specifies whether to pass ANSI outer-join syntax through to the database. \n    \nDefault value: NO"}},{"Name":"STRINGDATES=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS reads date and time values as character strings.","@ToolTip2":"Specifies that SAS reads date and time values as numeric date values."},"Help":{"#cdata":"Specifies whether to read date and time values from the database as character strings \nor as numeric date values."}},{"Name":"TRACE=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that tracing is turned on, and the DBMS driver manager writes each  function call to the trace file that TRACEFILE= specifies.","@ToolTip2":"Specifies that tracing is not turned on."},"Help":{"#cdata":"Specifies whether to turn on tracing information for use in debugging. \n    \nThis option is not supported on UNIX platforms."}},{"Name":"TPT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS uses the TPT API when Fastload, MultiLoad, or Multi-Statement  insert is requested.","@ToolTip2":"Specifies that SAS does not use the TPT API when Fastload, MultiLoad, or  Multi-Statement insert is requested."},"Help":{"#cdata":"Specifies whether SAS uses the Teradata Parallel Transporter (TPT) API to load data \nwhen SAS requests a Fastload, MultiLoad, or Multi-Statement insert. \n\nDefault value: YES"}},{"Name":"TRACEFILE=","Type":"V","Help":{"#cdata":"[Syntax: TRACEFILE= filename | <'>path-and-filename<'> ]\n    \nSpecifies the filename to which the DBMS driver manager writes trace information. \n\nTRACEFILE= is used only when TRACE=YES. If you specify a filename without a path, \nthe SAS trace file is stored with your data files. If you specify a directory, \nenclose the fully qualified filename in single quotation marks.\n\nIf you do not specify the TRACEFILE= option, output is directed to a default file.\n\nThis option is not supported on UNIX platforms."}},{"Name":"UPDATE_ISOLATION_LEVEL=","Type":"V","Help":{"#cdata":"[Syntax: UPDATE_ISOLATION_LEVEL=DBMS-specific-value]\n    \nDefines the degree of isolation of the current application process from other concurrently \nrunning application processes."}},{"Name":"UPDATE_LOCK_TYPE=","Type":"V","Values":{"@Value1":"ROW","@Value2":"PAGE","@Value3":"TABLE","@Value4":"NOLOCK","@Value5":"VIEW"},"ToolTips":{"@ToolTip1":"Locks a row if any of its columns are going to be updated. (This value is valid in the  DB2 UNIX/PC, Microsoft SQL Server, ODBC, OLE DB, and Oracle interfaces.)","@ToolTip2":"Locks a page of data, which is a DBMS-specific number of bytes. (This value is valid in  the Sybase interface, except when you use the SCHEMA= option.)","@ToolTip3":"Locks the entire DBMS table. (This value is valid in the DB2 UNIX/PC, DB2 z/OS, Microsoft  SQL Server, ODBC, Oracle, and Teradata interfaces.)","@ToolTip4":"Does not lock the DBMS table, page, or any rows when reading them for update. (This value  is valid in the Microsoft SQL Server, ODBC, Oracle, and Sybase interfaces.)","@ToolTip5":"Locks the entire DBMS view. (This value is valid in the Teradata interface.)"},"Help":{"#cdata":"Specifies how data in a DBMS table is locked during an update transaction."}},{"Name":"UPDATEBUFF=","Type":"V","Help":{"#cdata":"[Syntax: UPDATEBUFF=positive-integer] \n    \nSpecifies the number of rows that are processed in a single DBMS update or \ndelete operation. \n\nDefault value: 1"}},{"Name":"UPDATE_MODE_WAIT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies for Teradata to wait to acquire the lock, so SAS/ACCESS waits indefinitely  until it can acquire the lock.","@ToolTip2":"Specifies for Teradata to fail the lock request if the specified DBMS resource is locked."},"Help":{"#cdata":"Specifies during SAS/ACCESS update operations whether Teradata should wait to acquire \na lock or fail the request when a different user has locked the DBMS resource."}},{"Name":"UPDATE_MULT_ROWS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS/ACCESS processing continues if multiple rows are updated. This  might produce unexpected results.","@ToolTip2":"Specifies that SAS/ACCESS processing does not continue if multiple rows are updated."},"Help":{"#cdata":"Indicates whether to allow SAS to update multiple rows from a data source, such as a DBMS table."}},{"Name":"UPDATE_SQL=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that SAS/ACCESS uses Current-of-Cursor SQL to update or delete rows in a table.","@ToolTip2":"Specifies that SAS/ACCESS uses the SQLSetPos() application programming interface (API)  to update or delete rows in a table."},"Help":{"#cdata":"Determines the method that is used to update and delete rows in a data source."}},{"Name":"USE_ODBC_CL=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that the Driver Manager uses the ODBC Cursor Library. The ODBC Cursor  Library supports block scrollable cursors and positioned update and delete statements.","@ToolTip2":"Specifies that the Driver Manager uses the scrolling capabilities of the driver."},"Help":{"#cdata":"Indicates whether the Driver Manager uses the ODBC Cursor Library."}},{"Name":"UTILCONN_TRANSIENT=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that a utility connection is automatically dropped as soon as it is no  longer in use.","@ToolTip2":"Specifies that a utility connection is maintained for the lifetime of the libref."},"Help":{"#cdata":"Enables utility connections to maintain or drop, as needed."}},{"Name":"ENABLEDIRECTIO","Type":"S","Help":{"#cdata":"[UNIX Host Option] \n    \nSpecifies that direct file I/O can be available for all files that are opened in the \nlibrary that is identified in the LIBNAME statement."}},{"Name":"FILELOCKS=","Type":"V","Values":{"@Value1":"NONE","@Value2":"FAIL","@Value3":"CONTINUE"},"ToolTips":{"@ToolTip1":"Turns file locking off. NONE specifies that SAS attempts to open the file without  checking for an existing lock on the file. NONE does not place an operating system  lock on the file. These files are not protected from shared Update access.","@ToolTip2":"turns file locking on. FAIL specifies that SAS attempts to place an operating system  lock on the file. Access to the file is denied if the file is already locked, or if  it cannot be locked.","@ToolTip3":"Turns file locking on. CONTINUE specifies that SAS attempts to place an operating  system lock on the file. If the file is already locked by someone else, an attempt  to open it fails. If the file cannot be locked for some other reason (for example,  if the file system does not support locking), the file is opened and a warning  message is sent to the log."},"Help":{"#cdata":"[UNIX Host Option] \n    \nSpecifies whether file locking is turned on or off for the files that are opened \nunder the libref in the LIBNAME statement. The FILELOCKS statement option works \nlike the FILELOCKS system option, except that it applies only to the files that \nare associated with the libref."}},{"Name":"TRANSFERSIZE=","Type":"V","Values":{"@Value1":"nK","@Value2":"nM"},"ToolTips":{"@ToolTip1":"Specifies the size of blocks of data in units of kilobytes. Replace n with an actual value.","@ToolTip2":"Specifies the size of blocks of data in units of megabytes. Replace n with an actual value."},"Help":{"#cdata":"[UNIX Host Option] \n    \n[Syntax: TRANSFERSIZE=nK | nM] \n    \nSpecifies the size of blocks of data in units of kilobytes or megabytes."}},{"Name":"USEDIRECTIO=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Turns on direct file I/O for all the files associated with the libref listed in the  LIBNAME statement.","@ToolTip2":"Turns off direct file I/O for all the files associated with the libref listed in the  LIBNAME statement."},"Help":{"#cdata":"[UNIX Host Option] \n    \nIf used with the ENABLEDIRECTIO statement option, turns on or turns off direct file I/O \nfor all the files associated with the libref listed in the LIBNAME statement."}},{"Name":"ALQ=","Type":"V","Help":{"#cdata":"[OpenVMS Host Option] \n    \nSpecifies how many disk blocks to allocate to a new SAS data set."}},{"Name":"ALQMULT=","Type":"V","Help":{"#cdata":"[OpenVMS Host Option] \n    \nSpecifies the number of pages that are preallocated to a file."}},{"Name":"BKS=","Type":"V","Help":{"#cdata":"[OpenVMS Host Option] \n    \nSpecifies the bucket size for a new data set."}},{"Name":"CACHENUM=","Type":"V","Help":{"#cdata":"[OpenVMS Host Option] \n    \nSpecifies the number of I/O data caches used per SAS file."}},{"Name":"CACHESIZE=","Type":"V","Help":{"#cdata":"[OpenVMS Host Option] \n    \nControls the size of the I/O data cache that is allocated for a file."}},{"Name":"DEQ=","Type":"V","Help":{"#cdata":"[OpenVMS Host Option] \n    \nTells OpenVMS how many disk blocks to add when it automatically extends a SAS data set \nduring a 'write' operation."}},{"Name":"DEQMULT=","Type":"V","Help":{"#cdata":"[OpenVMS Host Option] \n    \nSpecifies the number of pages to extend a SAS file."}},{"Name":"MBF=","Type":"V","Help":{"#cdata":"[OpenVMS Host Option] \n    \nSpecifies the multibuffer count for a data set."}},{"Name":"DLTRUNCHK","Type":"S","Help":{"#cdata":"[z/OS Host Option] \n    \nOverrides the system option DLTRUNCHK for this LIBNAME statement assignment only. \nThis option applies only to direct access bound libraries."}},{"Name":"NODLTRUNCHK","Type":"S","Help":{"#cdata":"[z/OS Host Option] \n    \nOverrides the system option DLTRUNCHK for this LIBNAME statement assignment only. \nThis option applies only to direct access bound libraries."}},{"Name":"HFS","Type":"S","Help":{"#cdata":"[z/OS Host Option] \n    \nSpecifies that the library physical name refers to a UFS directory in the user's UFS \nworking directory."}},{"Name":"HIPERSPACE","Type":"S","Help":{"#cdata":"[z/OS Host Option] \n    \nSpecifies that the SAS library is placed in a hiperspace rather than on a disk. \nHIP is an alias for the HIPERSPACE option."}},{"Name":"LINEAR","Type":"S","Help":{"#cdata":"[z/OS Host Option] \n    \nSpecifies that this new library should be allocated as a VSAM linear data set. \nThis library is a permanent library that uses the HIPERSPACE access method by \nway of the DIV (data-in-virtual) facility."}},{"Name":"NOPROMPT","Type":"S","Help":{"#cdata":"[z/OS Host Option] \n    \nFor this assignment, specifies that no dialog box is displayed to prompt you to \ncreate the library, even if the system option FILEPROMPT is in effect and if the \nlibrary does not already exist."}},{"Name":"BLKSIZE=","Type":"V","Help":{"#cdata":"[z/OS Host Option] \n    \nSyntax: BLKSIZE=n \n\nSpecifies the block size that SAS is to use when dynamically allocating the library \ndata set. The maximum acceptable value is 32760. The BLKSIZE host option is ignored \nfor libraries that are already externally allocated by a DD statement."}},{"Name":"DATACLAS=","Type":"V","Help":{"#cdata":"[z/OS Host Option] \n    \nSyntax: DATACLAS=data-class-name \n\nSpecifies the data class for an SMS-managed data set. The name can have up to eight \ncharacters. This option applies only to new data sets; it is ignored for existing \ndata sets. The data class is predefined and controls the DCB attributes for a data \nset."}},{"Name":"DISP=","Type":"V","Values":{"@Value1":"NEW","@Value2":"OLD","@Value3":"SHR"},"ToolTips":{"@ToolTip1":"A new data set is to be created.","@ToolTip2":"The data set exists and is not to be shared.","@ToolTip3":"The data set exists and can be shared."},"Help":{"#cdata":"[z/OS Host Option] \n    \nSyntax: DISP= status | (< status >,< normal-termination-disp>, < abnormal-termination-disp>) \n\nSpecifies the status of the data set at the beginning and ending of a job, as well \nas what to do if the job step terminates abnormally. If you are specifying only the \nstatus, you can omit the parentheses. \n\nnormal-termination-disp \nspecifies how the operating system handles the library data set when the final assignment \nfor the library is cleared. If you omit the normal termination disposition value, the default \nvalue for new data sets is CATLG, and the default value for existing data sets is KEEP.\nThe following values are valid: \n\n  DELETE the data set is deleted at the end of the step.    \n  KEEP the data set is to be kept.    \n  CATLG the system should place an entry in the system catalog or user catalog.    \n  UNCATLG the system is to delete the entry in the system catalog or user catalog.\n\nabnormal-termination-disp \nspecifies how the operating system handles the library data set if the job step under \nwhich SAS is running terminates abnormally in such a way that SAS cannot handle the abend. \nHowever, under TSO, or if SAS can handle the abend, the data set is handled according to \nthe normal-termination-disposition. The normal-termination-disposition is used if SAS \nabends as a result of the ERRORABEND option or the ABORT ABEND statement.\n\nValid values for abnormal-termination-disposition are the same as for normal-termination-disposition."}},{"Name":"DSNTYPE=","Type":"V","Values":{"@Value1":"BASIC","@Value2":"LARGE","@Value3":"EXTREQ","@Value4":"EXTPREF","@Value5":"NONE"},"ToolTips":{"@ToolTip1":"Specifies that SAS creates a regular format sequential data set that cannot use more  than 64K tracks on any single volume.","@ToolTip2":"Specifies that SAS creates a regular format sequential data set that can use more than  64K tracks on any single volume.","@ToolTip3":"Specifies that SAS must create an extended format sequential data set. If the system  cannot create an extended format data set, the library assignment will fail. This  option value is intended for use with sequential access bound libraries on disk and  for DIV libraries.","@ToolTip4":"Specifies that SAS creates an extended format sequential data set, if possible. However,  if extended format is not supported for the type of library that is being created, or  if the operating system cannot create an extended format data set, then a regular format  data set will be created.","@ToolTip5":"Causes SAS to not specify a DSNTYPE value when allocating the library data set. The  type of data set that is created will be determined by the system, and will use  default values that are supplied by the SMS data class, and so forth."},"Help":{"#cdata":"Specifies the type of data set that SAS should create for a new library data set \nthat does not already exist."}},{"Name":"EXTEND","Type":"S","Help":{"#cdata":"Specifies that when SAS allocates this library, it allocates it with a volume count \nthat is one greater than the current number of DASD volumes on which the library \nresides. With this option, a single-volume library can be converted to a multivolume \nlibrary, and existing multivolume libraries can be extended to another volume."}},{"Name":"LABEL=","Type":"V","Help":{"#cdata":"[z/OS Host Option] \n    \nSyntax: LABEL=(subparameter-list)\n\nEnables you to specify for a tape or direct access data set the type and contents \nof the label of the tape or disk data set, as well as other information such as the \nretention period or expiration date for the data set.\n\nThe LABEL= option is identical to the JCL LABEL= parameter. For example: \n\n  label=(3,SL,,,EXPDT=2005/123)"}},{"Name":"LIKE=","Type":"V","Help":{"#cdata":"[Syntax: LIKE='physical-filename']\n    \nWhen allocating a new library, specifies that SAS sets the DCB attributes of the \nnew library to the same values as those values in the specified data set."}},{"Name":"MGMTCLAS=","Type":"V","Help":{"#cdata":"[Syntax: MGMTCLAS=management-class-name] \n    \nSpecifies a management class for an SMS data set. The name can have up to eight \ncharacters. This option applies only to new data sets; it is ignored for existing \ndata sets. The management class is predefined and controls how your data set is \nmanaged, such as how often it is backed up and how it is migrated.\n\nThe implementation of the MGMTCLAS= option is compatible with the SMS MGMTCLAS= JCL \nparameter. For complete information about this parameter, see z/OS JCL Reference by \nIBM. Ask your system administrator which management class names are used at your site."}},{"Name":"SPACE=","Type":"V","Help":{"#cdata":"[Syntax: SPACE=(unit,(primary<,secondary>), <RLSE>,<type>,<ROUND> )] \n    \nSpecifies how much disk space to provide for a data set that is being created. The space \ncan be requested in terms of tracks, cylinders, or blocks. \n\nunit \ncan be any of the following: \n\n  TRK specifies that the space is to be allocated in tracks.    \n  CYL specifies that the space is to be allocated in cylinders.    \n  blklen specifies that the space is to be allocated in blocks whose block length is blklen \n    bytes. The system computes how many tracks are allocated. \n\nprimary \nspecifies how many tracks, cylinders, or blocks to allocate. \n\nsecondary \nspecifies how many additional tracks, cylinders, or blocks to allocate if more space is needed. \nThe system does not allocate additional space until it is needed. \n\nRLSE \ncauses unused space that was allocated to an output data set to be released when the data set \nis closed. Unused space is released only if the data set is opened for output, and if the last \noperation was a write operation.\n\ntype \ncan be any of the following: \n\n  CONTIG specifies that the space to be allocated must be contiguous.    \n  MXIG specifies that the maximum contiguous space is required.    \n  ALX specifies that different areas of contiguous space are needed. \n\nROUND \nspecifies that the allocated space must be equal to an integral number of cylinders when the \nunit specified was a block length. If unit was specified as TRK or CYL, the system ignores ROUND."},"SubOptionsKeywords":"ROUND|CONTIG|MXIG|ALX|RLSE|TRK|CYL"},{"Name":"STORCLAS=","Type":"V","Help":{"#cdata":"[Syntax: STORCLAS=storage-class-name] \n    \nSpecifies a storage class for an SMS data set. The name can have up to eight characters. \nThis option applies only to new data sets; it is ignored for existing data sets. The storage \nclass is predefined and controls which device your SMS data set is stored on, such as disk \nor tape.\n\nThe implementation of the STORCLAS= option is compatible with the SMS STORCLAS= JCL parameter. \nAsk your system administrator which storage class names are used at your site."}},{"Name":"UNIT=","Type":"V","Help":{"#cdata":"[Syntax: UNIT=value | (value,P )] \n    \nSpecifies that value is a generic device type name or a symbolic (esoteric) name \nfor a group of devices. value must be enclosed in quotation marks if the generic \ndevice type name or group name contains characters other than alphanumeric characters. \nContact your systems administrator to determine the appropriate generic device type \nor group name to specify.\n\nn is the number of devices to be allocated for processing the library data set. \nA value from 1 to 59 can be specified. For multi-volume direct access bound libraries \nresiding in non-SMS managed data sets, the device count can be specified to indicate \nthe maximum number of volumes to which the data library can be extended during the \ncurrent assignment.\n\nFor tape libraries, P requests that one device is allocated for each volume on which \nthe data set resides."}},{"Name":"VOLCOUNT=","Type":"V","Help":{"#cdata":"[Syntax: VOLCOUNT=nnn] \n    \nSpecifies the maximum number of volumes on which a new library can reside. VOLCOUNT \nenables the creation of a multivolume tape library without the specification of a list \nof volumes with the VOLSER option. The value of VOLCOUNT is a decimal number from 1 \nthrough 255."}},{"Name":"VOLSER=","Type":"V","Help":{"#cdata":"[Syntax: VOLSER=value | (value-1, ..., value-n)] \n    \nSpecifies up to 30 volume serial numbers. If VOLSER= is not specified, its value \nis taken from the SAS system option FILEVOL=. See FILEVOL= System Option: z/OS for \nmore information. The VOLSER option does not need to be specified for existing \ncataloged data sets unless your SAS job extends the library to additional volumes, \nand you want to specify the volumes (as opposed to allowing z/OS to select the \nvolumes)."}},{"Name":"WAIT=","Type":"V","Help":{"#cdata":"[Syntax: WAIT=n] \n    \nSpecifies how long SAS software waits for a data set that is held by another job \nor user before the LIBNAME statement fails. The value n specifies a length of time \nin clock minutes. If the data set becomes free before n minutes expire, then the \nLIBNAME statement is processed as usual. The dynamic allocation request is retried \ninternally every 15 seconds.\n\nWhen you use the WAIT= option, you must also specify the engine name in the LIBNAME \nstatement if you are accessing uncataloged libraries or libraries that do not reside \non disk. Otherwise, you do not have to specify the engine name.\n\nFor batch jobs using WAIT=, also specify the FILEMSGS option, which causes a message \nto be written to the system log for each allocation attempt, thus allowing system \noperators to determine why the job is waiting."}},{"Name":"PROXYHOST=","Type":"V","Help":{"#cdata":"[Syntax: PROXYHOST='hostname'] \n\nSpecifies an HTTP proxy server host name. An example is proxyhost='proxygw.abc.sas.com'.\n\nRestriction: Use this option for the WSDL markup type only. \nRestriction: The functionality is for the third maintenance release for SAS 9.2."}},{"Name":"PROXYPASSWORD=","Type":"V","Help":{"#cdata":"[Syntax: PROXYPASSWORD='password']  \n\nSpecifies an HTTP proxy server password. This option is required only if your proxy \nserver requires credentials. The password is case sensitive and must be enclosed in \nsingle or double quotation marks. An example is proxypassword='Abc_123'.\n\nRestriction: Use this option for the WSDL markup type only. \nRestriction: The functionality is for the third maintenance release for SAS 9.2."}},{"Name":"PROXYPORT=","Type":"V","Help":{"#cdata":"[Syntax: PROXYPORT=number]  \n\nSpecifies an HTTP proxy server port. An example is proxyport=80. \n\nRestriction: Use this option for the WSDL markup type only. \nRestriction: The functionality is for the third maintenance release for SAS 9.2."}},{"Name":"PROXYUSERNAME=","Type":"V","Help":{"#cdata":"[Syntax: PROXYUSERNAME='user-ID']  \n\nSpecifies an HTTP proxy server user name. This option is required only if your \nproxy server requires credentials. The user ID is case sensitive and must be \nenclosed in single or double quotation marks. An example is proxyusername='test_acc'.\n\nRestriction: Use this option for the WSDL markup type only. \nRestriction: The functionality is for the third maintenance release for SAS 9.2."}},{"Name":"WEBPASSWORD=","Type":"V","Help":{"#cdata":"[Syntax: WEBPASSWORD='password'] \n\nSpecifies a password for either Basic or NTLM Web server authentication. \nThe password is case sensitive and must be enclosed in single or double \nquotation marks. An example is webpassword='MyPW'.\n\nRestriction: Use this option for the WSDL markup type only. \nRestriction: The functionality is for the third maintenance release for SAS 9.2."}},{"Name":"WEBUSERNAME=","Type":"V","Help":{"#cdata":"[Syntax: WEBUSERNAME='user-ID'] \n\nSpecifies a user name for either Basic or NTLM Web server authentication. \nThe user ID is case sensitive and must be enclosed in single or double \nquotation marks. An example is webusername='mydomain\\myuserid'.\n\nRestriction: Use this option for the WSDL markup type only. \nRestriction: The functionality is for the third maintenance release for SAS 9.2."}},{"Name":"FMTLIB=","Type":"V","Help":{"#cdata":"[Syntax: FMTLIB=libref.format-catalog]\n\nSpecifies where the formats are stored when a JMP data table is read and where the \nformats come from when a JMP data table is created. \n\nRequirement:The library that is specified in the FMTLIB argument must be a SAS data \nset LIBNAME statement."}},{"Name":"POINTOBS=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Causes SAS software to produce a compressed data set that might be randomly accessed by observation number.  Note: For an individual data set, the POINTOBS= data set option overrides the setting of the POINTOBS= option  in the LIBNAME statement.  Tip: Specifying POINTOBS=YES does not affect the efficiency of retrieving information from a data set.  It does increase CPU usage by approximately 10% when creating a compressed data set and when updating  or adding information to it.","@ToolTip2":"Suppresses the ability to randomly access observations in a compressed data set by observation number.  Tip: Specifying POINTOBS=NO is desirable for applications where the ability to point directly to an  observation by number within a compressed data set is not important. If you do not need to access  data by observation number, then you can improve performance by approximately 10% by specifying  POINTOBS=NO when creating a compressed data set or when updating or adding observations to it."},"Help":{"#cdata":"Specifies whether SAS creates compressed data sets whose observations can be randomly accessed or sequentially accessed.\n    \nDefault: YES"}},{"Name":"SESSREF=|CASREF=","Type":"V","Help":{"#cdata":"[Syntax: SESSREF=session-name]\n      \nSpecifies the name of the CAS session to which you want to connect. \n\nNote: CASREF= is an undocumented alias."}},{"Name":"CASLIB=","Type":"V","Help":{"#cdata":"[Syntax: CASLIB=caslib]\n    \nSpecifies the name of a caslib to bind to the libref.By default, engine operations with the libref use \nthe active caslib from your session. (The active caslib can change due to adding or dropping caslibs.) \nUse this option to specify an alternative caslib. When you specify this option, an engine operation \nusing the libref uses the specified caslib, regardless of the active caslib for the session. You can \noverride this option with the CASLIB= data set option."}},{"Name":"UUID=","Type":"V","Help":{"#cdata":"[Syntax: UUID=identifier]\n    \nIf you specify a UUID (as a name or a quoted string), the engine connects to the session in CAS identified \nby the UUID. The following example starts a CAS session through the CAS statement, saves the UUID in the \nMyUUID macro variable, and connects the SASIOCA libname to that session to load the table FOO into it.\n\n  cas mysess port=19999 host=\"rdcgrd001\" UUIDMAC=MyUUID;\n \n  < do some other stuff > \n \n  libname mycas sasioca host=\"rdcgrd001\" port=19999 uuid=\"&MyUUID\";\n \n  data mycas.foo;\n   < some DATA step code>\n  run;\n  \nNote: 9 out of 10 people prefer to use SESSREF= instead of UUID=."}},{"Name":"UUIDMAC=","Type":"V","Help":{"#cdata":"[Syntax: UUIDMAC=macroVariable]\n    \nSpecifies a SAS macroVariable (as a name or a quoted string) into which the engine saves the UUID of \nthe last session created by the engine in the Cloud Analytic Services (CAS). UUIDMAC is useful if you \nwant a subsequent SAS step to connect to a session created or modified by the SASIOCA engine. If you \ndo not specify the UUIDMAC= option, the UUID is stored in the macro variable _IOCASUUID_."}},{"Name":"DATALIMIT=","Type":"V","Values":{"@Value1":"<integer>","@Value2":"<integerK>","@Value3":"<integerM>","@Value4":"<integerG>","@Value5":"ALL"},"ToolTips":{"@ToolTip1":"Specifies the maximum number of bytes to read ","@ToolTip2":"Specifies the maximum number of kilobytes to read.","@ToolTip3":"Specifies the maximum number of megabytes to read.","@ToolTip4":"Specifies the maximum number of gigabytes to read.","@ToolTip5":"Specifies that the entire file can be read, no matter how large it is."},"Help":{"#cdata":"[Syntax: DATALIMIT=integer | integerK | integerM | integerG | ALL]\n    \nSpecifies the maximum number of bytes of data that can transferred from the SAS Cloud Analytic Services server to SAS. \n\nValid in: CAS LIBNAME statement\n\nDefault: 100M\nRestriction: This option affects only read access.\nTip:\nThis option can prevent you from accidentally transferring a large amount of data from the server to the client."}},{"Name":"READTRANSFERSIZE=|RTS=","Type":"V","Values":{"@Value1":"<integer>","@Value2":"<integerK>","@Value3":"<integerM>","@Value4":"<integerG>"},"ToolTips":{"@ToolTip1":"Specifies the total number of bytes for each read to the server.","@ToolTip2":"Specifies the total number of kilobytes to read.","@ToolTip3":"Specifies the total number of megabytes to read.","@ToolTip4":"Specifies the total number of gigabytes to read."},"Help":{"#cdata":"[Syntax: READTRANSFERSIZE=<(integer ) | K | M | G>]\n    \nSpecifies the maximum data transfer size in bytes that can be used when reading a table from SAS Cloud Analytic Services. \n\nDefault: 500MB\n\nRestriction: This option affects only read access.\n\nInteraction:\nREADTRANSFERSIZE= is the maximum amount of data that is transferred with each read request that is made to SAS \nCloud Analytic Services. If the entire result of the read request is smaller than the value of the READTRANSFERSIZE=\noption, only the necessary number of bytes are transferred. This situation can occur if either the table size or the \nvalue of the DATALIMIT= option is smaller than the value of the READTRANSFERSIZE= option."}},{"Name":"WRITETRANSFERSIZE=","Type":"V","Values":{"@Value1":"<integer>","@Value2":"<integerK>","@Value3":"<integerM>","@Value4":"<integerG>"},"ToolTips":{"@ToolTip1":"Specifies the total number of bytes for each write to the server.","@ToolTip2":"Specifies the total number of kilobytes to write.","@ToolTip3":"Specifies the total number of megabytes to write.","@ToolTip4":"Specifies the total number of gigabytes to write."},"Help":{"#cdata":"[Syntax: WRITETRANSFERSIZE=<(integer ) | K | M | G>]\n    \nSpecifies the maximum data transfer size in bytes that can be used when writing to a table in SAS Cloud Analytic Services. \n\nDefault: 512KB\n\nRestriction: This option affects only write access."}},{"Name":"DBUSER=","Type":"V","Help":{"#cdata":"[Syntax: DBUSER=<\">user-name<\">]\n    \nSpecifies the name of a database user account that can access the library on the database.\n\nNote: A user name value is changed to uppercase text if it is not enclosed in quotation marks. If a \nvalue is case sensitive or contains special characters, it has to be enclosed in either single or \ndouble quotation marks."}},{"Name":"DBPASSWORD=|DBPASS=|DBPASSWD=","Type":"V","Help":{"#cdata":"[Syntax: DBPASSWORD=|DBPASS=|DBPASSWD=<\">password<\">]\n    \nSpecifies the password associated with the specified database user account.\n\nNote: A password value is changed to uppercase text if it is not enclosed in quotation marks. If a value is \ncase sensitive or contains special characters, it has to be enclosed in either single or double quotation marks.\n\nTip: You can encode the password with PROC PWENCODE."}},{"Name":"BL_DEFAULT_DIR=","Type":"V","Help":{"#cdata":"[Syntax: BL_DEFAULT_DIR='host-specific-directory-path'\n    \nSpecifies where bulk loading creates all intermediate files."}},{"Name":"DBNULLWHERE=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies that character columns in a WHERE clause can contain NULL values.","@ToolTip2":"Specifies that character columns in a WHERE clause cannot contain NULL values."},"Help":{"#cdata":"Syntax: DBNULLWHERE=YES | NO\n    \nSpecifies whether character columns in a WHERE clause can contain NULL values."}},{"Name":"DBSERVER_ENCODING_FIXED=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"","@ToolTip2":""},"Help":{"#cdata":"Syntax: DBSERVER_ENCODING_FIXED=YES | NO"}},{"Name":"POST_STMT_OPTS=","Type":"V","Help":{"#cdata":"Syntax: POST_STMT_OPTS='DBMS-SQL-option(s)' \n    \nAllows additional database-specific options to be placed after the CREATE TABLE statement \nin generated SQL code."}},{"Name":"OR_BINARY_DOUBLE=","Type":"V","Values":{"@Value1":"YES","@Value2":"NO"},"ToolTips":{"@ToolTip1":"Specifies BINARY_DOUBLE as the default.","@ToolTip2":"Specifies NUMBER as the default."},"Help":{"#cdata":"Syntax: OR_ BINARY_DOUBLE=YES | NO\n    \nSpecifies the default data type to use for numeric table columns."}},{"Name":"POST_DML_STMT_OPTS=","Type":"V","Help":{"#cdata":"Syntax: POST_DML_STMT_OPTS=value\n    \nSpecifies text to append to an INSERT, UPDATE, or DELETE statement."}}],"#comment":[{},{},{},{},{},{},{},{},{},{}]}}