{"Keywords":{"Keyword":[{"Name":"AUTHDOMAIN=","Type":"V","Help":{"#cdata":"[Syntax: AUTHDOMAIN=auth-domain | \"auth-domain\"] \n    \nSpecifies the name of an authentication domain, which is a metadata object that \nmanages the credentials (user ID and password) that are associated with the specified \ndomain. Specifying the authentication domain is a convenient way to obtain the metadata-\nbased user credentials rather than having to explicitly supply them during server sign-on."}},{"Name":"CMACVAR=|MACVAR=","Type":"V","Values":{"@Value1":"0","@Value2":"1","@Value3":"2","@Value4":"3"},"ToolTips":{"@ToolTip1":"Indicates that the sign-on is successful.","@ToolTip2":"Indicates that the sign-on failed","@ToolTip3":"Indicates that you have already signed on to the current server session.","@ToolTip4":"Indicates that the sign-on is still in progress."},"Help":{"#cdata":"Specifies the macro variable to associate with the current RSUBMIT block. Specifying \nCMACVAR= in an individual RSUBMIT restricts the macro variable to that RSUBMIT block. \nIf multiple asynchronous RSUBMIT statements execute in the same server session, and \neach RSUBMIT contains a CMACVAR= specification, each macro variable will be restricted \nto the respective RSUBMIT block. The macro variable is set at the completion of the \nRSUBMIT block."}},{"Name":"CONNECTPERSIST=|CPERSIST=|PERSIST=","Type":"V","Values":{"@Value1":"YES|Y","@Value2":"NO|N"},"ToolTips":{"@ToolTip1":"Specifies that a connection to the server session continues. A sign-off is not  automatically performed after the RSUBMIT has completed. CONNECTPERSIST  maintains the connection for subsequent RSUBMIT statements.","@ToolTip2":"Specifies that a connection to the server session terminates. A sign-off is automatically  performed after the RSUBMIT has completed. Setting NO requires that you sign on to the  server session again before you perform the next RSUBMIT."},"Help":{"#cdata":"Specifies whether the Transfer Status window is displayed for file transfers within \nthe current server session."}},{"Name":"CONNECTREMOTE=|CREMOTE=|PROCESS=|REMOTE=","Type":"S|V","Help":{"#cdata":"[Syntax: CONNECTREMOTE=server-ID] \n    \nSpecifies the name of the server session that the RSUBMIT statements are executed in. \nIf only one session is active, server-ID can be omitted."}},{"Name":"CONNECTSTATUS=|CSTATUS=|STATUS=","Type":"V","Values":{"@Value1":"YES|Y","@Value2":"NO|N"},"ToolTips":{"@ToolTip1":"Indicates that the Transfer Status window is displayed for file transfers within the current RSUBMIT.","@ToolTip2":"Indicates that the Transfer Status window is not displayed for file transfers within the current RSUBMIT."},"Help":{"#cdata":"Specifies whether the Transfer Status window is displayed for file transfers within \nthe current RSUBMIT."}},{"Name":"CONNECTWAIT=|CWAIT=|WAIT=","Type":"V","Values":{"@Value1":"YES|Y","@Value2":"NO|N"},"ToolTips":{"@ToolTip1":"Specifies that the RSUBMIT blocks execute synchronously.","@ToolTip2":"Specifies that the RSUBMIT blocks execute asynchronously."},"Help":{"#cdata":"Specifies whether RSUBMIT blocks execute synchronously or asynchronously. Synchronous \nRSUBMIT statements are executed sequentially. An RSUBMIT must be completed in the \nserver session before control is returned to the client session."}},{"Name":"CSCRIPT=|SCRIPT=","Type":"V","Help":{"#cdata":"[Syntax: CSCRIPT=file-specification] \n    \nSpecifies the script file to use in an RSUBMIT when the AUTOSIGNON\nsystem option has been specified and a sign-on has not yet occurred."}},{"Name":"CSYSRPUTSYNC=|SYSRPUTSYNC=","Type":"V","Values":{"@Value1":"YES|Y","@Value2":"NO|N"},"ToolTips":{"@ToolTip1":"Specifies that the client session's macro variables will be updated when the client  receives the results of the server session's execution of the %SYSRPUT macro.","@ToolTip2":"Specifies that the client session's macro variables will be updated when a synchronization  point is encountered. This is the default."},"Help":{"#cdata":"Specifies whether to synchronize the client session's macro variables when the client \nsession receives results from the server session or when a synchronization point is \nencountered. Macro variables are updated in the client session using the %SYSRPUT \nmacro in a SIGNON statement."}},{"Name":"INHERITLIB=","Type":"V","Help":{"#cdata":"Syntax: INHERITLIB=(client-libref1<=server-libref1> ... client-librefn<=server-librefn>)\n    \nEnables libraries that are defined in the client session to be inherited by the server \nsession for read and write access.]"}},{"Name":"LOG=|OUTPUT=","Type":"V","Values":{"@Value1":"KEEP","@Value2":"PURGE","@Value3":"<file-specification>"},"ToolTips":{"@ToolTip1":"Spools log or output lines, as applicable, to the backing store or to the computer on which the client session is running. The log or output lines can be retrieved using the RGET, RDISPLAY, RSUBMIT CONNECTWAIT=YES, or SIGNOFF statement. This is the default.","@ToolTip2":"Deletes all the log or output lines that are generated by the current server session. PURGE is  used to save disk resources. Use PURGE if you can anticipate a large volume of log data or output data to the backing store that you do not want to keep, and you want to preserve disk space.","@ToolTip3":"Specifies a file that is the destination for the log or output lines. The file is opened for output at the beginning of the asynchronous RSUBMIT and is closed at the end of the RSUBMIT."},"Help":{"#cdata":"Syntax: LOG=KEEP | PURGE | file-specification\n    \nDirects the SAS log or the SAS output that is generated by the current server session \nto the backing store or to the specified file. A backing store is a SAS utility file \nthat is written to the client SAS WORK directory."}},{"Name":"NOCSCRIPT|NOSCRIPT","Type":"S","Help":{"#cdata":"Specifies that no script file should be used for sign-on. NOCSCRIPT accelerates \nsign-on and conserves memory resources."}},{"Name":"NOTIFY=","Type":"V","Values":{"@Value1":"YES|Y","@Value2":"NO|N","@Value3":"<\"e-mail-address\">"},"ToolTips":{"@ToolTip1":"Enables notification via a message window. Here is the format of the default message:     Asynchronous task TASK1 has completed.  TASK1 is the server ID.","@ToolTip2":"Disables notification. This is the default.","@ToolTip3":"Enables notification via an e-mail message, and specifies the e-mail address of the  recipient for the notification. E-mail addresses are limited to a maximum of 256  characters. Enclose the e-mail address in double or single quotation marks."},"Help":{"#cdata":"[Syntax: NOTIFY=YES | NO | \"e-mail-address\"] \n    \nSpecifies whether to notify the user that an asynchronous RSUBMIT has completed. \nThe notification can be in the form of a message window or an e-mail message."}},{"Name":"SASCMD=","Type":"V","Help":{"#cdata":"Signs on to the server session on the same symmetric multiprocessing (SMP) computer \nthat the client session is running on. This option is most useful when client and \nserver sessions run on SMP hardware.\n    \nSyntax: SASCMD=\"SAS-command\" | \"!sascmd\" | \"!sascmdv\" | \"host-command-file\"\n\nwhere:\n\n\"SAS command\" \nFor UNIX, OpenVMS, and Windows, specifies the command that is used to sign on to a server session.\n\n  Here is a typical example: \n\n  sascmd=\"sas\"\n\n\"!sascmd\" \nFor UNIX, OpenVMS, and Windows, signs on to a server session by using the same command that was used\nto invoke the client session\n\n\"!sascmdv\" \nFor UNIX, OpenVMS, and Windows, signs on to a server session by using the same command that was used\nto start the client session and writes the SAS invocation to the SAS log.\n\n\"host-command-file\" \nIn order to execute additional commands before SAS invocation, you can write a command file that is\nspecific to your operating environment. Filename extensions vary according to operating environment.\nWindows filenames use the .bat and .cmd extensions. UNIX extensions include .sh , .csh , and .ksh . \nOpenVMS uses the .com extension."}},{"Name":"SERVER=","Type":"V","Help":{"#cdata":"Syntax: SERVER=\"SAS-application-server\"\n    \nSpecifies the name of a SAS Application Server that contains a SAS/CONNECT server component in its grouping."}},{"Name":"SIGNONWAIT=","Type":"V","Values":{"@Value1":"YES|Y","@Value2":"NO|N"},"ToolTips":{"@ToolTip1":"Specifies synchronous sign-on. A synchronous sign-on causes the client session to  wait until the sign-on to a server session has completed before control is returned  to the client session for continued execution. YES is the default.","@ToolTip2":"Specifies an asynchronous sign-on. An asynchronous sign-on to a server session begins  execution and control is returned to the client session immediately for continued  execution."},"Help":{"#cdata":"Specifies whether a sign-on to a server session is to be executed synchronously \nor asynchronously."}},{"Name":"SUBJECT=","Type":"V","Help":{"#cdata":"[Syntax: SUBJECT=\"subject-title\"] \n    \nSpecifies the subject title for the e-mail notification message that is sent \nafter an asynchronous RSUBMIT completes. A subject title is limited to a maximum\nof 256 characters."}},{"Name":"USERNAME=|UID=|USER=|USERID=","Type":"V","Values":{"@Value1":"<user-ID>","@Value2":"_PROMPT_"},"ToolTips":{"@ToolTip1":"A valid user ID.","@ToolTip2":"Specifies that SAS prompt the user for a valid user ID. This value enforces security."},"Help":{"#cdata":"Specifies the user ID to use in order to sign on to a server session."}},{"Name":"PASSWORD=|PASS=|PASSWD=|PW=|PWD=","Type":"V","Values":{"@Value1":"<password>","@Value2":"<\"password\">","@Value3":"_PROMPT_"},"ToolTips":{"@ToolTip1":"Must be a valid SAS name that is 1 to 8 characters in length.","@ToolTip2":"Is an encoded version of a password. Using encoded passwords promotes security and  enables you to store SAS programs that do not contain clear-text passwords.","@ToolTip3":"Specifies that SAS prompt the user for a valid password. This value enforces security."},"Help":{"#cdata":"Specifies the password to use in order to sign on to a server session. The operating \nenvironment that the server runs under can also affect password naming conventions."}}]}}