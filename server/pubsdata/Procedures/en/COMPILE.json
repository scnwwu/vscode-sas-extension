{"name":"COMPILE","statements":[{"name":"PROC COMPILE","description":"PROC COMPILE enables you to compile, test, and store functions, CALL routines, and method programs that are used by risk engines. PROC COMPILE is similar to and largely supports the functionality and syntax of PROC FCMP.","help":" PROC COMPILE  &lt;*argument(s)*&gt;;","arguments":[{"name":"DATA=","optional":true,"description":"specifies the name of a SAS data set that contains input data. When you specify DATA= in a COMPILE step that includes the RUNMETHOD statement, the program executes one time for each observation that is in the input data set. When you do not specify DATA=, the program executes only a single time.","help":"DATA= *SAS-data-set* ","type":"dataSet","supportSiteTargetFragment":"n15b5u3a8z1pnen191sjwzrr2f6o"},{"name":"DETAILS","optional":true,"description":"enables or disables detailed printing.","type":"standalone","supportSiteTargetFragment":"n0meenloo7h4bgn0z3g91firfmwg"},{"name":"NODETAILS","optional":true,"description":"enables or disables detailed printing.","type":"standalone","supportSiteTargetFragment":"n0meenloo7h4bgn0z3g91firfmwg"},{"name":"ENV","optional":true,"description":"specifies the name of the risk environment to load. When you use this argument, all of the following items that are associated with or that are defined for the environment are loaded:\n• CALL routines \n• method libraries\n• variables","help":"ENV | ENVIRONMENT= *environment* ","type":"value","supportSiteTargetFragment":"p1qaoq6kxe0scdn1ewv3r7pxl7ll"},{"name":"FLOW","optional":true,"description":"prints a message for each statement in a program as it is executed.","type":"standalone","supportSiteTargetFragment":"n0056b69ezovbgn1wfhu44k9fcxi"},{"name":"NOFLOW","optional":true,"description":"prints a message for each statement in a program as it is executed.","type":"standalone","supportSiteTargetFragment":"n0056b69ezovbgn1wfhu44k9fcxi"},{"name":"HIDE","optional":true,"description":"specifies to encode the source code in a data set.","type":"standalone","supportSiteTargetFragment":"p1te9ped8nog4en0z2847n21r4hn"},{"name":"LABEL=","optional":true,"description":"assigns a descriptive label to the output package that is specified by PACKAGE=. Labels longer than 128 characters are truncated.","help":"LABEL= *“label”* ","type":"value","supportSiteTargetFragment":"n170bsvcr7zt0sn1o8a8uckiyapo"},{"name":"LIBRARY","optional":true,"description":"links previously stored libraries.","type":"standalone","supportSiteTargetFragment":"p1l9fjtkp3macin1jfzae68iktkl"},{"name":"INLIB","optional":true,"description":"links previously stored libraries.","type":"standalone","supportSiteTargetFragment":"p1l9fjtkp3macin1jfzae68iktkl"},{"name":"LIST","optional":true,"description":"enables LISTALL and LISTPROG.","type":"standalone","supportSiteTargetFragment":"n0ugg8pbugn7x1n1izwss269j8ky"},{"name":"LISTALL","optional":true,"description":"enables LISTCODE, LISTSOURCE, XREF, and DETAILS.","type":"standalone","supportSiteTargetFragment":"n1rbb3ms4oku2jn11evmhbuxy43t"},{"name":"LISTCODE","optional":true,"description":"prints the compiled program code.","type":"standalone","supportSiteTargetFragment":"n1ng61kznvr2h4n1j188u80vdpbb"},{"name":"LISTDEP","optional":true,"description":"prints the variable dependencies that are in the program.","type":"standalone","supportSiteTargetFragment":"p00s62ejlv6k75n10hjlyafc6gly"},{"name":"LISTMETH","optional":true,"description":"prints the methods that are in the program and in the specified environment.","type":"standalone","supportSiteTargetFragment":"p1dr7rs7e73i6mn1wo2or0th0dwt"},{"name":"LISTPROG","optional":true,"description":"prints the compiled programs.","type":"standalone","supportSiteTargetFragment":"n03qtmh3bopi36n1jjuby8wft9qi"},{"name":"LISTSOURCE","optional":true,"description":"prints the program source statements.","type":"standalone","supportSiteTargetFragment":"p0dllxi6hifr1ln1d99028fj5me5"},{"name":"OUT=","optional":true,"description":"specifies the name of the data set to which to write the results of the execution of the COMPILE procedure main program. All variables that are used in the main program (and within method program blocks) are written to this data set.","help":"OUT= *SAS-data-set* ","type":"dataSet","supportSiteTargetFragment":"p1uepanknl3bptn1aios1rmm9q45"},{"name":"OUTLIB=","optional":true,"description":"specifies the two-level name of the data set in which to write the CALL routines, functions, and method programs.","help":"OUTLIB= *name* ","type":"value","supportSiteTargetFragment":"p0ke6wwmfr7gihn1fid6g42wrgq1"},{"name":"PACKAGE","optional":true,"description":"specifies an arbitrary grouping (or package) within the OUTLIB= entry. This argument is required for programs that compile CALL routines and functions. The PACKAGE= argument is not used for methods.","help":"PACKAGE | PKG= *package-name* ","type":"value","supportSiteTargetFragment":"n17q344q5ihnh6n1xasgw717crqu"},{"name":"PRINT","optional":true,"description":"prints the result of each statement in a program as it is executed.","type":"standalone","supportSiteTargetFragment":"n1pq3pdxj7no8yn1tyhmx387bq9h"},{"name":"NOPRINT","optional":true,"description":"prints the result of each statement in a program as it is executed.","type":"standalone","supportSiteTargetFragment":"n1pq3pdxj7no8yn1tyhmx387bq9h"},{"name":"PURGE","optional":true,"description":"removes all methods from the package.","type":"standalone","supportSiteTargetFragment":"n0742yapa0jz94n1t89j55jfcvlu"},{"name":"TRACE","optional":true,"description":"prints the results of each operation in each statement in a program as it is executed.","type":"standalone","supportSiteTargetFragment":"n1lvp7r6vzhvmnn1ved6hrjto9wh"},{"name":"NOTRACE","optional":true,"description":"prints the results of each operation in each statement in a program as it is executed.","type":"standalone","supportSiteTargetFragment":"n1lvp7r6vzhvmnn1ved6hrjto9wh"},{"name":"XREF","optional":true,"description":"prints a cross-reference of the variables in the program to indicate where each variable is referenced or given a value. The XREF argument is typically used with the LIST argument.","type":"standalone","supportSiteTargetFragment":"n18qkv6ybzny7un10w1paiqcg5sa"}],"supportSiteTargetFile":"p18m4khg3qf4rvn1dgpagcqp8917.htm"},{"name":"METHOD","description":"Method programs are similar to CALL routines, except that they have access to the global namespace and therefore do not require arguments. The definition of a method begins with a METHOD statement and ends with an ENDMETHOD statement. To assign a descriptive label to each method, use the LABEL= argument. To run a method program, use a RUNMETHOD statement.","help":" METHOD   method-name   KIND= method-type  <LABEL= “label” >; BEGINBLOCK   block-type ;\n\t  program-statements;   ENDBLOCK ; <BEGINBLOCK block-type;\n\tprogram-statements;\n\tENDBLOCK >;DECLARE OBJECT  objectInstance(objectType);ENDMETHOD ;","supportSiteTargetFile":"p0alpa39jnr48tn1ijk6y9fid56x.htm"},{"name":"RUNMETHOD","description":"Use the RUNMETHOD statement to test a method program. You can specify any valid method block type. If you do not specify a block type, MAIN is used. When you specify DATA= on the PROC COMPILE line, the RUNMETHOD statement enables you to test a method outside of a risk environment.","help":" RUNMETHOD  *method-name* &lt;*block-type*&gt;;","supportSiteTargetFile":"n07c8wh29nbfrtn1re0i80s88n85.htm"}],"supportSiteInformation":{"docsetId":"riskengproc","docsetVersion":"v_009","docsetTargetFile":"n0t0p76eiclf0kn1s1z1yagkyl7c.htm"}}