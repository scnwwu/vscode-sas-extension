{"name":"FCMP","statements":[{"name":"PROC FCMP","description":"Creates, tests, and stores SAS functions, CALL routines, and subroutines.","help":"PROC FCMP  <i>options</i>;\n\tABORT ;\n\tARRAY  <i>array-name</i>[<i>dimensions</i>] &lt;/NOSYMBOLS&gt; | &lt;<i>variable(s)</i>&gt; | &lt;<i>constant(s)</i>&gt; | &lt;<i>initial-values)</i>&gt;;\n\tATTRIB  <i>variable(s)</i> &lt;FORMAT=<i>format-name</i> &gt;&lt;LABEL='<i>label</i>â€™&gt;&lt; LENGTH=<i>length</i>&gt;;\n\tDELETEFUNC  <i>function-name</i>;\n\tDELETESUBR  <i>subroutine-name</i>;\n\tFUNCTION  <i>function-name(argument(s))</i> &lt;VARARGS&gt; &lt;$&gt; &lt;<i>length</i>&gt; \n\t\t&lt;KIND | GROUP='<i>string</i>' &lt;LABEL=<i>'string-2'</i>&gt;&gt;;\n\tLABEL  <i>variable</i>=<i>'label'</i>;\n\tLISTFUNC  <i>function-name</i>;\n\tLISTSUBR  <i>subroutine-name</i>;\n\tSTRUCT  <i>structure-name</i> <i>variable</i>;\n\tSUBROUTINE  <i>subroutine-name (argument(s))</i> &lt;VARARGS&gt;\n\t\t&lt;LABEL ='<i>label</i>'&gt; &lt;KIND | GROUP='<i>string</i>'&gt;;\n\tOUTARGS  <i>out-argument(s)</i>;","arguments":[{"name":"DATA=","optional":true,"description":"reads an input data set into the PROC FCMP step.","help":"DATA=<i>filename</i>","type":"value","supportSiteTargetFragment":"p0l67o843kc0xrn1l1f22b7hbegi"},{"name":"ENCRYPT","optional":true,"aliases":["HIDE"],"description":"encodes the source code in a data set.","type":"standalone","supportSiteTargetFragment":"n15e8hz2zyxq81n185f8a0acx6se"},{"name":"FLOW","optional":true,"description":"specifies printing a message for each statement in a program as it is executed.","type":"standalone","supportSiteTargetFragment":"p198gxd6bvsahkn1xwbeyv54sn41"},{"name":"LIBRARY=","optional":true,"aliases":["INLIB"],"description":"links previously compiled libraries.","help":"LIBRARY=<i>library.dataset</i> <br/> LIBRARY=(<i>library-1.dataset library-2.dataset ... library-n.dataset)</i> <br/> LIBRARY=<i>library.datasetM - library.datasetN</i>","type":"dataSet","supportSiteTargetFragment":"p05erkpl5la85en1noqw653v02ie"},{"name":"LIST","optional":true,"description":"specifies that both the LISTSOURCE and LISTPROG options are in effect.","type":"standalone","supportSiteTargetFragment":"n0di44zi84mq8qn1c5bpf8ph6lzr"},{"name":"LISTALL","optional":true,"description":"specifies that the LISTCODE, LISTPROG, and LISTSOURCE options are in effect.","type":"standalone","supportSiteTargetFragment":"p1tzz75l6etmjwn1o4i99ikhv40k"},{"name":"LISTCODE","optional":true,"description":"specifies the printing of compiled program code.","type":"standalone","supportSiteTargetFragment":"n0p2vmsajjqn49n10qk40qr56yrc"},{"name":"LISTFUNCS","optional":true,"description":"lists the prototypes and subroutines for all visible FCMP functions in the SAS listing.","type":"standalone","supportSiteTargetFragment":"n0zftdhje9q6vjn1uzwupk9bitim"},{"name":"LISTPROG","optional":true,"description":"specifies the printing of compiled programs.","type":"standalone","supportSiteTargetFragment":"n02nxxkofcfivgn19hq8azbeymap"},{"name":"LISTSOURCE","optional":true,"description":"specifies the printing of source code statements.","type":"standalone","supportSiteTargetFragment":"n15ey4by2p15xen162r28t1op9d2"},{"name":"OUT=","optional":true,"description":"creates an output data set.","help":"OUT=<i>filename</i>","type":"value","supportSiteTargetFragment":"p1ut6my04xwy3in1g8fo8dn48qb0"},{"name":"OUTFILE=","optional":true,"description":"writes referenced functions and the main program to a text file. Programs that have been parsed by PROC FCMP, including macro variables, can be exported.","help":"OUTFILE=<i>filename</i>","type":"value","supportSiteTargetFragment":"n19qdox6ptp3ncn1ixzakbk11mws"},{"name":"OUTITEMSTORE=","optional":true,"description":"exports symbols, referenced functions, and the main program to the specified item store. OUTITEMSTORE does not support a fileref. You must use a quoted path.","help":"OUTITEMSTORE=<i>path name</i>","type":"value","supportSiteTargetFragment":"n01evz0gvvhd41n1ranknrumzwc5"},{"name":"OUTLIB=","optional":true,"description":"specifies the name of an output data set to which compiled subroutines and functions are written.","help":"OUTLIB=<i>libname.dataset.package</i>","type":"dataSet","supportSiteTargetFragment":"p000vi3qkrqvz6n1qeb0bqfgl7gg"},{"name":"PRINT","optional":true,"description":"specifies printing the result of each statement in a program as it is executed.","type":"standalone","supportSiteTargetFragment":"n1e8jzmsdrjwgvn18e2pmhvpgxsa"},{"name":"TRACE","optional":true,"description":"specifies printing the results of each operation in each statement in a program as it is executed.","type":"standalone","supportSiteTargetFragment":"p0y5ra8ykst5xpn1qjvwfw5rf4dp"}],"supportSiteTargetFile":"p0urpv7yyzylqsn1g2fycva2bs3n.htm"},{"name":"ABORT","description":"Terminates the current DATA step, job, or SAS session.","help":"ABORT ;","supportSiteTargetFile":"p14xa7fq3r9uren1j3mntg8k9qmx.htm"},{"name":"ARRAY","description":"Associates a name with a list of variables and constants.","help":"ARRAY  <i>array-name</i>[<i>dimensions</i>] &lt;/NOSYMBOLS&gt; | &lt;<i>variable(s)</i>&gt; | &lt;<i>constant(s)</i>&gt; | &lt;<i>initial-values</i>&gt;;","arguments":[{"name":"array-name","placeholder":true,"description":"specifies the name of the array.","type":"value","supportSiteTargetFragment":"p18y6adkwis22cn1ru7jdrq7t4q6"},{"name":"dimensions","placeholder":true,"description":"is a numeric representation of the number of elements in a one-dimensional array or the number of elements in each dimension of a multidimensional array.","type":"value","supportSiteTargetFragment":"n0kp4ks5hlfvdfn1k2jylz52n96j"},{"name":"variable","optional":true,"placeholder":true,"description":"specifies the variables of the array.","type":"value","supportSiteTargetFragment":"p1ececonya13msn1nh298s9mk1if"},{"name":"constant","optional":true,"placeholder":true,"description":"specifies a number or a character string that indicates a fixed value. Enclose character constants in quotation marks.","type":"value","supportSiteTargetFragment":"p0qywcuply4rodn11xupseeub76z"},{"name":"initial-values","optional":true,"placeholder":true,"description":"gives initial values for the corresponding elements in the array. You can specify internal values inside parentheses.","type":"value","supportSiteTargetFragment":"p1jom573smhnp5n1kyaqe0dzmxhe"},{"name":"/NOSYMBOLS","optional":true,"followsDelimiter":"/","description":"specifies that an array of numeric or character values be created without the associated element variables. In this case, the only way that you can access elements in the array is by array subscripting.","type":"standalone","supportSiteTargetFragment":"p170b1kv28e4non1t438sr5xq1n3"}],"supportSiteTargetFile":"p048tu5gixqaxin1ej7b7yuyhn86.htm"},{"name":"ATTRIB","description":"Specifies format, label, and length information for variables.","help":"ATTRIB  <i>variable(s)</i> &lt;FORMAT=<i>format-name</i> LABEL='<i>label</i>' LENGTH=<i>length</i>&gt;;","arguments":[{"name":"variable","placeholder":true,"description":"specifies the variables that you want to associate with attributes.","type":"value","supportSiteTargetFragment":"n1ji61daca5fgun101oiua9coqjv"},{"name":"FORMAT=","optional":true,"description":"associates a format with variables in the variable argument.","help":"FORMAT=<i>format-name</i>","type":"value","supportSiteTargetFragment":"n0ff0i02eeyvofn14uctvnbqorl0"},{"name":"LABEL=","optional":true,"description":"associates a label with variables in the variable argument.","help":"LABEL='<i>label</i>'","type":"value","supportSiteTargetFragment":"p1xjirhzfsgaujn16erdl78h386a"},{"name":"LENGTH=","optional":true,"description":"specifies the length of the variable in the variable argument.","help":"LENGTH=<i>length</i>","type":"value","supportSiteTargetFragment":"p1tkzpzmyhkmt5n1b52rn8x2svq5"}],"supportSiteTargetFile":"n0seq1ln0q7zfrn1w44ym5h3se2k.htm"},{"name":"DECLARE","aliases":["DCL"],"description":"Declares an object.","help":"Form 1: \nDECLARE  <i>object-type</i> <i>object-reference</i>;\nForm 2: \nDECLARE  OBJECT  <i>object-reference</i>(<i>object-type</i>)","arguments":[{"name":"object-reference","placeholder":true,"description":"specifies the reference name for the object.","type":"value","supportSiteTargetFragment":"p0ofrwvu5a08sdn1ax97rkz4y99q"},{"name":"object-type","placeholder":true,"description":"specifies the type of object to declare.","type":"value","supportSiteTargetFragment":"n06hp9ipyfix4yn1eqdazccxv4bi"}],"supportSiteTargetFile":"p1nlkc95ssfqdan19oawnmxszp5h.htm"},{"name":"DELETEFUNC","description":"Causes a function to be deleted from the function library that is specified in the OUTLIB option.","help":"DELETEFUNC  <i>function-name</i>;","arguments":[{"name":"function-name","placeholder":true,"description":"specifies the name of a function to be deleted from the function library that is specified in the OUTLIB option.","type":"value","supportSiteTargetFragment":"n1ebaqx7b1bq2gn1565vymqdca8a"}],"supportSiteTargetFile":"p00f64b2bq2ukqn1t5t6doh9oehz.htm"},{"name":"DELETESUBR","description":"Causes a subroutine to be deleted from the function library that is specified in the OUTLIB option.","help":"DELETESUBR  <i>subroutine-name</i>;","arguments":[{"name":"subroutine-name","placeholder":true,"description":"specifies the name of a subroutine to be deleted from the function library that is specified in the OUTLIB option.","type":"value","supportSiteTargetFragment":"p0389jj8zkib92n1eclieq0ghzik"}],"supportSiteTargetFile":"p03emtky0iumrxn1sj668g5ojgmb.htm"},{"name":"FUNCTION","description":"Specifies a subroutine declaration for a routine that returns a value.","help":"FUNCTION  <i>function-name</i>(<i>argument-1</i> &lt;, <i>argument-2, ...</i>&gt;) &lt;VARARGS&gt; &lt;$&gt; &lt;<i>length</i>&gt;\n\t &lt;KIND  |  GROUP='<i>string</i>' &gt;&lt;LABEL=<i>'string-2'</i>&gt;;\n\t<i>... more-program-statements ...</i>\n\tRETURN  (<i>expression</i>);ENDSUB ;","arguments":[{"name":"function-name","placeholder":true,"description":"specifies the name of the function.","type":"value","supportSiteTargetFragment":"p15kt7l7pokdm3n1eoxiym8aq25f"},{"name":"argument","placeholder":true,"description":"specifies one or more arguments for the function. You specify character arguments by placing a dollar sign ($) after the argument name. In the following example, function myfunct(arg1, arg2 $, arg3, arg4 $); arg1 and arg3 are numeric arguments, and arg2 and arg4 are character arguments.","type":"value","supportSiteTargetFragment":"n01y7uldrx7ukrn1m6403kq78dno"},{"name":"expression","placeholder":true,"description":"specifies the value that is returned from the function.","type":"value","supportSiteTargetFragment":"n0fo0hmwfo6cf1n1p90ct173vosk"},{"name":"VARARGS","optional":true,"description":"specifies that the function supports a variable number of arguments. If you specify VARARGS, then the last argument in the function must be an array.","type":"standalone","supportSiteTargetFragment":"p1ru8ksyfhgovan162zf0kj06b0k"},{"name":"$","optional":true,"description":"specifies that the function returns a character value. If $ is not specified, the function returns a numeric value.","type":"standalone","supportSiteTargetFragment":"p0ek2su52h4wznn1r5wbmansn40o"},{"name":"length","optional":true,"placeholder":true,"description":"specifies the length of a character value.","type":"value","supportSiteTargetFragment":"n09cp464w9xf9vn1crry8mfpk9f2"},{"name":"KIND=","optional":true,"description":"specifies a collection of items that have specific attributes and is limited to 32 characters.","help":"KIND='<i>string</i>'","type":"value","supportSiteTargetFragment":"p175ufgbyq7patn1hpfk24vx6pjj"},{"name":"GROUP=","optional":true,"description":"specifies a collection of items that have specific attributes and is limited to 32 characters.","help":"GROUP='<i>string</i>'","type":"value","supportSiteTargetFragment":"p175ufgbyq7patn1hpfk24vx6pjj"},{"name":"LABEL=","optional":true,"description":"specifies a label of up to 256 characters, including blanks.","help":"LABEL='<i>string-2</i>'","type":"value","supportSiteTargetFragment":"p0ks3e8lgb9jlrn1ubuoku3auc22"}],"supportSiteTargetFile":"n10vesidziklh1n1l7kidq4dqd0r.htm"},{"name":"LABEL","description":"Specifies a label of up to 256 characters.","help":"LABEL  <i>variable</i>='<i>label</i>';","arguments":[{"name":"variable","placeholder":true,"description":"names the variable that you want to label.","type":"value","supportSiteTargetFragment":"n1wo3ht3nx2jubn1duhzyo1xcahj"},{"name":"'label'","placeholder":true,"description":"specifies a label of up to 256 characters, including blanks.","type":"value","supportSiteTargetFragment":"n0h8sqzxedxcoun1mksju44vgvxv"}],"supportSiteTargetFile":"n0bd44jat56ic1n1y0crl2w8fbdv.htm"},{"name":"LISTFUNC","description":"Causes the source code for a function to be written to the SAS listing.","help":"LISTFUNC  <i>function-name</i> &lt;/NODEPENDENTS &gt;;","arguments":[{"name":"function-name","placeholder":true,"description":"specifies the name of the function for which source code is written to the SAS listing.","type":"value","supportSiteTargetFragment":"p0tvqvrh0wprsan17mhgumzss9d3"},{"name":"/NODEPENDENTS","optional":true,"aliases":["/NODEPS"],"description":"specifies that only the functions specified by function-name be returned and not any dependent functions.","type":"standalone","supportSiteTargetFragment":"n14d73918tfjn3n1ny3tsmh9rp1i"}],"supportSiteTargetFile":"p1cfsdsjdscvg2n15lh3zs2yu0ht.htm"},{"name":"LISTSUBR","description":"Causes the source code for a subroutine to be written to the SAS listing.","help":"LISTSUBR  <i>subroutine-name</i>;","arguments":[{"name":"subroutine-name","placeholder":true,"description":"specifies the name of the subroutine for which source code is written to the SAS listing.","type":"value","supportSiteTargetFragment":"n0mj7o1wqrdur8n1ubj566o0pwwt"}],"supportSiteTargetFile":"p16yeja88uk22gn15nzvjmt1ui5h.htm"},{"name":"OUTARGS","description":"Specifies arguments in an argument list that you want a subroutine to update.","help":"OUTARGS  <i>out-argument-1</i> &lt;, <i>out-argument-2</i>, ...&gt;;","arguments":[{"name":"out-argument","placeholder":true,"description":"specifies arguments from the argument list that you want the subroutine to update.","type":"value","supportSiteTargetFragment":"n0pzwwztpvlzf4n1eda2hfdq8jql"}],"supportSiteTargetFile":"n1ia7fy9b1jncdn1w8kol0rqwp5s.htm"},{"name":"STATIC","description":"Retains a variableâ€™s value from a previous call until the variable is reassigned.","help":"STATIC  <i>variables</i>,  &lt;<i>initial-value(s)</i>&gt;;","arguments":[{"name":"variables","placeholder":true,"description":"specifies variable names, variable lists, or array names whose values you want to retain.","type":"value","supportSiteTargetFragment":"n0e5i17t6q46x3n1v196xy7wf8ii"},{"name":"initial-values","optional":true,"placeholder":true,"description":"specifies an initial value, numeric or character, for one or more of the preceding elements.","type":"value","supportSiteTargetFragment":"p1911st0mmxw8dn1876drv9gv1qr"}],"supportSiteTargetFile":"n1hibagzq56n1ln18uuirjot40in.htm"},{"name":"STRUCT","description":"Declares (creates) structure types that are defined in C-Language packages.","help":"STRUCT  <i>structure-name</i> <i>variable</i>;","arguments":[{"name":"structure-name","placeholder":true,"description":"specifies the name of a structure that is defined in a C-language package and declared in PROC FCMP.","type":"value","supportSiteTargetFragment":"p1s8oc4tffeod0n13tmeih1fcj30"},{"name":"variable","placeholder":true,"description":"specifies the variable that you want to declare as this structure type.","type":"value","supportSiteTargetFragment":"p06d5hkvflrgnin160tpx3hrqig9"}],"supportSiteTargetFile":"n0bzrncq8xpks3n19ess44st1y7i.htm"},{"name":"SUBROUTINE","description":"Declares (creates) an independent computational block of code that you can call using a CALL statement.","help":"SUBROUTINE  <i>subroutine-name </i> (<i>argument-1</i> &lt;, <i>argument-2</i>, ...&gt;) &lt;VARARGS&gt;\n\t &lt;KIND  |  GROUP='<i>string</i>'&gt;;\n\tOUTARGS  <i>out-argument-1</i> &lt;, <i>out-argument-2</i>, ...&gt;;\n\t<i>... more-program-statements ...</i>\n\tENDSUB ;","arguments":[{"name":"subroutine-name","placeholder":true,"description":"specifies the name of a subroutine.","type":"value","supportSiteTargetFragment":"p0b30us5gi8y33n1deg65dcdobik"},{"name":"argument","placeholder":true,"description":"specifies one or more arguments for the subroutine. Character arguments are specified by placing a dollar sign ($) after the argument name. In the following example, subroutine mysub(arg1, arg2 $, arg3, arg4 $); arg1 and arg3 are numeric arguments, and arg2 and arg4 are character arguments.","type":"value","supportSiteTargetFragment":"p1b0ng2vlparg8n1kzn9q4gsobby"},{"name":"OUTARGS","description":"specifies arguments from the argument list that the subroutine should update.","type":"standalone","supportSiteTargetFragment":"p0202i4wd3e3ixn1d4gbf0n6dyhe"},{"name":"out-argument","placeholder":true,"description":"specifies arguments from the argument list that you want the subroutine to update.","type":"value","supportSiteTargetFragment":"p105af0ja3rshxn1o2hbqk0vex0f"},{"name":"VARARGS","optional":true,"description":"specifies that the subroutine supports a variable number of arguments. If you specify VARARGS, then the last argument in the subroutine must be an array.","type":"standalone","supportSiteTargetFragment":"n0nsoms39qbujfn15qc9bbrtd42t"},{"name":"GROUP=","optional":true,"description":"specifies a collection of items that have specific attributes and is limited to 32 characters.","help":"GROUP='<i>string</i>'","type":"value","supportSiteTargetFragment":"p0oxboot06ufzln1czfjcf41s4rg"},{"name":"KIND=","optional":true,"description":"specifies a collection of items that have specific attributes and is limited to 32 characters.","help":"KIND='<i>string</i>'","type":"value","supportSiteTargetFragment":"p0oxboot06ufzln1czfjcf41s4rg"}],"supportSiteTargetFile":"p1svxr89fblanen1q9l4vqfrr1rz.htm"}],"supportSiteInformation":{"docsetId":"proc","docsetVersion":"v_002","docsetTargetFile":"p10b4qouzgi6sqn154ipglazix2q.htm"}}